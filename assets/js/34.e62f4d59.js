(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{383:function(t,s,e){"use strict";e.r(s);var a=e(0),r=Object(a.a)({},function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"关系型sql标准"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系型sql标准"}},[t._v("#")]),t._v(" 关系型SQL标准")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#flag"}},[t._v("Flag")])]),s("li",[s("a",{attrs:{href:"#ddl-dml-dql-dcl-tcl"}},[t._v("DDL/DML/DQL/DCL/TCL")])]),s("li",[s("a",{attrs:{href:"#tree树形结构"}},[t._v("TREE树形结构")])]),s("li",[s("a",{attrs:{href:"#sql1992"}},[t._v("SQL1992")])]),s("li",[s("a",{attrs:{href:"#sql1999"}},[t._v("SQL1999")]),s("ul",[s("li",[s("a",{attrs:{href:"#自连接"}},[t._v("自连接")])]),s("li",[s("a",{attrs:{href:"#子查询"}},[t._v("子查询")])]),s("li",[s("a",{attrs:{href:"#分页查询"}},[t._v("分页查询")])]),s("li",[s("a",{attrs:{href:"#连接查询"}},[t._v("连接查询")])]),s("li",[s("a",{attrs:{href:"#case"}},[t._v("CASE")])])])]),s("li",[s("a",{attrs:{href:"#sql2003"}},[t._v("SQL2003")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"flag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flag"}},[t._v("#")]),t._v(" Flag")]),t._v(" "),s("blockquote",[s("p",[t._v("Structured Query Language：SQL86、SQL89、SQL92、SQL99、SQL2003、SQL2008、SQL2011、SQL2016")])]),t._v(" "),s("p",[s("strong",[t._v("SQL标准主要由以下几个组织制定和维护")])]),t._v(" "),s("ul",[s("li",[t._v("ISO/IEC JTC 1/SC 32 - 国际标准化组织,负责数据管理和交换。")]),t._v(" "),s("li",[t._v("ANSI X3H2 - 美国国家标准协会下属的一个委员会,负责数据库语言标准。")]),t._v(" "),s("li",[t._v("SQL标准委员会(SQL Standards Committee) - 包括数据库供应商和用户在内的多个组织,负责制定SQL标准。")])]),t._v(" "),s("p",[s("strong",[t._v("SQL标准文档包括")])]),t._v(" "),s("ul",[s("li",[t._v("SQL/Foundation - 基本SQL语法和功能。包含SELECT、DDL等语句。")]),t._v(" "),s("li",[t._v("SQL/Framework - 数据定义和控制语言。包括数据库对象和权限管理。")]),t._v(" "),s("li",[t._v("SQL/CLI - SQL调用接口的标准规范。")]),t._v(" "),s("li",[t._v("SQL/PSM - SQL的编程语言绑定规范。")]),t._v(" "),s("li",[t._v("SQL/MED - 联合多数据库的标准。")])]),t._v(" "),s("p",[s("strong",[t._v("ISO SQL标准")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.iso.org/sql-standards.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.iso.org/sql-standards.html"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Framework (SQL/Framework)：https://www.iso.org/standard/63555.html")]),t._v(" "),s("li",[t._v("Foundation (SQL/Foundation)：https://www.iso.org/standard/50515.html")]),t._v(" "),s("li",[t._v("Call-Level Interface (SQL/CLI)：https://www.iso.org/standard/63556.html")]),t._v(" "),s("li",[t._v("Persistent Stored Modules (SQL/PSM)：https://www.iso.org/standard/65919.html")]),t._v(" "),s("li",[t._v("Row Pattern Recognition (SQL/RPR)：https://www.iso.org/standard/65920.html")]),t._v(" "),s("li",[t._v("Management of External Data (SQL/MED)：https://www.iso.org/standard/63559.html")]),t._v(" "),s("li",[t._v("Object Language Bindings (SQL/OLB)：https://www.iso.org/standard/50517.html")]),t._v(" "),s("li",[t._v("Information and Definition Schemas (SQL/Schemata)：https://www.iso.org/standard/50516.html")]),t._v(" "),s("li",[t._v("SQL Routines and Types using the Java TM Programming Language (SQL/JRT)：https://www.iso.org/standard/65921.html")]),t._v(" "),s("li",[t._v("XML-Related Specifications (SQL/XML)：https://www.iso.org/standard/50518.html")])]),t._v(" "),s("ul",[s("li",[t._v("SQL2011：https://www.iso.org/standard/53798.html")]),t._v(" "),s("li",[t._v("SQL2016：https://www.iso.org/standard/63400.html")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/crate/sql-99",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/crate/sql-99"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://standards.iso.org/ittf/PubliclyAvailableStandards/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://standards.iso.org/ittf/PubliclyAvailableStandards/index.html"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("strong",[t._v("ANSI SQL标准")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://webstore.ansi.org/find=sql",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://webstore.ansi.org/find=sql"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("SQL/Foundation (ANSI/INCITS 461): http://webstore.ansi.org/FindStandards.aspx?FacilityID=1&SearchString=sql%2ffoundation+")]),t._v(" "),s("li",[t._v("SQL/Framework (INCITS/ISO/IEC 9075-2): http://webstore.ansi.org/RecordDetail.aspx?sku=INCITS%2fISO%2fIEC+9075-2%3a2008")]),t._v(" "),s("li",[t._v("SQL/CLI (ANSI INCITS 445): https://webstore.ansi.org/RecordDetail.aspx?sku=INCITS+445-2008")]),t._v(" "),s("li",[t._v("SQL/PSM (ANSI INCITS/ISO/IEC 9075-4): http://webstore.ansi.org/RecordDetail.aspx?sku=INCITS%2fISO%2fIEC+9075-4%3a2008")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://openstd.samr.gov.cn/bzgk/gb/std_list_type?r=0.07737708182276615&page=1&pageSize=50&p.p1=2&p.p2=%E6%95%B0%E6%8D%AE%E5%BA%93&p.p5=PUBLISHED&p.p90=circulation_date&p.p91=desc",target:"_blank",rel:"noopener noreferrer"}},[t._v("推荐性国家标准查询-数据库"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1442564",target:"_blank",rel:"noopener noreferrer"}},[t._v("SQL标准简介"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.aliyun.com/article/745815",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据库必知词汇：SQL标准"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.zhihu.com/question/59114952/answer/2477832680",target:"_blank",rel:"noopener noreferrer"}},[t._v("SQL数据库中什么是游标？"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.cnblogs.com/xiao02fang/p/12567687.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SQL之游标"),s("OutboundLink")],1)])]),t._v(" "),s("blockquote",[s("p",[t._v("在标准 SQL 中，字符串使用的是单引号。")])]),t._v(" "),s("blockquote",[s("p",[t._v("如果字符串本身也包括单引号，则使用两个单引号（注意，不是双引号，字符串中的双引号不需要另外转义）。")])]),t._v(" "),s("blockquote",[s("p",[t._v("有些SQL中使用双引号字符串，是其它的数据库对 SQL 的扩展，比如在MySQL中允许使用单引号和双引号两种。")])]),t._v(" "),s("blockquote",[s("p",[t._v("保留字不能用于表名，比如desc，此时需要加入反引号来区别，但使用表名时可忽略反引号。")]),t._v(" "),s("p",[t._v("保留字不能用于字段名，比如desc，此时也需要加入反引号，并且insert等使用时也要加上反引号")])]),t._v(" "),s("h2",{attrs:{id:"ddl-dml-dql-dcl-tcl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ddl-dml-dql-dcl-tcl"}},[t._v("#")]),t._v(" DDL/DML/DQL/DCL/TCL")]),t._v(" "),s("ul",[s("li",[t._v("DDL(Data Definition Language) 数据定义语言，用于定义和管理 SQL 数据库中的所有对象的语言\n"),s("ol",[s("li",[t._v("CREATE - 创建")]),t._v(" "),s("li",[t._v("ALTER - 修改")]),t._v(" "),s("li",[t._v("DROP - 删除")]),t._v(" "),s("li",[t._v("TRUNCATE - 截断/移除，立即回收磁盘空间，而不需要后续的VACUUM操作")]),t._v(" "),s("li",[t._v("COMMENT - 注释")]),t._v(" "),s("li",[t._v("RENAME - 重命名")])])]),t._v(" "),s("li",[t._v("DML(Data Manipulation Language) 数据操纵语言，用于SQL中处理数据等操作统称为数据操纵语言，对模式对象内的数据执行查询\n"),s("ol",[s("li",[t._v("INSERT - 添加")]),t._v(" "),s("li",[t._v("UPDATE - 更新")]),t._v(" "),s("li",[t._v("DELETE - 删除")]),t._v(" "),s("li",[t._v("CALL - 调用")]),t._v(" "),s("li",[t._v("EXPLAIN PLAN - 解释")]),t._v(" "),s("li",[t._v("LOCK TABLE - 锁，用于控制并发")])])]),t._v(" "),s("li",[t._v("DQL(Data Query Language) 数据查询语言，根据传递给它的查询获取一些模式关系\n"),s("ol",[s("li",[t._v("SELECT - 用于从数据库中检索数据")])])]),t._v(" "),s("li",[t._v("DCL(Data Control Language) 数据控制语言，用来授予或回收访问数据库的某种特权\n"),s("ol",[s("li",[t._v("GRANT - 授权 允许对象的创建者给某用户或某组或所有用户(PUBLIC)某些特定的权限。")]),t._v(" "),s("li",[t._v("REVOKE - 收回已经授予的权限")])])]),t._v(" "),s("li",[t._v("TCL(Transaction Control Language) 事务控制语言/存储过程控制预言\n"),s("ol",[s("li",[t._v("COMMIT - 提交保存已完成的工作")]),t._v(" "),s("li",[t._v("SAVEPOINT - 在事务中设置保存点，可以回滚到此处")]),t._v(" "),s("li",[t._v("ROLLBACK - 回滚")]),t._v(" "),s("li",[t._v("SET TRANSACTION - 改变事务特性选项")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/ddl-dml-dcl.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"/images/ddl-dml-dcl-tcl.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"/images/SQL%E8%AF%AD%E8%A8%80.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"tree树形结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tree树形结构"}},[t._v("#")]),t._v(" TREE树形结构")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("start with 起始位置 connect by prior 本级=上级")])]),t._v(" "),s("li",[s("code",[t._v("start with 起始位置 connect by 本级=上级")])]),t._v(" "),s("li",[s("code",[t._v("connect by 本级=上级")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/sql-tree.jpg",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"sql1992"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql1992"}},[t._v("#")]),t._v(" SQL1992")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("COALESCE")])]),t._v(" "),s("li",[s("code",[t._v("CASE")])]),t._v(" "),s("li",[s("code",[t._v("AVG")])]),t._v(" "),s("li",[s("code",[t._v("COUNT")])]),t._v(" "),s("li",[s("code",[t._v("MAX")])]),t._v(" "),s("li",[s("code",[t._v("MIN")])]),t._v(" "),s("li",[s("code",[t._v("SUM")])]),t._v(" "),s("li",[s("code",[t._v("TO_DATE")])]),t._v(" "),s("li",[s("code",[t._v("<>")]),t._v(" 注意："),s("code",[t._v("!=")]),t._v("是方言")])]),t._v(" "),s("h2",{attrs:{id:"sql1999"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql1999"}},[t._v("#")]),t._v(" SQL1999")]),t._v(" "),s("p",[s("strong",[t._v("sql分类")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("+")]),t._v(" 在哪一边的列，该表就补充null")])]),t._v(" "),s("ol",[s("li",[t._v("cross join 交叉连接 （笛卡尔积，表乘表） ，不需要on关键字")]),t._v(" "),s("li",[t._v("natural join 自然连接 （找两个表中相同的列，进行等值匹配），不需要on关键字")]),t._v(" "),s("li",[t._v("inner join 内连接\n"),s("ul",[s("li",[t._v("必须有on关键字，on表示连接条件")]),t._v(" "),s("li",[t._v("inner 关键字可以省略")])])]),t._v(" "),s("li",[t._v("outer join 外连接，outer关键字可以省略\n"),s("ul",[s("li",[t._v("left outer join 左外连接，"),s("code",[t._v("+")]),t._v(" 在等号右边")]),t._v(" "),s("li",[t._v("right outer join 右外连接，"),s("code",[t._v("+")]),t._v(" 在等号左边")]),t._v(" "),s("li",[t._v("full outer join 全外连接")])])]),t._v(" "),s("li",[t._v("等值连接 表的连接条件使用 "),s("code",[t._v("=")])]),t._v(" "),s("li",[t._v("非等值连接 表的连接条件使用 "),s("code",[t._v(">、>=、 <、<=、!=、any")]),t._v(" 等")]),t._v(" "),s("li",[t._v("自连接 自己连接自己")])]),t._v(" "),s("p",[s("strong",[t._v("sql99语法：通过join关键字实现连接")])]),t._v(" "),s("ul",[s("li",[t._v("含义：1999年推出的sql语法")]),t._v(" "),s("li",[t._v("支持： 等值连接、非等值连接 （内连接）、外连接")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段，"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v("】"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" 表"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("  连接条件\n【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v("】"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" 表"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("  连接条件\n【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 分组前筛选条件】\n【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 分组字段】\n【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v(" 分组后的筛选条件】\n【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 最后执行的，排序的字段或表达式】\n")])])]),s("blockquote",[s("p",[t._v("好处：语句上，连接条件和筛选条件实现了分离，简洁明了！")])]),t._v(" "),s("h3",{attrs:{id:"自连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自连接"}},[t._v("#")]),t._v(" 自连接")]),t._v(" "),s("ul",[s("li",[t._v("cross join：自然连接。主要用于产生笛卡尔积。\n"),s("ul",[s("li",[s("code",[t._v("select * from emp cross join dept;")])])])]),t._v(" "),s("li",[t._v("natural join：自然连接。这种情况下，数据库会自动找到一个字段来消除笛卡尔积。一般来说，数据库会找那些通过外键约束关联的字段。因此，有较大的局限性。\n"),s("ul",[s("li",[s("code",[t._v("select * from emp natural join dept;")])])])])]),t._v(" "),s("blockquote",[s("p",[t._v("案例：查询员工名和直接上级的名称")])]),t._v(" "),s("ul",[s("li",[t._v("sql99")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last_name\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employees e\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" employees m "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("manager_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("employee_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("sql92")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last_name\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employees e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("employees m \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("manager_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("employee_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[t._v("#")]),t._v(" 子查询")]),t._v(" "),s("blockquote",[s("p",[t._v("含义：一条查询语句中又嵌套了另一条完整的select语句，其中被嵌套的select语句，称为子查询或内查询在外面的查询语句，称为主查询或外查询")])]),t._v(" "),s("p",[s("strong",[t._v("特点：")])]),t._v(" "),s("ol",[s("li",[t._v("子查询都放在小括号内")]),t._v(" "),s("li",[t._v("子查询可以放在from后面、select后面、where后面、having后面，但一般放在条件的右侧")]),t._v(" "),s("li",[t._v("子查询优先于主查询执行，主查询使用了子查询的执行结果")]),t._v(" "),s("li",[t._v("子查询根据查询结果的行数不同分为以下两类：\n"),s("ul",[s("li",[t._v("单行子查询，结果集只有一行，一般搭配单行操作符使用："),s("code",[t._v("> < = <> >= <=")]),t._v("，非法使用子查询的情况：\n"),s("ul",[s("li",[t._v("子查询的结果为一组值")]),t._v(" "),s("li",[t._v("子查询的结果为空")])])]),t._v(" "),s("li",[t._v("多行子查询，结果集有多行，一般搭配多行操作符使用：any、all、in、not in\n"),s("ul",[s("li",[t._v("in： 属于子查询结果中的任意一个就行")]),t._v(" "),s("li",[t._v("any和all往往可以用其他查询代替")])])])])])]),t._v(" "),s("h3",{attrs:{id:"分页查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),s("blockquote",[s("p",[t._v("应用场景：实际的web项目中需要根据用户的需求提交对应的分页查询的sql语句")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表\n【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 筛选条件】\n【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 分组字段】\n【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v(" 分组后的筛选条件】\n【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 排序的字段】\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" 【起始的记录索引，】 每页的记录数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("特点：")])]),t._v(" "),s("ol",[s("li",[t._v("起始条目索引从0开始")]),t._v(" "),s("li",[t._v("limit子句放在查询语句的最后")]),t._v(" "),s("li",[t._v("公式："),s("code",[t._v("select * from  表 limit （page-1）*sizePerPage, sizePerPage")]),t._v(" "),s("ul",[s("li",[t._v("假如：每页显示条目数sizePerPage,要显示的页数 page")])])])]),t._v(" "),s("p",[s("strong",[t._v("Oracle分页")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" rownum "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" rn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" first_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" first_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" some_table "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" first_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" rn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" rn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" ncallernm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" tol "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tmp_86 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" ncallernm "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" tol "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" rownum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" OB_CALL_DATA_LOG rownum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v("  minus  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" OB_CALL_DATA_LOG rownum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n")])])]),s("h3",{attrs:{id:"连接查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接查询"}},[t._v("#")]),t._v(" 连接查询")]),t._v(" "),s("ul",[s("li",[t._v("连接查询的分类：\n"),s("ul",[s("li",[t._v("按年代分为sql192标准仅仅支持内连接，sql199标准支持内连接，左外连接，右外连接，交叉连接\n   - 按功能分为内连接，外连接，交叉连接")])])])]),t._v(" "),s("p",[s("strong",[t._v("sql92标准：内连接包括")])]),t._v(" "),s("ol",[s("li",[t._v("等值连接："),s("code",[t._v("select name,boyname form boys,beauty where beauty.boyfriend_id = boys.id;")]),t._v(" "),s("ul",[s("li",[t._v("多表等值连接的结果为多表的交集部分;n表连接至少需要n-1个连接条件;多表的顺序没有要求;一般需要为表起别名")])])]),t._v(" "),s("li",[t._v("非等值连接："),s("code",[t._v("select salary,grade_level form employees e,job_grades g where salary between g.'lowest_sal' and 'highest_sal';")])]),t._v(" "),s("li",[t._v("自连接："),s("code",[t._v("select e.employee_id,e.last_name,m.employee_id,m.last_name from employees e,employees m where e.'manager_id' = m.'employee_id';")])])]),t._v(" "),s("p",[s("strong",[t._v("sql99语法：包括内连接(inner)，外连接(left outer ,right outer,full outer)，交叉连接(cross join)")])]),t._v(" "),s("blockquote",[s("p",[t._v("语法："),s("code",[t._v("select 查询列表 form 表1 别名 【连接类型】 join 表2 别名 on 连接条件 【where 筛选条件】")])])]),t._v(" "),s("blockquote",[s("p",[t._v("特点：添加排序，分组，筛选，inner可以省略，筛选条件放在where后面，连接条件放在on后面，提高分离性")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("内连接："),s("code",[t._v("select 查询列表 form 表1 别名 inner join 表2 别名 on 连接条件")])]),t._v(" "),s("ul",[s("li",[t._v("等值连接："),s("code",[t._v("select last_name,department_name form employee e inner join department d on e.'department_id' = d.'department_id';")])]),t._v(" "),s("li",[t._v("非等值连接："),s("code",[t._v("select  salary,grade_level from employee e join job_grades g on e.'salary' between g.'lowest_sal' and g.'highest_sal' group by grade_level;")])]),t._v(" "),s("li",[t._v("自连接: "),s("code",[t._v("select e.last_name,m.last_name from employees e join employees m on e.'manager_id' = m.'employee_id' where e.'last_name' like '%k%';")])])])]),t._v(" "),s("li",[s("p",[t._v("外连接：用于查询一个表中有，一个表中没有的，外连接的查询结果是主表中的所有记录 如果从表中有和它匹配的值，则显示出来，没有显示null")]),t._v(" "),s("ul",[s("li",[t._v("左外连接，left join左边的是主表： "),s("code",[t._v("select b.name,bo.* form beauty b left outer join boys bo on b.'boyfriend_id' = bo.'id';")])]),t._v(" "),s("li",[t._v("右外连接，right join右边的是主表： "),s("code",[t._v("select b.name,bo.* form boys bo right outer join  beauty b on b.'boyfriend_id' = bo.'id';")])]),t._v(" "),s("li",[t._v("全外连接，等于内连接的结果，加上表1有但表2没有的，加上表2有表一没有的 use girls; "),s("code",[t._v("select b.*,bo.* from beauty b full outer join boys bo on b.'boyfriend_id' = 'bo.id';")])]),t._v(" "),s("li",[t._v("交叉连接："),s("code",[t._v("select b.*,bo.* form beauty b cross join boys bo;")])])])])]),t._v(" "),s("h3",{attrs:{id:"case"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#case"}},[t._v("#")]),t._v(" CASE")]),t._v(" "),s("blockquote",[s("p",[t._v("同其他编程语言中的"),s("code",[t._v("switch...case")]),t._v("或"),s("code",[t._v("if...else")]),t._v("语句，可以直接在"),s("code",[t._v("order by")]),t._v(" 后面使用自定义排序")])]),t._v(" "),s("blockquote",[s("p",[t._v("Case函数在满足了某个符合条件后，剩下的条件将会被自动忽略，因此，即使满足多个条件，执行过程中也只认第一个条件。\n在使用 CASE WHEN时，可以把它当作一个没有字段名的字段，字段值根据条件确认，在需要使用字段名时可以是用 "),s("code",[t._v("as")]),t._v(" 来定义别名。")])]),t._v(" "),s("ul",[s("li",[t._v("简单Case函数")])]),t._v(" "),s("blockquote",[s("p",[t._v("简单Case函数胜在简洁，但是它只适用于这种单字段的单值比较")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" sex\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'其他'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Case搜索函数")])]),t._v(" "),s("blockquote",[s("p",[t._v("Case搜索函数的优点在于适用于所有比较的情况")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'其他'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n")])])]),s("h2",{attrs:{id:"sql2003"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql2003"}},[t._v("#")]),t._v(" SQL2003")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.aws.amazon.com/zh_cn/redshift/latest/dg/c_Window_functions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("窗口函数"),s("OutboundLink")],1)])]),t._v(" "),s("blockquote",[s("p",[t._v("开窗函数（分析函数）简介:与聚合函数一样，开窗函数也是对行集组进行聚合计算，但是它不像普通聚合函数那样每组只返回一个值\n，开窗函数可以为每组返回多个值，因为开窗函数所执行聚合计算的行集组是窗口")])]),t._v(" "),s("blockquote",[s("p",[t._v("窗口函数是一种分析型的OLAP函数，OLAP是online analytical processing的简称，意思是对数据库数据进行实时分析处理")])]),t._v(" "),s("p",[s("strong",[t._v("窗口函数可以用在以下两种函数：")])]),t._v(" "),s("ol",[s("li",[t._v("专用窗口函数：\n"),s("ul",[s("li",[s("code",[t._v("rank()")]),t._v("：按升序顺序，如果有并列名次的行，会占用下一名次的位置。")]),t._v(" "),s("li",[s("code",[t._v("dese_rank()")]),t._v("：按降序顺序，如果并列名次的行，不占用下一名次的位置。")]),t._v(" "),s("li",[s("code",[t._v("row_number()")]),t._v("：不考虑并列名次的情况。")])])]),t._v(" "),s("li",[t._v("聚合函数："),s("code",[t._v("sum()")]),t._v(","),s("code",[t._v("avg()")]),t._v(","),s("code",[t._v("count()")]),t._v(","),s("code",[t._v("max()")]),t._v(","),s("code",[t._v("min()")])]),t._v(" "),s("li",[t._v("向前向后取值："),s("code",[t._v("lag()")]),t._v("，"),s("code",[t._v("lead()")])]),t._v(" "),s("li",[t._v("百分位："),s("code",[t._v("percent_rank()")])]),t._v(" "),s("li",[t._v("取值函数："),s("code",[t._v("first_value()")]),t._v("，"),s("code",[t._v("last_value()")]),t._v("，"),s("code",[t._v("nth_value()")])]),t._v(" "),s("li",[t._v("分箱函数："),s("code",[t._v("ntile()")])])]),t._v(" "),s("p",[s("strong",[t._v("窗口函数语法")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("窗口函数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("over")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("partition")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("用于分组的列名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("用于排序的列名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- <窗口函数> WITHIN GROUP (ORDER BY <用于排序的列名>)")]),t._v("\n")])])]),s("p",[s("strong",[t._v("应用场景：")])]),t._v(" "),s("ol",[s("li",[t._v("topN问题")]),t._v(" "),s("li",[t._v("经典排名问题")]),t._v(" "),s("li",[t._v("在每个组里比较的问题")])])])},[],!1,null,null,null);s.default=r.exports}}]);