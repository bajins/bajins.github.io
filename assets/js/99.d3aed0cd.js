(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{325:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"gitea-vue自动化构建部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitea-vue自动化构建部署","aria-hidden":"true"}},[t._v("#")]),t._v(" Gitea+Vue自动化构建部署")]),t._v(" "),s("h2",{attrs:{id:"手动部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手动部署","aria-hidden":"true"}},[t._v("#")]),t._v(" 手动部署")]),t._v(" "),s("blockquote",[s("p",[t._v("Vue项目完成后,执行"),s("code",[t._v("npm run build")]),t._v(",然后将生成的dist目录下的文件放到web目录下")])]),t._v(" "),s("h2",{attrs:{id:"webhooks自动化部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webhooks自动化部署","aria-hidden":"true"}},[t._v("#")]),t._v(" WebHooks自动化部署")]),t._v(" "),s("h4",{attrs:{id:"流程如下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程如下","aria-hidden":"true"}},[t._v("#")]),t._v(" 流程如下:")]),t._v(" "),s("blockquote",[s("p",[t._v("配置"),s("code",[t._v("Gitea")]),t._v("的"),s("code",[t._v("WebHook")]),t._v("通知(也可以用"),s("code",[t._v("码云")]),t._v("、"),s("code",[t._v("Github")]),t._v("、"),s("code",[t._v("GitLab")]),t._v("、"),s("code",[t._v("gogs")]),t._v(",带"),s("code",[t._v("WebHook")]),t._v("功能就行),当我们"),s("code",[t._v("push")]),t._v("到仓库时,\n"),s("code",[t._v("Gitea")]),t._v("会主动发送一个通知到我们的服务器,然后服务器接到通知执行我们部署的脚本,开始自动化构建。")])]),t._v(" "),s("h2",{attrs:{id:"服务器安装必备环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器安装必备环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 服务器安装必备环境")]),t._v(" "),s("h4",{attrs:{id:"以下命令视自己的环境而执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以下命令视自己的环境而执行","aria-hidden":"true"}},[t._v("#")]),t._v(" 以下命令视自己的环境而执行")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# node 由于nodejs自带npm所以就不需要手动安装了")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y nodejs\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vue-cli")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g @vue/cli\n")])])]),s("h2",{attrs:{id:"配置服务器webhook接收通知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置服务器webhook接收通知","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置服务器"),s("code",[t._v("WebHook")]),t._v("接收通知")]),t._v(" "),s("h3",{attrs:{id:"自动化执行脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动化执行脚本","aria-hidden":"true"}},[t._v("#")]),t._v(" 自动化执行脚本")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pull对应通知url中的param参数（使用$1接收）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pull'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# web目录")]),t._v("\n    web_dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/home/jktz/\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 项目存放目录")]),t._v("\n    project_dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/home/project/\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 项目目录")]),t._v("\n    project_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("test\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git远程地址")]),t._v("\n    git_url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://192.168.1.110/woytu/test.git\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 建议创建稳定分支，避免在开发分支上出现不稳定情况")]),t._v("\n    git_branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("alpha\n    \n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$web_dir")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请设置web目录"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请设置项目存放目录"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_name")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请设置项目名称"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$git_url")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请设置git地址"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$git_url")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请设置git分支"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断web目录不存在则退出")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -d "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$web_dir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"web目录不存在，请检查"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断web项目没有可执行权限则授权")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -x "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$web_dir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将当前目录权限赋予给用户")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" -R www:www "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$web_dir")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置读写权限")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" -R 755 "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$web_dir")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断项目存放目录不存在则创建")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -d "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断项目存放目录没有可执行权限则授权")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -x "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将当前目录权限赋予给用户")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" -R www:www "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置读写权限")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" -R 755 "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断项目不存在则克隆下来")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -d "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 克隆项目的指定分支到指定项目名")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone -b "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$git_branch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$git_url")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_name")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断项目目录不存在则克隆失败")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -d "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"克隆项目失败"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 先cd到我们的项目目录下,git clone的目录")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_name")]),t._v("/\n    \n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断分支是否存在")]),t._v("\n    branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" $git_branch"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"项目分支'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$git_branch")]),t._v('不存在"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\t\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从远程下载最新的，而不尝试合并或rebase任何东西")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch --all\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较远端和本地分支")]),t._v("\n    is_up"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" $git_branch origin/$git_branch"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 统计文件的改动")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#is_up=`git diff --stat $git_branch origin/$git_branch`")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行一次git fetch origin xxx，那当下最新版本的commit会存在FETCH_HEAD中")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#is_up=`git diff HEAD FETCH_HEAD`")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#is_up=`git pull --dry-run | grep -q -v 'Already up-to-date.' && changed=1`")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#is_up=`git log HEAD...origin/$git_branch --oneline`")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#is_up=`git log -p $git_branch..origin/$git_branch`")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本地与远程的差集 :（显示远程有而本地没有的commit信息）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#is_up=`git log $git_branch..origin/$git_branch`")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取项目克隆时间")]),t._v("\n    a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stat")]),t._v(" -c %Y $project_dir/$project_name/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取当前时间")]),t._v("\n    b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" +%s"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果项目克隆时间超过一分钟并且分支有更新")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -gt 60 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$is_up")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"分支'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$git_branch")]),t._v('没有更新"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    \n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reset将主分支重置为您刚刚获取的内容。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --hard选项更改工作树中的所有文件以匹配origin/<branch_name>中的文件")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 避免脚本执行时修改了本地代码导致pull不下来")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard origin/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$git_branch")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行pull命令拉取最新的代码")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$git_branch")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装npm依赖")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用npm run build构建Vue项目")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除web目录下的文件")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$web_dir")]),t._v("/*\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移动打包好的文件到web目录下")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_name")]),t._v("/dist/* "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$web_dir")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),s("h3",{attrs:{id:"第一种：宝塔面板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一种：宝塔面板","aria-hidden":"true"}},[t._v("#")]),t._v(" 第一种：宝塔面板")]),t._v(" "),s("h5",{attrs:{id:"设置宝塔webhook插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置宝塔webhook插件","aria-hidden":"true"}},[t._v("#")]),t._v(" 设置宝塔WebHook插件")]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/%E5%AE%9D%E5%A1%94WebHook%E8%AE%BE%E7%BD%AE.png",alt:""}})]),t._v(" "),s("h5",{attrs:{id:"宝塔webhook获取url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#宝塔webhook获取url","aria-hidden":"true"}},[t._v("#")]),t._v(" 宝塔WebHook获取url")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# param参数需要和脚本里对应起来,我这里写的是pull\nhttp://服务器ip:8888/hook?access_key=5C84B7A5UeXYalfNL6WEpi3jdmmxhFlk3jpvEw02BMo84Ak3&param=pull\n")])])]),s("p",[s("img",{attrs:{src:"/images/%E5%AE%9D%E5%A1%94WebHook%E8%8E%B7%E5%8F%96url.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"第二种：netcat命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二种：netcat命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 第二种："),s("a",{attrs:{href:"https://segmentfault.com/a/1190000016626298",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("netcat")]),t._v("命令"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"实现监听端口-响应请求-执行脚本部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现监听端口-响应请求-执行脚本部署","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现监听端口->响应请求->执行脚本部署")]),t._v(" "),s("h4",{attrs:{id:"一直监听-9999-端口，有请求就响应echo的内容，并执行指定脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一直监听-9999-端口，有请求就响应echo的内容，并执行指定脚本","aria-hidden":"true"}},[t._v("#")]),t._v(" 一直监听 9999 端口，有请求就响应"),s("code",[t._v("echo")]),t._v("的内容，并执行指定脚本")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HTTP/1.1 200 ok,glass\\r\\nConnection: close\\r\\n\\r"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nc")]),t._v(" -l 0.0.0.0 9999 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" sh /home/update.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /home/logs/webhook.log 2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("1\n")])])]),s("blockquote",[s("p",[t._v("通过 systemd，可以将这个脚本管理起来，让它永远重启，这样一次部署之后，马上就可以重新监听，等待下一次部署命令。注意要添加 StartLimitInterval ，限制一下执行的频率。")])]),t._v(" "),s("h4",{attrs:{id:"最终的-systemd-service-如下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最终的-systemd-service-如下","aria-hidden":"true"}},[t._v("#")]),t._v(" 最终的 systemd service 如下")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Unit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nDescription"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Autopull through webhook\nAfter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("network.target\n \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nUser"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin\nType"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("simple\nExecStart"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/bin/bash -xc "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'echo -e \"HTTP/1.1 200 ok,glass\\r\\nConnection: close\\r\\n\\r\" |  nc -l 0.0.0.0 9999 ; sh /home/deploy/update.sh >> /home/logs/webhook.log 2>&1'")]),t._v("\nRestart"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always\nStartLimitInterval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1min\nStartLimitBurst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("60\n \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Install"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nWantedBy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("multi-user.target\n")])])]),s("blockquote",[s("p",[t._v("这样就可以实现每次向 master push 代码，自动测试成功并且马上推送到测试环境中。 update.sh 脚本的最后可以加一个 Curl 命令向钉钉或者 slack 发送提醒。")])]),t._v(" "),s("h3",{attrs:{id:"第三种：使用第三方项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三种：使用第三方项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 第三种：使用第三方项目")]),t._v(" "),s("h4",{attrs:{id:"gowebhook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gowebhook","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://github.com/moonagic/GoWebhook",target:"_blank",rel:"noopener noreferrer"}},[t._v("GoWebhook"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"webhook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webhook","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://github.com/adnanh/webhook",target:"_blank",rel:"noopener noreferrer"}},[t._v("webhook"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"配置gitea的webhook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置gitea的webhook","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置Gitea的WebHook")]),t._v(" "),s("h3",{attrs:{id:"设置gitea的webhook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置gitea的webhook","aria-hidden":"true"}},[t._v("#")]),t._v(" 设置Gitea的WebHook")]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/GiteaWebHook%E8%AE%BE%E7%BD%AE.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"添加gitea的webhook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加gitea的webhook","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加Gitea的WebHook")]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/GiteaWebHook%E6%B7%BB%E5%8A%A0.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"测试gitea的webhook推送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试gitea的webhook推送","aria-hidden":"true"}},[t._v("#")]),t._v(" 测试Gitea的WebHook推送")]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/GiteaWebHook%E6%B5%8B%E8%AF%95.png",alt:""}})])])},[],!1,null,null,null);a.default=n.exports}}]);