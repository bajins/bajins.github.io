(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{464:function(t,e,a){"use strict";a.r(e);var r=a(0),n=Object(r.a)({},function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"文件压缩解压"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件压缩解压"}},[t._v("#")]),t._v(" 文件压缩解压")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#flag"}},[t._v("Flag")])]),e("li",[e("a",{attrs:{href:"#tar"}},[t._v("tar")]),e("ul",[e("li",[e("a",{attrs:{href:"#_7zip"}},[t._v("7zip")])])])]),e("li",[e("a",{attrs:{href:"#deflate"}},[t._v("Deflate")]),e("ul",[e("li",[e("a",{attrs:{href:"#zip"}},[t._v("zip")])]),e("li",[e("a",{attrs:{href:"#unzip"}},[t._v("unzip")])])])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"flag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flag"}},[t._v("#")]),t._v(" Flag")]),t._v(" "),e("blockquote",[e("p",[t._v("rar tar zip 7z 是归档容器，里面可以放多个文件、有目录结构，其中 tar本身不带压缩")])]),t._v(" "),e("blockquote",[e("p",[t._v("rar 带单独的压缩算法（据说类 Deflate），加密算法（AES），有相对完善的压缩过滤器")])]),t._v(" "),e("blockquote",[e("p",[t._v("zip 压缩算法Deflate，因为历史问题被迫成为多算法的加密容器（互不兼容的 AES），压缩比相对不太高，\n不识别文件名的编码，有特殊的带过滤格式 zipx。gz是zip算法的一个GNU实现。")])]),t._v(" "),e("blockquote",[e("p",[t._v("7-zip 压缩算法 LZMA、LZMA2、ppmd、bzip2，加密算法（AES），有初步的过滤能力")])]),t._v(" "),e("blockquote",[e("p",[t._v("tar 可以和压缩或加密格式串用，tar.gz tar.bzip2 tar.xz tar.lzma 都是常见的压缩格式组合压缩算法方面，\n对常规文件现在 7z 自带的 lzma2 是最佳选择，对多媒体文件，可考虑 rar 和 zipx")])]),t._v(" "),e("blockquote",[e("p",[t._v("xz的默认压缩级别是6。7z的默认压缩级别是5，至少在字典大小上相当于xz的压缩级别7，另外7z默认开了多线程，有多核可用的时候表现会好些")])]),t._v(" "),e("blockquote",[e("p",[t._v("xz和7z的默认参数压缩算法都是lzma2（tar能解压7z，7-zip也能解压xz），这个算法出自7-zip作者"),e("code",[t._v("Igor Pavlov")]),t._v("。")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/topics/compressor",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/topics/compressor"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://sourceforge.net/projects/getgnuwin32",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://sourceforge.net/projects/getgnuwin32"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sourceforge.net/projects/gnuwin32",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://sourceforge.net/projects/gnuwin32"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/google/zopfli",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/google/zopfli"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.win-rar.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.win-rar.com"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/bitcookies/winrar-keygen",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/bitcookies/winrar-keygen"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/onekey-sec/unblob",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/onekey-sec/unblob"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/inikep/lzbench",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/inikep/lzbench"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.gzip.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.gzip.org"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://compression.great-site.net",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://compression.great-site.net"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://launchpad.net/pbzip2",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://launchpad.net/pbzip2"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/wummel/patool",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/wummel/patool"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sourceforge.net/projects/littleutils",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://sourceforge.net/projects/littleutils"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[t._v("提取 "),e("a",{attrs:{href:"https://github.com/dtrx-py/dtrx",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/dtrx-py/dtrx"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"tar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tar"}},[t._v("#")]),t._v(" tar")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("tar")]),t._v("是在"),e("code",[t._v("Linux")]),t._v("中使用得非常广泛的文档打包格式（保留 unix 风格的文件权限）。它只消耗非常少的CPU以及时间去打包文件，\n但它仅仅只是一个打包工具，并不负责压缩。")])]),t._v(" "),e("blockquote",[e("p",[t._v("实际使用中，除了要打包之外，往往还需要其他的压缩命令一起出现进行一下压缩，提高空间利用率。")])]),t._v(" "),e("p",[e("strong",[t._v("参数")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("命令类型参数：")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("-c")]),t._v("或"),e("code",[t._v("–create")]),t._v("：建立新的备份文件。")]),t._v(" "),e("li",[e("code",[t._v("-x")]),t._v("或"),e("code",[t._v("–extract")]),t._v("或"),e("code",[t._v("–get")]),t._v("：从备份文件中还原文件。")])])]),t._v(" "),e("li",[e("p",[t._v("压缩方式参数：")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("-j")]),t._v("或"),e("code",[t._v("–bzip2")]),t._v("：以bz2的算法来压缩或者解压文件。")]),t._v(" "),e("li",[e("code",[t._v("-z")]),t._v("或"),e("code",[t._v("–gzip")]),t._v("或"),e("code",[t._v("–ungzip")]),t._v("：通过 gzip 指令处理备份文件。")])])]),t._v(" "),e("li",[e("p",[t._v("其他常用参数：")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("-v")]),t._v("或"),e("code",[t._v("–verbose")]),t._v("：显示指令执行过程。")]),t._v(" "),e("li",[e("code",[t._v("-C <目的目录>")]),t._v("或"),e("code",[t._v("–directory=<目的目录>")]),t._v("：切换到指定的目录。")])])])]),t._v(" "),e("p",[e("strong",[t._v("压缩")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将目标打包成一个*.tar格式的文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-cvf")]),t._v(" 名称.tar 目录或文件\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将目标打包成一个*.tgz格式的文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-czvf")]),t._v(" 名称.tgz 目录或文件\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将目标打包并压缩成一个*.tar.gz格式的文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-czvf")]),t._v(" 名称.tar.gz 目录或文件\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将目标打包并压缩成一个*.tar.bz2格式的文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-cjvf")]),t._v(" 名称.tar.bz2 目录或文件\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将打包好的tar文件压缩成一个*.tar.xz格式的文件\t\t\t\t")]),t._v("\nxz "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-z")]),t._v(" 名称.tar.xz\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者一条命令执行")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Jcvf")]),t._v(" 文件名.tar.xz 目录或文件\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将目标打包并压缩成一个*.tar.7z格式的文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" cvf - 目录或文件 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 7z a "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-si")]),t._v(" 文件名.tar.7z\n")])])]),e("blockquote",[e("p",[t._v("注意：在使用"),e("code",[t._v("tar")]),t._v("的"),e("code",[t._v("--exclude")]),t._v("命令排除打包时，末尾不能加"),e("code",[t._v("/")]),t._v("或者路径为绝对路径，否则还是会把排除目录以及其下的文件打包进去。")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包的时候我们要排除 tomcat/logs 目录，命令如下：")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-zcvf")]),t._v(" tomcat.tar.gz "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--exclude")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tomcat/logs tomcat\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果要排除多个目录，增加 --exclude 即可，如下命令排除logs和libs两个目录及文件xiaoshan.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-zcvf")]),t._v(" tomcat.tar.gz "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--exclude")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tomcat/logs "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--exclude")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tomcat/libs "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--exclude")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tomcat/xiaoshan.txt tomcat\n")])])]),e("p",[e("strong",[t._v("解压")])]),t._v(" "),e("blockquote",[e("p",[t._v("参数"),e("code",[t._v("-C")]),t._v("解压到指定目录下")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解压一个*.tar的文件包内容到当前目录下")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-xvf")]),t._v(" pakage_name.tar\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解压一个*.tgz的文件包内容到当前目录下\t\t\t\t\t\t\t")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-xzvf")]),t._v(" pakage_name.tgz\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解压一个*.tar.gz的压缩包内容到当前目录下")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-xzvf")]),t._v(" pakage_name.tar.gz\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解压一个*.tar.bz2的压缩包内容到当前目录下")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-xjvf")]),t._v(" pakage_name.tar.bz2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tar.xz压缩包需要先解压为tar格式包")]),t._v("\nxz "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" pakage_name.tar.xz\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再解开tar格式包到当前目录下")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-xvf")]),t._v(" pakage_name.tar\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者一条命令执行")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Jxvf")]),t._v(" 文件名.tar.xz\n")])])]),e("h3",{attrs:{id:"_7zip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7zip"}},[t._v("#")]),t._v(" 7zip")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/ip7z/7zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/ip7z/7zip"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sourceforge.net/projects/sevenzip",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://sourceforge.net/projects/sevenzip"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.7-zip.org/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.7-zip.org/download.html"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("打开7zip -> 点击菜单栏上的"),e("code",[t._v("工具")]),t._v(" -> "),e("code",[t._v("选项")]),t._v(" -> 点击两个"),e("code",[t._v("+")]),t._v("号关联所有默认解压方式到当前账户和所有账户")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://microsoft.github.io/VirtualClient/docs/workloads/compression/7zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://microsoft.github.io/VirtualClient/docs/workloads/compression/7zip"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/M2Team/NanaZip",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/M2Team/NanaZip"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/mcmilk/7-Zip-zstd",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/mcmilk/7-Zip-zstd"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/myfreeer/7z-build-nsis",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/myfreeer/7z-build-nsis"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/peazip/PeaZip",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/peazip/PeaZip"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://sourceforge.net/projects/peazip",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://sourceforge.net/projects/peazip"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/nmoinvaz/minizip",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/nmoinvaz/minizip"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.breezip.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.breezip.com"),e("OutboundLink")],1)])]),t._v(" "),e("blockquote",[e("p",[t._v("注意：所有的参数和值之间是没有空格的")])]),t._v(" "),e("p",[e("strong",[t._v("参数")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("a")]),t._v(" 添加文件或文件夹到压缩包。")]),t._v(" "),e("li",[e("code",[t._v("b")]),t._v(" 基准")]),t._v(" "),e("li",[e("code",[t._v("d")]),t._v(" 从存档中删除文件")]),t._v(" "),e("li",[e("code",[t._v("e")]),t._v(" 从存档中提取文件（不使用目录名）")]),t._v(" "),e("li",[e("code",[t._v("h")]),t._v(" 计算文件的哈希值")]),t._v(" "),e("li",[e("code",[t._v("i")]),t._v(" 显示有关受支持格式的信息")]),t._v(" "),e("li",[e("code",[t._v("l")]),t._v(" 列出档案内容")]),t._v(" "),e("li",[e("code",[t._v("rn")]),t._v(" 重命名存档中的文件")]),t._v(" "),e("li",[e("code",[t._v("t")]),t._v(" 测试档案的完整性")]),t._v(" "),e("li",[e("code",[t._v("u")]),t._v(" 更新文件以存档")]),t._v(" "),e("li",[e("code",[t._v("x")]),t._v(" 解压文件，保留原来的目录结构")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("-t")]),t._v(" 指定压缩类型，默认7z。")]),t._v(" "),e("li",[e("code",[t._v("-r")]),t._v(" 表示递归所有的子文件夹。")]),t._v(" "),e("li",[e("code",[t._v("-mmt[N]")]),t._v(" 设置CPU线程数")]),t._v(" "),e("li",[e("code",[t._v("-mx=值")]),t._v(" 设置压缩级别："),e("code",[t._v("-mx1")]),t._v("（最快），"),e("code",[t._v("-mx9")]),t._v("（最慢，压缩比最高），默认为5。")]),t._v(" "),e("li",[e("code",[t._v("-ao")]),t._v(" 设置覆盖模式，"),e("code",[t._v("a")]),t._v("全部覆盖")]),t._v(" "),e("li",[e("code",[t._v("-o")]),t._v(" 指定解压到的目录")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CentOS安装7zip")]),t._v("\nyum –y "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" p7zip\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解压到当前目录下,不保留原来的目录结构")]),t._v("\n7za e 文件名\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解压到当前目录下,但保留原来的目录结构")]),t._v("\n7za x 文件名\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用7z压缩成tar")]),t._v("\n7za a "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ttar")]),t._v(" 文件名.tar 文件夹\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用7z把tar压缩成gz")]),t._v("\n7za a "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-tgzip")]),t._v(" 文件名.tar.gz 文件名.tar\n")])])]),e("h2",{attrs:{id:"deflate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deflate"}},[t._v("#")]),t._v(" Deflate")]),t._v(" "),e("blockquote",[e("p",[t._v("在1990年左右，Info-ZIP组编写了可移植的，免费开源的实用程序zip和unzip实用程序，使用Deflate进行压缩以及对zip和早期格式进行解压缩")])]),t._v(" "),e("blockquote",[e("p",[t._v("在90年代初期，gzip格式被开发为Unix compress实用程序的替代，它是从Info-ZIP实用程序中的Deflate代码衍生而来")])]),t._v(" "),e("blockquote",[e("p",[t._v("zlib 是通用的压缩库，提供了一套 in-memory 压缩和解压函数，并能检测解压出来的数据的完整性(integrity)。zlib是从gzip代码改编而来")])]),t._v(" "),e("h3",{attrs:{id:"zip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zip"}},[t._v("#")]),t._v(" zip")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("zip")]),t._v("是压缩程序")])]),t._v(" "),e("p",[e("strong",[t._v("参数")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("A")]),t._v(" 调整可执行的自动解压缩文件。")]),t._v(" "),e("li",[e("code",[t._v("d")]),t._v(" 从压缩文件内删除指定的文件。")]),t._v(" "),e("li",[e("code",[t._v("D")]),t._v(" 压缩文件内不建立目录名称。")]),t._v(" "),e("li",[e("code",[t._v("F")]),t._v(" 尝试修复已损坏的压缩文件。")]),t._v(" "),e("li",[e("code",[t._v("g")]),t._v(" 将文件压缩后附加在既有的压缩文件之后，而非另行建立新的压缩文件。")]),t._v(" "),e("li",[e("code",[t._v("j")]),t._v(" 只保存文件名称及其内容，而不存放任何目录名称。")]),t._v(" "),e("li",[e("code",[t._v("m")]),t._v(" 将文件压缩并加入压缩文件后，删除原始文件，即把文件移到压缩文件中。")]),t._v(" "),e("li",[e("code",[t._v("o")]),t._v(" 以压缩文件内拥有最新更改时间的文件为准，将压缩文件的更改时间设成和该文件相同。")]),t._v(" "),e("li",[e("code",[t._v("q")]),t._v(" 不显示指令执行过程。")]),t._v(" "),e("li",[e("code",[t._v("r")]),t._v(" 递归处理，将指定目录下的所有文件和子目录一并处理。")]),t._v(" "),e("li",[e("code",[t._v("S")]),t._v(" 包含系统和隐藏文件。")]),t._v(" "),e("li",[e("code",[t._v("v")]),t._v(" 显示指令执行过程或显示版本信息。")]),t._v(" "),e("li",[t._v("<压缩效率> 压缩效率是一个介于 1-9 的数值。")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),t._v(" 文件名.zip 文件或目录\n")])])]),e("h3",{attrs:{id:"unzip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unzip"}},[t._v("#")]),t._v(" unzip")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://sourceforge.net/projects/infozip",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://sourceforge.net/projects/infozip"),e("OutboundLink")],1)])]),t._v(" "),e("blockquote",[e("p",[t._v("unzip是解压程序。")])]),t._v(" "),e("p",[e("strong",[t._v("参数")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("f")]),t._v(" 更新现有的文件。")]),t._v(" "),e("li",[e("code",[t._v("l")]),t._v(" 显示压缩文件内所包含的文件。")]),t._v(" "),e("li",[e("code",[t._v("v")]),t._v(" 执行是时显示详细的信息。")]),t._v(" "),e("li",[e("code",[t._v("C")]),t._v(" 压缩文件中的文件名称区分大小写。")]),t._v(" "),e("li",[e("code",[t._v("j")]),t._v(" 不处理压缩文件中原有的目录路径。")]),t._v(" "),e("li",[e("code",[t._v("L")]),t._v(" 将压缩文件中的全部文件名改为小写。")]),t._v(" "),e("li",[e("code",[t._v("n")]),t._v(" 解压缩时不要覆盖原有的文件。")]),t._v(" "),e("li",[e("code",[t._v("o")]),t._v(" 不必先询问用户，unzip 执行后覆盖原有文件。")]),t._v(" "),e("li",[e("code",[t._v("P<密码>")]),t._v(" 使用 zip 的密码选项。")]),t._v(" "),e("li",[e("code",[t._v("q")]),t._v(" 执行时不显示任何信息。")]),t._v(" "),e("li",[e("code",[t._v("[.zip 文件]")]),t._v(" 指定.zip 压缩文件。")]),t._v(" "),e("li",[e("code",[t._v("[文件]")]),t._v(" 指定要处理.zip 压缩文件中的哪些文件。")]),t._v(" "),e("li",[e("code",[t._v("d<目录>")]),t._v(" 指定文件解压缩后所要存储的目录。")]),t._v(" "),e("li",[e("code",[t._v("x<文件>")]),t._v(" 指定不要处理.zip 压缩文件中的哪些文件。")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),t._v(" 文件名.zip\n")])])])])},[],!1,null,null,null);e.default=n.exports}}]);