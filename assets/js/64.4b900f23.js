(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{413:function(t,r,a){"use strict";a.r(r);var n=a(0),e=Object(n.a)({},function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"spring"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring"}},[t._v("#")]),t._v(" Spring")]),t._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#flag"}},[t._v("Flag")])]),r("li",[r("a",{attrs:{href:"#事务"}},[t._v("事务")])]),r("li",[r("a",{attrs:{href:"#依赖注入"}},[t._v("依赖注入")])]),r("li",[r("a",{attrs:{href:"#spring-boot"}},[t._v("Spring Boot")]),r("ul",[r("li",[r("a",{attrs:{href:"#默认依赖管理"}},[t._v("默认依赖管理")])]),r("li",[r("a",{attrs:{href:"#配置方式"}},[t._v("配置方式")])])])]),r("li",[r("a",{attrs:{href:"#starters"}},[t._v("Starters")])]),r("li",[r("a",{attrs:{href:"#spring-cloud"}},[t._v("Spring Cloud")])]),r("li",[r("a",{attrs:{href:"#spring-security"}},[t._v("Spring Security")])]),r("li",[r("a",{attrs:{href:"#spring-taskscheduler"}},[t._v("Spring TaskScheduler")])]),r("li",[r("a",{attrs:{href:"#spring-mvc"}},[t._v("Spring MVC")])]),r("li",[r("a",{attrs:{href:"#spring-aop原理"}},[t._v("Spring AOP原理")])]),r("li",[r("a",{attrs:{href:"#jdk动态代理"}},[t._v("JDK动态代理:")])]),r("li",[r("a",{attrs:{href:"#cglib"}},[t._v("Cglib")])]),r("li",[r("a",{attrs:{href:"#lombok原理"}},[t._v("Lombok原理")])])])]),r("p"),t._v(" "),r("h2",{attrs:{id:"flag"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flag"}},[t._v("#")]),t._v(" Flag")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://github.com/ityouknow/ityouknow.github.io/blob/master/_posts/2019/releases/2019-01-03-spring-pivotal.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("是时候给大家介绍 Spring Boot/Cloud 背后豪华的研发团队了"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/topics/spring",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/topics/spring"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/topics/spring-boot",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/topics/spring-boot"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/topics/spring-cloud",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/topics/spring-cloud"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/spring-projects",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/spring-projects"),r("OutboundLink")],1),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://spring.io/projects",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://spring.io/projects"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/spring-projects-experimental",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/spring-projects-experimental"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/spring-guides",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/spring-guides"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/fmarchioni/masterspringboot",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/fmarchioni/masterspringboot"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("启动分析器 "),r("a",{attrs:{href:"https://github.com/linyimin0812/spring-startup-analyzer",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/linyimin0812/spring-startup-analyzer"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("配置中心对比 "),r("a",{attrs:{href:"https://github.com/hxz393/ConfigCenterComparer",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/hxz393/ConfigCenterComparer"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/wuyouzhuguli/SpringAll",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/wuyouzhuguli/SpringAll"),r("OutboundLink")],1),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://www.spring4all.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.spring4all.com"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/mingyang66/spring-parent",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/mingyang66/spring-parent"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/xuchengsheng/spring-reading",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/xuchengsheng/spring-reading"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("Spring源码阅读 "),r("a",{attrs:{href:"https://github.com/seaswalker/spring-analysis",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/seaswalker/spring-analysis"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/DerekYRC/mini-spring",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/DerekYRC/mini-spring"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("Spring 实战第五版中文翻译 "),r("a",{attrs:{href:"https://github.com/PotoYang/spring-in-action-v5-translate",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/PotoYang/spring-in-action-v5-translate"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/dunwu/spring-tutorial",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/dunwu/spring-tutorial"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/piomin",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/piomin"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/pickupmemories/p/16570511.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("spring boot项目，需要写一个接口吗？"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/9fa24196d2ad",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringCloud和Dubbo"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/top-housekeeper/p/11980973.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringCache自定义过期时间及自动刷新"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/qq_34626094/category_11731455.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring揭秘学习笔记"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("webmvc与webflux")])]),t._v(" "),r("details",[r("summary",[r("b",[t._v("展开查看示例结构")])]),t._v(" "),r("img",{attrs:{src:"/images/spring-web-client.png",alt:""}})]),t._v(" "),r("ul",[r("li",[t._v("webmvc是servlet stack based，基于同步阻塞的IO模型\n"),r("ul",[r("li",[t._v("在"),r("code",[t._v("org.springframework.web")]),t._v("包下")]),t._v(" "),r("li",[r("code",[t._v("artifactId")]),t._v("："),r("code",[t._v("spring-boot-starter-web")])]),t._v(" "),r("li",[r("code",[t._v("RestTemplate")]),t._v(" 阻塞式客户端，默认使用"),r("code",[t._v("HttpURLConnection")]),t._v("实现")])])]),t._v(" "),r("li",[t._v("webflux是reactive stack based，一个完全的reactive并且非阻塞的web框架，API公开了"),r("code",[t._v("Reactor Flux")]),t._v("和"),r("code",[t._v("Mono")]),t._v("类型\n"),r("ul",[r("li",[t._v("在"),r("code",[t._v("org.springframework.web.reactive")]),t._v("包下")]),t._v(" "),r("li",[r("code",[t._v("artifactId")]),t._v("："),r("code",[t._v("spring-boot-starter-webflux")])]),t._v(" "),r("li",[r("code",[t._v("WebClient")]),t._v(" 非阻塞式客户端，默认使用"),r("code",[t._v("Reactor Netty")]),t._v("实现")])])])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://blog.csdn.net/get_set/article/details/79480233",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring WebFlux快速上手"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-framework-choice",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring MVC or WebFlux?"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844903747089334285",target:"_blank",rel:"noopener noreferrer"}},[t._v("让Spring MVC返回HTML类型的视图"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("注解生成Bean默认命名规则")])]),t._v(" "),r("blockquote",[r("p",[t._v("在使用"),r("code",[t._v("@Component")]),t._v("、"),r("code",[t._v("@Repository")]),t._v("、"),r("code",[t._v("@Service")]),t._v("、"),r("code",[t._v("@Controller")]),t._v("等注解创建bean时，如果不指定bean名称，默认类名的首字母小写")])]),t._v(" "),r("blockquote",[r("p",[t._v("如果类名前两个及以上字母都是大写，那么bean名称与类名一样，如： RBACAuthorityService - RBACAuthorityService")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/cznno/doc/blob/master/doc/%E4%BF%AE%E6%94%B9Spring%E6%B3%A8%E8%A7%A3%E7%94%9F%E6%88%90Bean%E6%97%B6%E5%80%99%E7%9A%84%E5%91%BD%E5%90%8D%E6%96%B9%E5%BC%8F.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("修改Spring注解生成Bean时候的命名方式"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("启动错误")])]),t._v(" "),r("blockquote",[r("p",[r("code",[t._v("NoClassDefFoundError: Could not initialize class org.springframework.beans.factory.BeanCreationException")])]),t._v(" "),r("p",[t._v("可能是内存大小不够，加参数："),r("code",[t._v("-Xms1024M -Xmx2048M -XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=2048m -Xss5120k")])])]),t._v(" "),r("h2",{attrs:{id:"事务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/transaction/annotation/Propagation.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("org.springframework.transaction.annotation.Propagation"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://blog.csdn.net/qq_42216791/article/details/105684663",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring事务嵌套导致的异常,Transaction rolled back because it has been marked as rollback-only"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/f641385712/article/details/80445912",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring事务嵌套引发的血案---Transaction rolled back because it has been marked as rollback-only"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/69215235",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring事务方法嵌套引发的异常与问题分析"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/levae1024/article/details/82998386",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring事务管理嵌套事务详解 : 同一个类中，一个方法调用另外一个有事务的方法"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/m0_37701381/article/details/85066711",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring 事务嵌套无效"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/qq_32300143/article/details/116162515",target:"_blank",rel:"noopener noreferrer"}},[t._v("spring嵌套事务问题"),r("OutboundLink")],1)])]),t._v(" "),r("div",{staticClass:"language-java extra-class"},[r("pre",{pre:!0,attrs:{class:"language-java"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\nPropagation.REQUIRED\t如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。这是默认值。\nPropagation.REQUIRES_NEW\t创建一个新的事务，如果当前存在事务，则把当前事务挂起。\nPropagation.SUPPORTS\t如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。\nPropagation.NOT_SUPPORTED\t以非事务方式运行，如果当前存在事务，则把当前事务挂起。\nPropagation.NEVER\t以非事务方式运行，如果当前存在事务，则抛出异常。\nPropagation.MANDATORY\t如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。\nPropagation.NESTED\t如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于Propagation.REQUIRED\n*/")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// REQUIRES_NEW 与 NESTED 前者是内层异常影响外层，外层不影响内层；后者正好相反，内层加try catch后 异常不影响外层，外层会影响内层")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rollbackFor "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" propagation "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Propagation")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REQUIRES_NEW")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionTemplate")]),t._v(" transactionTemplate"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手动管理事务")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceTransactionManager")]),t._v(" transactionManager"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*@Autowired\nprivate PlatformTransactionManager platformTransactionManager;*/")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*@Autowired\nprivate TransactionDefinition transactionDefinition;*/")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置事务隔离级别，开启新事务")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultTransactionDefinition")]),t._v(" def "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultTransactionDefinition")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionDefinition")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PROPAGATION_REQUIRES_NEW")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//def.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRES_NEW);")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foreach start")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得事务状态")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionStatus")]),t._v(" status "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" transactionManager"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTransaction")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("def"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionAspectSupport")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTransactionStatus")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("isRollbackOnly")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取当前最大事务")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionAspectSupport")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTransactionStatus")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRollbackOnly")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记事务回滚")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("status"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("isRollbackOnly")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        status"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRollbackOnly")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记事务回滚")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://www.cnblogs.com/yaohuiqin/p/9486975.html")]),t._v("\n    transactionManager"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollback")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回滚事务，设置completed为完成状态，清理事务资源")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" status"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNewTransaction")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("status"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("isCompleted")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("status"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("isRollbackOnly")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        transactionManager"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果rollBackOnly状态被设置将回滚，否则执行正常的事务提交操作")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foreach end")]),t._v("\n")])])]),r("h2",{attrs:{id:"依赖注入"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入"}},[t._v("#")]),t._v(" 依赖注入")]),t._v(" "),r("ul",[r("li",[t._v("@Autowired\n"),r("ul",[r("li",[t._v("Field （属性变量）"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/92395282",target:"_blank",rel:"noopener noreferrer"}},[t._v("Field injection is not recommended（不再推荐使用字段注入）"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("构造器注入适合强制性的注入旨在不变性")]),t._v(" "),r("li",[t._v("Setter 注入适合可变性的注入。")])])]),t._v(" "),r("li",[t._v("@Resource")]),t._v(" "),r("li",[t._v("@Inject")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5e3811d26fb9a07ca24f3e55",target:"_blank",rel:"noopener noreferrer"}},[t._v("这几个关于Spring 依赖注入的问题你清楚吗？"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000021044999",target:"_blank",rel:"noopener noreferrer"}},[t._v("Field injection is not recommended（Spring IOC不再推荐使用属性注入）"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://boris1993.github.io/projects/java/coding-tips/idea-warninig-field-injection-is-not-recommended.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("IDEA 警告 Field injection is not recommended"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/7f20176f2a40",target:"_blank",rel:"noopener noreferrer"}},[t._v("Field injection is not recommended"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/36db3e167958",target:"_blank",rel:"noopener noreferrer"}},[t._v("@Autowired警告：Field injection is not recommended"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/zhangjingao/article/details/81094529",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用@Autowired注解警告Field injection is not recommended"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/kismetv/p/8757260.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring中获取request的几种方法，及其线程安全性分析"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"spring-boot"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot"}},[t._v("#")]),t._v(" Spring Boot")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/dyc87112/SpringBoot-Learning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/dyc87112/SpringBoot-Learning"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/macrozheng/mall-learning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/macrozheng/mall-learning"),r("OutboundLink")],1),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://macrozheng.github.io/mall-learning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://macrozheng.github.io/mall-learning"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/vector4wang/spring-boot-quick",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/vector4wang/spring-boot-quick"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/kanyways/learning-spring",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/kanyways/learning-spring"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/gf-huanchupk/SpringBootLearning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/gf-huanchupk/SpringBootLearning"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/lyb-geek/springboot-learning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/lyb-geek/springboot-learning"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/xkcoding/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/xkcoding/spring-boot-demo"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/xuwujing/springBoot-study",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/xuwujing/springBoot-study"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/houko/SpringBootUnity",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/houko/SpringBootUnity"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/hemin1003/spring-boot-study",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/hemin1003/spring-boot-study"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/smltq/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/smltq/spring-boot-demo"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/liuyueyi/spring-boot-demo"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/TianShengBingFeiNiuRen/springboot-util",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/TianShengBingFeiNiuRen/springboot-util"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/WinterChenS/springboot-learning-experience",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/WinterChenS/springboot-learning-experience"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/jesusfc/springboot3-java17",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/jesusfc/springboot3-java17"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("工具包 "),r("a",{attrs:{href:"https://github.com/lets-mica/mica",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/lets-mica/mica"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("测试 "),r("a",{attrs:{href:"https://github.com/codecentric/chaos-monkey-spring-boot",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/codecentric/chaos-monkey-spring-boot"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/huangqingshi/p/11370291.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Springboot 优雅停止服务的几种方法"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/exmyth/p/13098831.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringBoot系列: 如何优雅停止服务"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5ec1d89de51d454ddf2367ab",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot 2.3 新特性优雅停机详解"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://antoniopeng.com/2020/01/03/springboot/Spring%20Boot%20%E7%9B%91%E5%90%AC%20Redis%20Key%20%E5%A4%B1%E6%95%88%E4%BA%8B%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot 监听 Redis Key 失效事件实现定时任务"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/qq_34347620/article/details/102239179",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot 无侵入式 实现API接口统一JSON格式返回"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[t._v("约定优于配置（convention over configuration），也称作按约定编程，是一种软件设计范式，\n旨在减少软件开发人员需做决定的数量，获得简单的好处，而又不失灵活性。")])]),t._v(" "),r("blockquote",[r("p",[t._v("开发人员仅需规定应用中不符合约定的部分，在没有规定配置的地方，采用默认配置，以力求最简配置为核心思想")])]),t._v(" "),r("p",[r("strong",[t._v("有哪些约定")])]),t._v(" "),r("ul",[r("li",[r("p",[t._v("Maven的目录结构")]),t._v(" "),r("ul",[r("li",[t._v("默认有"),r("code",[t._v("resources")]),t._v("文件夹,存放资源配置文件。"),r("code",[t._v("src-main-resources")]),t._v(","),r("code",[t._v("src-main-java")]),t._v("。")]),t._v(" "),r("li",[t._v("默认编译生成的类都在"),r("code",[t._v("targe")]),t._v("文件夹下面")])])]),t._v(" "),r("li",[r("p",[t._v("项目默认的配置文件必须是")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("application")]),t._v("前缀命名的"),r("code",[t._v("yml")]),t._v("文件")]),t._v(" "),r("li",[r("code",[t._v("application")]),t._v("前缀命名的"),r("code",[t._v("properties")]),t._v("文件")])])])]),t._v(" "),r("h3",{attrs:{id:"默认依赖管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#默认依赖管理"}},[t._v("#")]),t._v(" 默认依赖管理")]),t._v(" "),r("blockquote",[r("p",[t._v("使用默认依赖管理的目的是：常用的包依赖可以省去version标签。如下：")])]),t._v(" "),r("div",{staticClass:"language-xml extra-class"},[r("pre",{pre:!0,attrs:{class:"language-xml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-web"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),r("ul",[r("li",[t._v("方式一")])]),t._v(" "),r("div",{staticClass:"language-xml extra-class"},[r("pre",{pre:!0,attrs:{class:"language-xml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("parent")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- spring-boot-starter-parent 是一个特殊的starter，它用来提供相关的Maven默认依赖 --\x3e")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--继承spring-boot-dependencies依赖管理，指定了JDK版本，多了编译配置--\x3e")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-parent"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.2.5.RELEASE"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("relativePath")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("parent")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),r("ul",[r("li",[t._v("方式二")])]),t._v(" "),r("div",{staticClass:"language-xml extra-class"},[r("pre",{pre:!0,attrs:{class:"language-xml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencyManagement")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--引入spring-boot依赖管理，其中包含多个依赖，如slf4j、logback--\x3e")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--要使用property的形式覆盖原始的依赖项（升级依赖版本），则需要在此之前添加--\x3e")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-dependencies"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${spring-boot-version}"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("type")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("pom"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("type")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("import"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("scope")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencyManagement")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),r("h3",{attrs:{id:"配置方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#配置方式"}},[t._v("#")]),t._v(" 配置方式")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://blog.csdn.net/Happy_cloudlife/article/details/85564667",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot 加载配置多种方式"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("Spring Boot Starter")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/bbf439c8a203",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot Starter说明"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[t._v("需要在"),r("code",[t._v("pom.xml")]),t._v("中引入为"),r("code",[t._v("starter")]),t._v("的依赖")]),t._v(" "),r("li",[t._v("然后在"),r("code",[t._v("application.yml")]),t._v("或者"),r("code",[t._v("application.properties")]),t._v("中配置，无需在其他任何地方配置（如"),r("code",[t._v("xml")]),t._v("、"),r("code",[t._v("Bean")]),t._v("）")])]),t._v(" "),r("p",[r("strong",[t._v("Java代码配置Bean")])]),t._v(" "),r("ul",[r("li",[t._v("需要在"),r("code",[t._v("pom.xml")]),t._v("中引入不为"),r("code",[t._v("starter")]),t._v("的依赖")]),t._v(" "),r("li",[t._v("创建一个配置类，然后使用注解"),r("code",[t._v("@Configuration")]),t._v("在类上，"),r("code",[t._v("@bean")]),t._v("配置方法，方法名是相当于"),r("code",[t._v("xml")]),t._v("配置的"),r("code",[t._v("id")]),t._v("，\n返回结果相当于将哪个类注入到bean容器中")])]),t._v(" "),r("p",[r("strong",[t._v("加载自定义xml配置")])]),t._v(" "),r("ul",[r("li",[t._v("需要在"),r("code",[t._v("pom.xml")]),t._v("中引入不为"),r("code",[t._v("starter")]),t._v("的依赖")]),t._v(" "),r("li",[t._v("在启动类上使用注解"),r("code",[t._v('@ImportResource(locations={"classpath:配置文件路径})')]),t._v("，把自定义的"),r("code",[t._v("xml")]),t._v("配置加载进来")])]),t._v(" "),r("p",[r("strong",[t._v("使用注解获取配置文件中的配置")])]),t._v(" "),r("ul",[r("li",[r("code",[t._v('@Value("${配置中的属性名}")')]),t._v("用在Bean的域（属性）上，获取默认配置文件中的属性值")]),t._v(" "),r("li",[r("code",[t._v('@ConfigurationProperties(prefix="配置中的属性名")')]),t._v("用在类名上，获取默认配置文件中的属性值，用"),r("code",[t._v("@Resource")]),t._v("引入到其他类")])]),t._v(" "),r("blockquote",[r("p",[t._v("必须要让Spring 扫描到该类才能使用，有三种方法：加"),r("code",[t._v("@Component")]),t._v("；创建配置类加"),r("code",[t._v("@Configuration")]),t._v("，\n再加"),r("code",[t._v("@EnableConfigurationProperties(类名.class)")]),t._v("或者创建构造器加"),r("code",[t._v("@Bean")])])]),t._v(" "),r("ul",[r("li",[r("code",[t._v('@PropertySource("classpath:配置文件路径")')]),t._v("用在类名上，获取默认自定义"),r("code",[t._v("properties")]),t._v("文件中的属性值，用"),r("code",[t._v("@Resource")]),t._v("引入到其他类")])]),t._v(" "),r("h2",{attrs:{id:"starters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#starters"}},[t._v("#")]),t._v(" Starters")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://start.aliyun.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://start.aliyun.com"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/mouzt/mzt-biz-log",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/mouzt/mzt-biz-log"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/ballcat-projects/ballcat",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/ballcat-projects/ballcat"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("application starters")])]),t._v(" "),r("blockquote",[r("p",[t._v("Spring Boot 所有应用程序级的 Starters")])]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[r("strong",[t._v("Starter 名称")])]),t._v(" "),r("th",[r("strong",[t._v("Starter 描述")])])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("spring-boot-starter")]),t._v(" "),r("td",[t._v("核心 Starter，包括自动配置、日志及 YAML 支持等")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-activemq")]),t._v(" "),r("td",[t._v("集成 Apache ActiveMQ，基于 JMS 的消息队列")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-artemis")]),t._v(" "),r("td",[t._v("集成 Apache Artemis，基于 JMS 的消息队列")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-amqp")]),t._v(" "),r("td",[t._v("集成 Spring AMQP 和 Rabbit MQ 的消息队列")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-aop")]),t._v(" "),r("td",[t._v("集成 Spring AOP 和 AspectJ 面向切面编程")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-batch")]),t._v(" "),r("td",[t._v("集成 Spring Batch（批处理）")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-cache")]),t._v(" "),r("td",[t._v("集成 Spring Cache（缓存）")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-cassandra")]),t._v(" "),r("td",[t._v("集成 Cassandra（分布式数据库） 和 Spring Data Cassandra")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-cassandra-reactive")]),t._v(" "),r("td",[t._v("集成 Cassandra（分布式数据库） 和 Spring Data Cassandra Reactive")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-couchbase")]),t._v(" "),r("td",[t._v("集成 Couchbase（文档型数据库） 和 Spring Data Couchbase")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-couchbase-reactive")]),t._v(" "),r("td",[t._v("集成 Couchbase（文档型数据库） 和 Spring Data Couchbase Reactive")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-elasticsearch")]),t._v(" "),r("td",[t._v("集成 Elasticsearch（搜索引擎）和 Spring Data Elasticsearch")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-solr")]),t._v(" "),r("td",[t._v("集成 Apache Solr（搜索引擎）结合 Spring Data Solr")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-jdbc")]),t._v(" "),r("td",[t._v("集成 Spring Data JDBC")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-jpa")]),t._v(" "),r("td",[t._v("集成 Spring Data JPA 结合 Hibernate")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-ldap")]),t._v(" "),r("td",[t._v("集成 Spring Data LDAP")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-mongodb")]),t._v(" "),r("td",[t._v("集成 MongoDB（文档型数据库）和 Spring Data MongoDB")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-mongodb-reactive")]),t._v(" "),r("td",[t._v("集成 MongoDB（文档型数据库）和 Spring Data MongoDB Reactive")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-neo4j")]),t._v(" "),r("td",[t._v("集成 Neo4j（图形数据库）和 Spring Data Neo4j")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-r2dbc")]),t._v(" "),r("td",[t._v("集成 Spring Data R2DBC")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-redis")]),t._v(" "),r("td",[t._v("集成 Redis（内存数据库）结合 Spring Data Redis 和  Lettuce 客户端")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-redis-reactive")]),t._v(" "),r("td",[t._v("集成 Redis（内存数据库）结合 Spring Data Redis reactive 和 Lettuce 客户端")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-data-rest")]),t._v(" "),r("td",[t._v("集成 Spring Data REST 暴露 Spring Data repositories 输出 REST 资源")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-thymeleaf")]),t._v(" "),r("td",[t._v("集成 Thymeleaf 视图构建 MVC web 应用")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-freemarker")]),t._v(" "),r("td",[t._v("集成 FreeMarker 视图构建 MVC web 应用")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-groovy-templates")]),t._v(" "),r("td",[t._v("集成 Groovy 模板视图构建 MVC web 应用")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-hateoas")]),t._v(" "),r("td",[t._v("集成 Spring MVC 和 Spring HATEOAS 构建超媒体 RESTful Web 应用程序")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-integration")]),t._v(" "),r("td",[t._v("集成 Spring Integration")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-jdbc")]),t._v(" "),r("td",[t._v("集成 JDBC 结合 HikariCP 连接池")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-jersey")]),t._v(" "),r("td",[t._v("集成 JAX-RS 和 Jersey 构建 RESTful web 应用，是 spring-boot-starter-web 的一个替代 Starter")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-jooq")]),t._v(" "),r("td",[t._v("集成 jOOQ 访问 SQL 数据库，是 spring-boot-starter-data-jpa 或者 spring-boot-starter-jdbc 的替代 Starter")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-json")]),t._v(" "),r("td",[t._v("用于读写 JSON")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-jta-atomikos")]),t._v(" "),r("td",[t._v("集成 Atomikos 实现  JTA 事务")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-jta-bitronix")]),t._v(" "),r("td",[t._v("集成  Bitronix 实现  JTA 事务（ 从 2.3.0 开始标识为 Deprecated）")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-mail")]),t._v(" "),r("td",[t._v("集成 Java Mail 和 Spring 框架的邮件发送功能")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-mustache")]),t._v(" "),r("td",[t._v("集成 Mustache 视图构建 web 应用")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-security")]),t._v(" "),r("td",[t._v("集成 Spring Security")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-oauth2-client")]),t._v(" "),r("td",[t._v("集成 Spring Security’s OAuth2/OpenID 连接客户端功能")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-oauth2-resource-server")]),t._v(" "),r("td",[t._v("集成 Spring Security’s OAuth2 资源服务器功能")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-quartz")]),t._v(" "),r("td",[t._v("集成 Quartz 任务调度")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-rsocket")]),t._v(" "),r("td",[t._v("构建 RSocket 客户端和服务端")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-test")]),t._v(" "),r("td",[t._v("集成 JUnit Jupiter, Hamcrest 和 Mockito 测试 Spring Boot 应用和类库")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-validation")]),t._v(" "),r("td",[t._v("集成 Java Bean Validation 结合 Hibernate Validator")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-web")]),t._v(" "),r("td",[t._v("集成 Spring MVC 构建 RESTful web 应用，使用  Tomcat 作为默认内嵌容器")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-web-services")]),t._v(" "),r("td",[t._v("集成 Spring Web Services")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-webflux")]),t._v(" "),r("td",[t._v("集成 Spring Reactive Web 构建 WebFlux 应用")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-websocket")]),t._v(" "),r("td",[t._v("集成 Spring WebSocket 构建 WebSocket 应用")])])])]),t._v(" "),r("ul",[r("li",[t._v("数据源 "),r("a",{attrs:{href:"https://github.com/baomidou/dynamic-datasource-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/baomidou/dynamic-datasource-spring-boot-starter"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("production starters")])]),t._v(" "),r("blockquote",[r("p",[t._v("生产级 Starters 能被用于线上/生产功能，这个意味着和任何技术、任何业务没关系，也不是只有生产才能使用，只是在生产环境使用更能体现它的意义。")])]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[r("strong",[t._v("Starter 名称")])]),t._v(" "),r("th",[r("strong",[t._v("Starter 描述")])])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("spring-boot-starter-actuator")]),t._v(" "),r("td",[t._v("集成 Spring Boot Actuator，提供生产功能以帮助监控和管理应用程序")])])])]),t._v(" "),r("p",[r("strong",[t._v("technical starters")])]),t._v(" "),r("blockquote",[r("p",[t._v("技术类 Starters，用于帮助你排除或者替换指定的框架或技术")])]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[r("strong",[t._v("Starter 名称")])]),t._v(" "),r("th",[r("strong",[t._v("Starter 描述")])])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("spring-boot-starter-jetty")]),t._v(" "),r("td",[t._v("集成 Jetty 作为内嵌的 servlet 容器，可用于替代 spring-boot-starter-tomcat")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-log4j2")]),t._v(" "),r("td",[t._v("集成 Log4j2 日志框架，可用于替代 spring-boot-starter-logging")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-logging")]),t._v(" "),r("td",[t._v("集成 Logback 日志框架，这个也是默认的日志 Starter")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-reactor-netty")]),t._v(" "),r("td",[t._v("集成 Netty 作为内嵌的响应式 HTTP 服务器")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-tomcat")]),t._v(" "),r("td",[t._v("集成 Tomcat 作为内嵌的 servlet 容器，这也是默认的 servlet 容器 starter 被集成 spring-boot-starter-web 里面")])]),t._v(" "),r("tr",[r("td",[t._v("spring-boot-starter-undertow")]),t._v(" "),r("td",[t._v("集成 Undertow 作为内嵌的 servlet 容器，可用于替代 spring-boot-starter-tomcat")])])])]),t._v(" "),r("h2",{attrs:{id:"spring-cloud"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud"}},[t._v("#")]),t._v(" Spring Cloud")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/spring-cloud",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/spring-cloud"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/spring-cloud-samples",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/spring-cloud-samples"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/macrozheng/springcloud-learning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/macrozheng/springcloud-learning"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/dyc87112/SpringCloud-Learning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/dyc87112/SpringCloud-Learning"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/gf-huanchupk/SpringCloudLearning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/gf-huanchupk/SpringCloudLearning"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/2227324689/Spring-Cloud-Alibaba-",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/2227324689/Spring-Cloud-Alibaba-"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/SpringCloud",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/SpringCloud"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/venusteam",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/venusteam"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/forezp/SpringCloudLearning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/forezp/SpringCloudLearning"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/sqshq/piggymetrics",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/sqshq/piggymetrics"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/huaweicloud",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/huaweicloud"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/sofastack",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/sofastack"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/zlt2000/microservices-platform",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/zlt2000/microservices-platform"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/chillzhuang/blade-tool",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/chillzhuang/blade-tool"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://gitee.com/smallc",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitee.com/smallc"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/littlehorse-enterprises/littlehorse",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/littlehorse-enterprises/littlehorse"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[t._v("微服务就是单个应用程序拆分成许多个小型服务的一种开发方法")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/72721025",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringCloud组件和概念介绍"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://muggle.javaboy.org/2019/04/26/springcloud-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("springcloud核心组件介绍"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/31dfb595170c",target:"_blank",rel:"noopener noreferrer"}},[t._v("一文读懂SpringCloud与Eureka，Feign，Ribbon，Hystrix，Zuul核心组件间的关系"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d56204a5188252bd409b5cb",target:"_blank",rel:"noopener noreferrer"}},[t._v("springcloudの核心组件Eureka、Ribbon、Feign、Hystrix、Zuul"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://blog.didispace.com/spring-cloud-alibaba-version",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Alibaba与Spring Boot、Spring Cloud之间不得不说的版本关系"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.springcloud.cc",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.springcloud.cc"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://lidawn.github.io/2018/12/26/distribute-tracing",target:"_blank",rel:"noopener noreferrer"}},[t._v("聊聊分布式链路追踪"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://juejin.im/post/5de2553e5188256e885f4fa3",target:"_blank",rel:"noopener noreferrer"}},[t._v("冒着挂科的风险也要给你们看的 Spring Cloud 入门总结"),r("OutboundLink")],1)])]),t._v(" "),r("li",[r("p",[r("code",[t._v("bootstrap.yml")]),t._v("（.properties）用来程序引导时执行，应用于更加早期配置信息读取，如可以使用来配置application.yml中使用到参数等")])])]),t._v(" "),r("blockquote",[r("p",[r("code",[t._v("bootstrap.yml")]),t._v("是被一个父级的"),r("code",[t._v("Spring ApplicationContext")]),t._v("加载的。这个父级的"),r("code",[t._v("Spring ApplicationContext")]),t._v("是先加载的，\n在加载"),r("code",[t._v("application.yml")]),t._v("的"),r("code",[t._v("ApplicationContext")]),t._v("之前。")])]),t._v(" "),r("ul",[r("li",[r("code",[t._v("application.yml")]),t._v("（.properties) 应用程序特有配置信息，可以用来配置后续各个模块中需使用的公共参数等")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/hashicorp/consul",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/hashicorp/consul"),r("OutboundLink")],1),t._v(" "),r("ul",[r("li",[t._v("Consul免费注册中心 "),r("a",{attrs:{href:"https://portal.cloud.hashicorp.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://portal.cloud.hashicorp.com"),r("OutboundLink")],1)])])])]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("组件")]),t._v(" "),r("th",[t._v("作用")]),t._v(" "),r("th",[t._v("替代项目")]),t._v(" "),r("th",[t._v("说明")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("Alibaba Cloud SchedulerX")]),t._v(" "),r("td",[t._v("分布式任务调度")]),t._v(" "),r("td",[t._v("elastic-job、xxl-job")]),t._v(" "),r("td",[t._v("阿里中间件团队开发的一款分布式任务调度产品，提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务（商业组件）。")])]),t._v(" "),r("tr",[r("td",[t._v("Alibaba RocketMQ")]),t._v(" "),r("td"),t._v(" "),r("td"),t._v(" "),r("td",[t._v("一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。")])]),t._v(" "),r("tr",[r("td",[t._v("Alibaba Seata")]),t._v(" "),r("td"),t._v(" "),r("td"),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("ElasticSearch+LogStash+Kibana")]),t._v(" "),r("td",[t._v("分布式日志收集")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("logstash（收集）、elasticsearch（存储+搜索）、kibana（展示），我们将这三个组合起来的技术称之为ELK")])]),t._v(" "),r("tr",[r("td",[t._v("Feign")]),t._v(" "),r("td",[t._v("声明式HTTP客户端")]),t._v(" "),r("td",[t._v("Retrofit")]),t._v(" "),r("td",[t._v("基于动态代理机制，根据注解和选择的机器，拼接请求URL地址，发起请求")])]),t._v(" "),r("tr",[r("td",[t._v("Netflix Archaius")]),t._v(" "),r("td",[t._v("配置管理")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("提供动态类型化属性、线程安全配置操作、轮询框架、回调机制等功能。可以实现动态获取配置")])]),t._v(" "),r("tr",[r("td",[t._v("Netflix Eureka")]),t._v(" "),r("td",[t._v("服务发现")]),t._v(" "),r("td",[t._v("Consul、Zookeeper、Alibaba Nacos")]),t._v(" "),r("td",[t._v("各个服务启动时，Eureka Client都会将服务注册到Eureka Server，并且Eureka Client还可以反过来从Eureka Server拉取注册表，从而知道其他服务在哪里")])]),t._v(" "),r("tr",[r("td",[t._v("Netflix Hystrix")]),t._v(" "),r("td",[t._v("断路器")]),t._v(" "),r("td",[t._v("Resilience4j、Alibaba Sentinel")]),t._v(" "),r("td",[t._v("提供线程池，不同的服务走不同的线程池，实现了不同服务调用的隔离，避免了服务雪崩的问题")])]),t._v(" "),r("tr",[r("td",[t._v("Netflix Zuul")]),t._v(" "),r("td",[t._v("API网关")]),t._v(" "),r("td",[t._v("Spring Cloud Gateway")]),t._v(" "),r("td",[t._v("如果前端、移动端要调用后端系统，统一从Zuul网关进入，由Zuul网关转发请求给对应的服务")])]),t._v(" "),r("tr",[r("td",[t._v("Ribbon")]),t._v(" "),r("td",[t._v("负载均衡器")]),t._v(" "),r("td",[t._v("Spring Cloud Loadbalancer")]),t._v(" "),r("td",[t._v("服务间发起请求的时候，基于Ribbon做负载均衡，从一个服务的多台机器中选择一台")])]),t._v(" "),r("tr",[r("td",[t._v("Spring Cloud Bus")]),t._v(" "),r("td",[t._v("消息总线")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("将分布式的节点用轻量的消息代理连接起来。它可以用于广播配置文件的更改或者服务之间的通讯，也可以用于监控")])]),t._v(" "),r("tr",[r("td",[t._v("Spring Cloud Cluster")]),t._v(" "),r("td"),t._v(" "),r("td"),t._v(" "),r("td",[t._v("取代Spring Integration。提供在分布式系统中的集群所需要的基础功能支持，如：选举、集群的状态一致性、全局锁、tokens等常见状态模式的抽象和实现。")])]),t._v(" "),r("tr",[r("td",[t._v("Spring Cloud Config")]),t._v(" "),r("td",[t._v("配置管理")]),t._v(" "),r("td",[t._v("Ctrip Apollo、Spring Cloud Consul、Zookeeper、Alibaba Nacos")]),t._v(" "),r("td",[t._v("解决分布式系统的配置管理方案。Server提供配置文件的存储、以接口的形式将配置文件的内容提供出去，Client通过接口获取数据、并依据此数据初始化自己的应用。")])]),t._v(" "),r("tr",[r("td",[t._v("Spring Cloud Connectors")]),t._v(" "),r("td"),t._v(" "),r("td"),t._v(" "),r("td",[t._v("简化了连接到服务的过程和从云平台获取操作的过程，有很强的扩展性，可以利用Spring Cloud Connectors来构建你自己的云平台。")])]),t._v(" "),r("tr",[r("td",[t._v("Spring Cloud for Cloud Foundry")]),t._v(" "),r("td",[t._v("开源PaaS云平台")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("支持多种框架、语言、运行时环境、云平台及应用服务，使开发人员能够在几秒钟内进行应用程序的部署和扩展")])]),t._v(" "),r("tr",[r("td",[t._v("Spring Cloud Security")]),t._v(" "),r("td",[t._v("安全框架")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("添加安全控制")])]),t._v(" "),r("tr",[r("td",[t._v("Spring Cloud Sleuth")]),t._v(" "),r("td",[t._v("分布式链路跟踪")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("日志收集工具包，封装了Dapper和log-based追踪以及Zipkin和HTrace操作，为SpringCloud应用实现了一种分布式追踪解决方案。")])]),t._v(" "),r("tr",[r("td",[t._v("Spring Cloud Starters")]),t._v(" "),r("td"),t._v(" "),r("td"),t._v(" "),r("td",[t._v("Spring Boot式的启动项目，为Spring Cloud提供开箱即用的依赖管理。")])]),t._v(" "),r("tr",[r("td",[t._v("Spring Cloud Stream")]),t._v(" "),r("td",[t._v("数据流")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("创建消息驱动微服务应用的框架，使用spring integration提供与消息代理之间的连接。数据流操作开发包，任务之间通过事件触发")])]),t._v(" "),r("tr",[r("td",[t._v("Spring Cloud Task")]),t._v(" "),r("td",[t._v("批量任务")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("主要解决短命微服务的任务管理，任务调度的工作，比如说某些定时任务晚上就跑一次，或者某项数据分析临时就跑几次。")])])])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/apolloconfig",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/apolloconfig"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/ctripcorp/apollo",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/ctripcorp/apollo"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("API网关 "),r("a",{attrs:{href:"https://github.com/apache/incubator-shenyu",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/apache/incubator-shenyu"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/siaorg/sia-gateway",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/siaorg/sia-gateway"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/mitre/HTTP-Proxy-Servlet",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/mitre/HTTP-Proxy-Servlet"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/mkopylec/charon-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/mkopylec/charon-spring-boot-starter"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/stargate/stargate",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/stargate/stargate"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("日志收集 "),r("a",{attrs:{href:"https://github.com/apache/flume",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/apache/flume"),r("OutboundLink")],1),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://flume.liyifeng.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://flume.liyifeng.org"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/fayechenlong/plumelog",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/fayechenlong/plumelog"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://blog.csdn.net/piantoutongyang/article/details/88811840",target:"_blank",rel:"noopener noreferrer"}},[t._v("分布式日志框架ELK入门"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d84a83af265da03ee6a92af",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringCloud实践分享 日志收集Kafka ELK"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/noaman_wgs/article/details/103328793",target:"_blank",rel:"noopener noreferrer"}},[t._v("【Sentinel（一）】Sentinel介绍与使用"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"spring-security"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-security"}},[t._v("#")]),t._v(" Spring Security")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://docs.spring.io/spring-security/site/docs/4.2.7.RELEASE/reference/html/core-web-filters.html#form-login-flow-handling",target:"_blank",rel:"noopener noreferrer"}},[t._v("认证成功与失败的处理器"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://docs.spring.io/spring-security/site/docs/5.3.1.RELEASE/reference/html5/#servlet-security-filters",target:"_blank",rel:"noopener noreferrer"}},[t._v("过滤器列表"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://docs.spring.io/spring-security/site/docs/5.3.1.RELEASE/reference/html5/#filter-stack",target:"_blank",rel:"noopener noreferrer"}},[t._v("标准过滤器别名和顺序"),r("OutboundLink")],1)])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/topics/spring-security",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/topics/spring-security"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/Snailclimb/spring-security-jwt-guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/Snailclimb/spring-security-jwt-guide"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("拦截器和过滤器区别")])]),t._v(" "),r("ul",[r("li",[t._v("拦截器（Interceptor）：依赖于web框架，在实现上,基于Java的反射机制，拦截的是action，说白了拦截的是访问路径")]),t._v(" "),r("li",[t._v("过滤器（Filter）：依赖于servlet容器。在实现上，基于函数回调，可以几乎过滤掉所有的东西")])]),t._v(" "),r("blockquote",[r("p",[t._v("拦截器与过滤器的执行顺序：过滤前 -> 拦截前 -> action执行 -> 拦截后 -> 过滤后")])]),t._v(" "),r("ul",[r("li",[t._v("过滤器可以修改request，拦截器只能对action请求起作用")]),t._v(" "),r("li",[t._v("过滤器需要在servlet容器中实现，拦截器可以适用于javaEE，javaSE等各种环境")]),t._v(" "),r("li",[t._v("拦截器可以调用IOC容器中的各种依赖，而过滤器不能")]),t._v(" "),r("li",[t._v("过滤器只能在请求的前后使用，而拦截器可以详细到每个方法")])]),t._v(" "),r("h2",{attrs:{id:"spring-taskscheduler"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-taskscheduler"}},[t._v("#")]),t._v(" Spring TaskScheduler")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("Spring Scheduling Tasks")]),t._v(" Spring 3.0 版本之后自带的一个定时任务。其所属Spring的资源包为："),r("code",[t._v("spring-context-support")])])]),t._v(" "),r("blockquote",[r("p",[t._v("可以将它看成一个轻量级的"),r("code",[t._v("Quartz")]),t._v("，而且使用起来比Quartz简单许多。默认单线程串行执行任务，多任务时若某个任务执行时间过长，\n后续任务会无法及时执行；抛出异常后，同一个任务后续不再触发")])]),t._v(" "),r("ul",[r("li",[r("code",[t._v("Spring Quartz")]),t._v(" Spring集成整合"),r("code",[t._v("Quartz")]),t._v("，主要Bean: "),r("code",[t._v("JobDetail")]),t._v("、"),r("code",[t._v("Trigger")]),t._v("以及"),r("code",[t._v("SchedulerFactory")]),t._v("，"),r("code",[t._v("JobDataMap")]),t._v("数据传递")])]),t._v(" "),r("blockquote",[r("p",[t._v("需要继承"),r("code",[t._v("org.springframework.scheduling.quartz.QuartzJobBean")]),t._v("或者实现"),r("code",[t._v("org.quartz.Job")]),t._v("。采用多线程，下一个调度时间到达时，\n会另起一个线程执行调度，不会发生阻塞问题，但调度过多时可能导致数据处理异常，抛出异常后，同一个任务后续仍然会触发")])]),t._v(" "),r("ul",[r("li",[r("code",[t._v("TBSchedule")])])]),t._v(" "),r("h2",{attrs:{id:"spring-mvc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc"}},[t._v("#")]),t._v(" Spring MVC")]),t._v(" "),r("p",[r("strong",[t._v("redirect重定向")])]),t._v(" "),r("blockquote",[r("p",[t._v("redirect重定向可以跳转到任意服务器地址，传递时要对中文编码进行处理")])]),t._v(" "),r("div",{staticClass:"language-java extra-class"},[r("pre",{pre:!0,attrs:{class:"language-java"}},[r("code",[r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestMethod")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POST")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestMethod")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModelAndView")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("testredirect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" response"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    response"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendRedirect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/index"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数可以直接拼接在url上")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/testredirect"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("testredirect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Model")]),t._v(" model"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedirectAttributes")]),t._v(" attr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tattr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAttribute")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"51gjie"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳转地址带参数")]),t._v("\n    attr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFlashAttribute")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"u2"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"51gjie"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳转地址不带参数，只存在body中")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redirect:/user/users"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数可以直接拼接在url上")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/toredirect"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("method "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestMethod")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POST")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestMethod")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v("  "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModelAndView")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("toredirect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userName"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModelAndView")]),t._v("  model "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModelAndView")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/main/index"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数可以直接拼接在url上")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把userName参数带入到controller的RedirectAttributes中")]),t._v("\n    model"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("addObject")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"userName"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userName"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" model"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h2",{attrs:{id:"spring-aop原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-aop原理"}},[t._v("#")]),t._v(" Spring AOP原理")]),t._v(" "),r("ol",[r("li",[t._v("AOP: 其实现的关键就在于 AOP 框架自动创建的 AOP 代理，AOP 代理则可分为静态代理和动态代理两大类\n"),r("ol",[r("li",[t._v("其中静态代理是指使用 AOP 框架提供的命令进行编译，从而在编译阶段就可生成 AOP 代理类，因此也称为编译时增强；静态代理分为：编译时织入（特殊编译器实现）、类加载时织入（特殊的类加载器实现）。静态代理的代表为AspectJ；")]),t._v(" "),r("li",[t._v("而动态代理则在运行时借助于 JDK 动态代理、CGLIB 等在内存中“临时”生成 AOP 动态代理类，因此也被称为运行时增强。动态代理分为：JDK动态代理（基于接口来实现）、CGLib（基于类实现）。而动态代理则以Spring AOP为代表。")])])]),t._v(" "),r("li",[t._v("Spring AOP：只支持动态代理，通过两种方式进行实现：\n"),r("ol",[r("li",[t._v("JDK动态代理，通过反射实现，只支持对实现接口的类进行代理")]),t._v(" "),r("li",[t._v("CGLib动态字节码注入方式实现代理。")])])])]),t._v(" "),r("h2",{attrs:{id:"jdk动态代理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jdk动态代理"}},[t._v("#")]),t._v(" JDK动态代理:")]),t._v(" "),r("p",[t._v("JDK中的动态代理是通过反射类Proxy反射机制生成一个实现代理接口的匿名类，在调用具体方法前调用InvocationHandler回调接口实现的，但是JDK中所有要进行动态代理的类必须要实现一个接口，也就是说只能对该类所实现接口中定义的方法进行代理，这在实际编程中有一定的局限性，而且使用反射的效率也不高")]),t._v(" "),r("h2",{attrs:{id:"cglib"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cglib"}},[t._v("#")]),t._v(" Cglib")]),t._v(" "),r("p",[t._v("cglib动态代理是利用asm开源包，对代理对象类的class文件加载进来，通过修改其字节码生成子类来处理。")]),t._v(" "),r("p",[t._v("动态生成一个要代理的子类，子类重写要代理的类的所有不是final的方法。在子类中采用方法拦截技术拦截所有的父类方法的调用，顺势织入横切逻辑")]),t._v(" "),r("p",[t._v("ASM是一个java字节码操纵框架，它能被用来动态生成类或者增强既有类的功能。ASM 可以直接产生二进制 class 文件，也可以在类被加载入 Java 虚拟机之前动态改变类行为")]),t._v(" "),r("h2",{attrs:{id:"lombok原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lombok原理"}},[t._v("#")]),t._v(" Lombok原理")]),t._v(" "),r("ol",[r("li",[t._v("定义编译期的注解 "),r("code",[t._v("@Retention(RetentionPolicy.SOURCE)")])]),t._v(" "),r("li",[t._v("利用"),r("code",[t._v("JSR269 api(Pluggable Annotation Processing API )")]),t._v("编译期的注解处理器 （AbstractProcessor在编译时指定一个processor类来对编译阶段的注解进行干预，Lombok的注解处理器：AnnotationProcessor）")]),t._v(" "),r("li",[t._v("利用"),r("code",[t._v("tools.jar")]),t._v("的"),r("code",[t._v("javac")]),t._v(" api处理"),r("code",[t._v("AST")]),t._v("(抽象语法树)，将功能注册进jar包")])])])},[],!1,null,null,null);r.default=e.exports}}]);