(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{408:function(t,a,e){"use strict";e.r(a);var n=e(0),s=Object(n.a)({},function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"java笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java笔记"}},[t._v("#")]),t._v(" Java笔记")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#flag"}},[t._v("Flag")])]),a("li",[a("a",{attrs:{href:"#代码块文档注释"}},[t._v("代码块文档注释")])]),a("li",[a("a",{attrs:{href:"#多行字符串"}},[t._v("多行字符串")])]),a("li",[a("a",{attrs:{href:"#函数重载"}},[t._v("函数重载")])]),a("li",[a("a",{attrs:{href:"#关键保留字"}},[t._v("关键保留字")])]),a("li",[a("a",{attrs:{href:"#访问控制修饰符"}},[t._v("访问控制修饰符")])]),a("li",[a("a",{attrs:{href:"#classpath意义"}},[t._v("classpath意义")])]),a("li",[a("a",{attrs:{href:"#日期时间"}},[t._v("日期时间")])]),a("li",[a("a",{attrs:{href:"#roundingmode"}},[t._v("RoundingMode")]),a("ul",[a("li",[a("a",{attrs:{href:"#几个参数详解"}},[t._v("几个参数详解")])])])]),a("li",[a("a",{attrs:{href:"#java锁"}},[t._v("Java锁")]),a("ul",[a("li",[a("a",{attrs:{href:"#synchronized"}},[t._v("synchronized")])])])]),a("li",[a("a",{attrs:{href:"#java异常"}},[t._v("Java异常")])]),a("li",[a("a",{attrs:{href:"#http"}},[t._v("HTTP")])]),a("li",[a("a",{attrs:{href:"#泛型generics"}},[t._v("泛型generics")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"flag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flag"}},[t._v("#")]),t._v(" Flag")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.yiibai.com/html/java",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.yiibai.com/html/java/"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/26762707/answer/890181997",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是 hash"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/101c263cd93e",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是散列表(Hash Table)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://yuanrengu.com/2020/ba184259.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMap在Jdk1.7和1.8中的实现"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/chengxiao/p/6059914.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMap的底层结构和实现原理"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/chengxiao/p/6842045.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConcurrentHashMap实现原理及源码分析"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zcfy.cc/article/data-structures-for-beginners-arrays-hashmaps-and-lists",target:"_blank",rel:"noopener noreferrer"}},[t._v("初学者应该了解的数据结构：Array、HashMap 与 List"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/67949045",target:"_blank",rel:"noopener noreferrer"}},[t._v("强一致性、弱一致性、最终一致性、读写一致性、单调读、因果一致性 的区别与联系"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/07/cap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CAP 定理的含义"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/c-x-a/p/9478643.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("二进制运算"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/d75b0a461380",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是位运算"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/shuaigexiaobo/article/details/88535745",target:"_blank",rel:"noopener noreferrer"}},[t._v("java运算符"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/itfly8/p/6062757.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据库扩展性设计：使用二进制解决一条记录关联多个状态的问题"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/24980208",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java8新特性有哪些"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/44199956",target:"_blank",rel:"noopener noreferrer"}},[t._v("fastjson这么快老外为啥还是热衷 jackson?"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/dogiant/article/details/54907506",target:"_blank",rel:"noopener noreferrer"}},[t._v("JAX-WS与JAX-RS区别是什么？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/zzg19950824/article/details/80300501",target:"_blank",rel:"noopener noreferrer"}},[t._v("接口框架 : WebService与Jersey RESTful 要点梳理"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/d670c6485ff9",target:"_blank",rel:"noopener noreferrer"}},[t._v("JAVA多线程使用场景和注意事项"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("Java持久性API(Java Persistence API) "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Java_Persistence_API",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://en.wikipedia.org/wiki/Java_Persistence_API"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/linlinismine/p/9295701.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("fork/join 全面剖析"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/mA8ZqShP0p_t1toTzqpW3Q",target:"_blank",rel:"noopener noreferrer"}},[t._v("收集业务日志，提炼有效数据"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/xiejava/p/12452434.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("通过filebeat、logstash、rsyslog采集nginx日志的几种方式"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/haoxinyue/p/5208136.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("分布式系统唯一ID生成方案汇总"),a("OutboundLink")],1),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/throwable/p/13467763.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解Snowflake算法的实现原理"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://crossoverjie.top/2019/07/15/wheel/cicada7-exception-handle",target:"_blank",rel:"noopener noreferrer"}},[t._v("设计一个全局异常处理器"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/zhangboyu/p/7580262.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解、学习与使用 JAVA 中的 OPTIONAL"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_39615545/article/details/108116820",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解零拷贝（Zero-copy）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.dazhuanlan.com/2019/10/16/5da5f67797300",target:"_blank",rel:"noopener noreferrer"}},[t._v("可代替 ASM，使用 AnnotationProcessor 做代码插桩"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_41022073/article/details/105342238",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态代理和Lombok学习"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/woetu/p/13658575.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring AOP和Lombok是什么原理？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1252599548343744/1331429187256353",target:"_blank",rel:"noopener noreferrer"}},[t._v("java.lang.Record替代Lombok"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/vandusty/p/12757992.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("这四种对象属性拷贝方式，你都知道吗？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/86282401",target:"_blank",rel:"noopener noreferrer"}},[t._v("领域模型转换那些事儿"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/ElEGenT/p/13158108.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java正则多次匹配和多次组匹配"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zhihu.com/people/rednaxelafx",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.zhihu.com/people/rednaxelafx"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000009162306",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java 正则表达式详解"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/28001771",target:"_blank",rel:"noopener noreferrer"}},[t._v("java的native方法"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[t._v("JMH（Java Microbenchmark Harness）是专门用于代码微基准测试的工具套件")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/gybshen/article/details/82717578",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是JNDI？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/Oliver1993/p/13630786.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web项目中Junit测试如何添加JNDI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/h-thurow/Simple-JNDI",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/h-thurow/Simple-JNDI"),a("OutboundLink")],1)])]),t._v(" "),a("blockquote",[a("p",[t._v("JNDI是Java Naming and Directory Interface（Java命名与目录接口）其实和Spring依赖注入差不多的效果，\n就是我们可以将我们需要的类注册进去，然后一般我们都是使用该类的实例对象，这时候因为刚才我们已经给每个类按照JNDI的规范进行了注入，\n这时候我们直接通过JNDI的使用规则取出来我们想要的数据（实例对象）即可。")])]),t._v(" "),a("ul",[a("li",[t._v("有状态就是有数据存储功能。有状态对象(Stateful Bean)，就是有实例变量的对象，可以保存数据，是非线程安全的。在不同方法调用间不保留任何状态。")]),t._v(" "),a("li",[t._v("无状态就是一次操作，不能保存数据。无状态对象(Stateless Bean)，就是没有实例变量的对象 .不能保存数据，是不变类，是线程安全的。")])]),t._v(" "),a("p",[a("strong",[t._v("Windows隐藏窗口后台运行jar包（推荐vbs可设置JVM参数）")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"/files/hidden_run_jar.bat"}},[t._v("hidden_run_jar.bat")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/files/hidden_run_jar.vbs"}},[t._v("hidden_run_jar.vbs")])])]),t._v(" "),a("h2",{attrs:{id:"代码块文档注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码块文档注释"}},[t._v("#")]),t._v(" 代码块文档注释")]),t._v(" "),a("blockquote",[a("p",[t._v("一定要用"),a("code",[t._v("<pre>{@code }</pre>")]),t._v("包裹代码块，或者进行HTML编码转义，否则将丢失格式")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("{@code ... }")]),t._v(" 用来包裹代码块，这样可以在JavaDoc中保留代码的格式，并且正确处理HTML标签和相关的特殊字符，如小于号"),a("code",[t._v("<")]),t._v("和大于号"),a("code",[t._v(">")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("<pre>")]),t._v(" 是预格式化文本的HTML标签，它告诉JavaDoc这里的文本应该按照预设格式显示，保留空白字符，如空格和换行符。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * <pre>\n * List<Map<String, Object>> n = new ArrayList<>();\n * Map<String, Object> map = new HashMap<>();\n * {@code\n * List<Map<String, Object>> n = new ArrayList<>();\n * Map<String, Object> map = new HashMap<>();\n * }\n * List&lt;Map&lt;String, Object&gt;&gt; n = new ArrayList&lt;&gt;();\n * Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n * </pre>\n *\n */")]),t._v("\n")])])]),a("h2",{attrs:{id:"多行字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行字符串"}},[t._v("#")]),t._v(" 多行字符串")]),t._v(" "),a("ul",[a("li",[t._v("Multiline String 多行字符串")]),t._v(" "),a("li",[t._v("Template String 模板字符串")]),t._v(" "),a("li",[t._v("Text Blocks 文本块")]),t._v(" "),a("li",[t._v("Raw String Literals 原始字符串字面量")])]),t._v(" "),a("blockquote",[a("p",[t._v("Java 13 Text Blocks 第一次预览版，Java 14 Text Blocks 第二次预览版，Java 15 Text Blocks 正式版")])]),t._v(" "),a("h2",{attrs:{id:"函数重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数重载"}},[t._v("#")]),t._v(" 函数重载")]),t._v(" "),a("ul",[a("li",[t._v("方法名相同,方法参数的个数和类型不同,通过个数和类型的不同来区分不同的函数;")]),t._v(" "),a("li",[t._v("方法的重载跟返回值类型和修饰符无关,Java的重载是发生在本类中的,重载的条件是在本类中有多个方法名相同;")]),t._v(" "),a("li",[t._v("参数列表不同(参数个数不同、参数类型不同)跟返回值无关;")])]),t._v(" "),a("h2",{attrs:{id:"关键保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键保留字"}},[t._v("#")]),t._v(" 关键保留字")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html"),a("OutboundLink")],1)])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("一种访问控制方式：私用模式")])]),t._v(" "),a("tr",[a("td",[t._v("protected")]),t._v(" "),a("td",[t._v("一种访问控制方式：保护模式")])]),t._v(" "),a("tr",[a("td",[t._v("public")]),t._v(" "),a("td",[t._v("一种访问控制方式：共用模式")])]),t._v(" "),a("tr",[a("td",[t._v("abstract")]),t._v(" "),a("td",[t._v("表明类或者成员方法具有抽象属性")])]),t._v(" "),a("tr",[a("td",[t._v("class")]),t._v(" "),a("td",[t._v("类")])]),t._v(" "),a("tr",[a("td",[t._v("extends")]),t._v(" "),a("td",[t._v("表明一个类型是另一个类型的子类型，这里常见的类型有类和接口")])]),t._v(" "),a("tr",[a("td",[t._v("final")]),t._v(" "),a("td",[t._v("用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变")])]),t._v(" "),a("tr",[a("td",[t._v("implements")]),t._v(" "),a("td",[t._v("表明一个类实现了给定的接口")])]),t._v(" "),a("tr",[a("td",[t._v("interface")]),t._v(" "),a("td",[t._v("接口")])]),t._v(" "),a("tr",[a("td",[t._v("native")]),t._v(" "),a("td",[t._v("用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的")])]),t._v(" "),a("tr",[a("td",[t._v("new")]),t._v(" "),a("td",[t._v("用来创建新实例对象")])]),t._v(" "),a("tr",[a("td",[t._v("static")]),t._v(" "),a("td",[t._v("表明具有静态属性")])]),t._v(" "),a("tr",[a("td",[t._v("strictfp")]),t._v(" "),a("td",[t._v("用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范")])]),t._v(" "),a("tr",[a("td",[t._v("synchronized")]),t._v(" "),a("td",[t._v("表明一段代码需要同步执行")])]),t._v(" "),a("tr",[a("td",[t._v("transient")]),t._v(" "),a("td",[t._v("声明不用序列化的成员域")])]),t._v(" "),a("tr",[a("td",[t._v("volatile")]),t._v(" "),a("td",[t._v("表明两个或者多个变量必须同步地发生变化")])]),t._v(" "),a("tr",[a("td",[t._v("break")]),t._v(" "),a("td",[t._v("提前跳出一个块")])]),t._v(" "),a("tr",[a("td",[t._v("continue")]),t._v(" "),a("td",[t._v("回到一个块的开始处")])]),t._v(" "),a("tr",[a("td",[t._v("return")]),t._v(" "),a("td",[t._v("从成员方法中返回数据")])]),t._v(" "),a("tr",[a("td",[t._v("do")]),t._v(" "),a("td",[t._v("用在do-while循环结构中")])]),t._v(" "),a("tr",[a("td",[t._v("while")]),t._v(" "),a("td",[t._v("用在循环结构中")])]),t._v(" "),a("tr",[a("td",[t._v("if")]),t._v(" "),a("td",[t._v("条件语句的引导词")])]),t._v(" "),a("tr",[a("td",[t._v("else")]),t._v(" "),a("td",[t._v("用在条件语句中，表明当条件不成立时的分支")])]),t._v(" "),a("tr",[a("td",[t._v("for")]),t._v(" "),a("td",[t._v("一种循环结构的引导词")])]),t._v(" "),a("tr",[a("td",[t._v("instanceof")]),t._v(" "),a("td",[t._v("用来测试一个对象是否是指定类型的实例对象")])]),t._v(" "),a("tr",[a("td",[t._v("switch")]),t._v(" "),a("td",[t._v("分支语句结构的引导词")])]),t._v(" "),a("tr",[a("td",[t._v("case")]),t._v(" "),a("td",[t._v("用在switch语句之中，表示其中的一个分支")])]),t._v(" "),a("tr",[a("td",[t._v("default")]),t._v(" "),a("td",[t._v("默认，例如，用在switch语句中，表明一个默认的分支")])]),t._v(" "),a("tr",[a("td",[t._v("try")]),t._v(" "),a("td",[t._v("尝试一个可能抛出异常的程序块")])]),t._v(" "),a("tr",[a("td",[t._v("catch")]),t._v(" "),a("td",[t._v("用在异常处理中，用来捕捉异常")])]),t._v(" "),a("tr",[a("td",[t._v("throw")]),t._v(" "),a("td",[t._v("抛出一个异常")])]),t._v(" "),a("tr",[a("td",[t._v("throws")]),t._v(" "),a("td",[t._v("声明在当前定义的成员方法中所有需要抛出的异常")])]),t._v(" "),a("tr",[a("td",[t._v("import")]),t._v(" "),a("td",[t._v("表明要访问指定的类或包")])]),t._v(" "),a("tr",[a("td",[t._v("package")]),t._v(" "),a("td",[t._v("包")])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("基本数据类型之一，布尔类型")])]),t._v(" "),a("tr",[a("td",[t._v("byte")]),t._v(" "),a("td",[t._v("基本数据类型之一，字节类型")])]),t._v(" "),a("tr",[a("td",[t._v("char")]),t._v(" "),a("td",[t._v("基本数据类型之一，字符类型")])]),t._v(" "),a("tr",[a("td",[t._v("double")]),t._v(" "),a("td",[t._v("基本数据类型之一，双精度浮点数类型")])]),t._v(" "),a("tr",[a("td",[t._v("float")]),t._v(" "),a("td",[t._v("基本数据类型之一，单精度浮点数类型")])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("基本数据类型之一，整数类型")])]),t._v(" "),a("tr",[a("td",[t._v("long")]),t._v(" "),a("td",[t._v("基本数据类型之一，长整数类型")])]),t._v(" "),a("tr",[a("td",[t._v("short")]),t._v(" "),a("td",[t._v("基本数据类型之一,短整数类型")])]),t._v(" "),a("tr",[a("td",[t._v("super")]),t._v(" "),a("td",[t._v("表明当前对象的父类型的引用或者父类型的构造方法")])]),t._v(" "),a("tr",[a("td",[t._v("this")]),t._v(" "),a("td",[t._v("指向当前实例对象的引用")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[t._v("声明当前成员方法没有返回值")])]),t._v(" "),a("tr",[a("td",[t._v("goto")]),t._v(" "),a("td",[t._v("保留关键字，没有具体含义")])]),t._v(" "),a("tr",[a("td",[t._v("const")]),t._v(" "),a("td",[t._v("保留关键字，没有具体含义")])])])]),t._v(" "),a("h2",{attrs:{id:"访问控制修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问控制修饰符"}},[t._v("#")]),t._v(" 访问控制修饰符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("修饰符")]),t._v(" "),a("th",[t._v("当前类")]),t._v(" "),a("th",[t._v("同一包内")]),t._v(" "),a("th",[t._v("子孙类(同一包)")]),t._v(" "),a("th",[t._v("子孙类(不同包)")]),t._v(" "),a("th",[t._v("其他包")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("public(interface default)")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")])]),t._v(" "),a("tr",[a("td",[t._v("protected")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y/N")]),t._v(" "),a("td",[t._v("N")])]),t._v(" "),a("tr",[a("td",[t._v("default")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")])]),t._v(" "),a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")])])])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("protected")]),t._v("需要从以下两个点来分析说明")])]),t._v(" "),a("blockquote",[a("p",[t._v("子类与基类在同一包中：被声明为"),a("code",[t._v("protected")]),t._v("的变量、方法和构造器能被同一个包中的任何其他类访问；")])]),t._v(" "),a("blockquote",[a("p",[t._v("子类与基类不在同一包中：那么在子类中，子类实例可以访问其从基类继承而来的"),a("code",[t._v("protected")]),t._v("方法，而不能访问基类实例的"),a("code",[t._v("protected")]),t._v("方法。")])]),t._v(" "),a("h2",{attrs:{id:"classpath意义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#classpath意义"}},[t._v("#")]),t._v(" classpath意义")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000015802324",target:"_blank",rel:"noopener noreferrer"}},[t._v("java项目中的classpath到底是什么"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_30038111/article/details/82116559",target:"_blank",rel:"noopener noreferrer"}},[t._v("spring classpath:和classpath*:区别和实际应用"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_33393542/article/details/80322141",target:"_blank",rel:"noopener noreferrer"}},[t._v("java项目中的classpath到底指向的哪里"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/pengmm1990/article/details/68951389",target:"_blank",rel:"noopener noreferrer"}},[t._v("eclipse项目中.classpath文件详解"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("classpath")]),t._v("：只会到你的"),a("code",[t._v("class")]),t._v("路径中查找文件，和"),a("code",[t._v("classpath:/")]),t._v("是等价的，都是相对于类的根路径\n"),a("ul",[a("li",[a("code",[t._v("src")]),t._v("不是"),a("code",[t._v("classpath")]),t._v("，"),a("code",[t._v("WEB-INF/classes")]),t._v("和"),a("code",[t._v("lib")]),t._v("才是"),a("code",[t._v("classpath")]),t._v("，"),a("code",[t._v("WEB-INF/")]),t._v("是资源目录, 客户端不能直接访问")]),t._v(" "),a("li",[a("code",[t._v("WEB-INF/classes")]),t._v("目录存放"),a("code",[t._v("src")]),t._v("目录"),a("code",[t._v("java")]),t._v("文件编译之后的"),a("code",[t._v("class")]),t._v("文件、"),a("code",[t._v("xml")]),t._v("、"),a("code",[t._v("properties")]),t._v("等资源配置文件")]),t._v(" "),a("li",[a("code",[t._v("lib")]),t._v("和"),a("code",[t._v("classes")]),t._v("同属"),a("code",[t._v("classpath")]),t._v("，两者的访问优先级为: "),a("code",[t._v("lib")]),t._v(" > "),a("code",[t._v("classes")])])])]),t._v(" "),a("li",[a("code",[t._v("classpath*")]),t._v("：不仅包含"),a("code",[t._v("class")]),t._v("路径，还包括"),a("code",[t._v("jar")]),t._v("文件中（"),a("code",[t._v("class")]),t._v("路径）进行查找")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：用"),a("code",[t._v("classpath*")]),t._v("需要遍历所有的"),a("code",[t._v("classpath")]),t._v("，所以加载速度是很慢，尽量避免使用。\n"),a("code",[t._v("**")]),t._v("表示在任意目录下，也就是说在"),a("code",[t._v("WEB-INF/classes/")]),t._v("下任意层的目录")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("前缀")]),t._v(" "),a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("classpath:")]),t._v(" "),a("td",[t._v("classpath:com/myapp/config.xml")]),t._v(" "),a("td",[t._v("从classpath中加载。")])]),t._v(" "),a("tr",[a("td",[t._v("file:")]),t._v(" "),a("td",[t._v("file:/data/config.xml")]),t._v(" "),a("td",[t._v("作为 URL 从文件系统中加载。")])]),t._v(" "),a("tr",[a("td",[t._v("http:")]),t._v(" "),a("td",[t._v("http://myserver/logo.png")]),t._v(" "),a("td",[t._v("作为 URL 加载。")])]),t._v(" "),a("tr",[a("td",[t._v("(none)")]),t._v(" "),a("td",[t._v("/data/config.xml")]),t._v(" "),a("td",[t._v("根据 ApplicationContext 进行判断。")])])])]),t._v(" "),a("h2",{attrs:{id:"日期时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期时间"}},[t._v("#")]),t._v(" 日期时间")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://codertang.com/2018/12/24/jdk8-datetime",target:"_blank",rel:"noopener noreferrer"}},[t._v("jdk8时间日期"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[t._v("可变性 : 像日期和时间这样的类应该是不可变的,返回一个值,原来的对象不变")]),t._v(" "),a("li",[t._v("偏移性 : Date中的年份是从1900开始的,而月份是从0开始的")]),t._v(" "),a("li",[t._v("日期表示需要减"),a("code",[t._v("new Date(2020-1900,9-1,8)")]),t._v(" 这样才可以表示2020年9月8日")]),t._v(" "),a("li",[t._v("格式化: 格式化日期只对Date有用,Calendar则不行")]),t._v(" "),a("li",[t._v("线程不安全的,不能处理闰秒等")]),t._v(" "),a("li",[t._v("Java8吸收了"),a("code",[t._v("Joda-Time")]),t._v("（该项目作者参与了Java8的time包开发）精华，开启了新的API")])]),t._v(" "),a("p",[a("strong",[t._v("java.lang.System类")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于返回当前时间与1970年1月1日0:0:0之间以毫秒为单位的时间戳")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("native")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回正在运行的Java虚拟机的当前值,高分辨率时间源，以纳秒为单位")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("native")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("变量名")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("java.version")]),t._v(" "),a("td",[t._v("Java运行时环境版本")])]),t._v(" "),a("tr",[a("td",[t._v("java.vendor")]),t._v(" "),a("td",[t._v("Java运行时环境供应商")])]),t._v(" "),a("tr",[a("td",[t._v("java.vendor.url")]),t._v(" "),a("td",[t._v("Java供应商的 URL")])]),t._v(" "),a("tr",[a("td",[t._v("java.home")]),t._v(" "),a("td",[t._v("Java安装目录")])]),t._v(" "),a("tr",[a("td",[t._v("java.vm.specification.version")]),t._v(" "),a("td",[t._v("Java虚拟机规范版本")])]),t._v(" "),a("tr",[a("td",[t._v("java.vm.specification.vendor")]),t._v(" "),a("td",[t._v("Java虚拟机规范供应商")])]),t._v(" "),a("tr",[a("td",[t._v("java.vm.specification.name")]),t._v(" "),a("td",[t._v("Java虚拟机规范名称")])]),t._v(" "),a("tr",[a("td",[t._v("java.vm.version")]),t._v(" "),a("td",[t._v("Java虚拟机实现版本")])]),t._v(" "),a("tr",[a("td",[t._v("java.vm.vendor")]),t._v(" "),a("td",[t._v("Java虚拟机实现供应商")])]),t._v(" "),a("tr",[a("td",[t._v("java.vm.name")]),t._v(" "),a("td",[t._v("Java虚拟机实现名称")])]),t._v(" "),a("tr",[a("td",[t._v("java.specification.version")]),t._v(" "),a("td",[t._v("Java运行时环境规范版本")])]),t._v(" "),a("tr",[a("td",[t._v("java.specification.vendor")]),t._v(" "),a("td",[t._v("Java运行时环境规范供应商")])]),t._v(" "),a("tr",[a("td",[t._v("java.specification.name")]),t._v(" "),a("td",[t._v("Java运行时环境规范名称")])]),t._v(" "),a("tr",[a("td",[t._v("java.class.version")]),t._v(" "),a("td",[t._v("Java类格式版本号")])]),t._v(" "),a("tr",[a("td",[t._v("java.class.path")]),t._v(" "),a("td",[t._v("Java类路径")])]),t._v(" "),a("tr",[a("td",[t._v("java.library.path")]),t._v(" "),a("td",[t._v("加载库时搜索的路径列表")])]),t._v(" "),a("tr",[a("td",[t._v("java.io.tmpdir")]),t._v(" "),a("td",[t._v("默认的临时文件路径")])]),t._v(" "),a("tr",[a("td",[t._v("java.compiler")]),t._v(" "),a("td",[t._v("要使用的JIT编译器的名称")])]),t._v(" "),a("tr",[a("td",[t._v("java.ext.dirs")]),t._v(" "),a("td",[t._v("一个或多个扩展目录的路径")])]),t._v(" "),a("tr",[a("td",[t._v("os.name")]),t._v(" "),a("td",[t._v("操作系统的名称")])]),t._v(" "),a("tr",[a("td",[t._v("os.arch")]),t._v(" "),a("td",[t._v("操作系统的架构")])]),t._v(" "),a("tr",[a("td",[t._v("os.version")]),t._v(" "),a("td",[t._v("操作系统的版本")])]),t._v(" "),a("tr",[a("td",[t._v("file.separator")]),t._v(" "),a("td",[t._v("文件分隔符（在UNIX中是“/”）")])]),t._v(" "),a("tr",[a("td",[t._v("path.separator")]),t._v(" "),a("td",[t._v("路径分隔符（在UNIX中是“:”）")])]),t._v(" "),a("tr",[a("td",[t._v("line.separator")]),t._v(" "),a("td",[t._v("行分隔符（在UNIX中是“/n”）")])]),t._v(" "),a("tr",[a("td",[t._v("user.name")]),t._v(" "),a("td",[t._v("用户的账户名称")])]),t._v(" "),a("tr",[a("td",[t._v("user.home")]),t._v(" "),a("td",[t._v("用户的主目录")])]),t._v(" "),a("tr",[a("td",[t._v("user.dir")]),t._v(" "),a("td",[t._v("用户的当前工作目录")])])])]),t._v(" "),a("p",[a("strong",[t._v("java.util.Date类")])]),t._v(" "),a("ul",[a("li",[t._v("两个构造器\n"),a("ul",[a("li",[a("code",[t._v("new Date();")]),t._v(" 当前时间")]),t._v(" "),a("li",[a("code",[t._v("new Date(Long 毫秒数)")]),t._v(" 根据毫秒数创建指定日期")])])]),t._v(" "),a("li",[t._v("两个方法的使用\n"),a("ul",[a("li",[a("code",[t._v("toString(")]),t._v(")` 显示当前的年,月,日,时,分,秒")]),t._v(" "),a("li",[a("code",[t._v("getTime()")]),t._v(" 获取当前date对象的对应的毫秒数(时间戳)")])])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("java.util.Date")]),t._v("和"),a("code",[t._v("java.sql.Date")]),t._v("互相转换")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Date")]),t._v(" date2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Date")]),t._v(" date3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("java.text.SimpleDateFormat类")])]),t._v(" "),a("blockquote",[a("p",[t._v("Date类的API不易于国际化，大部分被废弃，并且不是线程安全的")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("format()")]),t._v(" 方法 按照具体的格式格式化时间")]),t._v(" "),a("li",[a("code",[t._v("parse()")]),t._v(" 方法 将字符串解析成时间")])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("java.time")]),t._v("的基础包")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("java.time")]),t._v(" "),a("th",[t._v("包含值对象的基础包")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("java.time.chrono")]),t._v(" "),a("td",[t._v("提供不同日历系统的访问")])]),t._v(" "),a("tr",[a("td",[t._v("java.time.format")]),t._v(" "),a("td",[t._v("格式化和解析时间和日期")])]),t._v(" "),a("tr",[a("td",[t._v("java.time.temporal")]),t._v(" "),a("td",[t._v("包含底层框架和扩展特性")])]),t._v(" "),a("tr",[a("td",[t._v("java.time.zone")]),t._v(" "),a("td",[t._v("包含时区支持的类")])])])]),t._v(" "),a("p",[a("strong",[t._v("新的"),a("code",[t._v("java.time")]),t._v("包含了如下子类")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类")]),t._v(" "),a("th",[t._v("作用")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Instant")]),t._v(" "),a("td",[t._v("表示时刻")]),t._v(" "),a("td",[t._v("对应jdk7之前的Date")])]),t._v(" "),a("tr",[a("td",[t._v("LocalDateTime")]),t._v(" "),a("td",[t._v("获取当前系统的日期时间(内部不记录时区)")]),t._v(" "),a("td",[t._v("可以认为由LocalDate和LocalTime组成")])]),t._v(" "),a("tr",[a("td",[t._v("LocalDate")]),t._v(" "),a("td",[t._v("获取当前系统的日期")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("LocalTime")]),t._v(" "),a("td",[t._v("获取当前系统的时间")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ZoneId")]),t._v(" "),a("td",[t._v('时区，"5:00"和"Europe/Paris"、"Asia/Shanghai"')]),t._v(" "),a("td",[t._v("除了处理与标准时间的时间差还处理地区时（夏令时，冬令时等）")])]),t._v(" "),a("tr",[a("td",[t._v("ZoneOffset")]),t._v(" "),a("td",[t._v('时区，只处理 "6:00"')]),t._v(" "),a("td",[t._v("ZoneOffset是ZoneId的子类")])]),t._v(" "),a("tr",[a("td",[t._v("ZoneDateTime")]),t._v(" "),a("td",[t._v("一个在ISO-8601日历系统特定时区的日期和时间")]),t._v(" "),a("td",[t._v('其中每个时区都有对应的Id,每个地区Id都有"{区域}/{城市}" 例如 Asia/Shanghai等')])]),t._v(" "),a("tr",[a("td",[t._v("ZonedDateTime")]),t._v(" "),a("td",[t._v("处理日期和时间与相应的时区")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Duration")]),t._v(" "),a("td",[t._v('持续时间,用于计算两个"时间"的间隔')]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Period")]),t._v(" "),a("td",[t._v('日期间隔,用于计算两个"日期"的间隔')]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Clock")]),t._v(" "),a("td",[t._v("使用时区提供对当前即时，日期和时间的访问")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[a("strong",[t._v("方法前缀")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("前缀")]),t._v(" "),a("th",[t._v("含义")]),t._v(" "),a("th",[t._v("示例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("now")]),t._v(" "),a("td",[t._v("静态工厂方法, 用当前时间创建实例")]),t._v(" "),a("td",[t._v("LocalDate.now();")])]),t._v(" "),a("tr",[a("td",[t._v("of")]),t._v(" "),a("td",[t._v("静态工厂方法")]),t._v(" "),a("td",[t._v("LocalDate.of(2018, 12, 20);")])]),t._v(" "),a("tr",[a("td",[t._v("parse")]),t._v(" "),a("td",[t._v("静态工厂方法, 关注于解析")]),t._v(" "),a("td",[t._v('LocalDate.parse("2018-12-20");')])]),t._v(" "),a("tr",[a("td",[t._v("get")]),t._v(" "),a("td",[t._v("获取某个字段的值")]),t._v(" "),a("td",[t._v("localDate.getYear();")])]),t._v(" "),a("tr",[a("td",[t._v("is")]),t._v(" "),a("td",[t._v("比对判断")]),t._v(" "),a("td",[t._v("localDate.isAfter(LocalDate.now());")])]),t._v(" "),a("tr",[a("td",[t._v("with")]),t._v(" "),a("td",[t._v("基于当前实例创建新的实例, 但部分字段被更新")]),t._v(" "),a("td",[t._v("localDate.withMonth(3);")])]),t._v(" "),a("tr",[a("td",[t._v("plus")]),t._v(" "),a("td",[t._v("在当前实例基础上增加(值可负), 返回新实例")]),t._v(" "),a("td",[t._v("localDate.plusDays(1);")])]),t._v(" "),a("tr",[a("td",[t._v("minus")]),t._v(" "),a("td",[t._v("在当前实例基础上减小(值可负), 返回新实例")]),t._v(" "),a("td",[t._v("localDate.minusDays(1);")])]),t._v(" "),a("tr",[a("td",[t._v("to")]),t._v(" "),a("td",[t._v("基于当前实例转换出另一个类型的实例")]),t._v(" "),a("td",[t._v("localDateTime.toLocalDate();")])]),t._v(" "),a("tr",[a("td",[t._v("at")]),t._v(" "),a("td",[t._v("把当前对象和另一个对象结合, 生成新的类型的实例")]),t._v(" "),a("td",[t._v("localDate.atTime(21, 30, 50)")])]),t._v(" "),a("tr",[a("td",[t._v("format")]),t._v(" "),a("td",[t._v("格式化")]),t._v(" "),a("td",[t._v('localDate.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));')])])])]),t._v(" "),a("h2",{attrs:{id:"roundingmode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roundingmode"}},[t._v("#")]),t._v(" RoundingMode")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("java.math.RoundingMode")]),t._v("是一个舍入枚举类")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/alanzyy/article/details/8465098",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/alanzyy/article/details/8465098"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://my.oschina.net/sunchp/blog/670909",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://my.oschina.net/sunchp/blog/670909"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/chendaoqiu/article/details/45841283",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/chendaoqiu/article/details/45841283"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"几个参数详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几个参数详解"}},[t._v("#")]),t._v(" 几个参数详解")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("RoundingMode.CEILING")]),t._v("(对应"),a("code",[t._v("BigDecimal.ROUND_CEILING")]),t._v(")：取右边最近的整数")]),t._v(" "),a("li",[a("code",[t._v("RoundingMode.UP")]),t._v("(对应"),a("code",[t._v("BigDecimal.ROUND_UP")]),t._v(")：远离0取整，即负数向左取整，正数向右取整")]),t._v(" "),a("li",[a("code",[t._v("RoundingMode.DOWN")]),t._v("(对应"),a("code",[t._v("BigDecimal.ROUND_DOWN")]),t._v(")：从不在舍弃(即截断)的小数之前增加数字（其实就是截断的意思）")]),t._v(" "),a("li",[a("code",[t._v("RoundingMode.FLOOR")]),t._v("(对应"),a("code",[t._v("BigDecimal.ROUND_FLOOR")]),t._v(")：取左边最近的正数")]),t._v(" "),a("li",[a("code",[t._v("RoundingMode.HALF_UP")]),t._v("(对应"),a("code",[t._v("BigDecimal.ROUND_HALF_UP")]),t._v(")：四舍五入，负数原理同上")]),t._v(" "),a("li",[a("code",[t._v("RoundingMode.HALF_DOWN")]),t._v("(对应"),a("code",[t._v("BigDecimal.ROUND_HALF_DOWN")]),t._v(")：五舍六入，负数先取绝对值再五舍六入再负数")]),t._v(" "),a("li",[a("code",[t._v("RoundingMode.HALF_EVEN")]),t._v("(对应"),a("code",[t._v("BigDecimal.ROUND_HALF_EVEN")]),t._v(")：这个比较绕，整数位若是奇数则四舍五入，若是偶数则五舍六入")]),t._v(" "),a("li",[a("code",[t._v("RoundingMode.UNNECESSARY")]),t._v("(对应"),a("code",[t._v("BigDecimal.ROUND_UNNECESSARY")]),t._v(")：用于断言请求的操作具有精确结果的舍入模式，因此不需要舍入")])]),t._v(" "),a("h2",{attrs:{id:"java锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java锁"}},[t._v("#")]),t._v(" Java锁")]),t._v(" "),a("h3",{attrs:{id:"synchronized"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synchronized"}},[t._v("#")]),t._v(" synchronized")]),t._v(" "),a("blockquote",[a("p",[t._v("synchronized(this)以及非static的synchronized方法，只能防止多个线程同时执行同一个对象的同步代码段。")])]),t._v(" "),a("blockquote",[a("p",[t._v("synchronized锁住的是代码还是对象？")]),t._v(" "),a("blockquote",[a("p",[t._v("答案是：synchronized锁住的是括号里的对象，而不是代码。对于非static的synchronized方法，锁的就是对象本身也就是this。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("当synchronized锁住一个对象后，别的线程如果也想拿到这个对象的锁，就必须等待这个线程执行完成释放锁，才能再次给对象加锁，这样才达到线程同步的目的。")])]),t._v(" "),a("blockquote",[a("p",[t._v("即使两个不同的代码段，都要锁同一个对象，那么这两个代码段也不能在多线程环境下同时运行。")])]),t._v(" "),a("blockquote",[a("p",[t._v("所以我们在用synchronized关键字的时候，尽量缩小代码段的范围，尽量不要在整个方法上加同步。这叫减小锁的粒度，使代码更大程度的并发。")])]),t._v(" "),a("blockquote",[a("p",[t._v("static方法可以直接类名加方法名调用，方法中无法使用this，所以它锁的不是this，而是Class，所以static synchronized方法也相当于全局锁，相当于锁住了代码段。")])]),t._v(" "),a("h2",{attrs:{id:"java异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java异常"}},[t._v("#")]),t._v(" Java异常")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_52566131/article/details/117132098",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java中的异常处理"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Java%E5%86%85%E7%BD%AE%E5%BC%82%E5%B8%B8.png",alt:""}})]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("未经检查的异常")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ArithmeticException")]),t._v(" "),a("td",[t._v("算术错误，如被0除")])]),t._v(" "),a("tr",[a("td",[t._v("ArrayIndexOutOfBoundsException")]),t._v(" "),a("td",[t._v("数组下标出界")])]),t._v(" "),a("tr",[a("td",[t._v("ArrayStoreException")]),t._v(" "),a("td",[t._v("数组元素赋值类型不兼容")])]),t._v(" "),a("tr",[a("td",[t._v("ClassCastException")]),t._v(" "),a("td",[t._v("非法强制转换类型")])]),t._v(" "),a("tr",[a("td",[t._v("EnumConstantNotPresentException")]),t._v(" "),a("td",[t._v("枚举常量不存在异常。")])]),t._v(" "),a("tr",[a("td",[t._v("EOFException")]),t._v(" "),a("td",[t._v("文件已结束异常")])]),t._v(" "),a("tr",[a("td",[t._v("Exception")]),t._v(" "),a("td",[t._v("根异常。用以描述应用程序希望捕获的情况。")])]),t._v(" "),a("tr",[a("td",[t._v("FileNotFoundException")]),t._v(" "),a("td",[t._v("文件未找到异常")])]),t._v(" "),a("tr",[a("td",[t._v("IllegalArgumentException")]),t._v(" "),a("td",[t._v("调用方法的参数非法")])]),t._v(" "),a("tr",[a("td",[t._v("IllegalMonitorStateException")]),t._v(" "),a("td",[t._v("非法监控操作，如等待一个未锁定线程")])]),t._v(" "),a("tr",[a("td",[t._v("IllegalStateException")]),t._v(" "),a("td",[t._v("环境或应用状态不正确")])]),t._v(" "),a("tr",[a("td",[t._v("IllegalThreadStateException")]),t._v(" "),a("td",[t._v("请求操作与当前线程状态不兼容")])]),t._v(" "),a("tr",[a("td",[t._v("IndexOutOfBoundsException")]),t._v(" "),a("td",[t._v("某些类型索引越界")])]),t._v(" "),a("tr",[a("td",[t._v("IOException")]),t._v(" "),a("td",[t._v("输入输出异常")])]),t._v(" "),a("tr",[a("td",[t._v("NegativeArrayException")]),t._v(" "),a("td",[t._v("数组负下标异常")])]),t._v(" "),a("tr",[a("td",[t._v("NegativeArraySizeException")]),t._v(" "),a("td",[t._v("数组大小为负值异常。当使用负数大小值创建数组时抛出该异常。")])]),t._v(" "),a("tr",[a("td",[t._v("NullPointerException")]),t._v(" "),a("td",[t._v("非法使用空引用")])]),t._v(" "),a("tr",[a("td",[t._v("NumberFormatException")]),t._v(" "),a("td",[t._v("字符串到数字格式非法转换")])]),t._v(" "),a("tr",[a("td",[t._v("RuntimeException")]),t._v(" "),a("td",[t._v("运行时异常。是所有Java虚拟机正常操作期间可以被抛出的异常的父类。")])]),t._v(" "),a("tr",[a("td",[t._v("SecurityException")]),t._v(" "),a("td",[t._v("试图违反安全性")])]),t._v(" "),a("tr",[a("td",[t._v("SQLException")]),t._v(" "),a("td",[t._v("操作数据库异常")])]),t._v(" "),a("tr",[a("td",[t._v("StringIndexOutOfBoundsException")]),t._v(" "),a("td",[t._v("试图在字符串边界之外索引")])]),t._v(" "),a("tr",[a("td",[t._v("TypeNotPresentException")]),t._v(" "),a("td",[t._v("类型不存在异常。")])]),t._v(" "),a("tr",[a("td",[t._v("UnsupportedOperationException")]),t._v(" "),a("td",[t._v("遇到不支持的操作")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("检查的异常")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ClassNotFoundException")]),t._v(" "),a("td",[t._v("找不到类")])]),t._v(" "),a("tr",[a("td",[t._v("CloneNotSupportedException")]),t._v(" "),a("td",[t._v("试图克隆一个不能实现Cloneable接口的对象")])]),t._v(" "),a("tr",[a("td",[t._v("IllegalAccessException")]),t._v(" "),a("td",[t._v("对一个类的访问被拒绝")])]),t._v(" "),a("tr",[a("td",[t._v("InstantiationException")]),t._v(" "),a("td",[t._v("试图创建一个抽象类或者抽象接口的对象")])]),t._v(" "),a("tr",[a("td",[t._v("InterruptedException")]),t._v(" "),a("td",[t._v("一个线程被另一个线程中断")])]),t._v(" "),a("tr",[a("td",[t._v("NoSuchFieldException")]),t._v(" "),a("td",[t._v("请求的字段不存在")])]),t._v(" "),a("tr",[a("td",[t._v("NoSuchMethodException")]),t._v(" "),a("td",[t._v("请求的方法不存在")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("错误")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("java.lang.AbstractMethodError")]),t._v(" "),a("td",[t._v("抽象方法错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.AssertionError")]),t._v(" "),a("td",[t._v("断言错")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.ClassCircularityError")]),t._v(" "),a("td",[t._v("类循环依赖错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.ClassFormatError")]),t._v(" "),a("td",[t._v("类格式错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.Error")]),t._v(" "),a("td",[t._v("错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.ExceptionInInitializerError")]),t._v(" "),a("td",[t._v("初始化程序错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.IllegalAccessError")]),t._v(" "),a("td",[t._v("违法访问错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.IncompatibleClassChangeError")]),t._v(" "),a("td",[t._v("不兼容的类变化错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.InstantiationError")]),t._v(" "),a("td",[t._v("实例化错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.InternalError")]),t._v(" "),a("td",[t._v("内部错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.LinkageError")]),t._v(" "),a("td",[t._v("链接错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.NoClassDefFoundError")]),t._v(" "),a("td",[t._v("未找到类定义错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.NoSuchFieldError")]),t._v(" "),a("td",[t._v("域不存在错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.NoSuchMethodError")]),t._v(" "),a("td",[t._v("方法不存在错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.OutOfMemoryError")]),t._v(" "),a("td",[t._v("内存不足错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.StackOverflowError")]),t._v(" "),a("td",[t._v("堆栈溢出错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.UnknownError")]),t._v(" "),a("td",[t._v("未知错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.UnsatisfiedLinkError")]),t._v(" "),a("td",[t._v("未满足的链接错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.UnsupportedClassVersionError")]),t._v(" "),a("td",[t._v("不支持的类版本错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.VerifyError")]),t._v(" "),a("td",[t._v("验证错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.VirtualMachineError")]),t._v(" "),a("td",[t._v("虚拟机错误")])]),t._v(" "),a("tr",[a("td",[t._v("java.lang.ThreadDeath")]),t._v(" "),a("td",[t._v("线程结束")])])])]),t._v(" "),a("h2",{attrs:{id:"http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/596302946",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 Java 中下载的文件会出现乱码是为什么？"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("常量")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("java.net.HttpURLConnection")])]),t._v(" "),a("li",[a("code",[t._v("io.netty.handler.codec.http.HttpResponseStatus")])]),t._v(" "),a("li",[a("code",[t._v("org.springframework.http.HttpStatus")])]),t._v(" "),a("li",[a("code",[t._v("org.apache.http.HttpStatus")])]),t._v(" "),a("li",[a("code",[t._v("org.asynchttpclient.util.HttpConstants")])]),t._v(" "),a("li",[a("code",[t._v("org.apache.http.protocol.HTTP")])]),t._v(" "),a("li",[a("code",[t._v("org.springframework.http.HttpHeaders")])]),t._v(" "),a("li",[a("code",[t._v("javax.ws.rs.HttpMethod")])]),t._v(" "),a("li",[a("code",[t._v("org.springframework.http.HttpMethod")])])]),t._v(" "),a("p",[a("strong",[t._v("Mime/Content-Type/Media-Type")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/search?q=mime",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/search?q=mime"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/topics/mime",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/topics/mime"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/mime-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/mime-types"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.solvusoft.com/en/mime-multipurpose-internet-mail-extensions",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.solvusoft.com/en/mime-multipurpose-internet-mail-extensions"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("com.google.common.net.MediaType")]),t._v(" guava")]),t._v(" "),a("li",[a("code",[t._v("javax.ws.rs.core.MediaType")]),t._v(" Jersey框架")]),t._v(" "),a("li",[a("code",[t._v("org.springframework.http.MediaType")]),t._v("和"),a("code",[t._v("org.springframework.util.MimeTypeUtils")]),t._v(" spring框架")]),t._v(" "),a("li",[t._v("在Tomcat配置文件"),a("code",[t._v("conf/web.xml")]),t._v("中的"),a("code",[t._v("Default MIME Type Mappings")]),t._v("部分定义")]),t._v(" "),a("li",[t._v("nginx配置文件"),a("code",[t._v("conf/mime.types")]),t._v("中定义")])]),t._v(" "),a("p",[a("strong",[t._v("HTTP实现依赖库")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("HttpURLConnection")]),t._v(" Java自带API")]),t._v(" "),a("li",[a("code",[t._v("HttpClient")]),t._v(" JDK11的API "),a("a",{attrs:{href:"https://segmentfault.com/a/1190000016555671",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java11 HttpClient小试牛刀"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("code",[t._v("RestTemplate")]),t._v(" 默认实现是"),a("code",[t._v("HttpURLConnection")]),t._v("，默认使用HttpMessageConverter将Http消息转换成POJO 或POJO转化成Http消息\n"),a("ul",[a("li",[a("code",[t._v("ForEntity")]),t._v("返回"),a("code",[t._v("ResponseEntity")]),t._v("响应码、响应消息体等")]),t._v(" "),a("li",[a("code",[t._v("ForObject")]),t._v("只返回消息体")]),t._v(" "),a("li",[a("code",[t._v("exchange")]),t._v(" 配合"),a("code",[t._v("HttpEntity")]),t._v("或"),a("code",[t._v("RequestEntity")]),t._v("使用，返回"),a("code",[t._v("ResponseEntity")])])])]),t._v(" "),a("li",[a("code",[t._v("WebClient")]),t._v(" 是"),a("code",[t._v("Spring 5.0")]),t._v("开始提供的非阻塞响应式编程的Http工具。")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.im/post/5e156c80f265da5d3c6de72a",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP客户端连接，选择HttpClient还是OkHttp？"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("Apache HttpClient GET拼接URL参数")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" params "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式一：使用setParameters")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NameValuePair")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" nvps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NameValuePair")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过map集成entrySet方法获取entity循环遍历，获取迭代器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("entrySet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entry")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" mapEntry "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    nvps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BasicNameValuePair")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mapEntry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mapEntry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于GET请求的参数都是拼装在URL地址后方，所以我们要构建一个URL，带参数")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URIBuilder")]),t._v(" uriBuilder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URIBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 封装请求参数")]),t._v("\nuriBuilder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setParameters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nvps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nuriBuilder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式二：转换参数并拼接")]),t._v("\nurl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"?"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EntityUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UrlEncodedFormEntity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nvps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Consts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UTF_8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URIBuilder")]),t._v(" uriBuilder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URIBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nuriBuilder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("根据HttpGet反向获取键值对列表")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpGet")]),t._v(" request "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://example.com/?var=1&var=2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取键值对列表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NameValuePair")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" params "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URIBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getURI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getQueryParams")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转换为键值对字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EntityUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UrlEncodedFormEntity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Consts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UTF_8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"泛型generics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#泛型generics"}},[t._v("#")]),t._v(" 泛型generics")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/90948ff4a940",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java泛型的协变、逆变和不变"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/zy_jibai/article/details/90082239",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解java泛型的协变和逆变"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[t._v("协变("),a("code",[t._v("<? extends T>")]),t._v(")")]),t._v(" "),a("li",[t._v("逆变("),a("code",[t._v("<? super T>")]),t._v(")")]),t._v(" "),a("li",[t._v("不变("),a("code",[t._v("T")]),t._v(")")])]),t._v(" "),a("p",[a("strong",[t._v("泛型的通配符")])]),t._v(" "),a("ul",[a("li",[t._v("? 表示不确定的类型")]),t._v(" "),a("li",[t._v("T (type) 表示具体的类型")]),t._v(" "),a("li",[t._v("K V (key value) 分别代表键值中的Key Value")]),t._v(" "),a("li",[t._v("E (element) 代表Element")])]),t._v(" "),a("p",[a("strong",[t._v("泛型三种常用的使用方式：")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/coprince/p/8603492.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("java 泛型详解-绝对是对泛型方法讲解最详细的，没有之一"),a("OutboundLink")],1)])]),t._v(" "),a("blockquote",[a("p",[t._v("可以有多个类型变量")])]),t._v(" "),a("ul",[a("li",[t._v("泛型类：在类名后指定类型变量，如："),a("code",[t._v("public class Pair<T, U> {")])]),t._v(" "),a("li",[t._v("泛型接口：在接口名后指定类型变量，如："),a("code",[t._v("public interface Generator<T, U> {")])]),t._v(" "),a("li",[t._v("泛型方法：在修饰符后，返回类型前指定类型变量，如："),a("code",[t._v("public static <T extends Object, E> T test(Class<T> a, Class<E> b) {")])])])])},[],!1,null,null,null);a.default=s.exports}}]);