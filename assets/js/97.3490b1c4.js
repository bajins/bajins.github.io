(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{445:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"shellscript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shellscript"}},[t._v("#")]),t._v(" ShellScript")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#flag"}},[t._v("Flag")])]),s("li",[s("a",{attrs:{href:"#自动交互"}},[t._v("自动交互")]),s("ul",[s("li",[s("a",{attrs:{href:"#指令有参数"}},[t._v("指令有参数")])]),s("li",[s("a",{attrs:{href:"#指令无参数"}},[t._v("指令无参数")])])])]),s("li",[s("a",{attrs:{href:"#清理内存"}},[t._v("清理内存")])]),s("li",[s("a",{attrs:{href:"#清理日志"}},[t._v("清理日志")])]),s("li",[s("a",{attrs:{href:"#linux之间传输文件"}},[t._v("Linux之间传输文件")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"flag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flag"}},[t._v("#")]),t._v(" Flag")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Shell")]),t._v("脚本（"),s("code",[t._v("shell script")]),t._v("），是一种为"),s("code",[t._v("Shell")]),t._v("编写的脚本程序。\n"),s("code",[t._v("Shell")]),t._v("脚本文件的名称可以任意，但为了避免被误以为是普通文件，建议将"),s("code",[t._v(".sh")]),t._v("后缀加上，以表示是一个脚本文件。")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/topics/bash",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/topics/bash"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/Ph0enixKM/Amber",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/Ph0enixKM/Amber"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("静态分析 "),s("a",{attrs:{href:"https://github.com/koalaman/shellcheck",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/koalaman/shellcheck"),s("OutboundLink")],1),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.shellcheck.net",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.shellcheck.net"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://my.oschina.net/2688/blog/736548",target:"_blank",rel:"noopener noreferrer"}},[t._v("shellcheck 规范"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ComplianceAsCode/content",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/ComplianceAsCode/content"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("格式化 "),s("a",{attrs:{href:"https://github.com/mvdan/sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/mvdan/sh"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("rm替代方案 "),s("a",{attrs:{href:"https://github.com/qqAys/trash.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/qqAys/trash.sh"),s("OutboundLink")],1)])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.runoob.com/linux/linux-shell.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Shell 教程"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://c.biancheng.net/shell",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux Shell脚本学习指南"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/3782970dec75",target:"_blank",rel:"noopener noreferrer"}},[t._v("Shell命令脚本初步认识，Shell脚本入门"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/setul/article/details/80114020",target:"_blank",rel:"noopener noreferrer"}},[t._v("Shell中if的使用详解_&&与||的使用详解"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/c71e85375e88",target:"_blank",rel:"noopener noreferrer"}},[t._v("shell-if判断"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/guodongxiaren/Bash",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/guodongxiaren/Bash"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/oldratlee/useful-scripts",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/oldratlee/useful-scripts"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/chen-shang/baseshell",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/chen-shang/baseshell"),s("OutboundLink")],1)])]),t._v(" "),s("blockquote",[s("p",[t._v("在shell脚本中，通常将"),s("code",[t._v("EOF")]),t._v("与 "),s("code",[t._v("<<")]),t._v(" 结合使用，表示后续的输入作为子命令或子Shell的输入，直到遇到"),s("code",[t._v("EOF")]),t._v("为止，再返回到主Shell。\n"),s("code",[t._v("EOF")]),t._v("只是一个分界符，当然也可以用"),s("code",[t._v("abcde")]),t._v("替换。当shell遇到"),s("code",[t._v("<<")]),t._v("时，它知道下一个词是一个分界符。在该分界符以后的内容都被当作输入，\n直到shell又看到该分界符(位于单独的一行)。此分界符可以是所定义的任何字符串，其实，不一定要用"),s("code",[t._v("EOF")]),t._v("，\n只要是“内容段”中没有出现的字符串，都可以用来替代"),s("code",[t._v("EOF")]),t._v("，完全可以换成abcde之类的字符串，只是一个起始和结束的标志罢了。")])]),t._v(" "),s("h2",{attrs:{id:"自动交互"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动交互"}},[t._v("#")]),t._v(" 自动交互")]),t._v(" "),s("h3",{attrs:{id:"指令有参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令有参数"}},[t._v("#")]),t._v(" 指令有参数")]),t._v(" "),s("p",[s("strong",[t._v("重定向")])]),t._v(" "),s("blockquote",[s("p",[t._v("shell用重定向作为标准输入的用法是："),s("code",[t._v("cmd<<delimiter")])]),t._v(" "),s("p",[t._v("shell会将分界符delimiter之后直到下一个同样的分界符之前的内容作为输入")])]),t._v(" "),s("blockquote",[s("p",[t._v("实现ftp自动登录并运行ls指令的用法如下：其中admin为用户名，password为密码")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ftp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".21.46 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF  \nuser admin password\nls  \nEOF")]),t._v("\n")])])]),s("p",[s("strong",[t._v("管道")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo的-S参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zjk123'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-S")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" file1 /etc/hosts\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# passwd的-stdin参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'password'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("passwd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-stdin")]),t._v(" username\n")])])]),s("h3",{attrs:{id:"指令无参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令无参数"}},[t._v("#")]),t._v(" 指令无参数")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Expect")]),t._v("是由"),s("code",[t._v("Don Libes")]),t._v("基于"),s("code",[t._v("Tcl")]),t._v("（"),s("code",[t._v("Tool Command Language")]),t._v("）的脚本语言，所以你至少要学习一下"),s("code",[t._v("TCL")]),t._v("它的语法。")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/search?q=expect",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/search?q=expect"),s("OutboundLink")],1)])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.tcl-lang.org/man",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.tcl-lang.org/man"),s("OutboundLink")],1),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.tcl.tk/man",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.tcl.tk/man"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.yiibai.com/tcl/tcl_special_variables.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tcl教程"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("tclsh "),s("a",{attrs:{href:"https://linux.die.net/man/1/expect",target:"_blank",rel:"noopener noreferrer"}},[t._v("expect手册"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://blog.leanote.com/post/wkf19911118@gmail.com/shell%E7%BC%96%E7%A8%8B%E4%B9%8Bexpect",target:"_blank",rel:"noopener noreferrer"}},[t._v("shell编程之expect用法"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://man.linuxde.net/expect1",target:"_blank",rel:"noopener noreferrer"}},[t._v("linux expect 自动交互脚本用法"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://einverne.github.io/post/2019/01/expect-command.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("expect 脚本使用"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/boyishachang/article/details/8677936",target:"_blank",rel:"noopener noreferrer"}},[t._v("Expect学习笔记"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("strong",[t._v("启用选项")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("选项")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("-c")])]),t._v(" "),s("td",[t._v("执行脚本前先执行的命令，可多次使用。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("-d")])]),t._v(" "),s("td",[t._v("debug模式，可以在运行时输出一些诊断信息，与在脚本开始处使用exp_internal 1相似。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("-D")])]),t._v(" "),s("td",[t._v("启用交换调式器,可设一整数参数。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("-f")])]),t._v(" "),s("td",[t._v('从文件读取命令，仅用于使用#!时。如果文件名为"-"，则从stdin读取(使用"./-"从文件名为-的文件读取)。')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("-i")])]),t._v(" "),s("td",[t._v('交互式输入命令，使用"exit"或"EOF"退出输入状态。')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--")])]),t._v(" "),s("td",[t._v("标示选项结束(如果你需要传递与expect选项相似的参数给脚本时)，可放到#!行:#!/usr/bin/expect --。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("-v")])]),t._v(" "),s("td",[t._v("显示expect版本信息")])])])]),t._v(" "),s("p",[s("strong",[t._v("命令")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("$argc")]),t._v(" "),s("td",[t._v("参数个数")])]),t._v(" "),s("tr",[s("td",[t._v("$argv")]),t._v(" "),s("td",[t._v("接收的所有参数数组")])]),t._v(" "),s("tr",[s("td",[t._v("$NAME")]),t._v(" "),s("td",[t._v("使用变量")])]),t._v(" "),s("tr",[s("td",[t._v("close")]),t._v(" "),s("td",[t._v("关闭当前进程的连接，-i选项关闭指定句柄的过程")])]),t._v(" "),s("tr",[s("td",[t._v("debug")]),t._v(" "),s("td",[t._v("控制调试器")])]),t._v(" "),s("tr",[s("td",[t._v("disconnect")]),t._v(" "),s("td",[t._v("断开进程连接(进程仍在后台运行)")])]),t._v(" "),s("tr",[s("td",[t._v("exit")]),t._v(" "),s("td",[t._v("退出expect")])]),t._v(" "),s("tr",[s("td",[t._v("exp_pid")]),t._v(" "),s("td",[t._v("获取当前spawn的进程号，-i选项指定spawn进程：setpid [exp_pid –i $spawn_id]")])]),t._v(" "),s("tr",[s("td",[t._v("exp_send")]),t._v(" "),s("td",[t._v("将参数输出到程序中")])]),t._v(" "),s("tr",[s("td",[t._v("exp_continue")]),t._v(" "),s("td",[t._v("当问题不存在时继续回答下边的问题")])]),t._v(" "),s("tr",[s("td",[t._v("exp_internal")]),t._v(" "),s("td",[t._v("调试模式，1（打开）、0（关闭）、-f file（将调试内容写入文件），放在spawn后面")])]),t._v(" "),s("tr",[s("td",[t._v("expect eof")]),t._v(" "),s("td",[t._v("问题回答完毕等待expect进程结束，expect -timeout -1 eof")])]),t._v(" "),s("tr",[s("td",[t._v("expect -re")]),t._v(" "),s("td",[t._v("表示匹配正则表达式")])]),t._v(" "),s("tr",[s("td",[t._v("expect")]),t._v(" "),s("td",[t._v('从进程接收字符串，expect与{之间没有空格或者TAB间隔，会报invalid command name "expect{"')])]),t._v(" "),s("tr",[s("td",[t._v("expr")]),t._v(" "),s("td",[t._v("计算")])]),t._v(" "),s("tr",[s("td",[t._v("interact")]),t._v(" "),s("td",[t._v("执行完成后保持交互状态，否则退出")])]),t._v(" "),s("tr",[s("td",[t._v("lindex")]),t._v(" "),s("td",[t._v("获取参数")])]),t._v(" "),s("tr",[s("td",[t._v("puts")]),t._v(" "),s("td",[t._v("向用户终端发送提示信息")])]),t._v(" "),s("tr",[s("td",[t._v("send_user")]),t._v(" "),s("td",[t._v("把参数输出到标准输出中")])]),t._v(" "),s("tr",[s("td",[t._v("send_error")]),t._v(" "),s("td",[t._v("把参数输出到标准错误输出中")])]),t._v(" "),s("tr",[s("td",[t._v("send_log")]),t._v(" "),s("td",[t._v("把内容输出到log记录文件中")])]),t._v(" "),s("tr",[s("td",[t._v("send")]),t._v(" "),s("td",[t._v("用于向进程发送字符串")])]),t._v(" "),s("tr",[s("td",[t._v("set NAME value")]),t._v(" "),s("td",[t._v("设置变量")])]),t._v(" "),s("tr",[s("td",[t._v("set timeout -1")]),t._v(" "),s("td",[t._v("超时时间，-1为永不超时")])]),t._v(" "),s("tr",[s("td",[t._v("spawn")]),t._v(" "),s("td",[t._v("expect中的监控程序，其运行会监控命令提出的交互式问题，启动新的进程")])]),t._v(" "),s("tr",[s("td",[t._v("wait")]),t._v(" "),s("td",[t._v("等待系统主动返回eof，也就是结束信号后才关闭，wait -nowait")])]),t._v(" "),s("tr",[s("td",[t._v("log_user")]),t._v(" "),s("td",[t._v("指定输出的位置，默认值是1，表示所有输出都放在标准输出中，为0就表示不需要任何输出")])]),t._v(" "),s("tr",[s("td",[t._v("log_file")]),t._v(" "),s("td",[t._v("将输出记录到一个文件中")])])])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("send")]),t._v("命令有几个可用的参数")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("-i")]),t._v(" 指定"),s("code",[t._v("spawn_id")]),t._v("，这个参数用来向不同"),s("code",[t._v("spawn_id")]),t._v("的进程发送命令，是进行多程序控制的关键参数。")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("-s")]),t._v(" 代表"),s("code",[t._v("slowly")]),t._v("，也就是控制发送的速度，这个参数使用的时候要与"),s("code",[t._v("expect")]),t._v("中的变量"),s("code",[t._v("send_slow")]),t._v("相关联")])]),t._v(" "),s("p",[s("strong",[t._v("特殊字符")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("字符")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("\\r")])]),t._v(" "),s("td",[t._v("表示回车")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\n")])]),t._v(" "),s("td",[t._v("表示换行")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\t")])]),t._v(" "),s("td",[t._v("表示制表符")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\")])]),t._v(" "),s("td",[t._v("需转义 "),s("code",[t._v("\\\\\\")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("}")])]),t._v(" "),s("td",[t._v("需转义 "),s("code",[t._v("\\}")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("[")])]),t._v(" "),s("td",[t._v("需转义 "),s("code",[t._v("\\[")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("$")])]),t._v(" "),s("td",[t._v("需转义 "),s("code",[t._v("\\\\\\$")])])]),t._v(" "),s("tr",[s("td",[t._v("`")]),t._v(" "),s("td",[t._v("需转义 \\`")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"')])]),t._v(" "),s("td",[t._v("需转义 "),s("code",[t._v('\\\\\\"')])])])])]),t._v(" "),s("ul",[s("li",[t._v("方式一")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("push_url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://github.com/bajins/bajins.github.io.git\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("push_username")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("push_password")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索expect是否安装")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("is_expect")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("whereis")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print $2}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果没有安装")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$is_expect")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    yum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\n\n# 超时时间-1为永不超时\nset timeout -1\n\n# spawn将开启一个新的进程，或者使用：ssh '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),t._v(" {your_command}\n# 只有先进入expect环境后才可执行spawn\nspawn git push -f "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${push_url}")]),t._v(" master\n\n# 判断运行上述命令的输出结果中是否有指定的字符串(不区分大小写)。\n# 若有则立即返回，否则就等待一段时间后返回，等待时长就是开头设置的timeout。\n# 同时向上面的进程发送字符串, 并且自动敲Enter健("),s("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v(")\nexpect {\n  "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("*Username*"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" {send "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${push_username}")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("; exp_continue}\n  "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("*Password*"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" {send "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${push_password}")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(';}\n}\n# 问题回答完毕等待expect进程结束\nexpect eof\n"')]),t._v("\n")])])]),s("ul",[s("li",[t._v("方式二")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("push_url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://github.com/bajins/bajins.github.io.git\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("push_username")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("push_password")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索expect是否安装")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("is_expect")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("whereis")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print $2}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果没有安装")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$is_expect")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    yum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<-")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n    set timeout -1\n\n    spawn git push -f "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${push_url}")]),t._v(' master\n    \n    #expect "*Username*" {send "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${push_username}")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"; exp_continue}\n    #expect "*Password*" {send "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${push_password}")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"}\n    \n    expect {\n      '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("*Username*"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" {send "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${push_username}")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("; exp_continue}\n      "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("*Password*"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" {send "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${push_password}")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(";}\n    }\n    interact\n    \n    # 问题回答完毕等待"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("进程结束\n    expect eof\n\n# 由于用的-EOF，这里的EOF可以有空格，tab键\nEOF")]),t._v("\n")])])]),s("ul",[s("li",[t._v("方式三")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/expect")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" push_url "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://github.com/bajins/bajins.github.io.git"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" push_username "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" push_password "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 超时时间-1为永不超时")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# spawn将开启一个新的进程，或者使用：ssh $user@$host {your_command}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只有先进入expect环境后才可执行spawn")]),t._v("\nspawn "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${push_url}")]),t._v(" master\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断运行上述命令的输出结果中是否有指定的字符串(不区分大小写)。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若有则立即返回，否则就等待一段时间后返回，等待时长就是开头设置的timeout。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*Username*"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向上面的进程发送字符串, 并且自动敲Enter健(\\r)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# -- 后面的"之间有一个空格')]),t._v("\nsend -- "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$push_username")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*Password*"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# -- 后面的"之间有一个空格')]),t._v("\nsend -- "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$push_password")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许用户交互")]),t._v("\ninteract\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 问题回答完毕等待expect进程结束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" eof\n")])])]),s("ul",[s("li",[t._v("获取日期")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\n\nset date [ clock format [ clock seconds ] -format "')]),t._v("%Y%m%d"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" ]\nset secon [  clock seconds ]\nset yestoday_secon 0\n \n#set i [expr {'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" + 1}]    #expect里的加减法\nset yestoday_secon [expr {"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$secon")]),t._v(" - 86400} ]\nset yestoday [ clock format [ expr {"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$yestoday_secon")]),t._v('} ] -format "')]),t._v("%Y%m%d"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" ]\n \nputs "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\nputs "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("n secon "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$secon")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\nputs "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("n yestoday_secon "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$yestoday_secon")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\nputs "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("n yestoday "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$yestoday")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\n\n# 问题回答完毕等待expect进程结束\nexpect eof\n"')]),t._v("\n")])])]),s("h2",{attrs:{id:"清理内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清理内存"}},[t._v("#")]),t._v(" 清理内存")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取到的内存配置信息若为0的话，则表示开启了缓存机制")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /proc/sys/vm/drop_caches\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# drop_caches是让系统清理内存页的缓存，从而得到更多的可用内存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 释放网页缓存(To free pagecache)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /proc/sys/vm/drop_caches\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 释放目录项和索引(To free dentries and inodes)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /proc/sys/vm/drop_caches\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 释放网页缓存，目录项和索引（To free pagecache, dentries and inodes）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /proc/sys/vm/drop_caches\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清理/var/cache/yum的headers")]),t._v("\nyum clean headers\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清理/var/cache/yum下的软件包")]),t._v("\nyum clean packages\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清理软件源")]),t._v("\nyum clean metadata\n")])])]),s("h2",{attrs:{id:"清理日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清理日志"}},[t._v("#")]),t._v(" 清理日志")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除定时任务记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/cron\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除ftp记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/xferlog\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除数据库日志")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50'")]),t._v(" /var/log/mariadb/mariadb.log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除sshd信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/secure\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/firewalld\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/httpd/access_log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/httpd/ssl_access_log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/httpd/ssl_error_log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/httpd/ssl_request_log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除系统开机发生的错误")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/messages\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/tuned/tuned.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/hawkey.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/yum.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/dnf.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/dnf.rpm.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/ntp.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,50d'")]),t._v(" /var/log/audit/audit.log\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除历史执行命令")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-cw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" ~/.bash_history\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除系统登录成功的记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /var/log/wtmp\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除系统登录失败的记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /var/log/btmp\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除最近登录信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /var/log/lastlog\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-fr")]),t._v(" /var/log/*\n\n")])])]),s("h2",{attrs:{id:"linux之间传输文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux之间传输文件"}},[t._v("#")]),t._v(" Linux之间传输文件")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程IP")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("des_ip")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程端口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("des_port")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程用户")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("des_user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("root\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程密码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("des_pass")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程文件或文件夹路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("des_path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/www/wwwroot/file\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本地文件或文件夹路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("local_path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/www/wwwroot/file\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索expect是否安装")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("is_expect")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("whereis")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print $2}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果没有安装")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$is_expect")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    yum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\n# 设置拷贝的时间，超时时间-1为永不超时\nset timeout -1\n\n# 本地路径在前，远程在后，是从本地上传到远端\n# spawn scp -P '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${des_port}")]),t._v(" -p -r "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${local_path}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${des_user}")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${des_ip}")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${des_path}")]),t._v("\n# 远程在前，本地路径在后，的是从远端下载到本地\nspawn scp -P "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${des_port}")]),t._v(" -p -r "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${des_user}")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${des_ip}")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${des_path}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${local_path}")]),t._v("\n\nexpect {\n  "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("*yes/no*"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" {send "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("yes"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("; exp_continue}\n  "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("*password*"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" {send "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${des_pass}")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(';}\n}\n\n# 问题回答完毕等待expect进程结束\nexpect eof\n"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n\n")])])])])},[],!1,null,null,null);s.default=n.exports}}]);