(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{314:function(a,t,s){"use strict";s.r(t);var e=s(2),n=Object(e.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[a._v("#")]),a._v(" Git")]),a._v(" "),s("h2",{attrs:{id:"git服务器搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git服务器搭建","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("a",{attrs:{href:"/VPS/Docker"}},[a._v("Git服务器搭建")])]),a._v(" "),s("h2",{attrs:{id:"目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录","aria-hidden":"true"}},[a._v("#")]),a._v(" 目录")]),a._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4"}},[a._v("使用命令")])]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E6%8A%8A%E7%A9%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E6%8F%90%E4%BA%A4%E5%88%B0%E4%BB%93%E5%BA%93"}},[a._v("把空文件夹提交到仓库")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#%E6%9B%B4%E6%8D%A2%E9%A1%B9%E7%9B%AE%E5%9C%B0%E5%9D%80"}},[a._v("更换项目地址")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#%E6%9C%AApush%E4%B9%8B%E5%89%8D%E6%9B%B4%E6%94%B9%E6%8F%90%E4%BA%A4%E7%9A%84%E6%B3%A8%E9%87%8A"}},[a._v("未push之前更改提交的注释")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#%E5%BC%BA%E5%88%B6push%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%88%B0%E8%BF%9C%E7%A8%8B"}},[a._v("强制push本地仓库到远程")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#pull%E5%BC%BA%E5%88%B6%E8%A6%86%E7%9B%96%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6"}},[a._v("pull强制覆盖本地文件")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#%E6%B8%85%E9%99%A4%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81"}},[a._v("清除用户名密码")])])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3"}},[a._v("问题解决")])]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E9%A1%B9%E7%9B%AE%E8%BF%87%E5%A4%A7clone%E6%8A%A5%E9%94%99"}},[a._v("项目过大clone报错")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#%E6%8F%90%E4%BA%A4%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B1%E8%B4%A5"}},[a._v("提交本地文件失败")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#%E8%BF%9C%E7%AB%AF%E4%B8%8E%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%86%B2%E7%AA%81"}},[a._v("远端与本地代码冲突")])])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE"}},[a._v("批量更新本地项目")])])])]),a._v(" "),s("hr"),a._v(" "),s("h1",{attrs:{id:"使用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用命令","aria-hidden":"true"}},[a._v("#")]),a._v(" 使用命令")]),a._v(" "),s("h2",{attrs:{id:"把空文件夹提交到仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#把空文件夹提交到仓库","aria-hidden":"true"}},[a._v("#")]),a._v(" 把空文件夹提交到仓库")]),a._v(" "),s("blockquote",[s("p",[a._v("这个只能说是技巧不能说是方法，原理是在每个空文件夹新建一个.gitignore文件")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v(".")]),a._v(" -type d -empty -exec "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/.gitignore \\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"更换项目地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更换项目地址","aria-hidden":"true"}},[a._v("#")]),a._v(" 更换项目地址")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看当前的远程地址")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote -v   \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除当前的远程地址")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" origin\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote remove origin\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 添加远程地址")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者直接修改")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote set-url origin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("（此处未更新后的新地址）\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将本地仓库文件push到新的远程仓库（-f代表强制）")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin master -f\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者把当前分支与远程分支进行关联(branchname要改成你的当前分支名称)")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push --set-upstream origin branchname\n\n")])])]),s("h2",{attrs:{id:"未push之前更改提交的注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未push之前更改提交的注释","aria-hidden":"true"}},[a._v("#")]),a._v(" 未push之前更改提交的注释")]),a._v(" "),s("blockquote",[s("p",[a._v("如果提交了代码到本地，还没push，发现同步时提交的变更内容的注释填写有误。")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看提交文件，里面包含注释和变更内容")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --amend\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 按v进入编辑模式，更改完成后按esc然后输入:qw! 保存")]),a._v("\n")])])]),s("h2",{attrs:{id:"强制push本地仓库到远程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强制push本地仓库到远程","aria-hidden":"true"}},[a._v("#")]),a._v(" 强制push本地仓库到远程")]),a._v(" "),s("blockquote",[s("p",[a._v("这种情况不会进行merge, 强制push后远程文件可能会丢失,不建议使用此方法")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push -u origin master -f\n")])])]),s("h2",{attrs:{id:"pull强制覆盖本地文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pull强制覆盖本地文件","aria-hidden":"true"}},[a._v("#")]),a._v(" pull强制覆盖本地文件")]),a._v(" "),s("blockquote",[s("p",[a._v("如果有任何本地更改，将会丢失。无论是否有--hard选项，任何未被推送的本地提交都将丢失。\n如果您有任何未被Git跟踪的文件(例如上传的用户内容)，这些文件将不会受到影响。")])]),a._v(" "),s("h3",{attrs:{id:"在重置之前可以通过从master创建一个分支来维护当前的本地提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在重置之前可以通过从master创建一个分支来维护当前的本地提交","aria-hidden":"true"}},[a._v("#")]),a._v(" 在重置之前可以通过从master创建一个分支来维护当前的本地提交")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout master\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch new-branch\n")])])]),s("blockquote",[s("p",[a._v("在此之后，所有旧的提交都将保存在"),s("code",[a._v("new-branch")]),a._v("中。然而，没有提交的更改(即使staged)将会丢失。确保存储和提交任何你需要的东西。")])]),a._v(" "),s("h3",{attrs:{id:"执行重置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行重置","aria-hidden":"true"}},[a._v("#")]),a._v(" 执行重置")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从远程下载最新的，而不尝试合并或rebase任何东西")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch --all\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# reset将主分支重置为您刚刚获取的内容。 --hard选项更改工作树中的所有文件以匹配origin/<branch_name>中的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset --hard origin/"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("h2",{attrs:{id:"清除用户名密码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清除用户名密码","aria-hidden":"true"}},[a._v("#")]),a._v(" 清除用户名密码")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --system --unset credential.helper\n")])])]),s("h2",{attrs:{id:"git恢复指定文件到之前的版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git恢复指定文件到之前的版本","aria-hidden":"true"}},[a._v("#")]),a._v(" git恢复指定文件到之前的版本")]),a._v(" "),s("h3",{attrs:{id:"查看commit历史，并复制需要回退版本的hash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看commit历史，并复制需要回退版本的hash","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看commit历史，并复制需要回退版本的hash")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log 文件名\n")])])]),s("h3",{attrs:{id:"恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#恢复","aria-hidden":"true"}},[a._v("#")]),a._v(" 恢复")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout 复制的hash值 文件名\n")])])]),s("hr"),a._v(" "),s("h2",{attrs:{id:"项目过大clone报错"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目过大clone报错","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目过大clone报错")]),a._v(" "),s("p",[a._v("https://vnzmi.com/2017/01/08/git-early-eof-index-pack-failed/")]),a._v(" "),s("h3",{attrs:{id:"git-由于提交了比较大的文件，在服务端一直无法拉下来，错误如下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-由于提交了比较大的文件，在服务端一直无法拉下来，错误如下","aria-hidden":"true"}},[a._v("#")]),a._v(" git 由于提交了比较大的文件，在服务端一直无法拉下来，错误如下")]),a._v(" "),s("div",{staticClass:"language-diff extra-class"},[s("pre",{pre:!0,attrs:{class:"language-diff"}},[s("code",[a._v("Cloning into 'E:\\soft'...\nPOST git-upload-pack (175 bytes)\nremote: Enumerating objects: 6, done.\nremote: Counting objects: 100% (6/6), done.\nremote: Compressing objects: 100% (6/6), done.\nfatal: early EOF\nfatal: the remote end hung up unexpectedly\nfatal: index-pack failed\n")])])]),s("h3",{attrs:{id:"执行命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行命令","aria-hidden":"true"}},[a._v("#")]),a._v(" 执行命令")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 修改压缩的程度")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global core.compression 0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 解决内存不够问题")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global pack.deltaCacheSize 2047m\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global pack.packSizeLimit 2047m\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global pack.windowMemory 2047m\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global core.packedGitWindowSize 512m\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global core.packedGitLimit 512m\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 调整缓存大小（单位为字节）为1G")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global http.postBuffer 1073741824\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最低速度限制")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global http.lowSpeedLimit 0\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最低速度时间")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global http.lowSpeedTime 999999\n")])])]),s("blockquote",[s("p",[a._v("compression 是压缩的意思，从 clone 的终端输出就知道，服务器会压缩目标文件，然后传输到客户端，客户端再解压。\n取值为 [-1, 9]，-1 以 zlib 为默认压缩库，0 表示不进行压缩，1..9 是压缩速度与最终获得文件大小的不同程度的权衡，数字越大，压缩越慢，当然得到的文件会越小。")])]),a._v(" "),s("h2",{attrs:{id:"提交本地文件失败"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交本地文件失败","aria-hidden":"true"}},[a._v("#")]),a._v(" 提交本地文件失败")]),a._v(" "),s("blockquote",[s("p",[a._v("在github远程创建仓库后, 利用gitbash进行提交本地文件的时候出现如下错误")])]),a._v(" "),s("div",{staticClass:"language-diff extra-class"},[s("pre",{pre:!0,attrs:{class:"language-diff"}},[s("code",[a._v("[root@foundation38 demo]# git push -u origin master\nUsername for 'https://github.com': woytu\nPassword for 'https://woytu@github.com': \nTo https://github.com/woytu/test.git\n ! [rejected]        master -> master (non-fast-forward)\nerror: failed to push some refs to 'https://github.com/woytu/test.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Merge the remote changes (e.g. 'git pull')\nhint: before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n")])])]),s("h3",{attrs:{id:"解决方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方式","aria-hidden":"true"}},[a._v("#")]),a._v(" 解决方式")]),a._v(" "),s("h4",{attrs:{id:"第一种：进行push前先将远程仓库pull到本地仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一种：进行push前先将远程仓库pull到本地仓库","aria-hidden":"true"}},[a._v("#")]),a._v(" 第一种：进行push前先将远程仓库pull到本地仓库")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# git pull --rebase origin master")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull origin master\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push -u origin master\n\n")])])]),s("h4",{attrs:{id:"第二种：强制push本地仓库到远程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二种：强制push本地仓库到远程","aria-hidden":"true"}},[a._v("#")]),a._v(" 第二种：强制push本地仓库到远程")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push -u origin master -f\n")])])]),s("h4",{attrs:{id:"第三种：避开解决冲突-将本地文件暂时提交到远程新建的分支中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三种：避开解决冲突-将本地文件暂时提交到远程新建的分支中","aria-hidden":"true"}},[a._v("#")]),a._v(" 第三种：避开解决冲突, 将本地文件暂时提交到远程新建的分支中")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建完branch后, 再进行push")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push -u origin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" \n")])])]),s("h2",{attrs:{id:"远端与本地代码冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远端与本地代码冲突","aria-hidden":"true"}},[a._v("#")]),a._v(" 远端与本地代码冲突")]),a._v(" "),s("h3",{attrs:{id:"_1、先将本地修改存储起来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、先将本地修改存储起来","aria-hidden":"true"}},[a._v("#")]),a._v(" 1、先将本地修改存储起来")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 暂存修改,这样本地的所有修改就都被暂时存储起来")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 看到保存的信息,其中stash@{0}就是刚才保存的标记。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash list\n")])])]),s("h3",{attrs:{id:"_2、暂存了本地修改之后，pull内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、暂存了本地修改之后，pull内容","aria-hidden":"true"}},[a._v("#")]),a._v(" 2、暂存了本地修改之后，pull内容")]),a._v(" "),s("h3",{attrs:{id:"_3、还原暂存的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、还原暂存的内容","aria-hidden":"true"}},[a._v("#")]),a._v(" 3、还原暂存的内容")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash popstash@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"系统提示如下类似的信息："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统提示如下类似的信息：","aria-hidden":"true"}},[a._v("#")]),a._v(" 系统提示如下类似的信息：")]),a._v(" "),s("div",{staticClass:"language-diff extra-class"},[s("pre",{pre:!0,attrs:{class:"language-diff"}},[s("code",[a._v("Auto-mergingc/environ.c\nCONFLICT(content): Merge conflict in c/environ.c\n")])])]),s("blockquote",[s("p",[a._v("意思就是系统自动合并修改的内容，但是其中有冲突，需要解决其中的冲突。")])]),a._v(" "),s("h3",{attrs:{id:"解决文件中冲突的的部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决文件中冲突的的部分","aria-hidden":"true"}},[a._v("#")]),a._v(" 解决文件中冲突的的部分")]),a._v(" "),s("blockquote",[s("p",[a._v("打开冲突的文件，其中Updatedupstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容。\n碰到这种情况，git也不知道哪行内容是需要的，所以要自行确定需要的内容。")])]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"批量更新本地项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#批量更新本地项目","aria-hidden":"true"}},[a._v("#")]),a._v(" 批量更新本地项目")]),a._v(" "),s("h3",{attrs:{id:"windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows","aria-hidden":"true"}},[a._v("#")]),a._v(" Windows")]),a._v(" "),s("div",{staticClass:"language-batch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-batch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("@")]),s("span",{pre:!0,attrs:{class:"token command"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" off")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v(":: 遍历当前目录下的子目录")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[a._v("/f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"delims="')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("%%i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("'")]),a._v("dir /ad/b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    :: 切换到子目录\n    "),s("span",{pre:!0,attrs:{class:"token command"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("%%i")])]),a._v("\n    :: 判断文件夹是否存在\n    "),s("span",{pre:!0,attrs:{class:"token command"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("exist")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".git"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n        :: 列出远程仓库地址\n        "),s("span",{pre:!0,attrs:{class:"token command"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("git")]),a._v(" remote "),s("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[a._v("-v")])]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token command"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" ******** 开始更新 "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("%%i")]),a._v(" **********")]),a._v("\n        :: 更新\n        "),s("span",{pre:!0,attrs:{class:"token command"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("git")]),a._v(" pull")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token command"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" -----------------------------------------------------------")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token command"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("cd")]),a._v(" ..")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token command"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("pause")])]),a._v("\n")])])]),s("h3",{attrs:{id:"linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux","aria-hidden":"true"}},[a._v("#")]),a._v(" Linux")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/bin/bash")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" readdir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# awk中有RS,ORS,FS,OFS 4个可以定义分隔符的变量")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 保存原有的IFS（内部域分隔符）")]),a._v("\n    SAVEIFS"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$IFS")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置带有空格的文件名的处理方式")]),a._v("\n    IFS"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" -en "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\\n\\b"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 切换到指定目录")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$*")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 循环参数中指定目录的子目录")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -F "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" /$"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 切换到子目录")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$file")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置执行结果变量")]),a._v("\n        dir_variable"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$?")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果切换到子目录失败")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$dir_variable")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$dir_variable")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$*")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$file")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 判断是否是git项目")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -d "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".git"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出git远端仓库路径")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote -v\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" 开始更新： "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$file")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" -----------------------------------------------------------\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 循环当前子目录下的子目录")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#readdir $1$file")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 恢复原有的IFS")]),a._v("\n    IFS"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SAVEIFS")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 调用shell函数并传参")]),a._v("\nreaddir "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n")])])])])},[],!1,null,null,null);t.default=n.exports}}]);