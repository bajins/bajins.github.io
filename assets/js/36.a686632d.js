(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{300:function(e,a,t){"use strict";t.r(a);var v=t(2),_=Object(v.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"java注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java注解","aria-hidden":"true"}},[e._v("#")]),e._v(" Java注解")]),e._v(" "),t("h2",{attrs:{id:"spring部分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring部分","aria-hidden":"true"}},[e._v("#")]),e._v(" Spring部分")]),e._v(" "),t("h3",{attrs:{id:"_1-声明bean的注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-声明bean的注解","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.声明bean的注解")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@Component")]),e._v(" 组件，没有明确的角色")]),e._v(" "),t("p",[t("code",[e._v("@Service")]),e._v(" 在业务逻辑层使用（service层）")]),e._v(" "),t("p",[t("code",[e._v("@Repository")]),e._v(" 在数据访问层使用（dao层）")]),e._v(" "),t("p",[t("code",[e._v("@Controller")]),e._v(" 在展现层使用，控制器的声明（C）")])]),e._v(" "),t("h3",{attrs:{id:"_2-注入bean的注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-注入bean的注解","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.注入bean的注解")]),e._v(" "),t("h4",{attrs:{id:"都可以注解在set方法和属性上，推荐注解在属性上（一目了然，少写代码）。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#都可以注解在set方法和属性上，推荐注解在属性上（一目了然，少写代码）。","aria-hidden":"true"}},[e._v("#")]),e._v(" 都可以注解在set方法和属性上，推荐注解在属性上（一目了然，少写代码）。")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@Autowired")]),e._v(" 由Spring提供")]),e._v(" "),t("p",[t("code",[e._v("@Inject")]),e._v(" 由JSR-330提供")]),e._v(" "),t("p",[t("code",[e._v("@Resource")]),e._v(" 由JSR-250提供")])]),e._v(" "),t("h3",{attrs:{id:"_3-java配置类相关注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-java配置类相关注解","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.java配置类相关注解")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@Configuration")]),e._v(" 声明当前类为配置类，相当于xml形式的Spring配置（类上）")]),e._v(" "),t("p",[t("code",[e._v("@Bean")]),e._v(" 注解在方法上，声明当前方法的返回值为一个bean，替代xml中的方式（方法上）")]),e._v(" "),t("p",[t("code",[e._v("@Configuration")]),e._v(" 声明当前类为配置类，其中内部组合了"),t("code",[e._v("@Component")]),e._v("注解，表明这个类是一个bean（类上）")]),e._v(" "),t("p",[t("code",[e._v("@ComponentScan")]),e._v(" 用于对Component进行扫描，相当于xml中的（类上）")]),e._v(" "),t("p",[t("code",[e._v("@WishlyConfiguration")]),e._v(" 为"),t("code",[e._v("@Configuration")]),e._v("与"),t("code",[e._v("@ComponentScan")]),e._v("的组合注解，可以替代这两个注解")])]),e._v(" "),t("h3",{attrs:{id:"_4-切面（aop）相关注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-切面（aop）相关注解","aria-hidden":"true"}},[e._v("#")]),e._v(" 4.切面（AOP）相关注解")]),e._v(" "),t("h4",{attrs:{id:"spring支持aspectj的注解式切面编程。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring支持aspectj的注解式切面编程。","aria-hidden":"true"}},[e._v("#")]),e._v(" Spring支持AspectJ的注解式切面编程。")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@Aspect")]),e._v(" 声明一个切面（类上）")]),e._v(" "),t("blockquote",[t("p",[e._v("使用"),t("code",[e._v("@After")]),e._v("、"),t("code",[e._v("@Before")]),e._v("、"),t("code",[e._v("@Around")]),e._v("定义建言（advice），可直接将拦截规则（切点）作为参数。")])]),e._v(" "),t("p",[t("code",[e._v("@After")]),e._v(" 在方法执行之后执行（方法上）\n"),t("code",[e._v("@Before")]),e._v(" 在方法执行之前执行（方法上）\n"),t("code",[e._v("@Around")]),e._v(" 在方法执行之前与之后执行（方法上）")]),e._v(" "),t("p",[t("code",[e._v("@PointCut")]),e._v(" 声明切点\n在java配置类中使用"),t("code",[e._v("@EnableAspectJAutoProxy")]),e._v("注解开启Spring对AspectJ代理的支持（类上）")])]),e._v(" "),t("h3",{attrs:{id:"_5-bean的属性支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-bean的属性支持","aria-hidden":"true"}},[e._v("#")]),e._v(" 5.@Bean的属性支持")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@Scope")]),e._v(" 设置Spring容器如何新建Bean实例（方法上，得有"),t("code",[e._v("@Bean")]),e._v("）\n其设置类型包括：")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("Singleton")]),e._v(" （单例,一个Spring容器中只有一个bean实例，默认模式）,\n"),t("code",[e._v("Protetype")]),e._v(" （每次调用新建一个bean）,\n"),t("code",[e._v("Request")]),e._v(" （web项目中，给每个http request新建一个bean）,\n"),t("code",[e._v("Session")]),e._v(" （web项目中，给每个http session新建一个bean）,\n"),t("code",[e._v("GlobalSession")]),e._v("（给每一个 global http session新建一个Bean实例）")])]),e._v(" "),t("p",[t("code",[e._v("@StepScope")]),e._v(" 在Spring Batch中还有涉及")]),e._v(" "),t("p",[t("code",[e._v("@PostConstruct")]),e._v(" 由JSR-250提供，在构造函数执行完之后执行，等价于xml配置文件中bean的initMethod")]),e._v(" "),t("p",[t("code",[e._v("@PreDestory")]),e._v(" 由JSR-250提供，在Bean销毁之前执行，等价于xml配置文件中bean的destroyMethod")])]),e._v(" "),t("h3",{attrs:{id:"_6-value注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-value注解","aria-hidden":"true"}},[e._v("#")]),e._v(" 6.@Value注解")]),e._v(" "),t("h4",{attrs:{id:"value-为属性注入值（属性上）-支持如下方式的注入："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#value-为属性注入值（属性上）-支持如下方式的注入：","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("code",[e._v("@Value")]),e._v(" 为属性注入值（属性上）,支持如下方式的注入：")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v('@Value("Michael Jackson")')]),e._v(" String name; 注入普通字符")]),e._v(" "),t("p",[t("code",[e._v("@Value(\"#{systemProperties['os.name']}\")")]),e._v(" String osName; 注入操作系统属性")]),e._v(" "),t("p",[t("code",[e._v('@Value("#{ T(java.lang.Math).random() * 100 }")')]),e._v(" String randomNumber; 注入表达式结果")]),e._v(" "),t("p",[t("code",[e._v('@Value("#{domeClass.name}")')]),e._v(" String name; 注入其它bean属性")]),e._v(" "),t("p",[t("code",[e._v('@Value("classpath:com/hgs/hello/test.txt")')]),e._v(" String Resource file; 注入文件资源")]),e._v(" "),t("p",[t("code",[e._v('@Value("http://www.cznovel.com")')]),e._v(" Resource url; 注入网站资源")]),e._v(" "),t("p",[t("code",[e._v('@Value("${book.name}")')]),e._v(" String bookName; 注入配置文件")])]),e._v(" "),t("h4",{attrs:{id:"注入配置使用方法："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注入配置使用方法：","aria-hidden":"true"}},[e._v("#")]),e._v(" 注入配置使用方法：")]),e._v(" "),t("blockquote",[t("p",[e._v("① 编写配置文件（test.properties）")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("book.name= test\n")])])]),t("blockquote",[t("p",[e._v("② "),t("code",[e._v("@PropertySource")]),e._v(" 加载配置文件(类上)")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('@PropertySource("classpath:/test.propertie")\n')])])]),t("blockquote",[t("p",[e._v("③ 还需配置一个"),t("code",[e._v("PropertySourcesPlaceholderConfigurer")]),e._v("的bean。")])]),e._v(" "),t("h3",{attrs:{id:"_7-环境切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-环境切换","aria-hidden":"true"}},[e._v("#")]),e._v(" 7.环境切换")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@Profile")]),e._v(" 通过设定Environment的ActiveProfiles来设定当前context需要使用的配置环境。（类或方法上）")]),e._v(" "),t("p",[t("code",[e._v("@Conditional")]),e._v(" Spring4中可以使用此注解定义条件话的bean，通过实现Condition接口，并重写matches方法，从而决定该bean是否被实例化。（方法上）")])]),e._v(" "),t("h3",{attrs:{id:"_8-异步相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-异步相关","aria-hidden":"true"}},[e._v("#")]),e._v(" 8.异步相关")]),e._v(" "),t("blockquote",[t("p",[e._v("@EnableAsync 配置类中，通过此注解开启对异步任务的支持，叙事性AsyncConfigurer接口（类上）")]),e._v(" "),t("p",[e._v("@Async 在实际执行的bean方法使用该注解来申明其是一个异步任务（方法上或类上所有的方法都将异步，需要@EnableAsync开启异步任务）")])]),e._v(" "),t("h3",{attrs:{id:"_9-定时任务相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-定时任务相关","aria-hidden":"true"}},[e._v("#")]),e._v(" 9.定时任务相关")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@EnableScheduling")]),e._v(" 在配置类上使用，开启计划任务的支持（类上）")]),e._v(" "),t("p",[t("code",[e._v("@Scheduled")]),e._v(" 来申明这是一个任务，包括cron,fixDelay,fixRate等类型（方法上，需先开启计划任务的支持）")])]),e._v(" "),t("h3",{attrs:{id:"_10-enable-注解说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-enable-注解说明","aria-hidden":"true"}},[e._v("#")]),e._v(" 10.@Enable*注解说明")]),e._v(" "),t("h4",{attrs:{id:"这些注解主要用来开启对xxx的支持。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#这些注解主要用来开启对xxx的支持。","aria-hidden":"true"}},[e._v("#")]),e._v(" 这些注解主要用来开启对xxx的支持。")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@EnableAspectJAutoProxy")]),e._v(" 开启对AspectJ自动代理的支持")]),e._v(" "),t("p",[t("code",[e._v("@EnableAsync")]),e._v(" 开启异步方法的支持")]),e._v(" "),t("p",[t("code",[e._v("@EnableScheduling")]),e._v(" 开启计划任务的支持")]),e._v(" "),t("p",[t("code",[e._v("@EnableWebMvc")]),e._v(" 开启Web MVC的配置支持")]),e._v(" "),t("p",[t("code",[e._v("@EnableConfigurationProperties")]),e._v(" 开启对"),t("code",[e._v("@ConfigurationProperties")]),e._v("注解配置Bean的支持")]),e._v(" "),t("p",[t("code",[e._v("@EnableJpaRepositories")]),e._v(" 开启对SpringData JPA Repository的支持")]),e._v(" "),t("p",[t("code",[e._v("@EnableTransactionManagement")]),e._v(" 开启注解式事务的支持")]),e._v(" "),t("p",[t("code",[e._v("@EnableTransactionManagement")]),e._v(" 开启注解式事务的支持")]),e._v(" "),t("p",[t("code",[e._v("@EnableCaching")]),e._v(" 开启注解式的缓存支持")])]),e._v(" "),t("h3",{attrs:{id:"_11-测试相关注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-测试相关注解","aria-hidden":"true"}},[e._v("#")]),e._v(" 11.测试相关注解")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@RunWith")]),e._v(" 运行器，Spring中通常用于对JUnit的支持")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@RunWith(SpringJUnit4ClassRunner.class)")])])]),e._v(" "),t("p",[t("code",[e._v("@ContextConfiguration")]),e._v(" 用来加载配置ApplicationContext，其中classes属性用来加载配置类")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@ContextConfiguration(classes={TestConfig.class})")])])])]),e._v(" "),t("h2",{attrs:{id:"springmvc部分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springmvc部分","aria-hidden":"true"}},[e._v("#")]),e._v(" SpringMVC部分")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("@EnableWebMvc")]),e._v(" 在配置类中开启Web MVC的配置支持，如一些ViewResolver或者MessageConverter等，若无此句，重写WebMvcConfigurerAdapter方法（用于对SpringMVC的配置）。")]),e._v(" "),t("p",[t("code",[e._v("@Controller")]),e._v(" 声明该类为SpringMVC中的Controller")]),e._v(" "),t("p",[t("code",[e._v("@RequestMapping")]),e._v(" 用于映射Web请求，包括访问路径和参数（类或方法上）")]),e._v(" "),t("p",[t("code",[e._v("@ResponseBody")]),e._v(" 支持将返回值放在response内，而不是一个页面，通常用户返回json数据（返回值旁或方法上）")]),e._v(" "),t("p",[t("code",[e._v("@RequestBody")]),e._v(" 允许request的参数在request体中，而不是在直接连接在地址后面。（放在参数前）")]),e._v(" "),t("p",[t("code",[e._v("@PathVariable")]),e._v(" 用于接收路径参数，比如"),t("code",[e._v("@RequestMapping(“/hello/{name}”)")]),e._v("申明的路径，将注解放在参数中前，即可获取该值，通常作为Restful的接口实现方法。")]),e._v(" "),t("p",[t("code",[e._v("@RestController")]),e._v(" 该注解为一个组合注解，相当于"),t("code",[e._v("@Controller")]),e._v("和"),t("code",[e._v("@ResponseBody")]),e._v("的组合，注解在类上，意味着，该Controller的所有方法都默认加上了"),t("code",[e._v("@ResponseBody")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("@ControllerAdvice")]),e._v(" 通过该注解，我们可以将对于控制器的全局配置放置在同一个位置，注解了"),t("code",[e._v("@Controller")]),e._v("的类的方法可使用"),t("code",[e._v("@ExceptionHandler")]),e._v("、"),t("code",[e._v("@InitBinder")]),e._v("、"),t("code",[e._v("@ModelAttribute")]),e._v("注解到方法上，这对所有注解了 "),t("code",[e._v("@RequestMapping")]),e._v("的控制器内的方法有效。")]),e._v(" "),t("p",[t("code",[e._v("@ExceptionHandler")]),e._v(" 用于全局处理控制器里的异常")]),e._v(" "),t("p",[t("code",[e._v("@InitBinder")]),e._v(" 用来设置WebDataBinder，WebDataBinder用来自动绑定前台请求参数到Model中。")]),e._v(" "),t("p",[t("code",[e._v("@ModelAttribute")]),e._v(" 本来的作用是绑定键值对到Model里，在"),t("code",[e._v("@ControllerAdvice")]),e._v("中是让全局的"),t("code",[e._v("@RequestMapping")]),e._v("都能获得在此处设置的键值对。")])])])},[],!1,null,null,null);a.default=_.exports}}]);