(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{435:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"表达式和编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表达式和编码"}},[t._v("#")]),t._v(" 表达式和编码")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#flag"}},[t._v("Flag")])]),e("li",[e("a",{attrs:{href:"#进制"}},[t._v("进制")])]),e("li",[e("a",{attrs:{href:"#逻辑运算符"}},[t._v("逻辑运算符")])]),e("li",[e("a",{attrs:{href:"#字符集编码"}},[t._v("字符集编码")]),e("ul",[e("li",[e("a",{attrs:{href:"#unicode"}},[t._v("Unicode")])]),e("li",[e("a",{attrs:{href:"#ascii"}},[t._v("ASCII")])])])]),e("li",[e("a",{attrs:{href:"#cron表达式"}},[t._v("Cron表达式")])]),e("li",[e("a",{attrs:{href:"#glob通配符"}},[t._v("Glob通配符")])]),e("li",[e("a",{attrs:{href:"#正则表达式"}},[t._v("正则表达式")]),e("ul",[e("li",[e("a",{attrs:{href:"#正则转义"}},[t._v("正则转义")])]),e("li",[e("a",{attrs:{href:"#正则模式"}},[t._v("正则模式")])]),e("li",[e("a",{attrs:{href:"#正则使用"}},[t._v("正则使用")])])])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"flag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flag"}},[t._v("#")]),t._v(" Flag")]),t._v(" "),e("blockquote",[e("p",[t._v("各种表达式以及编码")])]),t._v(" "),e("ul",[e("li",[t._v("有问题的字符串 "),e("a",{attrs:{href:"https://github.com/minimaxir/big-list-of-naughty-strings",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/minimaxir/big-list-of-naughty-strings"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E9%9B%B6%E5%AE%BD%E7%A9%BA%E6%A0%BC",target:"_blank",rel:"noopener noreferrer"}},[t._v("零宽空格（zero-width space, ZWSP"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"进制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进制"}},[t._v("#")]),t._v(" 进制")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("进制")]),t._v(" "),e("th",[t._v("英文")]),t._v(" "),e("th",[t._v("范围")]),t._v(" "),e("th",[t._v("前缀")]),t._v(" "),e("th",[t._v("后缀")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("二进制")]),t._v(" "),e("td",[t._v("Binary")]),t._v(" "),e("td",[t._v("0-1")]),t._v(" "),e("td",[t._v("0b")]),t._v(" "),e("td",[t._v("B")])]),t._v(" "),e("tr",[e("td",[t._v("八进制")]),t._v(" "),e("td",[t._v("Octal")]),t._v(" "),e("td",[t._v("0-7")]),t._v(" "),e("td",[t._v("0/0O")]),t._v(" "),e("td",[t._v("O")])]),t._v(" "),e("tr",[e("td",[t._v("十进制")]),t._v(" "),e("td",[t._v("Decimal")]),t._v(" "),e("td",[t._v("0-9")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("D")])]),t._v(" "),e("tr",[e("td",[t._v("十六进制")]),t._v(" "),e("td",[t._v("Hexadecimal")]),t._v(" "),e("td",[t._v("0-9, A-F")]),t._v(" "),e("td",[t._v("0x")]),t._v(" "),e("td",[t._v("H")])])])]),t._v(" "),e("h2",{attrs:{id:"逻辑运算符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("运算符")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("AND")]),t._v(" "),e("td",[t._v("与("),e("code",[t._v("&&")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[t._v("NOT")]),t._v(" "),e("td",[t._v("非("),e("code",[t._v("!")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[t._v("OR")]),t._v(" "),e("td",[t._v("或("),e("code",[t._v("||")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[t._v("EQ")]),t._v(" "),e("td",[t._v("EQUAL等于("),e("code",[t._v("==")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[t._v("NE")]),t._v(" "),e("td",[t._v("NOT EQUAL不等于("),e("code",[t._v("!=")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[t._v("GT")]),t._v(" "),e("td",[t._v("GREATER THAN大于("),e("code",[t._v(">")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[t._v("GE")]),t._v(" "),e("td",[t._v("GREATER THAN OR EQUAL 大于等于("),e("code",[t._v(">=")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[t._v("LT")]),t._v(" "),e("td",[t._v("LESS THAN小于("),e("code",[t._v("<")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[t._v("LE")]),t._v(" "),e("td",[t._v("LESS THAN OR EQUAL 小于等于("),e("code",[t._v("<=")]),t._v(")")])])])]),t._v(" "),e("h2",{attrs:{id:"字符集编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符集编码"}},[t._v("#")]),t._v(" 字符集编码")]),t._v(" "),e("blockquote",[e("p",[t._v("字符集（Character Set）定义“有哪些字符”，是一个抽象的字符集合，为每个字符分配一个唯一的编号（称为 码点，Code Point）。")])]),t._v(" "),e("blockquote",[e("p",[t._v("字符编码（Character Encoding）定义“这些字符怎么存成字节”，是将字符集中的码点（数字）转换为计算机可存储/传输的字节序列的规则。")])]),t._v(" "),e("blockquote",[e("p",[t._v("在 Windows 系统中，“ANSI 编码” 实际上是 对当前系统“默认本地代码页（Default Code Page）”的误称。指当前系统的默认单字节或多字节本地编码（如中文系统就是 GBK）。")])]),t._v(" "),e("h3",{attrs:{id:"unicode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unicode"}},[t._v("#")]),t._v(" Unicode")]),t._v(" "),e("blockquote",[e("p",[t._v("Unicode是国际标准(字符集)，用于表示文字。Unicode使用UTF-8编码，UTF-8编码是可变长度的编码方式。")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/unicode-org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/unicode-org"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://unicode.org/reports/tr44/#GC_Values_Table",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://unicode.org/reports/tr44/#GC_Values_Table"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/slevithan/xregexp/blob/2b652889fc14524d20f85604f291f725347f8033/src/addons/unicode-categories.js#L30",target:"_blank",rel:"noopener noreferrer"}},[t._v("unicode-categories"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://emojipedia.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://emojipedia.org"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/topics/emoji",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/topics/emoji"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/rotick/searchemoji",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/rotick/searchemoji"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/hfg-gmuend/openmoji",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/hfg-gmuend/openmoji"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://emojispark.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://emojispark.com"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.compart.com/en/unicode",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.compart.com/en/unicode"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[t._v("Unicode最基本的知识 "),e("a",{attrs:{href:"https://tonsky.me/blog/unicode",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://tonsky.me/blog/unicode"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/OverflowCat/blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/OverflowCat/blog"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/fan-yuan/p/8176886.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("UniCode编码表及部分不可见字符过滤方案"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://zh.wikipedia.org/w/index.php?title=%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F#Unicode%E5%A4%84%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式#Unicode处理"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://unicode-table.com/cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unicode®字符百科"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.fuhaoku.net/blocks",target:"_blank",rel:"noopener noreferrer"}},[t._v("统一码所有区段"),e("OutboundLink")],1)])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Unicode")]),t._v(" "),e("th",[t._v("意义")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("u0024")]),t._v(" "),e("td",[t._v("$")])]),t._v(" "),e("tr",[e("td",[t._v("u0028")]),t._v(" "),e("td",[t._v("(")])]),t._v(" "),e("tr",[e("td",[t._v("u0029")]),t._v(" "),e("td",[t._v(")")])]),t._v(" "),e("tr",[e("td",[t._v("u002A")]),t._v(" "),e("td",[t._v("*")])]),t._v(" "),e("tr",[e("td",[t._v("u002B")]),t._v(" "),e("td",[t._v("+")])]),t._v(" "),e("tr",[e("td",[t._v("u002E")]),t._v(" "),e("td",[t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("u003F")]),t._v(" "),e("td",[t._v("?")])]),t._v(" "),e("tr",[e("td",[t._v("u005B")]),t._v(" "),e("td",[t._v("[")])]),t._v(" "),e("tr",[e("td",[t._v("u005C")]),t._v(" "),e("td",[e("code",[t._v("\\")])])]),t._v(" "),e("tr",[e("td",[t._v("u005E")]),t._v(" "),e("td",[t._v("^")])]),t._v(" "),e("tr",[e("td",[t._v("u007B")]),t._v(" "),e("td",[t._v("{")])]),t._v(" "),e("tr",[e("td",[t._v("u007C")]),t._v(" "),e("td",[e("code",[t._v("|")])])]),t._v(" "),e("tr",[e("td",[t._v("u007D")]),t._v(" "),e("td",[t._v("}")])]),t._v(" "),e("tr",[e("td",[t._v("u0009")]),t._v(" "),e("td",[t._v("t")])]),t._v(" "),e("tr",[e("td",[t._v("u000A")]),t._v(" "),e("td",[t._v("n")])]),t._v(" "),e("tr",[e("td",[t._v("u000D")]),t._v(" "),e("td",[t._v("r")])]),t._v(" "),e("tr",[e("td",[t._v("u0022")]),t._v(" "),e("td",[t._v('"')])]),t._v(" "),e("tr",[e("td",[t._v("u002C")]),t._v(" "),e("td",[t._v(",")])]),t._v(" "),e("tr",[e("td",[t._v("u003A")]),t._v(" "),e("td",[t._v(":")])])])]),t._v(" "),e("ul",[e("li",[t._v("GBK、GB2312等与UTF8之间都必须通过Unicode编码才能相互转换\n"),e("ul",[e("li",[t._v("GBK、GB2312 -> Unicode -> UTF8")]),t._v(" "),e("li",[t._v("UTF8 -> Unicode -> GBK、GB2312")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("Unicode TransformationFormat-8bit，允许含BOM，但通常不含BOM。是用以解决国际上字符的一种多字节编码，\n它对英文使用8位（即一个字节），中文使用24为（三个字节）来编码。UTF-8包含全世界所有国家需要用到的字符，是国际编码，通用性强。")])]),t._v(" "),e("blockquote",[e("p",[t._v("GBK是国家标准GB2312基础上扩容后兼容GB2312的标准。GBK的文字编码是用双字节来表示的，即不论中、英文字符均使用双字节来表示，\n为了区分中文，将其最高位都设定成1。GBK包含全部中文字符，是国家编码，通用性比UTF8差，不过UTF8占用的数据库比GBK大。")])]),t._v(" "),e("p",[e("strong",[t._v("零宽度字符/零宽字符")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Zero-width_space",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://en.wikipedia.org/wiki/Zero-width_space"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://emojipedia.org/zero-width-joiner",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://emojipedia.org/zero-width-joiner"),e("OutboundLink")],1)])]),t._v(" "),e("blockquote",[e("p",[t._v("零宽度字符是一些不可见的，不可打印的字符。")])]),t._v(" "),e("blockquote",[e("p",[t._v("不可见且不占位置字符："),e("code",[t._v("\\u200D\\u202A\\u202B\\u202C\\u202D\\u202E\\u2060\\u2061\\u2062\\u2063\\u2064\\u2065\\u206A\\u206B\\u206C\\u206D\\u206E\\u206F")])])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/yuanfux/zero-width-lib",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/yuanfux/zero-width-lib"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/330k/misc_tools",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/330k/misc_tools"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/rover95/morse-encrypt",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/rover95/morse-encrypt"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[t._v("零宽度空格符 (zero-width space) U+200B : 用于较长单词的换行分隔")]),t._v(" "),e("li",[t._v("零宽度非断空格符 (zero width no-break space) U+FEFF : 用于阻止特定位置的换行分隔")]),t._v(" "),e("li",[t._v("零宽度连字符 (zero-width joiner) U+200D : 用于阿拉伯文与印度语系等文字中，使不会发生连字的字符间产生连字效果")]),t._v(" "),e("li",[t._v("零宽度断字符 (zero-width non-joiner) U+200C : 用于阿拉伯文，德文，印度语系等文字中，阻止会发生连字的字符间的连字效果")]),t._v(" "),e("li",[t._v("左至右符 (left-to-right mark) U+200E : 用于在混合文字方向的多种语言文本中（例：混合左至右书写的英语与右至左书写的希伯来语），规定排版文字书写方向为左至右")]),t._v(" "),e("li",[t._v("右至左符 (right-to-left mark) U+200F : 用于在混合文字方向的多种语言文本中，规定排版文字书写方向为右至左")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.cn/post/6844903669192720391",target:"_blank",rel:"noopener noreferrer"}},[t._v("零宽度字符：和谐？屏蔽？不存在的"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"ascii"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ascii"}},[t._v("#")]),t._v(" ASCII")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.ascii-code.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.ascii-code.com"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://en.wikipedia.org/wiki/ASCII",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://en.wikipedia.org/wiki/ASCII"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Extended_ASCII",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://en.wikipedia.org/wiki/Extended_ASCII"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://c.biancheng.net/c/ascii",target:"_blank",rel:"noopener noreferrer"}},[t._v("ASCII码一览表，ASCII码对照表"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://cloud.magiclen.org/cn/ascii",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://cloud.magiclen.org/cn/ascii"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/hhy321/article/details/120610891",target:"_blank",rel:"noopener noreferrer"}},[t._v("ASCII码对照表【2022年汇总】"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://asciiart.website",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://asciiart.website"),e("OutboundLink")],1)])]),t._v(" "),e("blockquote",[e("p",[t._v("ASCII（American Standard Code for Information Interchange，美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统\n，是一种字符代码(UTF-8的子集)，为使计算机支持更多语言，通常使用 0x00~0x7f 范围的1 个字节来表示 1 个英文字符。\n超出此范围的使用0x80~0xFFFF来编码，即扩展的ASCII编码")])]),t._v(" "),e("blockquote",[e("p",[t._v("ASCII字符集由95个可打印字符（0x20-0x7E）（可见字符）和33个控制字符（0x00-0x1F，0x7F）（不可见字符）组成")])]),t._v(" "),e("blockquote",[e("p",[t._v("Windows下ASCII(ANSI) "),e("a",{attrs:{href:"https://www.zhihu.com/question/20650946",target:"_blank",rel:"noopener noreferrer"}},[t._v("Windows 记事本的 ANSI、Unicode、UTF-8 这三种编码模式有什么区别？"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[t._v("ASCII基本字符为："),e("code",[t._v("0")]),t._v("~"),e("code",[t._v("127")]),t._v("，共128个\n"),e("ul",[e("li",[t._v("ASCII控制字符为："),e("code",[t._v("0")]),t._v("~"),e("code",[t._v("31")]),t._v("，共32个")]),t._v(" "),e("li",[t._v("ASCII可显示字符为："),e("code",[t._v("32")]),t._v("~"),e("code",[t._v("127")]),t._v("，共96个\n"),e("ul",[e("li",[t._v("数字0~9对应的ASCII码（十进制）为："),e("code",[t._v("48")]),t._v("~"),e("code",[t._v("57")])]),t._v(" "),e("li",[t._v("大写字母A~Z对应的ASCII码（十进制）为："),e("code",[t._v("65")]),t._v("~"),e("code",[t._v("90")])]),t._v(" "),e("li",[t._v("小写字母a~z对应的百ASCII码（十进制）为："),e("code",[t._v("97")]),t._v("~"),e("code",[t._v("122")])]),t._v(" "),e("li",[t._v("其他为各种符号："),e("code",[t._v("33")]),t._v("~"),e("code",[t._v("47")]),t._v("和"),e("code",[t._v("58")]),t._v("~"),e("code",[t._v("64")]),t._v("和"),e("code",[t._v("91")]),t._v("~"),e("code",[t._v("96")]),t._v("和"),e("code",[t._v("123")]),t._v("~127`")])])])])]),t._v(" "),e("li",[t._v("ASCII扩展字符为："),e("code",[t._v("128")]),t._v("~"),e("code",[t._v("255")]),t._v("，共128个")])]),t._v(" "),e("h2",{attrs:{id:"cron表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cron表达式"}},[t._v("#")]),t._v(" Cron表达式")]),t._v(" "),e("ul",[e("li",[t._v("特殊符")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("*")]),t._v(" 每一(每一分)")]),t._v(" "),e("li",[e("code",[t._v("?")]),t._v(" 表示不关心,任意")]),t._v(" "),e("li",[e("code",[t._v("-")]),t._v(" 范围 (小时:1-12,1到12点运行)")]),t._v(" "),e("li",[e("code",[t._v(",")]),t._v(" 标示多个值 (小时 1,2,3 1点2点3点运行)")]),t._v(" "),e("li",[e("code",[t._v("/")]),t._v(" 递增触发(0/15,从0开始每15秒运行一次)")]),t._v(" "),e("li",[e("code",[t._v("L")]),t._v(" 最后(日L,当月最后一天,周L周六)")]),t._v(" "),e("li",[e("code",[t._v("W")]),t._v(" 指定日期最近的工作日(周一到周五)")]),t._v(" "),e("li",[e("code",[t._v("##")]),t._v(" 序号(表示每月的第几个周几)")])]),t._v(" "),e("ul",[e("li",[t._v("CronTrigger配置格式: [秒] [分] [小时] [日] [月] [周] [年]")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("序号")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("是否必填")]),t._v(" "),e("th",[t._v("允许填写的值")]),t._v(" "),e("th",[t._v("允许的通配符")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("秒")]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("0-59")]),t._v(" "),e("td",[t._v(", - * /")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("分")]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("0-59")]),t._v(" "),e("td",[t._v(", - * /")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("小时")]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("0-23")]),t._v(" "),e("td",[t._v(", - * /")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("日")]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("1-31")]),t._v(" "),e("td",[t._v(", - * ? / L W")])]),t._v(" "),e("tr",[e("td",[t._v("5")]),t._v(" "),e("td",[t._v("月")]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("1-12 or JAN-DEC")]),t._v(" "),e("td",[t._v(", - * /")])]),t._v(" "),e("tr",[e("td",[t._v("6")]),t._v(" "),e("td",[t._v("周")]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("1-7 or SUN-SAT")]),t._v(" "),e("td",[t._v(", - * ? / L ##")])]),t._v(" "),e("tr",[e("td",[t._v("7")]),t._v(" "),e("td",[t._v("年")]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("empty或1970-2099")]),t._v(" "),e("td",[t._v(", - * /")])])])]),t._v(" "),e("h2",{attrs:{id:"glob通配符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#glob通配符"}},[t._v("#")]),t._v(" Glob通配符")]),t._v(" "),e("blockquote",[e("p",[t._v("glob（"),e("code",[t._v("man 7 glob")]),t._v("/"),e("code",[t._v("GLOB(7)")]),t._v("）是shell使用的路径通配符,类似于正则表达式,但是与正则表达式不完全相同")])]),t._v(" "),e("blockquote",[e("p",[t._v("glob非常强大的用途在于路径匹配，大部分的平台和开发语言都会在配置中使用glob路径匹配，其普遍性几乎使其成为一种标准。\n但是需注意的是，每个平台和开发语言所支持glob路径匹配可能不完全一样。")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/isaacs/node-glob",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/isaacs/node-glob"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://rgb-24bit.github.io/blog/2018/glob.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://rgb-24bit.github.io/blog/2018/glob.html"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/09/bash-wildcards.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令行通配符教程"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[t._v("*：匹配一个路径部分中0个或多个字符，注意不匹配以.开始的路径，如文件.a。")]),t._v(" "),e("li",[t._v("?：匹配一个字符。")]),t._v(" "),e("li",[t._v("[…]：匹配一系列字符，如[abc]匹配字符a, b, c，在[^…]和[!…]表示匹配不在列表中的字符，如[^abc]匹配除了a, b, c以外的字符。")]),t._v(" "),e("li",[t._v("**：匹配0个或多个子文件夹。")]),t._v(" "),e("li",[t._v("{a,b}：匹配a或则b，a和b也是通配符，可以由其他通配符组成。")]),t._v(" "),e("li",[t._v("!：排除文件，如!a.js表示排除文件a.js。")])]),t._v(" "),e("h2",{attrs:{id:"正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/topics/perl",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/topics/perl"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/Perl",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/Perl"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.perl.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.perl.org"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/perl11",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/perl11"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/StrawberryPerl",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/StrawberryPerl"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/PhilipHazel/pcre2",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/PhilipHazel/pcre2"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://sourceforge.net/projects/pcre",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://sourceforge.net/projects/pcre"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.regular-expressions.info",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.regular-expressions.info"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://docs.oracle.com/javase/1.5.0/docs/api/java/util/regex/Pattern.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.oracle.com/javase/1.5.0/docs/api/java/util/regex/Pattern.html"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/VerbalExpressions",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/VerbalExpressions"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("正则备忘 "),e("a",{attrs:{href:"https://github.com/geongeorge/i-hate-regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/geongeorge/i-hate-regex"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.cn/post/7203285698073116727",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式是如何运作的？"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.51cto.com/hmtk520/2074219",target:"_blank",rel:"noopener noreferrer"}},[t._v("grep零宽断言"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://tool.oschina.net/uploads/apidocs/jquery/regexp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式手册"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://harttle.land/2016/07/18/intro-to-regexp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式参考手册"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.w3cschool.cn/regexp/2yjd1pq6.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式基础知识"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://louiszhai.github.io/2016/06/13/regexp",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://louiszhai.github.io/2016/06/13/regexp"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://brightonzhang.com/posts/regular-expression-cheat-sheet",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式速查手册"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000018042746",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则全攻略使用手册"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://harttle.land/2016/02/23/javascript-regular-expressions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("用正则表达式分析 URL"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"正则转义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则转义"}},[t._v("#")]),t._v(" 正则转义")]),t._v(" "),e("ul",[e("li",[t._v("Escape Sequence")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("转义字符")]),t._v(" "),e("th",[t._v("意义")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("\\'")])]),t._v(" "),e("td",[t._v("代表一个单引号（撇号）字符")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('\\"')])]),t._v(" "),e("td",[t._v("代表一个双引号字符")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("\\\\")])]),t._v(" "),e("td",[t._v("代表一个反斜线字符"),e("code",[t._v("\\")])])]),t._v(" "),e("tr",[e("td",[t._v("\\0")]),t._v(" "),e("td",[t._v("空字符(NULL)")])]),t._v(" "),e("tr",[e("td",[t._v("\\b")]),t._v(" "),e("td",[t._v("退格(BS) ，将当前位置移到前一列")])]),t._v(" "),e("tr",[e("td",[t._v("\\b")]),t._v(" "),e("td",[t._v("一个单词的边界")])]),t._v(" "),e("tr",[e("td",[t._v("\\B")]),t._v(" "),e("td",[t._v("一个非单词的边界")])]),t._v(" "),e("tr",[e("td",[t._v("\\d")]),t._v(" "),e("td",[t._v("数字 等价于 [0-9]")])]),t._v(" "),e("tr",[e("td",[t._v("\\D")]),t._v(" "),e("td",[t._v("非数字 等价于 [^0-9]")])]),t._v(" "),e("tr",[e("td",[t._v("\\ddd")]),t._v(" "),e("td",[t._v("1到3位八进制数所代表的任意字符")])]),t._v(" "),e("tr",[e("td",[t._v("\\e")]),t._v(" "),e("td",[t._v("Escape")])]),t._v(" "),e("tr",[e("td",[t._v("\\f")]),t._v(" "),e("td",[t._v("换页(FF)，将当前位置移到下页开头")])]),t._v(" "),e("tr",[e("td",[t._v("\\f")]),t._v(" "),e("td",[t._v("换页符")])]),t._v(" "),e("tr",[e("td",[t._v("\\G")]),t._v(" "),e("td",[t._v("前一个匹配的结束")])]),t._v(" "),e("tr",[e("td",[t._v("\\n")]),t._v(" "),e("td",[t._v("换行(LF) ，将当前位置移到下一行开头")])]),t._v(" "),e("tr",[e("td",[t._v("\\r")]),t._v(" "),e("td",[t._v("回车(CR) ，将当前位置移到本行开头")])]),t._v(" "),e("tr",[e("td",[t._v("\\s")]),t._v(" "),e("td",[t._v("空白符号 [\\t\\n\\x0B\\f\\r]")])]),t._v(" "),e("tr",[e("td",[t._v("\\S")]),t._v(" "),e("td",[t._v("非空白符号 [^\\t\\n\\x0B\\f\\r]")])]),t._v(" "),e("tr",[e("td",[t._v("\\t")]),t._v(" "),e("td",[t._v("水平制表(HT) （跳到下一个TAB位置）")])]),t._v(" "),e("tr",[e("td",[t._v("\\uhhhh")]),t._v(" "),e("td",[t._v("1到2位十六进制所代表的任意字符")])]),t._v(" "),e("tr",[e("td",[t._v("\\v")]),t._v(" "),e("td",[t._v("垂直制表(VT)")])]),t._v(" "),e("tr",[e("td",[t._v("\\w")]),t._v(" "),e("td",[t._v("单独字符 [a-zA-Z_0-9]")])]),t._v(" "),e("tr",[e("td",[t._v("\\W")]),t._v(" "),e("td",[t._v("非单独字符 [^a-zA-Z_0-9]")])])])]),t._v(" "),e("h3",{attrs:{id:"正则模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则模式"}},[t._v("#")]),t._v(" 正则模式")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("模式")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("^")]),t._v(" "),e("td",[t._v("匹配字符串的开头")])]),t._v(" "),e("tr",[e("td",[t._v("$")]),t._v(" "),e("td",[t._v("匹配字符串的末尾。")])]),t._v(" "),e("tr",[e("td",[t._v(".")]),t._v(" "),e("td",[t._v("匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。")])]),t._v(" "),e("tr",[e("td",[t._v("[...]")]),t._v(" "),e("td",[t._v("用来表示一组字符,单独列出：[amk] 匹配 'a'，'m'或'k'")])]),t._v(" "),e("tr",[e("td",[t._v("[^...]")]),t._v(" "),e("td",[t._v("不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。")])]),t._v(" "),e("tr",[e("td",[t._v("re*")]),t._v(" "),e("td",[t._v("匹配0个或多个的表达式。")])]),t._v(" "),e("tr",[e("td",[t._v("re+")]),t._v(" "),e("td",[t._v("匹配1个或多个的表达式。")])]),t._v(" "),e("tr",[e("td",[t._v("re?")]),t._v(" "),e("td",[t._v("匹配0个或1个由前面的正则表达式定义的片段，非贪婪方式")])]),t._v(" "),e("tr",[e("td",[t._v("re{ n}")]),t._v(" "),e("td",[t._v('匹配n个前面表达式。例如，"o{2}"不能匹配"Bob"中的"o"，但是能匹配"food"中的两个o。')])]),t._v(" "),e("tr",[e("td",[t._v("re{ n,}")]),t._v(" "),e("td",[t._v('精确匹配n个前面表达式。例如，"o{2,}"不能匹配"Bob"中的"o"，但能匹配"foooood"中的所有o。"o{1,}"等价于"o+"。"o{0,}"则等价于"o*"。')])]),t._v(" "),e("tr",[e("td",[t._v("re{ n, m}")]),t._v(" "),e("td",[t._v("匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式")])]),t._v(" "),e("tr",[e("td",[t._v("a")]),t._v(" "),e("td",[t._v("b")])]),t._v(" "),e("tr",[e("td",[t._v("(re)")]),t._v(" "),e("td",[t._v("匹配括号内的表达式，也表示一个组")])]),t._v(" "),e("tr",[e("td",[t._v("(?imx)")]),t._v(" "),e("td",[t._v("正则表达式包含三种可选标志：i, m, 或 x 。只影响括号中的区域。")])]),t._v(" "),e("tr",[e("td",[t._v("(?-imx)")]),t._v(" "),e("td",[t._v("正则表达式关闭 i, m, 或 x 可选标志。只影响括号中的区域。")])]),t._v(" "),e("tr",[e("td",[t._v("(?: re)")]),t._v(" "),e("td",[t._v("类似 (...), 但是不表示一个组")])]),t._v(" "),e("tr",[e("td",[t._v("(?imx: re)")]),t._v(" "),e("td",[t._v("在括号中使用i, m, 或 x 可选标志")])]),t._v(" "),e("tr",[e("td",[t._v("(?-imx: re)")]),t._v(" "),e("td",[t._v("在括号中不使用i, m, 或 x 可选标志")])]),t._v(" "),e("tr",[e("td",[t._v("(?#...)")]),t._v(" "),e("td",[t._v("注释.")])]),t._v(" "),e("tr",[e("td",[t._v("(?= re)")]),t._v(" "),e("td",[t._v("前向肯定界定符。如果所含正则表达式，以 ... 表示，在当前位置成功匹配时成功，否则失败。但一旦所含表达式已经尝试，匹配引擎根本没有提高；模式的剩余部分还要尝试界定符的右边。")])]),t._v(" "),e("tr",[e("td",[t._v("(?! re)")]),t._v(" "),e("td",[t._v("前向否定界定符。与肯定界定符相反；当所含表达式不能在字符串当前位置匹配时成功。")])]),t._v(" "),e("tr",[e("td",[t._v("(?> re)")]),t._v(" "),e("td",[t._v("匹配的独立模式，省去回溯。")])]),t._v(" "),e("tr",[e("td",[t._v("(?P名称)")]),t._v(" "),e("td",[t._v("分组起别名")])]),t._v(" "),e("tr",[e("td",[t._v("(?P=name)")]),t._v(" "),e("td",[t._v("引用别名为name分组匹配到的字符串")])]),t._v(" "),e("tr",[e("td",[t._v("\\w")]),t._v(" "),e("td",[t._v("匹配数字字母下划线")])]),t._v(" "),e("tr",[e("td",[t._v("\\W")]),t._v(" "),e("td",[t._v("匹配非数字字母下划线")])]),t._v(" "),e("tr",[e("td",[t._v("\\s")]),t._v(" "),e("td",[t._v("匹配任意空白字符，等价于 [\\t\\n\\r\\f]。")])]),t._v(" "),e("tr",[e("td",[t._v("\\S")]),t._v(" "),e("td",[t._v("匹配任意非空字符")])]),t._v(" "),e("tr",[e("td",[t._v("\\d")]),t._v(" "),e("td",[t._v("匹配任意数字，等价于 [0-9]。")])]),t._v(" "),e("tr",[e("td",[t._v("\\D")]),t._v(" "),e("td",[t._v("匹配任意非数字")])]),t._v(" "),e("tr",[e("td",[t._v("\\A")]),t._v(" "),e("td",[t._v("匹配字符串开始")])]),t._v(" "),e("tr",[e("td",[t._v("\\Z")]),t._v(" "),e("td",[t._v("匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串。")])]),t._v(" "),e("tr",[e("td",[t._v("\\z")]),t._v(" "),e("td",[t._v("匹配字符串结束")])]),t._v(" "),e("tr",[e("td",[t._v("\\G")]),t._v(" "),e("td",[t._v("匹配最后匹配完成的位置。")])]),t._v(" "),e("tr",[e("td",[t._v("\\b")]),t._v(" "),e("td",[t._v("匹配一个单词边界，也就是指单词和空格间的位置。例如， 'er\\b' 可以匹配\"never\" 中的 'er'，但不能匹配 \"verb\" 中的 'er'。")])]),t._v(" "),e("tr",[e("td",[t._v("\\B")]),t._v(" "),e("td",[t._v("匹配非单词边界。'er\\B' 能匹配 \"verb\" 中的 'er'，但不能匹配 \"never\" 中的 'er'。")])]),t._v(" "),e("tr",[e("td",[t._v("\\n, \\t")]),t._v(" "),e("td",[t._v("匹配一个换行符。匹配一个制表符")])]),t._v(" "),e("tr",[e("td",[t._v("\\1...\\9")]),t._v(" "),e("td",[t._v("匹配第n个分组的内容。")])]),t._v(" "),e("tr",[e("td",[t._v("\\10")]),t._v(" "),e("td",[t._v("匹配第n个分组的内容，如果它经匹配。否则指的是八进制字符码的表达式。")])])])]),t._v(" "),e("h3",{attrs:{id:"正则使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则使用"}},[t._v("#")]),t._v(" 正则使用")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://blog.csdn.net/wangyichina/article/details/85319194",target:"_blank",rel:"noopener noreferrer"}},[t._v("一条正则表达式同时匹配IP（含有IPv6）和域名"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/ASIYAas/article/details/124626050",target:"_blank",rel:"noopener noreferrer"}},[t._v("匹配文件后缀名的正则表达式"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000016361529",target:"_blank",rel:"noopener noreferrer"}},[t._v("循环下的正则匹配？说说正则中的lastIndex"),e("OutboundLink")],1)])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("$1")]),t._v("、"),e("code",[t._v("\\1")]),t._v("匹配获取到的值")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v(".*关键字.*\\r\\n")]),t._v(" 指定关键字的行")]),t._v(" "),e("li",[e("code",[t._v("^(.*?)$\\s+?^(?=.*^\\1$)")]),t._v(" 重复行")]),t._v(" "),e("li",[t._v("关键字之后（包含关键字本身）的所有字符\n"),e("ul",[e("li",[e("code",[t._v("(关键字)(.*?$)")])]),t._v(" "),e("li",[e("code",[t._v("关键字.*$")])]),t._v(" "),e("li",[e("code",[t._v("(关键字)([^关键字]*$)")])])])]),t._v(" "),e("li",[t._v("关键字之前（包含关键字本身）的所有字符\n"),e("ul",[e("li",[e("code",[t._v("^([^关键字]*)关键字")])]),t._v(" "),e("li",[e("code",[t._v("^.*关键字")])]),t._v(" "),e("li",[e("code",[t._v("(^.*?)关键字")])])])]),t._v(" "),e("li",[e("code",[t._v("(^.*?关键字.*?)关键字")]),t._v(" 每行中的第二个关键字之前（包含关键字本身）的所有字符")]),t._v(" "),e("li",[t._v("查找目标"),e("code",[t._v("^[^\\n]*\\n([^\\n]*)")]),t._v(" 替换为"),e("code",[t._v("\\1")]),t._v("  隔行删除")]),t._v(" "),e("li",[t._v("匹配不是空行的行尾："),e("code",[t._v("(?!^$)(\\n)")])]),t._v(" "),e("li",[t._v("匹配Markdown文档\n"),e("ul",[e("li",[t._v("当页跳转链接(锚点)"),e("code",[t._v("(\\[)(.*)(\\]\\(#)(.*)(\\))")]),t._v("取值"),e("code",[t._v("$4")])]),t._v(" "),e("li",[t._v("外链"),e("code",[t._v("(\\[)(.*)(\\]\\()(.*)(\\))")]),t._v("取值"),e("code",[t._v("$4")])])])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配字母、数字及所有英文符号")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("z_A"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Z0")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("@#\\$"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("\\\\\\"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\",'<>~\\·`\\?:;|]+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户名正则，4到16位（字母，数字，下划线，减号）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" uPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-zA-Z0-9_-]{4,16}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iFat3"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=="')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("pPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iFat3#"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//正整数正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" posPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\d+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//负整数正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" negPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^-\\d+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//整数正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" intPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^-?\\d+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("posPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"42"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("negPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-42"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-42"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数字正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以是整数也可以是浮点数")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//正数正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" posPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\d*\\.?\\d+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//负数正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" negPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^-\\d*\\.?\\d+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数字正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" numPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^-?\\d*\\.?\\d+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("posPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"42.2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("negPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-42.2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-42.2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Email正则：")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ePattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ePattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-z0-9A-Z]+[-|a-z0-9A-Z._]+@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\\\.)+[a-z]{2,}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用new RegExp()时\\， 要变成\\双斜线")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^[a-z0-9A-Z]+[-|a-z0-9A-Z._]+@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\\\.)+[a-z]{2,}$"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test@gmail.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rePass "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^([a-zA-Z0-9]+[_|\\\\_|\\\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\\\_|\\\\.]?)*[a-zA-Z0-9]+\\\\.[a-zA-Z]{2,3}$'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只允许英文字母、数字、下划线、英文句号、以及中划线组成")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ePattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 名称允许汉字、字母、数字，域名只允许英文域名")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ePattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ePattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"65974040@qq.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//手机号正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[1][3][0-9]{9}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"13900000000"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//身份证号（18位）正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cP "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11010519880605371X"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// URL正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" urlP"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://42du.cn"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ipv4地址正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ipP "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ipP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"115.28.47.26"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十六进制颜色正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RGB Hex颜色正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#b8b8b8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 日期正则，简单判定,未做月份及日期的判定")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dP1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\d{4}(\\-)\\d{1,2}\\1\\d{1,2}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dP1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-05-11"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dP1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-15-11"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 日期正则，复杂判定")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dP2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dP2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-02-11"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 false")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dP2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-15-11"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 false")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dP2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-02-29"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// QQ号正则，5至11位")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" qqPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[1-9][0-9]{4,10}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qqPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"65974040"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 微信号正则，6至20位，以字母开头，字母，数字，减号，下划线")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" wxPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wxPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RuilongMao"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 车牌号正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"京K39006"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包含中文正则")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cnPattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[\\u4E00-\\u9FA5]")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cnPattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"42度"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_Phones")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[0-9],$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数字和逗号")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_Ident")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^([a-zA-Z0-9]){1,50}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//英文、数字且不能包含英文标点和特殊符号(渠道标识)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_IdentName")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^([\\u2E80-\\u9FFF]|[a-zA-Z0-9]){1,50}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//中文、英文、数字且不能包含英文标点和特殊符号(渠道名称)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_MondyNum")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\d+(\\.\\d{1,2})?$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//金额，允许两位小数")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_MondyCh")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[\\u4e00-\\u9fa5]+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只能为中文")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_PhoneNum")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(^(([0\\+]\\d{2,3}-)?(0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$)|(^0{0,1}1[3|4|5|6|7|8|9][0-9]{9}$)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//电话号码和手机")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_ZNum")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[1-9]\\d*$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//正整数")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_Name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-zA-Z][a-zA-Z0-9_@]{0,30}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户名")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_NickName")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[\\u4E00-\\u9FA5A-Za-z0-9_\\-]+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 中文/英文/数字， (昵称、组名、朋友备注名、内容名称、书名、页名) ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_Passport")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^1[45][0-9]{7}$|G[0-9]{8}$|P\\.[0-9]{7}$|S[0-9]{7,8}$|D[0-9]{7,8}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 护照")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_BizLience")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^([0-9a-zA-Z]{18}$|\\d{15}$)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 营业执照,三证合一的是18位")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_isExitZh")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[\\u4E00-\\u9FA5\\uF900-\\uFA2D]")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 验证是否存在中文")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_price")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\d+(\\.\\d{1,2})?$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数字 . 最多两位有效数字")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_EnghlishNum")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^(?=.*\\d)(?=.*[a-z])[a-zA-Z\\d]{6,20}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//6至20位英文和数字组合")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_Phone")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^0?(13[0-9]|15[012356789]|18[0-9]|14[57])[0-9]{8}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手机号")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_Mobile")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^0?(13[0-9]|15[012356789]|18[0-9]|14[57])[0-9]{8}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手机号")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_Card")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\\\d{14}[[0-9],0-9xX]")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 身份证号 ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_Email")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-zA-Z0-9]+([._\\\\-]*[a-zA-Z0-9])*@([a-zA-Z0-9]+[-a-zA-Z0-9]*[a-zA-Z0-9]+.){1,63}[a-zA-Z0-9]+$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 邮箱")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_RealName")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-zA-Z\\u4e00-\\u9fa5]{0,}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 真实姓名、朋友昵称、朋友全称、组名称、组标签")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_text")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[\\u4e00-\\u9fa5]{0,}$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 地区 、省份、城市")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_NumPeriod")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[\\d]+.+。")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数字开头，句号结尾 ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Regex_NumFloat")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^(\\-|\\+)?\\d+(\\.\\d+)?$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//正负数字")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUrL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sRegex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^((https|http|ftp|rtsp|mms)?://)'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'?(([0-9a-z_!~*\\'().&=+$%-]+: )?[0-9a-z_!~*\\'().&=+$%-]+@)?'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ftp的user@ ")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(([0-9]{1,3}.){3}[0-9]{1,3}'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IP形式的URL- 199.194.52.184 ")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 允许IP和DOMAIN（域名） ")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'([0-9a-z_!~*\\'()-]+.)*'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 域名- www. ")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'([0-9a-z][0-9a-z-]{0,61})?[0-9a-z].'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二级域名 ")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[a-z]{2,6})'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// first level domain- .com or .museum ")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(:[0-9]{1,4})?'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 端口- :80 ")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'((/?)|'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a slash isn't required if there is no file name ")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(/[0-9a-z_!~*\\'().;?:@&=+$,%#-]+)+/?)$'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sRegex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//re.test() ")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},[],!1,null,null,null);e.default=r.exports}}]);