(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);/*! For license information please see app.981da39f.js.LICENSE.txt */
!function(t){function n(n){for(var o,r,a=n[0],h=n[1],c=n[2],l=0,m=[];l<a.length;l++)r=a[l],Object.prototype.hasOwnProperty.call(i,r)&&i[r]&&m.push(i[r][0]),i[r]=0;for(o in h)Object.prototype.hasOwnProperty.call(h,o)&&(t[o]=h[o]);for(p&&p(n);m.length;)m.shift()();return s.push.apply(s,c||[]),e()}function e(){for(var t,n=0;n<s.length;n++){for(var e=s[n],o=!0,a=1;a<e.length;a++){var h=e[a];0!==i[h]&&(o=!1)}o&&(s.splice(n--,1),t=r(r.s=e[0]))}return t}var o={},i={9:0},s=[];function r(n){if(o[n])return o[n].exports;var e=o[n]={i:n,l:!1,exports:{}};return t[n].call(e.exports,e,e.exports,r),e.l=!0,e.exports}r.e=function(t){var n=[],e=i[t];if(0!==e)if(e)n.push(e[2]);else{var o=new Promise(function(n,o){e=i[t]=[n,o]});n.push(e[2]=o);var s,a=document.createElement("script");a.charset="utf-8",a.timeout=120,r.nc&&a.setAttribute("nonce",r.nc),a.src=function(t){return r.p+"assets/js/"+({10:"vendors~docsearch",11:"vendors~flowchart"}[t]||t)+"."+{1:"809cd0bd",2:"b0e73877",3:"35d1b09e",4:"c6d75e93",5:"25d362a3",6:"01bc19c8",7:"804af732",8:"1f44096b",10:"91564f57",11:"5a6e66f6",12:"3a08e0d3",13:"4de43466",14:"1705f7d2",15:"19bf60d0",16:"abc595ed",17:"86854a79",18:"2925b87a",19:"9b56cde3",20:"b8fd1c56",21:"24a50cf9",22:"b1e0de5a",23:"730d5d73",24:"01adab3e",25:"a941786f",26:"bb74e7d5",27:"448162d9",28:"e5f430fd",29:"37c62e45",30:"81b0d15d",31:"725b049c",32:"26d0a8e0",33:"6fe99bc3",34:"e62f4d59",35:"791a2aa3",36:"dfa88b8c",37:"e524fae9",38:"ad5a1580",39:"004d7253",40:"bd78eb91",41:"75a62c3b",42:"43240027",43:"f9bc903f",44:"3c42904e",45:"b82c110e",46:"8e786526",47:"2d64c546",48:"31c4a624",49:"39084889",50:"c7388c39",51:"ebbd6f85",52:"54e4726a",53:"c8ae0535",54:"6912efc7",55:"9000b905",56:"94c47a96",57:"3236386a",58:"19796471",59:"c9b884d0",60:"37fb953c",61:"5742921c",62:"892e63b4",63:"f10b438e",64:"4b900f23",65:"9ed6f07d",66:"4ded54ef",67:"6e11ef90",68:"b1043f75",69:"fd21d1db",70:"3553c22a",71:"bb154935",72:"84960da4",73:"9923d86a",74:"6075574f",75:"f8d45a73",76:"774c6f9e",77:"03a6f048",78:"435bf2fa",79:"200cb97a",80:"6f08a010",81:"42766821",82:"a07e062d",83:"b724e3b1",84:"cec86c07",85:"f243fdd8",86:"37e7a11f",87:"26a11ae8",88:"e86b852c",89:"076f084b",90:"1a0429fe",91:"e6b56224",92:"e1ca3ab3",93:"f9b72d16",94:"38e35aa2",95:"be195f16",96:"0ad3fd29",97:"3490b1c4",98:"a21d9c28",99:"f9138b3a",100:"de5d4715",101:"7b0dbc05",102:"1c861d2b",103:"816b3c1c",104:"db3d47d8",105:"0ae2f0d8",106:"744b5a35",107:"e0831a80",108:"1d94ce21",109:"fe2d8f05",110:"fbfa57c4",111:"371dba07",112:"5dcf42a8",113:"f7e63c61",114:"41a0cd5d",115:"456699b9",116:"9025b3c9",117:"182394e5",118:"c2cf5556",119:"764fd113",120:"efe1f413",121:"81eaff75",122:"624b8efc",123:"37d3e2e4",124:"014017b9",125:"92153fba",126:"bcaef36f",127:"c2d29c54",128:"ec6368f6"}[t]+".js"}(t);var h=new Error;s=function(n){a.onerror=a.onload=null,clearTimeout(c);var e=i[t];if(0!==e){if(e){var o=n&&("load"===n.type?"missing":n.type),s=n&&n.target&&n.target.src;h.message="Loading chunk "+t+" failed.\n("+o+": "+s+")",h.name="ChunkLoadError",h.type=o,h.request=s,e[1](h)}i[t]=void 0}};var c=setTimeout(function(){s({type:"timeout",target:a})},12e4);a.onerror=a.onload=s,document.head.appendChild(a)}return Promise.all(n)},r.m=t,r.c=o,r.d=function(t,n,e){r.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,n){if(1&n&&(t=r(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(r.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var o in t)r.d(e,o,function(n){return t[n]}.bind(null,o));return e},r.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(n,"a",n),n},r.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},r.p="/",r.oe=function(t){throw console.error(t),t};var a=window.webpackJsonp=window.webpackJsonp||[],h=a.push.bind(a);a.push=n,a=a.slice();for(var c=0;c<a.length;c++)n(a[c]);var p=h;s.push([127,0]),e()}([function(t,n,e){"use strict";function o(t,n,e,o,i,s,r,a){var h,c="function"==typeof t?t.options:t;if(n&&(c.render=n,c.staticRenderFns=e,c._compiled=!0),o&&(c.functional=!0),s&&(c._scopeId="data-v-"+s),r?(h=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),i&&i.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(r)},c._ssrRegister=h):i&&(h=a?function(){i.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:i),h)if(c.functional){c._injectStyles=h;var p=c.render;c.render=function(t,n){return h.call(n),p(t,n)}}else{var l=c.beforeCreate;c.beforeCreate=l?[].concat(l,h):[h]}return{exports:t,options:c}}e.d(n,"a",function(){return o})},function(t,n,e){"use strict";var o=function(t){return t&&t.Math===Math&&t};t.exports=o("object"==typeof globalThis&&globalThis)||o("object"==typeof window&&window)||o("object"==typeof self&&self)||o("object"==typeof global&&global)||o("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(t,n,e){"use strict";t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,n,e){"use strict";var o="object"==typeof document&&document.all;t.exports=void 0===o&&void 0!==o?function(t){return"function"==typeof t||t===o}:function(t){return"function"==typeof t}},function(t,n,e){"use strict";var o=e(9),i=String,s=TypeError;t.exports=function(t){if(o(t))return t;throw new s(i(t)+" is not an object")}},function(t,n,e){"use strict";var o=e(30),i=Function.prototype,s=i.call,r=o&&i.bind.bind(s,s);t.exports=o?r:function(t){return function(){return s.apply(t,arguments)}}},function(t,n,e){"use strict";var o=e(2);t.exports=!o(function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]})},function(t,n,e){"use strict";var o=e(30),i=Function.prototype.call;t.exports=o?i.bind(i):function(){return i.apply(i,arguments)}},function(t,n,e){"use strict";var o=e(3),i=e(49),s=TypeError;t.exports=function(t){if(o(t))return t;throw new s(i(t)+" is not a function")}},function(t,n,e){"use strict";var o=e(3);t.exports=function(t){return"object"==typeof t?null!==t:o(t)}},function(t,n,e){"use strict";var o=e(5),i=e(36),s=o({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,n){return s(i(t),n)}},function(t,n,e){"use strict";var o=e(13),i=e(1),s=e(142),r=e(4),a=e(3),h=e(88),c=e(126),p=e(144),l=e(2),m=e(10),u=e(16),g=e(89).IteratorPrototype,b=e(6),d=e(20),f="constructor",w="Iterator",v=u("toStringTag"),y=TypeError,S=i[w],k=d||!a(S)||S.prototype!==g||!l(function(){S({})}),E=function(){if(s(this,g),h(this)===g)throw new y("Abstract class Iterator not directly constructable")},x=function(t,n){b?c(g,t,{configurable:!0,get:function(){return n},set:function(n){if(r(this),this===g)throw new y("You can't redefine this property");m(this,t)?this[t]=n:p(this,t,n)}}):g[t]=n};m(g,v)||x(v,w),!k&&m(g,f)&&g[f]!==Object||x(f,E),E.prototype=g,o({global:!0,constructor:!0,forced:k},{Iterator:E})},function(t,n){var e=Array.isArray;t.exports=e},function(t,n,e){"use strict";var o=e(1),i=e(70).f,s=e(21),r=e(46),a=e(51),h=e(85),c=e(141);t.exports=function(t,n){var e,p,l,m,u,g=t.target,b=t.global,d=t.stat;if(e=b?o:d?o[g]||a(g,{}):o[g]&&o[g].prototype)for(p in n){if(m=n[p],l=t.dontCallGetSet?(u=i(e,p))&&u.value:e[p],!c(b?p:g+(d?".":"#")+p,t.forced)&&void 0!==l){if(typeof m==typeof l)continue;h(m,l)}(t.sham||l&&l.sham)&&s(m,"sham",!0),r(e,p,m,t)}}},function(t,n,e){"use strict";var o=e(7),i=e(4),s=e(35);t.exports=function(t,n,e){var r,a;i(t);try{if(!(r=s(t,"return"))){if("throw"===n)throw e;return e}r=o(r,t)}catch(t){a=!0,r=t}if("throw"===n)throw e;if(a)throw r;return i(r),e}},function(t,n,e){var o=e(97),i="object"==typeof self&&self&&self.Object===Object&&self,s=o||i||Function("return this")();t.exports=s},function(t,n,e){"use strict";var o=e(1),i=e(78),s=e(10),r=e(79),a=e(75),h=e(74),c=o.Symbol,p=i("wks"),l=h?c.for||c:c&&c.withoutSetter||r;t.exports=function(t){return s(p,t)||(p[t]=a&&s(c,t)?c[t]:l("Symbol."+t)),p[t]}},function(t,n,e){"use strict";var o=e(6),i=e(80),s=e(82),r=e(4),a=e(72),h=TypeError,c=Object.defineProperty,p=Object.getOwnPropertyDescriptor,l="enumerable",m="configurable",u="writable";n.f=o?s?function(t,n,e){if(r(t),n=a(n),r(e),"function"==typeof t&&"prototype"===n&&"value"in e&&u in e&&!e[u]){var o=p(t,n);o&&o[u]&&(t[n]=e.value,e={configurable:m in e?e[m]:o[m],enumerable:l in e?e[l]:o[l],writable:!1})}return c(t,n,e)}:c:function(t,n,e){if(r(t),n=a(n),r(e),i)try{return c(t,n,e)}catch(t){}if("get"in e||"set"in e)throw new h("Accessors not supported");return"value"in e&&(t[n]=e.value),t}},function(t,n,e){var o=e(195),i=e(198);t.exports=function(t,n){var e=i(t,n);return o(e)?e:void 0}},function(t,n){t.exports=function(t){return null!=t&&"object"==typeof t}},function(t,n,e){"use strict";t.exports=!1},function(t,n,e){"use strict";var o=e(6),i=e(17),s=e(31);t.exports=o?function(t,n,e){return i.f(t,n,s(1,e))}:function(t,n,e){return t[n]=e,t}},function(t,n,e){"use strict";var o=e(13),i=e(7),s=e(8),r=e(4),a=e(24),h=e(66),c=e(91),p=e(20),l=e(14),m=e(67),u=e(25),g=!p&&!m("filter",function(){}),b=!p&&!g&&u("filter",TypeError),d=p||g||b,f=h(function(){for(var t,n,e=this.iterator,o=this.predicate,s=this.next;;){if(t=r(i(s,e)),this.done=!!t.done)return;if(n=t.value,c(e,o,[n,this.counter++],!0))return n}});o({target:"Iterator",proto:!0,real:!0,forced:d},{filter:function(t){r(this);try{s(t)}catch(t){l(this,"throw",t)}return b?i(b,this,t):new f(a(this),{predicate:t})}})},function(t,n,e){var o=e(27),i=e(180),s=e(181),r=o?o.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":r&&r in Object(t)?i(t):s(t)}},function(t,n,e){"use strict";t.exports=function(t){return{iterator:t,next:t.next,done:!1}}},function(t,n,e){"use strict";var o=e(1);t.exports=function(t,n){var e=o.Iterator,i=e&&e.prototype,s=i&&i[t],r=!1;if(s)try{s.call({next:function(){return{done:!0}},return:function(){r=!0}},-1)}catch(t){t instanceof n||(r=!1)}if(!r)return s}},function(t,n,e){"use strict";var o=e(5),i=o({}.toString),s=o("".slice);t.exports=function(t){return s(i(t),8,-1)}},function(t,n,e){var o=e(15).Symbol;t.exports=o},function(t,n,e){"use strict";var o=e(13),i=e(36),s=e(37),r=e(174),a=e(176);o({target:"Array",proto:!0,arity:1,forced:e(2)(function(){return 4294967297!==[].push.call({length:4294967296},1)})||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(t){return t instanceof TypeError}}()},{push:function(t){var n=i(this),e=s(n),o=arguments.length;a(e+o);for(var h=0;h<o;h++)n[e]=arguments[h],e++;return r(n,e),e}})},function(t,n,e){"use strict";var o=e(13),i=e(7),s=e(55),r=e(8),a=e(4),h=e(24),c=e(14),p=e(25)("forEach",TypeError);o({target:"Iterator",proto:!0,real:!0,forced:p},{forEach:function(t){a(this);try{r(t)}catch(t){c(this,"throw",t)}if(p)return i(p,this,t);var n=h(this),e=0;s(n,function(n){t(n,e++)},{IS_RECORD:!0})}})},function(t,n,e){"use strict";var o=e(2);t.exports=!o(function(){var t=function(){}.bind();return"function"!=typeof t||t.hasOwnProperty("prototype")})},function(t,n,e){"use strict";t.exports=function(t,n){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:n}}},function(t,n,e){"use strict";var o=e(71),i=e(47);t.exports=function(t){return o(i(t))}},function(t,n,e){"use strict";var o=e(1),i=e(3);t.exports=function(t,n){return arguments.length<2?(e=o[t],i(e)?e:void 0):o[t]&&o[t][n];var e}},function(t,n,e){"use strict";var o=e(5);t.exports=o({}.isPrototypeOf)},function(t,n,e){"use strict";var o=e(8),i=e(48);t.exports=function(t,n){var e=t[n];return i(e)?void 0:o(e)}},function(t,n,e){"use strict";var o=e(47),i=Object;t.exports=function(t){return i(o(t))}},function(t,n,e){"use strict";var o=e(139);t.exports=function(t){return o(t.length)}},function(t,n,e){var o=e(185),i=e(186),s=e(187),r=e(188),a=e(189);function h(t){var n=-1,e=null==t?0:t.length;for(this.clear();++n<e;){var o=t[n];this.set(o[0],o[1])}}h.prototype.clear=o,h.prototype.delete=i,h.prototype.get=s,h.prototype.has=r,h.prototype.set=a,t.exports=h},function(t,n,e){var o=e(99);t.exports=function(t,n){for(var e=t.length;e--;)if(o(t[e][0],n))return e;return-1}},function(t,n,e){var o=e(18)(Object,"create");t.exports=o},function(t,n,e){var o=e(207);t.exports=function(t,n){var e=t.__data__;return o(n)?e["string"==typeof n?"string":"hash"]:e.map}},function(t,n,e){var o=e(63);t.exports=function(t){if("string"==typeof t||o(t))return t;var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(t,n){var e=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,s=/^0o[0-7]+$/i,r=parseInt,a="object"==typeof global&&global&&global.Object===Object&&global,h="object"==typeof self&&self&&self.Object===Object&&self,c=a||h||Function("return this")(),p=Object.prototype.toString,l=Math.max,m=Math.min,u=function(){return c.Date.now()};function g(t){var n=typeof t;return!!t&&("object"==n||"function"==n)}function b(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||function(t){return!!t&&"object"==typeof t}(t)&&"[object Symbol]"==p.call(t)}(t))return NaN;if(g(t)){var n="function"==typeof t.valueOf?t.valueOf():t;t=g(n)?n+"":n}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(e,"");var a=i.test(t);return a||s.test(t)?r(t.slice(2),a?2:8):o.test(t)?NaN:+t}t.exports=function(t,n,e){var o,i,s,r,a,h,c=0,p=!1,d=!1,f=!0;if("function"!=typeof t)throw new TypeError("Expected a function");function w(n){var e=o,s=i;return o=i=void 0,c=n,r=t.apply(s,e)}function v(t){var e=t-h;return void 0===h||e>=n||e<0||d&&t-c>=s}function y(){var t=u();if(v(t))return S(t);a=setTimeout(y,function(t){var e=n-(t-h);return d?m(e,s-(t-c)):e}(t))}function S(t){return a=void 0,f&&o?w(t):(o=i=void 0,r)}function k(){var t=u(),e=v(t);if(o=arguments,i=this,h=t,e){if(void 0===a)return function(t){return c=t,a=setTimeout(y,n),p?w(t):r}(h);if(d)return a=setTimeout(y,n),w(h)}return void 0===a&&(a=setTimeout(y,n)),r}return n=b(n)||0,g(e)&&(p=!!e.leading,s=(d="maxWait"in e)?l(b(e.maxWait)||0,n):s,f="trailing"in e?!!e.trailing:f),k.cancel=function(){void 0!==a&&clearTimeout(a),c=0,o=h=i=a=void 0},k.flush=function(){return void 0===a?r:S(u())},k}},function(t,n,e){var o,i;o=function(){var t,n,e={version:"0.2.0"},o=e.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function i(t,n,e){return t<n?n:t>e?e:t}function s(t){return 100*(-1+t)}function r(t,n,e){var i;return(i="translate3d"===o.positionUsing?{transform:"translate3d("+s(t)+"%,0,0)"}:"translate"===o.positionUsing?{transform:"translate("+s(t)+"%,0)"}:{"margin-left":s(t)+"%"}).transition="all "+n+"ms "+e,i}e.configure=function(t){var n,e;for(n in t)void 0!==(e=t[n])&&t.hasOwnProperty(n)&&(o[n]=e);return this},e.status=null,e.set=function(t){var n=e.isStarted();t=i(t,o.minimum,1),e.status=1===t?null:t;var s=e.render(!n),c=s.querySelector(o.barSelector),p=o.speed,l=o.easing;return s.offsetWidth,a(function(n){""===o.positionUsing&&(o.positionUsing=e.getPositioningCSS()),h(c,r(t,p,l)),1===t?(h(s,{transition:"none",opacity:1}),s.offsetWidth,setTimeout(function(){h(s,{transition:"all "+p+"ms linear",opacity:0}),setTimeout(function(){e.remove(),n()},p)},p)):setTimeout(n,p)}),this},e.isStarted=function(){return"number"==typeof e.status},e.start=function(){e.status||e.set(0);var t=function(){setTimeout(function(){e.status&&(e.trickle(),t())},o.trickleSpeed)};return o.trickle&&t(),this},e.done=function(t){return t||e.status?e.inc(.3+.5*Math.random()).set(1):this},e.inc=function(t){var n=e.status;return n?("number"!=typeof t&&(t=(1-n)*i(Math.random()*n,.1,.95)),n=i(n+t,0,.994),e.set(n)):e.start()},e.trickle=function(){return e.inc(Math.random()*o.trickleRate)},t=0,n=0,e.promise=function(o){return o&&"resolved"!==o.state()?(0===n&&e.start(),t++,n++,o.always(function(){0===--n?(t=0,e.done()):e.set((t-n)/t)}),this):this},e.render=function(t){if(e.isRendered())return document.getElementById("nprogress");p(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=o.template;var i,r=n.querySelector(o.barSelector),a=t?"-100":s(e.status||0),c=document.querySelector(o.parent);return h(r,{transition:"all 0 linear",transform:"translate3d("+a+"%,0,0)"}),o.showSpinner||(i=n.querySelector(o.spinnerSelector))&&u(i),c!=document.body&&p(c,"nprogress-custom-parent"),c.appendChild(n),n},e.remove=function(){l(document.documentElement,"nprogress-busy"),l(document.querySelector(o.parent),"nprogress-custom-parent");var t=document.getElementById("nprogress");t&&u(t)},e.isRendered=function(){return!!document.getElementById("nprogress")},e.getPositioningCSS=function(){var t=document.body.style,n="WebkitTransform"in t?"Webkit":"MozTransform"in t?"Moz":"msTransform"in t?"ms":"OTransform"in t?"O":"";return n+"Perspective"in t?"translate3d":n+"Transform"in t?"translate":"margin"};var a=function(){var t=[];function n(){var e=t.shift();e&&e(n)}return function(e){t.push(e),1==t.length&&n()}}(),h=function(){var t=["Webkit","O","Moz","ms"],n={};function e(t){return t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(t,n){return n.toUpperCase()})}function o(n){var e=document.body.style;if(n in e)return n;for(var o,i=t.length,s=n.charAt(0).toUpperCase()+n.slice(1);i--;)if((o=t[i]+s)in e)return o;return n}function i(t){return t=e(t),n[t]||(n[t]=o(t))}function s(t,n,e){n=i(n),t.style[n]=e}return function(t,n){var e,o,i=arguments;if(2==i.length)for(e in n)void 0!==(o=n[e])&&n.hasOwnProperty(e)&&s(t,e,o);else s(t,i[1],i[2])}}();function c(t,n){return("string"==typeof t?t:m(t)).indexOf(" "+n+" ")>=0}function p(t,n){var e=m(t),o=e+n;c(e,n)||(t.className=o.substring(1))}function l(t,n){var e,o=m(t);c(t,n)&&(e=o.replace(" "+n+" "," "),t.className=e.substring(1,e.length-1))}function m(t){return(" "+(t.className||"")+" ").replace(/\s+/gi," ")}function u(t){t&&t.parentNode&&t.parentNode.removeChild(t)}return e},void 0===(i="function"==typeof o?o.call(n,e,n,t):o)||(t.exports=i)},function(t,n,e){"use strict";var o=e(13),i=e(7),s=e(8),r=e(4),a=e(24),h=e(66),c=e(91),p=e(14),l=e(67),m=e(25),u=e(20),g=!u&&!l("map",function(){}),b=!u&&!g&&m("map",TypeError),d=u||g||b,f=h(function(){var t=this.iterator,n=r(i(this.next,t));if(!(this.done=!!n.done))return c(t,this.mapper,[n.value,this.counter++],!0)});o({target:"Iterator",proto:!0,real:!0,forced:d},{map:function(t){r(this);try{s(t)}catch(t){p(this,"throw",t)}return b?i(b,this,t):new f(a(this),{mapper:t})}})},function(t,n,e){"use strict";var o=e(3),i=e(17),s=e(83),r=e(51);t.exports=function(t,n,e,a){a||(a={});var h=a.enumerable,c=void 0!==a.name?a.name:n;if(o(e)&&s(e,c,a),a.global)h?t[n]=e:r(n,e);else{try{a.unsafe?t[n]&&(h=!0):delete t[n]}catch(t){}h?t[n]=e:i.f(t,n,{value:e,enumerable:!1,configurable:!a.nonConfigurable,writable:!a.nonWritable})}return t}},function(t,n,e){"use strict";var o=e(48),i=TypeError;t.exports=function(t){if(o(t))throw new i("Can't call method on "+t);return t}},function(t,n,e){"use strict";t.exports=function(t){return null==t}},function(t,n,e){"use strict";var o=String;t.exports=function(t){try{return o(t)}catch(t){return"Object"}}},function(t,n,e){"use strict";var o=e(20),i=e(1),s=e(51),r="__core-js_shared__",a=t.exports=i[r]||s(r,{});(a.versions||(a.versions=[])).push({version:"3.46.0",mode:o?"pure":"global",copyright:"© 2014-2025 Denis Pushkarev (zloirock.ru), 2025 CoreJS Company (core-js.io)",license:"https://github.com/zloirock/core-js/blob/v3.46.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(t,n,e){"use strict";var o=e(1),i=Object.defineProperty;t.exports=function(t,n){try{i(o,t,{value:n,configurable:!0,writable:!0})}catch(e){o[t]=n}return n}},function(t,n,e){"use strict";var o=e(78),i=e(79),s=o("keys");t.exports=function(t){return s[t]||(s[t]=i(t))}},function(t,n,e){"use strict";t.exports={}},function(t,n,e){"use strict";t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(t,n,e){"use strict";var o=e(156),i=e(7),s=e(4),r=e(49),a=e(158),h=e(37),c=e(34),p=e(159),l=e(68),m=e(14),u=TypeError,g=function(t,n){this.stopped=t,this.result=n},b=g.prototype;t.exports=function(t,n,e){var d,f,w,v,y,S,k,E=e&&e.that,x=!(!e||!e.AS_ENTRIES),A=!(!e||!e.IS_RECORD),C=!(!e||!e.IS_ITERATOR),T=!(!e||!e.INTERRUPTED),j=o(n,E),_=function(t){return d&&m(d,"normal"),new g(!0,t)},P=function(t){return x?(s(t),T?j(t[0],t[1],_):j(t[0],t[1])):T?j(t,_):j(t)};if(A)d=t.iterator;else if(C)d=t;else{if(!(f=l(t)))throw new u(r(t)+" is not iterable");if(a(f)){for(w=0,v=h(t);v>w;w++)if((y=P(t[w]))&&c(b,y))return y;return new g(!1)}d=p(t,f)}for(S=A?t.next:d.next;!(k=i(S,d)).done;){try{y=P(k.value)}catch(t){m(d,"throw",t)}if("object"==typeof y&&y&&c(b,y))return y}return new g(!1)}},function(t,n,e){var o=e(179),i=e(19),s=Object.prototype,r=s.hasOwnProperty,a=s.propertyIsEnumerable,h=o(function(){return arguments}())?o:function(t){return i(t)&&r.call(t,"callee")&&!a.call(t,"callee")};t.exports=h},function(t,n,e){var o=e(18)(e(15),"Map");t.exports=o},function(t,n){t.exports=function(t){var n=typeof t;return null!=t&&("object"==n||"function"==n)}},function(t,n,e){var o=e(199),i=e(206),s=e(208),r=e(209),a=e(210);function h(t){var n=-1,e=null==t?0:t.length;for(this.clear();++n<e;){var o=t[n];this.set(o[0],o[1])}}h.prototype.clear=o,h.prototype.delete=i,h.prototype.get=s,h.prototype.has=r,h.prototype.set=a,t.exports=h},function(t,n){t.exports=function(t){var n=-1,e=Array(t.size);return t.forEach(function(t){e[++n]=t}),e}},function(t,n){t.exports=function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}},function(t,n,e){var o=e(12),i=e(63),s=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,r=/^\w*$/;t.exports=function(t,n){if(o(t))return!1;var e=typeof t;return!("number"!=e&&"symbol"!=e&&"boolean"!=e&&null!=t&&!i(t))||(r.test(t)||!s.test(t)||null!=n&&t in Object(n))}},function(t,n,e){var o=e(23),i=e(19);t.exports=function(t){return"symbol"==typeof t||i(t)&&"[object Symbol]"==o(t)}},function(t,n){t.exports=function(t){return t}},function(t,n,e){"use strict";var o=e(13),i=e(7),s=e(55),r=e(8),a=e(4),h=e(24),c=e(14),p=e(25)("some",TypeError);o({target:"Iterator",proto:!0,real:!0,forced:p},{some:function(t){a(this);try{r(t)}catch(t){c(this,"throw",t)}if(p)return i(p,this,t);var n=h(this),e=0;return s(n,function(n,o){if(t(n,e++))return o()},{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},function(t,n,e){"use strict";var o=e(7),i=e(90),s=e(21),r=e(148),a=e(16),h=e(84),c=e(35),p=e(89).IteratorPrototype,l=e(149),m=e(14),u=e(150),g=a("toStringTag"),b="IteratorHelper",d="WrapForValidIterator",f="normal",w="throw",v=h.set,y=function(t){var n=h.getterFor(t?d:b);return r(i(p),{next:function(){var e=n(this);if(t)return e.nextHandler();if(e.done)return l(void 0,!0);try{var o=e.nextHandler();return e.returnHandlerResult?o:l(o,e.done)}catch(t){throw e.done=!0,t}},return:function(){var e=n(this),i=e.iterator;if(e.done=!0,t){var s=c(i,"return");return s?o(s,i):l(void 0,!0)}if(e.inner)try{m(e.inner.iterator,f)}catch(t){return m(i,w,t)}if(e.openIters)try{u(e.openIters,f)}catch(t){return m(i,w,t)}return i&&m(i,f),l(void 0,!0)}})},S=y(!0),k=y(!1);s(k,g,"Iterator Helper"),t.exports=function(t,n,e){var o=function(o,i){i?(i.iterator=o.iterator,i.next=o.next):i=o,i.type=n?d:b,i.returnHandlerResult=!!e,i.nextHandler=t,i.counter=0,i.done=!1,v(this,i)};return o.prototype=n?S:k,o}},function(t,n,e){"use strict";t.exports=function(t,n){var e="function"==typeof Iterator&&Iterator.prototype[t];if(e)try{e.call({next:null},n).next()}catch(t){return!0}}},function(t,n,e){"use strict";var o=e(93),i=e(35),s=e(48),r=e(92),a=e(16)("iterator");t.exports=function(t){if(!s(t))return i(t,a)||i(t,"@@iterator")||r[o(t)]}},function(t,n){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,n,e){"use strict";var o=e(6),i=e(7),s=e(128),r=e(31),a=e(32),h=e(72),c=e(10),p=e(80),l=Object.getOwnPropertyDescriptor;n.f=o?l:function(t,n){if(t=a(t),n=h(n),p)try{return l(t,n)}catch(t){}if(c(t,n))return r(!i(s.f,t,n),t[n])}},function(t,n,e){"use strict";var o=e(5),i=e(2),s=e(26),r=Object,a=o("".split);t.exports=i(function(){return!r("z").propertyIsEnumerable(0)})?function(t){return"String"===s(t)?a(t,""):r(t)}:r},function(t,n,e){"use strict";var o=e(129),i=e(73);t.exports=function(t){var n=o(t,"string");return i(n)?n:n+""}},function(t,n,e){"use strict";var o=e(33),i=e(3),s=e(34),r=e(74),a=Object;t.exports=r?function(t){return"symbol"==typeof t}:function(t){var n=o("Symbol");return i(n)&&s(n.prototype,a(t))}},function(t,n,e){"use strict";var o=e(75);t.exports=o&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(t,n,e){"use strict";var o=e(76),i=e(2),s=e(1).String;t.exports=!!Object.getOwnPropertySymbols&&!i(function(){var t=Symbol("symbol detection");return!s(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&o&&o<41})},function(t,n,e){"use strict";var o,i,s=e(1),r=e(77),a=s.process,h=s.Deno,c=a&&a.versions||h&&h.version,p=c&&c.v8;p&&(i=(o=p.split("."))[0]>0&&o[0]<4?1:+(o[0]+o[1])),!i&&r&&(!(o=r.match(/Edge\/(\d+)/))||o[1]>=74)&&(o=r.match(/Chrome\/(\d+)/))&&(i=+o[1]),t.exports=i},function(t,n,e){"use strict";var o=e(1).navigator,i=o&&o.userAgent;t.exports=i?String(i):""},function(t,n,e){"use strict";var o=e(50);t.exports=function(t,n){return o[t]||(o[t]=n||{})}},function(t,n,e){"use strict";var o=e(5),i=0,s=Math.random(),r=o(1.1.toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+r(++i+s,36)}},function(t,n,e){"use strict";var o=e(6),i=e(2),s=e(81);t.exports=!o&&!i(function(){return 7!==Object.defineProperty(s("div"),"a",{get:function(){return 7}}).a})},function(t,n,e){"use strict";var o=e(1),i=e(9),s=o.document,r=i(s)&&i(s.createElement);t.exports=function(t){return r?s.createElement(t):{}}},function(t,n,e){"use strict";var o=e(6),i=e(2);t.exports=o&&i(function(){return 42!==Object.defineProperty(function(){},"prototype",{value:42,writable:!1}).prototype})},function(t,n,e){"use strict";var o=e(5),i=e(2),s=e(3),r=e(10),a=e(6),h=e(131).CONFIGURABLE,c=e(132),p=e(84),l=p.enforce,m=p.get,u=String,g=Object.defineProperty,b=o("".slice),d=o("".replace),f=o([].join),w=a&&!i(function(){return 8!==g(function(){},"length",{value:8}).length}),v=String(String).split("String"),y=t.exports=function(t,n,e){"Symbol("===b(u(n),0,7)&&(n="["+d(u(n),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),e&&e.getter&&(n="get "+n),e&&e.setter&&(n="set "+n),(!r(t,"name")||h&&t.name!==n)&&(a?g(t,"name",{value:n,configurable:!0}):t.name=n),w&&e&&r(e,"arity")&&t.length!==e.arity&&g(t,"length",{value:e.arity});try{e&&r(e,"constructor")&&e.constructor?a&&g(t,"prototype",{writable:!1}):t.prototype&&(t.prototype=void 0)}catch(t){}var o=l(t);return r(o,"source")||(o.source=f(v,"string"==typeof n?n:"")),t};Function.prototype.toString=y(function(){return s(this)&&m(this).source||c(this)},"toString")},function(t,n,e){"use strict";var o,i,s,r=e(133),a=e(1),h=e(9),c=e(21),p=e(10),l=e(50),m=e(52),u=e(53),g="Object already initialized",b=a.TypeError,d=a.WeakMap;if(r||l.state){var f=l.state||(l.state=new d);f.get=f.get,f.has=f.has,f.set=f.set,o=function(t,n){if(f.has(t))throw new b(g);return n.facade=t,f.set(t,n),n},i=function(t){return f.get(t)||{}},s=function(t){return f.has(t)}}else{var w=m("state");u[w]=!0,o=function(t,n){if(p(t,w))throw new b(g);return n.facade=t,c(t,w,n),n},i=function(t){return p(t,w)?t[w]:{}},s=function(t){return p(t,w)}}t.exports={set:o,get:i,has:s,enforce:function(t){return s(t)?i(t):o(t,{})},getterFor:function(t){return function(n){var e;if(!h(n)||(e=i(n)).type!==t)throw new b("Incompatible receiver, "+t+" required");return e}}}},function(t,n,e){"use strict";var o=e(10),i=e(134),s=e(70),r=e(17);t.exports=function(t,n,e){for(var a=i(n),h=r.f,c=s.f,p=0;p<a.length;p++){var l=a[p];o(t,l)||e&&o(e,l)||h(t,l,c(n,l))}}},function(t,n,e){"use strict";var o=e(5),i=e(10),s=e(32),r=e(136).indexOf,a=e(53),h=o([].push);t.exports=function(t,n){var e,o=s(t),c=0,p=[];for(e in o)!i(a,e)&&i(o,e)&&h(p,e);for(;n.length>c;)i(o,e=n[c++])&&(~r(p,e)||h(p,e));return p}},function(t,n,e){"use strict";var o=e(138);t.exports=function(t){var n=+t;return n!=n||0===n?0:o(n)}},function(t,n,e){"use strict";var o=e(10),i=e(3),s=e(36),r=e(52),a=e(143),h=r("IE_PROTO"),c=Object,p=c.prototype;t.exports=a?c.getPrototypeOf:function(t){var n=s(t);if(o(n,h))return n[h];var e=n.constructor;return i(e)&&n instanceof e?e.prototype:n instanceof c?p:null}},function(t,n,e){"use strict";var o,i,s,r=e(2),a=e(3),h=e(9),c=e(90),p=e(88),l=e(46),m=e(16),u=e(20),g=m("iterator"),b=!1;[].keys&&("next"in(s=[].keys())?(i=p(p(s)))!==Object.prototype&&(o=i):b=!0),!h(o)||r(function(){var t={};return o[g].call(t)!==t})?o={}:u&&(o=c(o)),a(o[g])||l(o,g,function(){return this}),t.exports={IteratorPrototype:o,BUGGY_SAFARI_ITERATORS:b}},function(t,n,e){"use strict";var o,i=e(4),s=e(145),r=e(54),a=e(53),h=e(147),c=e(81),p=e(52),l="prototype",m="script",u=p("IE_PROTO"),g=function(){},b=function(t){return"<"+m+">"+t+"</"+m+">"},d=function(t){t.write(b("")),t.close();var n=t.parentWindow.Object;return t=null,n},f=function(){try{o=new ActiveXObject("htmlfile")}catch(t){}var t,n,e;f="undefined"!=typeof document?document.domain&&o?d(o):(n=c("iframe"),e="java"+m+":",n.style.display="none",h.appendChild(n),n.src=String(e),(t=n.contentWindow.document).open(),t.write(b("document.F=Object")),t.close(),t.F):d(o);for(var i=r.length;i--;)delete f[l][r[i]];return f()};a[u]=!0,t.exports=Object.create||function(t,n){var e;return null!==t?(g[l]=i(t),e=new g,g[l]=null,e[u]=t):e=f(),void 0===n?e:s.f(e,n)}},function(t,n,e){"use strict";var o=e(4),i=e(14);t.exports=function(t,n,e,s){try{return s?n(o(e)[0],e[1]):n(e)}catch(n){i(t,"throw",n)}}},function(t,n,e){"use strict";t.exports={}},function(t,n,e){"use strict";var o=e(160),i=e(3),s=e(26),r=e(16)("toStringTag"),a=Object,h="Arguments"===s(function(){return arguments}());t.exports=o?s:function(t){var n,e,o;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(e=function(t,n){try{return t[n]}catch(t){}}(n=a(t),r))?e:h?s(n):"Object"===(o=s(n))&&i(n.callee)?"Arguments":o}},function(t,n,e){"use strict";var o=e(30),i=Function.prototype,s=i.apply,r=i.call;t.exports="object"==typeof Reflect&&Reflect.apply||(o?r.bind(s):function(){return r.apply(s,arguments)})},function(t,n,e){"use strict";var o=e(164),i=e(9),s=e(47),r=e(165);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,n=!1,e={};try{(t=o(Object.prototype,"__proto__","set"))(e,[]),n=e instanceof Array}catch(t){}return function(e,o){return s(e),r(o),i(e)?(n?t(e,o):e.__proto__=o,e):e}}():void 0)},function(t,n){t.exports=function(t,n){for(var e=-1,o=n.length,i=t.length;++e<o;)t[i+e]=n[e];return t}},function(t,n){var e="object"==typeof global&&global&&global.Object===Object&&global;t.exports=e},function(t,n,e){var o=e(38),i=e(190),s=e(191),r=e(192),a=e(193),h=e(194);function c(t){var n=this.__data__=new o(t);this.size=n.size}c.prototype.clear=i,c.prototype.delete=s,c.prototype.get=r,c.prototype.has=a,c.prototype.set=h,t.exports=c},function(t,n){t.exports=function(t,n){return t===n||t!=t&&n!=n}},function(t,n,e){var o=e(23),i=e(58);t.exports=function(t){if(!i(t))return!1;var n=o(t);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(t,n){var e=Function.prototype.toString;t.exports=function(t){if(null!=t){try{return e.call(t)}catch(t){}try{return t+""}catch(t){}}return""}},function(t,n,e){var o=e(211),i=e(19);t.exports=function t(n,e,s,r,a){return n===e||(null==n||null==e||!i(n)&&!i(e)?n!=n&&e!=e:o(n,e,s,r,t,a))}},function(t,n,e){var o=e(104),i=e(214),s=e(105);t.exports=function(t,n,e,r,a,h){var c=1&e,p=t.length,l=n.length;if(p!=l&&!(c&&l>p))return!1;var m=h.get(t),u=h.get(n);if(m&&u)return m==n&&u==t;var g=-1,b=!0,d=2&e?new o:void 0;for(h.set(t,n),h.set(n,t);++g<p;){var f=t[g],w=n[g];if(r)var v=c?r(w,f,g,n,t,h):r(f,w,g,t,n,h);if(void 0!==v){if(v)continue;b=!1;break}if(d){if(!i(n,function(t,n){if(!s(d,n)&&(f===t||a(f,t,e,r,h)))return d.push(n)})){b=!1;break}}else if(f!==w&&!a(f,w,e,r,h)){b=!1;break}}return h.delete(t),h.delete(n),b}},function(t,n,e){var o=e(59),i=e(212),s=e(213);function r(t){var n=-1,e=null==t?0:t.length;for(this.__data__=new o;++n<e;)this.add(t[n])}r.prototype.add=r.prototype.push=i,r.prototype.has=s,t.exports=r},function(t,n){t.exports=function(t,n){return t.has(n)}},function(t,n,e){var o=e(224),i=e(230),s=e(110);t.exports=function(t){return s(t)?o(t):i(t)}},function(t,n,e){(function(t){var o=e(15),i=e(226),s=n&&!n.nodeType&&n,r=s&&"object"==typeof t&&t&&!t.nodeType&&t,a=r&&r.exports===s?o.Buffer:void 0,h=(a?a.isBuffer:void 0)||i;t.exports=h}).call(this,e(69)(t))},function(t,n){var e=/^(?:0|[1-9]\d*)$/;t.exports=function(t,n){var o=typeof t;return!!(n=null==n?9007199254740991:n)&&("number"==o||"symbol"!=o&&e.test(t))&&t>-1&&t%1==0&&t<n}},function(t,n,e){var o=e(227),i=e(228),s=e(229),r=s&&s.isTypedArray,a=r?i(r):o;t.exports=a},function(t,n,e){var o=e(100),i=e(61);t.exports=function(t){return null!=t&&i(t.length)&&!o(t)}},function(t,n,e){var o=e(18)(e(15),"Set");t.exports=o},function(t,n,e){var o=e(58);t.exports=function(t){return t==t&&!o(t)}},function(t,n){t.exports=function(t,n){return function(e){return null!=e&&(e[t]===n&&(void 0!==n||t in Object(e)))}}},function(t,n,e){var o=e(115),i=e(42);t.exports=function(t,n){for(var e=0,s=(n=o(n,t)).length;null!=t&&e<s;)t=t[i(n[e++])];return e&&e==s?t:void 0}},function(t,n,e){var o=e(12),i=e(62),s=e(241),r=e(244);t.exports=function(t,n){return o(t)?t:i(t,n)?[t]:s(r(t))}},function(t,n,e){},function(t,n,e){},function(t,n,e){},function(t,n,e){},function(t,n,e){},function(t,n,e){},function(t,n,e){var o=e(177),i=e(182),s=e(253),r=e(261),a=e(270),h=e(124),c=s(function(t){var n=h(t);return a(n)&&(n=void 0),r(o(t,1,a,!0),i(n,2))});t.exports=c},function(t,n,e){"use strict";var o=/["'&<>]/;t.exports=function(t){var n,e=""+t,i=o.exec(e);if(!i)return e;var s="",r=0,a=0;for(r=i.index;r<e.length;r++){switch(e.charCodeAt(r)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}a!==r&&(s+=e.substring(a,r)),a=r+1,s+=n}return a!==r?s+e.substring(a,r):s}},function(t,n){t.exports=function(t){var n=null==t?0:t.length;return n?t[n-1]:void 0}},function(t,n,e){"use strict";var o=e(93),i=String;t.exports=function(t){if("Symbol"===o(t))throw new TypeError("Cannot convert a Symbol value to a string");return i(t)}},function(t,n,e){"use strict";var o=e(83),i=e(17);t.exports=function(t,n,e){return e.get&&o(e.get,n,{getter:!0}),e.set&&o(e.set,n,{setter:!0}),i.f(t,n,e)}},function(t,n,e){t.exports=e(283)},function(t,n,e){"use strict";var o={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,s=i&&!o.call({1:2},1);n.f=s?function(t){var n=i(this,t);return!!n&&n.enumerable}:o},function(t,n,e){"use strict";var o=e(7),i=e(9),s=e(73),r=e(35),a=e(130),h=e(16),c=TypeError,p=h("toPrimitive");t.exports=function(t,n){if(!i(t)||s(t))return t;var e,h=r(t,p);if(h){if(void 0===n&&(n="default"),e=o(h,t,n),!i(e)||s(e))return e;throw new c("Can't convert object to primitive value")}return void 0===n&&(n="number"),a(t,n)}},function(t,n,e){"use strict";var o=e(7),i=e(3),s=e(9),r=TypeError;t.exports=function(t,n){var e,a;if("string"===n&&i(e=t.toString)&&!s(a=o(e,t)))return a;if(i(e=t.valueOf)&&!s(a=o(e,t)))return a;if("string"!==n&&i(e=t.toString)&&!s(a=o(e,t)))return a;throw new r("Can't convert object to primitive value")}},function(t,n,e){"use strict";var o=e(6),i=e(10),s=Function.prototype,r=o&&Object.getOwnPropertyDescriptor,a=i(s,"name"),h=a&&"something"===function(){}.name,c=a&&(!o||o&&r(s,"name").configurable);t.exports={EXISTS:a,PROPER:h,CONFIGURABLE:c}},function(t,n,e){"use strict";var o=e(5),i=e(3),s=e(50),r=o(Function.toString);i(s.inspectSource)||(s.inspectSource=function(t){return r(t)}),t.exports=s.inspectSource},function(t,n,e){"use strict";var o=e(1),i=e(3),s=o.WeakMap;t.exports=i(s)&&/native code/.test(String(s))},function(t,n,e){"use strict";var o=e(33),i=e(5),s=e(135),r=e(140),a=e(4),h=i([].concat);t.exports=o("Reflect","ownKeys")||function(t){var n=s.f(a(t)),e=r.f;return e?h(n,e(t)):n}},function(t,n,e){"use strict";var o=e(86),i=e(54).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(t){return o(t,i)}},function(t,n,e){"use strict";var o=e(32),i=e(137),s=e(37),r=function(t){return function(n,e,r){var a=o(n),h=s(a);if(0===h)return!t&&-1;var c,p=i(r,h);if(t&&e!=e){for(;h>p;)if((c=a[p++])!=c)return!0}else for(;h>p;p++)if((t||p in a)&&a[p]===e)return t||p||0;return!t&&-1}};t.exports={includes:r(!0),indexOf:r(!1)}},function(t,n,e){"use strict";var o=e(87),i=Math.max,s=Math.min;t.exports=function(t,n){var e=o(t);return e<0?i(e+n,0):s(e,n)}},function(t,n,e){"use strict";var o=Math.ceil,i=Math.floor;t.exports=Math.trunc||function(t){var n=+t;return(n>0?i:o)(n)}},function(t,n,e){"use strict";var o=e(87),i=Math.min;t.exports=function(t){var n=o(t);return n>0?i(n,9007199254740991):0}},function(t,n,e){"use strict";n.f=Object.getOwnPropertySymbols},function(t,n,e){"use strict";var o=e(2),i=e(3),s=/#|\.prototype\./,r=function(t,n){var e=h[a(t)];return e===p||e!==c&&(i(n)?o(n):!!n)},a=r.normalize=function(t){return String(t).replace(s,".").toLowerCase()},h=r.data={},c=r.NATIVE="N",p=r.POLYFILL="P";t.exports=r},function(t,n,e){"use strict";var o=e(34),i=TypeError;t.exports=function(t,n){if(o(n,t))return t;throw new i("Incorrect invocation")}},function(t,n,e){"use strict";var o=e(2);t.exports=!o(function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype})},function(t,n,e){"use strict";var o=e(6),i=e(17),s=e(31);t.exports=function(t,n,e){o?i.f(t,n,s(0,e)):t[n]=e}},function(t,n,e){"use strict";var o=e(6),i=e(82),s=e(17),r=e(4),a=e(32),h=e(146);n.f=o&&!i?Object.defineProperties:function(t,n){r(t);for(var e,o=a(n),i=h(n),c=i.length,p=0;c>p;)s.f(t,e=i[p++],o[e]);return t}},function(t,n,e){"use strict";var o=e(86),i=e(54);t.exports=Object.keys||function(t){return o(t,i)}},function(t,n,e){"use strict";var o=e(33);t.exports=o("document","documentElement")},function(t,n,e){"use strict";var o=e(46);t.exports=function(t,n,e){for(var i in n)o(t,i,n[i],e);return t}},function(t,n,e){"use strict";t.exports=function(t,n){return{value:t,done:n}}},function(t,n,e){"use strict";var o=e(14);t.exports=function(t,n,e){for(var i=t.length-1;i>=0;i--)if(void 0!==t[i])try{e=o(t[i].iterator,n,e)}catch(t){n="throw",e=t}if("throw"===n)throw e;return e}},function(t,n,e){"use strict";var o=e(13),i=e(152).left,s=e(153),r=e(76);o({target:"Array",proto:!0,forced:!e(154)&&r>79&&r<83||!s("reduce")},{reduce:function(t){var n=arguments.length;return i(this,t,n,n>1?arguments[1]:void 0)}})},function(t,n,e){"use strict";var o=e(8),i=e(36),s=e(71),r=e(37),a=TypeError,h="Reduce of empty array with no initial value",c=function(t){return function(n,e,c,p){var l=i(n),m=s(l),u=r(l);if(o(e),0===u&&c<2)throw new a(h);var g=t?u-1:0,b=t?-1:1;if(c<2)for(;;){if(g in m){p=m[g],g+=b;break}if(g+=b,t?g<0:u<=g)throw new a(h)}for(;t?g>=0:u>g;g+=b)g in m&&(p=e(p,m[g],g,l));return p}};t.exports={left:c(!1),right:c(!0)}},function(t,n,e){"use strict";var o=e(2);t.exports=function(t,n){var e=[][t];return!!e&&o(function(){e.call(null,n||function(){return 1},1)})}},function(t,n,e){"use strict";var o=e(155);t.exports="NODE"===o},function(t,n,e){"use strict";var o=e(1),i=e(77),s=e(26),r=function(t){return i.slice(0,t.length)===t};t.exports=r("Bun/")?"BUN":r("Cloudflare-Workers")?"CLOUDFLARE":r("Deno/")?"DENO":r("Node.js/")?"NODE":o.Bun&&"string"==typeof Bun.version?"BUN":o.Deno&&"object"==typeof Deno.version?"DENO":"process"===s(o.process)?"NODE":o.window&&o.document?"BROWSER":"REST"},function(t,n,e){"use strict";var o=e(157),i=e(8),s=e(30),r=o(o.bind);t.exports=function(t,n){return i(t),void 0===n?t:s?r(t,n):function(){return t.apply(n,arguments)}}},function(t,n,e){"use strict";var o=e(26),i=e(5);t.exports=function(t){if("Function"===o(t))return i(t)}},function(t,n,e){"use strict";var o=e(16),i=e(92),s=o("iterator"),r=Array.prototype;t.exports=function(t){return void 0!==t&&(i.Array===t||r[s]===t)}},function(t,n,e){"use strict";var o=e(7),i=e(8),s=e(4),r=e(49),a=e(68),h=TypeError;t.exports=function(t,n){var e=arguments.length<2?a(t):n;if(i(e))return s(o(e,t));throw new h(r(t)+" is not iterable")}},function(t,n,e){"use strict";var o={};o[e(16)("toStringTag")]="z",t.exports="[object z]"===String(o)},function(t,n,e){"use strict";var o=e(13),i=e(55),s=e(8),r=e(4),a=e(24),h=e(14),c=e(25),p=e(94),l=e(2),m=TypeError,u=l(function(){[].keys().reduce(function(){},void 0)}),g=!u&&c("reduce",m);o({target:"Iterator",proto:!0,real:!0,forced:u||g},{reduce:function(t){r(this);try{s(t)}catch(t){h(this,"throw",t)}var n=arguments.length<2,e=n?void 0:arguments[1];if(g)return p(g,this,n?[t]:[t,e]);var o=a(this),c=0;if(i(o,function(o){n?(n=!1,e=o):e=t(e,o,c),c++},{IS_RECORD:!0}),n)throw new m("Reduce of empty iterator with no initial value");return e}})},function(t,n,e){"use strict";var o=e(13),i=e(1),s=e(94),r=e(163),a="WebAssembly",h=i[a],c=7!==new Error("e",{cause:7}).cause,p=function(t,n){var e={};e[t]=r(t,n,c),o({global:!0,constructor:!0,arity:1,forced:c},e)},l=function(t,n){if(h&&h[t]){var e={};e[t]=r(a+"."+t,n,c),o({target:a,stat:!0,constructor:!0,arity:1,forced:c},e)}};p("Error",function(t){return function(n){return s(t,this,arguments)}}),p("EvalError",function(t){return function(n){return s(t,this,arguments)}}),p("RangeError",function(t){return function(n){return s(t,this,arguments)}}),p("ReferenceError",function(t){return function(n){return s(t,this,arguments)}}),p("SyntaxError",function(t){return function(n){return s(t,this,arguments)}}),p("TypeError",function(t){return function(n){return s(t,this,arguments)}}),p("URIError",function(t){return function(n){return s(t,this,arguments)}}),l("CompileError",function(t){return function(n){return s(t,this,arguments)}}),l("LinkError",function(t){return function(n){return s(t,this,arguments)}}),l("RuntimeError",function(t){return function(n){return s(t,this,arguments)}})},function(t,n,e){"use strict";var o=e(33),i=e(10),s=e(21),r=e(34),a=e(95),h=e(85),c=e(167),p=e(168),l=e(169),m=e(170),u=e(171),g=e(6),b=e(20);t.exports=function(t,n,e,d){var f="stackTraceLimit",w=d?2:1,v=t.split("."),y=v[v.length-1],S=o.apply(null,v);if(S){var k=S.prototype;if(!b&&i(k,"cause")&&delete k.cause,!e)return S;var E=o("Error"),x=n(function(t,n){var e=l(d?n:t,void 0),o=d?new S(t):new S;return void 0!==e&&s(o,"message",e),u(o,x,o.stack,2),this&&r(k,this)&&p(o,this,x),arguments.length>w&&m(o,arguments[w]),o});if(x.prototype=k,"Error"!==y?a?a(x,E):h(x,E,{name:!0}):g&&f in S&&(c(x,S,f),c(x,S,"prepareStackTrace")),h(x,S),!b)try{k.name!==y&&s(k,"name",y),k.constructor=x}catch(t){}return x}}},function(t,n,e){"use strict";var o=e(5),i=e(8);t.exports=function(t,n,e){try{return o(i(Object.getOwnPropertyDescriptor(t,n)[e]))}catch(t){}}},function(t,n,e){"use strict";var o=e(166),i=String,s=TypeError;t.exports=function(t){if(o(t))return t;throw new s("Can't set "+i(t)+" as a prototype")}},function(t,n,e){"use strict";var o=e(9);t.exports=function(t){return o(t)||null===t}},function(t,n,e){"use strict";var o=e(17).f;t.exports=function(t,n,e){e in t||o(t,e,{configurable:!0,get:function(){return n[e]},set:function(t){n[e]=t}})}},function(t,n,e){"use strict";var o=e(3),i=e(9),s=e(95);t.exports=function(t,n,e){var r,a;return s&&o(r=n.constructor)&&r!==e&&i(a=r.prototype)&&a!==e.prototype&&s(t,a),t}},function(t,n,e){"use strict";var o=e(125);t.exports=function(t,n){return void 0===t?arguments.length<2?"":n:o(t)}},function(t,n,e){"use strict";var o=e(9),i=e(21);t.exports=function(t,n){o(n)&&"cause"in n&&i(t,"cause",n.cause)}},function(t,n,e){"use strict";var o=e(21),i=e(172),s=e(173),r=Error.captureStackTrace;t.exports=function(t,n,e,a){s&&(r?r(t,n):o(t,"stack",i(e,a)))}},function(t,n,e){"use strict";var o=e(5),i=Error,s=o("".replace),r=String(new i("zxcasd").stack),a=/\n\s*at [^:]*:[^\n]*/,h=a.test(r);t.exports=function(t,n){if(h&&"string"==typeof t&&!i.prepareStackTrace)for(;n--;)t=s(t,a,"");return t}},function(t,n,e){"use strict";var o=e(2),i=e(31);t.exports=!o(function(){var t=new Error("a");return!("stack"in t)||(Object.defineProperty(t,"stack",i(1,7)),7!==t.stack)})},function(t,n,e){"use strict";var o=e(6),i=e(175),s=TypeError,r=Object.getOwnPropertyDescriptor,a=o&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(t){return t instanceof TypeError}}();t.exports=a?function(t,n){if(i(t)&&!r(t,"length").writable)throw new s("Cannot set read only .length");return t.length=n}:function(t,n){return t.length=n}},function(t,n,e){"use strict";var o=e(26);t.exports=Array.isArray||function(t){return"Array"===o(t)}},function(t,n,e){"use strict";var o=TypeError;t.exports=function(t){if(t>9007199254740991)throw o("Maximum allowed index exceeded");return t}},function(t,n,e){var o=e(96),i=e(178);t.exports=function t(n,e,s,r,a){var h=-1,c=n.length;for(s||(s=i),a||(a=[]);++h<c;){var p=n[h];e>0&&s(p)?e>1?t(p,e-1,s,r,a):o(a,p):r||(a[a.length]=p)}return a}},function(t,n,e){var o=e(27),i=e(56),s=e(12),r=o?o.isConcatSpreadable:void 0;t.exports=function(t){return s(t)||i(t)||!!(r&&t&&t[r])}},function(t,n,e){var o=e(23),i=e(19);t.exports=function(t){return i(t)&&"[object Arguments]"==o(t)}},function(t,n,e){var o=e(27),i=Object.prototype,s=i.hasOwnProperty,r=i.toString,a=o?o.toStringTag:void 0;t.exports=function(t){var n=s.call(t,a),e=t[a];try{t[a]=void 0;var o=!0}catch(t){}var i=r.call(t);return o&&(n?t[a]=e:delete t[a]),i}},function(t,n){var e=Object.prototype.toString;t.exports=function(t){return e.call(t)}},function(t,n,e){var o=e(183),i=e(239),s=e(64),r=e(12),a=e(250);t.exports=function(t){return"function"==typeof t?t:null==t?s:"object"==typeof t?r(t)?i(t[0],t[1]):o(t):a(t)}},function(t,n,e){var o=e(184),i=e(238),s=e(113);t.exports=function(t){var n=i(t);return 1==n.length&&n[0][2]?s(n[0][0],n[0][1]):function(e){return e===t||o(e,t,n)}}},function(t,n,e){var o=e(98),i=e(102);t.exports=function(t,n,e,s){var r=e.length,a=r,h=!s;if(null==t)return!a;for(t=Object(t);r--;){var c=e[r];if(h&&c[2]?c[1]!==t[c[0]]:!(c[0]in t))return!1}for(;++r<a;){var p=(c=e[r])[0],l=t[p],m=c[1];if(h&&c[2]){if(void 0===l&&!(p in t))return!1}else{var u=new o;if(s)var g=s(l,m,p,t,n,u);if(!(void 0===g?i(m,l,3,s,u):g))return!1}}return!0}},function(t,n){t.exports=function(){this.__data__=[],this.size=0}},function(t,n,e){var o=e(39),i=Array.prototype.splice;t.exports=function(t){var n=this.__data__,e=o(n,t);return!(e<0)&&(e==n.length-1?n.pop():i.call(n,e,1),--this.size,!0)}},function(t,n,e){var o=e(39);t.exports=function(t){var n=this.__data__,e=o(n,t);return e<0?void 0:n[e][1]}},function(t,n,e){var o=e(39);t.exports=function(t){return o(this.__data__,t)>-1}},function(t,n,e){var o=e(39);t.exports=function(t,n){var e=this.__data__,i=o(e,t);return i<0?(++this.size,e.push([t,n])):e[i][1]=n,this}},function(t,n,e){var o=e(38);t.exports=function(){this.__data__=new o,this.size=0}},function(t,n){t.exports=function(t){var n=this.__data__,e=n.delete(t);return this.size=n.size,e}},function(t,n){t.exports=function(t){return this.__data__.get(t)}},function(t,n){t.exports=function(t){return this.__data__.has(t)}},function(t,n,e){var o=e(38),i=e(57),s=e(59);t.exports=function(t,n){var e=this.__data__;if(e instanceof o){var r=e.__data__;if(!i||r.length<199)return r.push([t,n]),this.size=++e.size,this;e=this.__data__=new s(r)}return e.set(t,n),this.size=e.size,this}},function(t,n,e){var o=e(100),i=e(196),s=e(58),r=e(101),a=/^\[object .+?Constructor\]$/,h=Function.prototype,c=Object.prototype,p=h.toString,l=c.hasOwnProperty,m=RegExp("^"+p.call(l).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");t.exports=function(t){return!(!s(t)||i(t))&&(o(t)?m:a).test(r(t))}},function(t,n,e){var o,i=e(197),s=(o=/[^.]+$/.exec(i&&i.keys&&i.keys.IE_PROTO||""))?"Symbol(src)_1."+o:"";t.exports=function(t){return!!s&&s in t}},function(t,n,e){var o=e(15)["__core-js_shared__"];t.exports=o},function(t,n){t.exports=function(t,n){return null==t?void 0:t[n]}},function(t,n,e){var o=e(200),i=e(38),s=e(57);t.exports=function(){this.size=0,this.__data__={hash:new o,map:new(s||i),string:new o}}},function(t,n,e){var o=e(201),i=e(202),s=e(203),r=e(204),a=e(205);function h(t){var n=-1,e=null==t?0:t.length;for(this.clear();++n<e;){var o=t[n];this.set(o[0],o[1])}}h.prototype.clear=o,h.prototype.delete=i,h.prototype.get=s,h.prototype.has=r,h.prototype.set=a,t.exports=h},function(t,n,e){var o=e(40);t.exports=function(){this.__data__=o?o(null):{},this.size=0}},function(t,n){t.exports=function(t){var n=this.has(t)&&delete this.__data__[t];return this.size-=n?1:0,n}},function(t,n,e){var o=e(40),i=Object.prototype.hasOwnProperty;t.exports=function(t){var n=this.__data__;if(o){var e=n[t];return"__lodash_hash_undefined__"===e?void 0:e}return i.call(n,t)?n[t]:void 0}},function(t,n,e){var o=e(40),i=Object.prototype.hasOwnProperty;t.exports=function(t){var n=this.__data__;return o?void 0!==n[t]:i.call(n,t)}},function(t,n,e){var o=e(40);t.exports=function(t,n){var e=this.__data__;return this.size+=this.has(t)?0:1,e[t]=o&&void 0===n?"__lodash_hash_undefined__":n,this}},function(t,n,e){var o=e(41);t.exports=function(t){var n=o(this,t).delete(t);return this.size-=n?1:0,n}},function(t,n){t.exports=function(t){var n=typeof t;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==t:null===t}},function(t,n,e){var o=e(41);t.exports=function(t){return o(this,t).get(t)}},function(t,n,e){var o=e(41);t.exports=function(t){return o(this,t).has(t)}},function(t,n,e){var o=e(41);t.exports=function(t,n){var e=o(this,t),i=e.size;return e.set(t,n),this.size+=e.size==i?0:1,this}},function(t,n,e){var o=e(98),i=e(103),s=e(215),r=e(218),a=e(234),h=e(12),c=e(107),p=e(109),l="[object Arguments]",m="[object Array]",u="[object Object]",g=Object.prototype.hasOwnProperty;t.exports=function(t,n,e,b,d,f){var w=h(t),v=h(n),y=w?m:a(t),S=v?m:a(n),k=(y=y==l?u:y)==u,E=(S=S==l?u:S)==u,x=y==S;if(x&&c(t)){if(!c(n))return!1;w=!0,k=!1}if(x&&!k)return f||(f=new o),w||p(t)?i(t,n,e,b,d,f):s(t,n,y,e,b,d,f);if(!(1&e)){var A=k&&g.call(t,"__wrapped__"),C=E&&g.call(n,"__wrapped__");if(A||C){var T=A?t.value():t,j=C?n.value():n;return f||(f=new o),d(T,j,e,b,f)}}return!!x&&(f||(f=new o),r(t,n,e,b,d,f))}},function(t,n){t.exports=function(t){return this.__data__.set(t,"__lodash_hash_undefined__"),this}},function(t,n){t.exports=function(t){return this.__data__.has(t)}},function(t,n){t.exports=function(t,n){for(var e=-1,o=null==t?0:t.length;++e<o;)if(n(t[e],e,t))return!0;return!1}},function(t,n,e){var o=e(27),i=e(216),s=e(99),r=e(103),a=e(217),h=e(60),c=o?o.prototype:void 0,p=c?c.valueOf:void 0;t.exports=function(t,n,e,o,c,l,m){switch(e){case"[object DataView]":if(t.byteLength!=n.byteLength||t.byteOffset!=n.byteOffset)return!1;t=t.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(t.byteLength!=n.byteLength||!l(new i(t),new i(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return s(+t,+n);case"[object Error]":return t.name==n.name&&t.message==n.message;case"[object RegExp]":case"[object String]":return t==n+"";case"[object Map]":var u=a;case"[object Set]":var g=1&o;if(u||(u=h),t.size!=n.size&&!g)return!1;var b=m.get(t);if(b)return b==n;o|=2,m.set(t,n);var d=r(u(t),u(n),o,c,l,m);return m.delete(t),d;case"[object Symbol]":if(p)return p.call(t)==p.call(n)}return!1}},function(t,n,e){var o=e(15).Uint8Array;t.exports=o},function(t,n){t.exports=function(t){var n=-1,e=Array(t.size);return t.forEach(function(t,o){e[++n]=[o,t]}),e}},function(t,n,e){var o=e(219),i=Object.prototype.hasOwnProperty;t.exports=function(t,n,e,s,r,a){var h=1&e,c=o(t),p=c.length;if(p!=o(n).length&&!h)return!1;for(var l=p;l--;){var m=c[l];if(!(h?m in n:i.call(n,m)))return!1}var u=a.get(t),g=a.get(n);if(u&&g)return u==n&&g==t;var b=!0;a.set(t,n),a.set(n,t);for(var d=h;++l<p;){var f=t[m=c[l]],w=n[m];if(s)var v=h?s(w,f,m,n,t,a):s(f,w,m,t,n,a);if(!(void 0===v?f===w||r(f,w,e,s,a):v)){b=!1;break}d||(d="constructor"==m)}if(b&&!d){var y=t.constructor,S=n.constructor;y==S||!("constructor"in t)||!("constructor"in n)||"function"==typeof y&&y instanceof y&&"function"==typeof S&&S instanceof S||(b=!1)}return a.delete(t),a.delete(n),b}},function(t,n,e){var o=e(220),i=e(221),s=e(106);t.exports=function(t){return o(t,s,i)}},function(t,n,e){var o=e(96),i=e(12);t.exports=function(t,n,e){var s=n(t);return i(t)?s:o(s,e(t))}},function(t,n,e){var o=e(222),i=e(223),s=Object.prototype.propertyIsEnumerable,r=Object.getOwnPropertySymbols,a=r?function(t){return null==t?[]:(t=Object(t),o(r(t),function(n){return s.call(t,n)}))}:i;t.exports=a},function(t,n){t.exports=function(t,n){for(var e=-1,o=null==t?0:t.length,i=0,s=[];++e<o;){var r=t[e];n(r,e,t)&&(s[i++]=r)}return s}},function(t,n){t.exports=function(){return[]}},function(t,n,e){var o=e(225),i=e(56),s=e(12),r=e(107),a=e(108),h=e(109),c=Object.prototype.hasOwnProperty;t.exports=function(t,n){var e=s(t),p=!e&&i(t),l=!e&&!p&&r(t),m=!e&&!p&&!l&&h(t),u=e||p||l||m,g=u?o(t.length,String):[],b=g.length;for(var d in t)!n&&!c.call(t,d)||u&&("length"==d||l&&("offset"==d||"parent"==d)||m&&("buffer"==d||"byteLength"==d||"byteOffset"==d)||a(d,b))||g.push(d);return g}},function(t,n){t.exports=function(t,n){for(var e=-1,o=Array(t);++e<t;)o[e]=n(e);return o}},function(t,n){t.exports=function(){return!1}},function(t,n,e){var o=e(23),i=e(61),s=e(19),r={};r["[object Float32Array]"]=r["[object Float64Array]"]=r["[object Int8Array]"]=r["[object Int16Array]"]=r["[object Int32Array]"]=r["[object Uint8Array]"]=r["[object Uint8ClampedArray]"]=r["[object Uint16Array]"]=r["[object Uint32Array]"]=!0,r["[object Arguments]"]=r["[object Array]"]=r["[object ArrayBuffer]"]=r["[object Boolean]"]=r["[object DataView]"]=r["[object Date]"]=r["[object Error]"]=r["[object Function]"]=r["[object Map]"]=r["[object Number]"]=r["[object Object]"]=r["[object RegExp]"]=r["[object Set]"]=r["[object String]"]=r["[object WeakMap]"]=!1,t.exports=function(t){return s(t)&&i(t.length)&&!!r[o(t)]}},function(t,n){t.exports=function(t){return function(n){return t(n)}}},function(t,n,e){(function(t){var o=e(97),i=n&&!n.nodeType&&n,s=i&&"object"==typeof t&&t&&!t.nodeType&&t,r=s&&s.exports===i&&o.process,a=function(){try{var t=s&&s.require&&s.require("util").types;return t||r&&r.binding&&r.binding("util")}catch(t){}}();t.exports=a}).call(this,e(69)(t))},function(t,n,e){var o=e(231),i=e(232),s=Object.prototype.hasOwnProperty;t.exports=function(t){if(!o(t))return i(t);var n=[];for(var e in Object(t))s.call(t,e)&&"constructor"!=e&&n.push(e);return n}},function(t,n){var e=Object.prototype;t.exports=function(t){var n=t&&t.constructor;return t===("function"==typeof n&&n.prototype||e)}},function(t,n,e){var o=e(233)(Object.keys,Object);t.exports=o},function(t,n){t.exports=function(t,n){return function(e){return t(n(e))}}},function(t,n,e){var o=e(235),i=e(57),s=e(236),r=e(111),a=e(237),h=e(23),c=e(101),p="[object Map]",l="[object Promise]",m="[object Set]",u="[object WeakMap]",g="[object DataView]",b=c(o),d=c(i),f=c(s),w=c(r),v=c(a),y=h;(o&&y(new o(new ArrayBuffer(1)))!=g||i&&y(new i)!=p||s&&y(s.resolve())!=l||r&&y(new r)!=m||a&&y(new a)!=u)&&(y=function(t){var n=h(t),e="[object Object]"==n?t.constructor:void 0,o=e?c(e):"";if(o)switch(o){case b:return g;case d:return p;case f:return l;case w:return m;case v:return u}return n}),t.exports=y},function(t,n,e){var o=e(18)(e(15),"DataView");t.exports=o},function(t,n,e){var o=e(18)(e(15),"Promise");t.exports=o},function(t,n,e){var o=e(18)(e(15),"WeakMap");t.exports=o},function(t,n,e){var o=e(112),i=e(106);t.exports=function(t){for(var n=i(t),e=n.length;e--;){var s=n[e],r=t[s];n[e]=[s,r,o(r)]}return n}},function(t,n,e){var o=e(102),i=e(240),s=e(247),r=e(62),a=e(112),h=e(113),c=e(42);t.exports=function(t,n){return r(t)&&a(n)?h(c(t),n):function(e){var r=i(e,t);return void 0===r&&r===n?s(e,t):o(n,r,3)}}},function(t,n,e){var o=e(114);t.exports=function(t,n,e){var i=null==t?void 0:o(t,n);return void 0===i?e:i}},function(t,n,e){var o=e(242),i=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,s=/\\(\\)?/g,r=o(function(t){var n=[];return 46===t.charCodeAt(0)&&n.push(""),t.replace(i,function(t,e,o,i){n.push(o?i.replace(s,"$1"):e||t)}),n});t.exports=r},function(t,n,e){var o=e(243);t.exports=function(t){var n=o(t,function(t){return 500===e.size&&e.clear(),t}),e=n.cache;return n}},function(t,n,e){var o=e(59);function i(t,n){if("function"!=typeof t||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var e=function(){var o=arguments,i=n?n.apply(this,o):o[0],s=e.cache;if(s.has(i))return s.get(i);var r=t.apply(this,o);return e.cache=s.set(i,r)||s,r};return e.cache=new(i.Cache||o),e}i.Cache=o,t.exports=i},function(t,n,e){var o=e(245);t.exports=function(t){return null==t?"":o(t)}},function(t,n,e){var o=e(27),i=e(246),s=e(12),r=e(63),a=o?o.prototype:void 0,h=a?a.toString:void 0;t.exports=function t(n){if("string"==typeof n)return n;if(s(n))return i(n,t)+"";if(r(n))return h?h.call(n):"";var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(t,n){t.exports=function(t,n){for(var e=-1,o=null==t?0:t.length,i=Array(o);++e<o;)i[e]=n(t[e],e,t);return i}},function(t,n,e){var o=e(248),i=e(249);t.exports=function(t,n){return null!=t&&i(t,n,o)}},function(t,n){t.exports=function(t,n){return null!=t&&n in Object(t)}},function(t,n,e){var o=e(115),i=e(56),s=e(12),r=e(108),a=e(61),h=e(42);t.exports=function(t,n,e){for(var c=-1,p=(n=o(n,t)).length,l=!1;++c<p;){var m=h(n[c]);if(!(l=null!=t&&e(t,m)))break;t=t[m]}return l||++c!=p?l:!!(p=null==t?0:t.length)&&a(p)&&r(m,p)&&(s(t)||i(t))}},function(t,n,e){var o=e(251),i=e(252),s=e(62),r=e(42);t.exports=function(t){return s(t)?o(r(t)):i(t)}},function(t,n){t.exports=function(t){return function(n){return null==n?void 0:n[t]}}},function(t,n,e){var o=e(114);t.exports=function(t){return function(n){return o(n,t)}}},function(t,n,e){var o=e(64),i=e(254),s=e(256);t.exports=function(t,n){return s(i(t,n,o),t+"")}},function(t,n,e){var o=e(255),i=Math.max;t.exports=function(t,n,e){return n=i(void 0===n?t.length-1:n,0),function(){for(var s=arguments,r=-1,a=i(s.length-n,0),h=Array(a);++r<a;)h[r]=s[n+r];r=-1;for(var c=Array(n+1);++r<n;)c[r]=s[r];return c[n]=e(h),o(t,this,c)}}},function(t,n){t.exports=function(t,n,e){switch(e.length){case 0:return t.call(n);case 1:return t.call(n,e[0]);case 2:return t.call(n,e[0],e[1]);case 3:return t.call(n,e[0],e[1],e[2])}return t.apply(n,e)}},function(t,n,e){var o=e(257),i=e(260)(o);t.exports=i},function(t,n,e){var o=e(258),i=e(259),s=e(64),r=i?function(t,n){return i(t,"toString",{configurable:!0,enumerable:!1,value:o(n),writable:!0})}:s;t.exports=r},function(t,n){t.exports=function(t){return function(){return t}}},function(t,n,e){var o=e(18),i=function(){try{var t=o(Object,"defineProperty");return t({},"",{}),t}catch(t){}}();t.exports=i},function(t,n){var e=Date.now;t.exports=function(t){var n=0,o=0;return function(){var i=e(),s=16-(i-o);if(o=i,s>0){if(++n>=800)return arguments[0]}else n=0;return t.apply(void 0,arguments)}}},function(t,n,e){var o=e(104),i=e(262),s=e(267),r=e(105),a=e(268),h=e(60);t.exports=function(t,n,e){var c=-1,p=i,l=t.length,m=!0,u=[],g=u;if(e)m=!1,p=s;else if(l>=200){var b=n?null:a(t);if(b)return h(b);m=!1,p=r,g=new o}else g=n?[]:u;t:for(;++c<l;){var d=t[c],f=n?n(d):d;if(d=e||0!==d?d:0,m&&f==f){for(var w=g.length;w--;)if(g[w]===f)continue t;n&&g.push(f),u.push(d)}else p(g,f,e)||(g!==u&&g.push(f),u.push(d))}return u}},function(t,n,e){var o=e(263);t.exports=function(t,n){return!!(null==t?0:t.length)&&o(t,n,0)>-1}},function(t,n,e){var o=e(264),i=e(265),s=e(266);t.exports=function(t,n,e){return n==n?s(t,n,e):o(t,i,e)}},function(t,n){t.exports=function(t,n,e,o){for(var i=t.length,s=e+(o?1:-1);o?s--:++s<i;)if(n(t[s],s,t))return s;return-1}},function(t,n){t.exports=function(t){return t!=t}},function(t,n){t.exports=function(t,n,e){for(var o=e-1,i=t.length;++o<i;)if(t[o]===n)return o;return-1}},function(t,n){t.exports=function(t,n,e){for(var o=-1,i=null==t?0:t.length;++o<i;)if(e(n,t[o]))return!0;return!1}},function(t,n,e){var o=e(111),i=e(269),s=e(60),r=o&&1/s(new o([,-0]))[1]==1/0?function(t){return new o(t)}:i;t.exports=r},function(t,n){t.exports=function(){}},function(t,n,e){var o=e(110),i=e(19);t.exports=function(t){return i(t)&&o(t)}},function(t,n,e){},function(t,n,e){"use strict";e(116)},function(t,n,e){},function(t,n,e){"use strict";e(117)},function(t,n,e){},function(t,n,e){},function(t,n,e){"use strict";e(118)},function(t,n,e){"use strict";e(119)},function(t,n,e){},function(t,n,e){},function(t,n,e){"use strict";e(120)},function(t,n,e){"use strict";e(121)},function(t,n,e){"use strict";e.r(n);e(11),e(22),e(45);var o=Object.freeze({}),i=Array.isArray;function s(t){return null==t}function r(t){return null!=t}function a(t){return!0===t}function h(t){return"string"==typeof t||"number"==typeof t||"symbol"==typeof t||"boolean"==typeof t}function c(t){return"function"==typeof t}function p(t){return null!==t&&"object"==typeof t}var l=Object.prototype.toString;function m(t){return"[object Object]"===l.call(t)}function u(t){return"[object RegExp]"===l.call(t)}function g(t){var n=parseFloat(String(t));return n>=0&&Math.floor(n)===n&&isFinite(t)}function b(t){return r(t)&&"function"==typeof t.then&&"function"==typeof t.catch}function d(t){return null==t?"":Array.isArray(t)||m(t)&&t.toString===l?JSON.stringify(t,f,2):String(t)}function f(t,n){return n&&n.__v_isRef?n.value:n}function w(t){var n=parseFloat(t);return isNaN(n)?t:n}function v(t,n){for(var e=Object.create(null),o=t.split(","),i=0;i<o.length;i++)e[o[i]]=!0;return n?function(t){return e[t.toLowerCase()]}:function(t){return e[t]}}v("slot,component",!0);var y=v("key,ref,slot,slot-scope,is");function S(t,n){var e=t.length;if(e){if(n===t[e-1])return void(t.length=e-1);var o=t.indexOf(n);if(o>-1)return t.splice(o,1)}}var k=Object.prototype.hasOwnProperty;function E(t,n){return k.call(t,n)}function x(t){var n=Object.create(null);return function(e){return n[e]||(n[e]=t(e))}}var A=/-(\w)/g,C=x(function(t){return t.replace(A,function(t,n){return n?n.toUpperCase():""})}),T=x(function(t){return t.charAt(0).toUpperCase()+t.slice(1)}),j=/\B([A-Z])/g,_=x(function(t){return t.replace(j,"-$1").toLowerCase()});var P=Function.prototype.bind?function(t,n){return t.bind(n)}:function(t,n){function e(e){var o=arguments.length;return o?o>1?t.apply(n,arguments):t.call(n,e):t.call(n)}return e._length=t.length,e};function D(t,n){n=n||0;for(var e=t.length-n,o=new Array(e);e--;)o[e]=t[e+n];return o}function L(t,n){for(var e in n)t[e]=n[e];return t}function M(t){for(var n={},e=0;e<t.length;e++)t[e]&&L(n,t[e]);return n}function O(t,n,e){}var I=function(t,n,e){return!1},R=function(t){return t};function N(t,n){if(t===n)return!0;var e=p(t),o=p(n);if(!e||!o)return!e&&!o&&String(t)===String(n);try{var i=Array.isArray(t),s=Array.isArray(n);if(i&&s)return t.length===n.length&&t.every(function(t,e){return N(t,n[e])});if(t instanceof Date&&n instanceof Date)return t.getTime()===n.getTime();if(i||s)return!1;var r=Object.keys(t),a=Object.keys(n);return r.length===a.length&&r.every(function(e){return N(t[e],n[e])})}catch(t){return!1}}function B(t,n){for(var e=0;e<t.length;e++)if(N(t[e],n))return e;return-1}function F(t){var n=!1;return function(){n||(n=!0,t.apply(this,arguments))}}function z(t,n){return t===n?0===t&&1/t!=1/n:t==t||n==n}var W="data-server-rendered",G=["component","directive","filter"],H=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],U={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:I,isReservedAttr:I,isUnknownElement:I,getTagNamespace:O,parsePlatformTagName:R,mustUseProp:I,async:!0,_lifecycleHooks:H},q=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function J(t){var n=(t+"").charCodeAt(0);return 36===n||95===n}function V(t,n,e,o){Object.defineProperty(t,n,{value:e,enumerable:!!o,writable:!0,configurable:!0})}var $=new RegExp("[^".concat(q.source,".$_\\d]"));var X="__proto__"in{},Q="undefined"!=typeof window,K=Q&&window.navigator.userAgent.toLowerCase(),Y=K&&/msie|trident/.test(K),Z=K&&K.indexOf("msie 9.0")>0,tt=K&&K.indexOf("edge/")>0;K&&K.indexOf("android");var nt=K&&/iphone|ipad|ipod|ios/.test(K);K&&/chrome\/\d+/.test(K),K&&/phantomjs/.test(K);var et,ot=K&&K.match(/firefox\/(\d+)/),it={}.watch,st=!1;if(Q)try{var rt={};Object.defineProperty(rt,"passive",{get:function(){st=!0}}),window.addEventListener("test-passive",null,rt)}catch(t){}var at=function(){return void 0===et&&(et=!Q&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),et},ht=Q&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ct(t){return"function"==typeof t&&/native code/.test(t.toString())}var pt,lt="undefined"!=typeof Symbol&&ct(Symbol)&&"undefined"!=typeof Reflect&&ct(Reflect.ownKeys);pt="undefined"!=typeof Set&&ct(Set)?Set:function(){function t(){this.set=Object.create(null)}return t.prototype.has=function(t){return!0===this.set[t]},t.prototype.add=function(t){this.set[t]=!0},t.prototype.clear=function(){this.set=Object.create(null)},t}();var mt=null;function ut(t){void 0===t&&(t=null),t||mt&&mt._scope.off(),mt=t,t&&t._scope.on()}var gt=function(){function t(t,n,e,o,i,s,r,a){this.tag=t,this.data=n,this.children=e,this.text=o,this.elm=i,this.ns=void 0,this.context=s,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=a,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(t.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),t}(),bt=function(t){void 0===t&&(t="");var n=new gt;return n.text=t,n.isComment=!0,n};function dt(t){return new gt(void 0,void 0,void 0,String(t))}function ft(t){var n=new gt(t.tag,t.data,t.children&&t.children.slice(),t.text,t.elm,t.context,t.componentOptions,t.asyncFactory);return n.ns=t.ns,n.isStatic=t.isStatic,n.key=t.key,n.isComment=t.isComment,n.fnContext=t.fnContext,n.fnOptions=t.fnOptions,n.fnScopeId=t.fnScopeId,n.asyncMeta=t.asyncMeta,n.isCloned=!0,n}"function"==typeof SuppressedError&&SuppressedError;var wt=0,vt=[],yt=function(){function t(){this._pending=!1,this.id=wt++,this.subs=[]}return t.prototype.addSub=function(t){this.subs.push(t)},t.prototype.removeSub=function(t){this.subs[this.subs.indexOf(t)]=null,this._pending||(this._pending=!0,vt.push(this))},t.prototype.depend=function(n){t.target&&t.target.addDep(this)},t.prototype.notify=function(t){var n=this.subs.filter(function(t){return t});for(var e=0,o=n.length;e<o;e++){0,n[e].update()}},t}();yt.target=null;var St=[];function kt(t){St.push(t),yt.target=t}function Et(){St.pop(),yt.target=St[St.length-1]}var xt=Array.prototype,At=Object.create(xt);["push","pop","shift","unshift","splice","sort","reverse"].forEach(function(t){var n=xt[t];V(At,t,function(){for(var e=[],o=0;o<arguments.length;o++)e[o]=arguments[o];var i,s=n.apply(this,e),r=this.__ob__;switch(t){case"push":case"unshift":i=e;break;case"splice":i=e.slice(2)}return i&&r.observeArray(i),r.dep.notify(),s})});var Ct=Object.getOwnPropertyNames(At),Tt={},jt=!0;function _t(t){jt=t}var Pt={notify:O,depend:O,addSub:O,removeSub:O},Dt=function(){function t(t,n,e){if(void 0===n&&(n=!1),void 0===e&&(e=!1),this.value=t,this.shallow=n,this.mock=e,this.dep=e?Pt:new yt,this.vmCount=0,V(t,"__ob__",this),i(t)){if(!e)if(X)t.__proto__=At;else for(var o=0,s=Ct.length;o<s;o++){V(t,a=Ct[o],At[a])}n||this.observeArray(t)}else{var r=Object.keys(t);for(o=0;o<r.length;o++){var a;Mt(t,a=r[o],Tt,void 0,n,e)}}}return t.prototype.observeArray=function(t){for(var n=0,e=t.length;n<e;n++)Lt(t[n],!1,this.mock)},t}();function Lt(t,n,e){return t&&E(t,"__ob__")&&t.__ob__ instanceof Dt?t.__ob__:!jt||!e&&at()||!i(t)&&!m(t)||!Object.isExtensible(t)||t.__v_skip||zt(t)||t instanceof gt?void 0:new Dt(t,n,e)}function Mt(t,n,e,o,s,r,a){void 0===a&&(a=!1);var h=new yt,c=Object.getOwnPropertyDescriptor(t,n);if(!c||!1!==c.configurable){var p=c&&c.get,l=c&&c.set;p&&!l||e!==Tt&&2!==arguments.length||(e=t[n]);var m=s?e&&e.__ob__:Lt(e,!1,r);return Object.defineProperty(t,n,{enumerable:!0,configurable:!0,get:function(){var n=p?p.call(t):e;return yt.target&&(h.depend(),m&&(m.dep.depend(),i(n)&&Rt(n))),zt(n)&&!s?n.value:n},set:function(n){var o=p?p.call(t):e;if(z(o,n)){if(l)l.call(t,n);else{if(p)return;if(!s&&zt(o)&&!zt(n))return void(o.value=n);e=n}m=s?n&&n.__ob__:Lt(n,!1,r),h.notify()}}}),h}}function Ot(t,n,e){if(!Ft(t)){var o=t.__ob__;return i(t)&&g(n)?(t.length=Math.max(t.length,n),t.splice(n,1,e),o&&!o.shallow&&o.mock&&Lt(e,!1,!0),e):n in t&&!(n in Object.prototype)?(t[n]=e,e):t._isVue||o&&o.vmCount?e:o?(Mt(o.value,n,e,void 0,o.shallow,o.mock),o.dep.notify(),e):(t[n]=e,e)}}function It(t,n){if(i(t)&&g(n))t.splice(n,1);else{var e=t.__ob__;t._isVue||e&&e.vmCount||Ft(t)||E(t,n)&&(delete t[n],e&&e.dep.notify())}}function Rt(t){for(var n=void 0,e=0,o=t.length;e<o;e++)(n=t[e])&&n.__ob__&&n.__ob__.dep.depend(),i(n)&&Rt(n)}function Nt(t){return Bt(t,!0),V(t,"__v_isShallow",!0),t}function Bt(t,n){if(!Ft(t)){Lt(t,n,at());0}}function Ft(t){return!(!t||!t.__v_isReadonly)}function zt(t){return!(!t||!0!==t.__v_isRef)}function Wt(t,n,e){Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){var t=n[e];if(zt(t))return t.value;var o=t&&t.__ob__;return o&&o.dep.depend(),t},set:function(t){var o=n[e];zt(o)&&!zt(t)?o.value=t:n[e]=t}})}var Gt="watcher";"".concat(Gt," callback"),"".concat(Gt," getter"),"".concat(Gt," cleanup");var Ht;var Ut=function(){function t(t){void 0===t&&(t=!1),this.detached=t,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Ht,!t&&Ht&&(this.index=(Ht.scopes||(Ht.scopes=[])).push(this)-1)}return t.prototype.run=function(t){if(this.active){var n=Ht;try{return Ht=this,t()}finally{Ht=n}}else 0},t.prototype.on=function(){Ht=this},t.prototype.off=function(){Ht=this.parent},t.prototype.stop=function(t){if(this.active){var n=void 0,e=void 0;for(n=0,e=this.effects.length;n<e;n++)this.effects[n].teardown();for(n=0,e=this.cleanups.length;n<e;n++)this.cleanups[n]();if(this.scopes)for(n=0,e=this.scopes.length;n<e;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!t){var o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this.active=!1}},t}();function qt(t){var n=t._provided,e=t.$parent&&t.$parent._provided;return e===n?t._provided=Object.create(e):n}var Jt=x(function(t){var n="&"===t.charAt(0),e="~"===(t=n?t.slice(1):t).charAt(0),o="!"===(t=e?t.slice(1):t).charAt(0);return{name:t=o?t.slice(1):t,once:e,capture:o,passive:n}});function Vt(t,n){function e(){var t=e.fns;if(!i(t))return On(t,null,arguments,n,"v-on handler");for(var o=t.slice(),s=0;s<o.length;s++)On(o[s],null,arguments,n,"v-on handler")}return e.fns=t,e}function $t(t,n,e,o,i,r){var h,c,p,l;for(h in t)c=t[h],p=n[h],l=Jt(h),s(c)||(s(p)?(s(c.fns)&&(c=t[h]=Vt(c,r)),a(l.once)&&(c=t[h]=i(l.name,c,l.capture)),e(l.name,c,l.capture,l.passive,l.params)):c!==p&&(p.fns=c,t[h]=p));for(h in n)s(t[h])&&o((l=Jt(h)).name,n[h],l.capture)}function Xt(t,n,e){var o;t instanceof gt&&(t=t.data.hook||(t.data.hook={}));var i=t[n];function h(){e.apply(this,arguments),S(o.fns,h)}s(i)?o=Vt([h]):r(i.fns)&&a(i.merged)?(o=i).fns.push(h):o=Vt([i,h]),o.merged=!0,t[n]=o}function Qt(t,n,e,o,i){if(r(n)){if(E(n,e))return t[e]=n[e],i||delete n[e],!0;if(E(n,o))return t[e]=n[o],i||delete n[o],!0}return!1}function Kt(t){return h(t)?[dt(t)]:i(t)?Zt(t):void 0}function Yt(t){return r(t)&&r(t.text)&&!1===t.isComment}function Zt(t,n){var e,o,c,p,l=[];for(e=0;e<t.length;e++)s(o=t[e])||"boolean"==typeof o||(p=l[c=l.length-1],i(o)?o.length>0&&(Yt((o=Zt(o,"".concat(n||"","_").concat(e)))[0])&&Yt(p)&&(l[c]=dt(p.text+o[0].text),o.shift()),l.push.apply(l,o)):h(o)?Yt(p)?l[c]=dt(p.text+o):""!==o&&l.push(dt(o)):Yt(o)&&Yt(p)?l[c]=dt(p.text+o.text):(a(t._isVList)&&r(o.tag)&&s(o.key)&&r(n)&&(o.key="__vlist".concat(n,"_").concat(e,"__")),l.push(o)));return l}function tn(t,n){var e,o,s,a,h=null;if(i(t)||"string"==typeof t)for(h=new Array(t.length),e=0,o=t.length;e<o;e++)h[e]=n(t[e],e);else if("number"==typeof t)for(h=new Array(t),e=0;e<t;e++)h[e]=n(e+1,e);else if(p(t))if(lt&&t[Symbol.iterator]){h=[];for(var c=t[Symbol.iterator](),l=c.next();!l.done;)h.push(n(l.value,h.length)),l=c.next()}else for(s=Object.keys(t),h=new Array(s.length),e=0,o=s.length;e<o;e++)a=s[e],h[e]=n(t[a],a,e);return r(h)||(h=[]),h._isVList=!0,h}function nn(t,n,e,o){var i,s=this.$scopedSlots[t];s?(e=e||{},o&&(e=L(L({},o),e)),i=s(e)||(c(n)?n():n)):i=this.$slots[t]||(c(n)?n():n);var r=e&&e.slot;return r?this.$createElement("template",{slot:r},i):i}function en(t){return Fe(this.$options,"filters",t,!0)||R}function on(t,n){return i(t)?-1===t.indexOf(n):t!==n}function sn(t,n,e,o,i){var s=U.keyCodes[n]||e;return i&&o&&!U.keyCodes[n]?on(i,o):s?on(s,t):o?_(o)!==n:void 0===t}function rn(t,n,e,o,s){if(e)if(p(e)){i(e)&&(e=M(e));var r=void 0,a=function(i){if("class"===i||"style"===i||y(i))r=t;else{var a=t.attrs&&t.attrs.type;r=o||U.mustUseProp(n,a,i)?t.domProps||(t.domProps={}):t.attrs||(t.attrs={})}var h=C(i),c=_(i);h in r||c in r||(r[i]=e[i],s&&((t.on||(t.on={}))["update:".concat(i)]=function(t){e[i]=t}))};for(var h in e)a(h)}else;return t}function an(t,n){var e=this._staticTrees||(this._staticTrees=[]),o=e[t];return o&&!n||cn(o=e[t]=this.$options.staticRenderFns[t].call(this._renderProxy,this._c,this),"__static__".concat(t),!1),o}function hn(t,n,e){return cn(t,"__once__".concat(n).concat(e?"_".concat(e):""),!0),t}function cn(t,n,e){if(i(t))for(var o=0;o<t.length;o++)t[o]&&"string"!=typeof t[o]&&pn(t[o],"".concat(n,"_").concat(o),e);else pn(t,n,e)}function pn(t,n,e){t.isStatic=!0,t.key=n,t.isOnce=e}function ln(t,n){if(n)if(m(n)){var e=t.on=t.on?L({},t.on):{};for(var o in n){var i=e[o],s=n[o];e[o]=i?[].concat(i,s):s}}else;return t}function mn(t,n,e,o){n=n||{$stable:!e};for(var s=0;s<t.length;s++){var r=t[s];i(r)?mn(r,n,e):r&&(r.proxy&&(r.fn.proxy=!0),n[r.key]=r.fn)}return o&&(n.$key=o),n}function un(t,n){for(var e=0;e<n.length;e+=2){var o=n[e];"string"==typeof o&&o&&(t[n[e]]=n[e+1])}return t}function gn(t,n){return"string"==typeof t?n+t:t}function bn(t){t._o=hn,t._n=w,t._s=d,t._l=tn,t._t=nn,t._q=N,t._i=B,t._m=an,t._f=en,t._k=sn,t._b=rn,t._v=dt,t._e=bt,t._u=mn,t._g=ln,t._d=un,t._p=gn}function dn(t,n){if(!t||!t.length)return{};for(var e={},o=0,i=t.length;o<i;o++){var s=t[o],r=s.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,s.context!==n&&s.fnContext!==n||!r||null==r.slot)(e.default||(e.default=[])).push(s);else{var a=r.slot,h=e[a]||(e[a]=[]);"template"===s.tag?h.push.apply(h,s.children||[]):h.push(s)}}for(var c in e)e[c].every(fn)&&delete e[c];return e}function fn(t){return t.isComment&&!t.asyncFactory||" "===t.text}function wn(t){return t.isComment&&t.asyncFactory}function vn(t,n,e,i){var s,r=Object.keys(e).length>0,a=n?!!n.$stable:!r,h=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(a&&i&&i!==o&&h===i.$key&&!r&&!i.$hasNormal)return i;for(var c in s={},n)n[c]&&"$"!==c[0]&&(s[c]=yn(t,e,c,n[c]))}else s={};for(var p in e)p in s||(s[p]=Sn(e,p));return n&&Object.isExtensible(n)&&(n._normalized=s),V(s,"$stable",a),V(s,"$key",h),V(s,"$hasNormal",r),s}function yn(t,n,e,o){var s=function(){var n=mt;ut(t);var e=arguments.length?o.apply(null,arguments):o({}),s=(e=e&&"object"==typeof e&&!i(e)?[e]:Kt(e))&&e[0];return ut(n),e&&(!s||1===e.length&&s.isComment&&!wn(s))?void 0:e};return o.proxy&&Object.defineProperty(n,e,{get:s,enumerable:!0,configurable:!0}),s}function Sn(t,n){return function(){return t[n]}}function kn(t){return{get attrs(){if(!t._attrsProxy){var n=t._attrsProxy={};V(n,"_v_attr_proxy",!0),En(n,t.$attrs,o,t,"$attrs")}return t._attrsProxy},get listeners(){t._listenersProxy||En(t._listenersProxy={},t.$listeners,o,t,"$listeners");return t._listenersProxy},get slots(){return function(t){t._slotsProxy||An(t._slotsProxy={},t.$scopedSlots);return t._slotsProxy}(t)},emit:P(t.$emit,t),expose:function(n){n&&Object.keys(n).forEach(function(e){return Wt(t,n,e)})}}}function En(t,n,e,o,i){var s=!1;for(var r in n)r in t?n[r]!==e[r]&&(s=!0):(s=!0,xn(t,r,o,i));for(var r in t)r in n||(s=!0,delete t[r]);return s}function xn(t,n,e,o){Object.defineProperty(t,n,{enumerable:!0,configurable:!0,get:function(){return e[o][n]}})}function An(t,n){for(var e in n)t[e]=n[e];for(var e in t)e in n||delete t[e]}var Cn=null;function Tn(t,n){return(t.__esModule||lt&&"Module"===t[Symbol.toStringTag])&&(t=t.default),p(t)?n.extend(t):t}function jn(t){if(i(t))for(var n=0;n<t.length;n++){var e=t[n];if(r(e)&&(r(e.componentOptions)||wn(e)))return e}}var _n=1,Pn=2;function Dn(t,n,e,o,s,l){return(i(e)||h(e))&&(s=o,o=e,e=void 0),a(l)&&(s=Pn),function(t,n,e,o,s){if(r(e)&&r(e.__ob__))return bt();r(e)&&r(e.is)&&(n=e.is);if(!n)return bt();0;i(o)&&c(o[0])&&((e=e||{}).scopedSlots={default:o[0]},o.length=0);s===Pn?o=Kt(o):s===_n&&(o=function(t){for(var n=0;n<t.length;n++)if(i(t[n]))return Array.prototype.concat.apply([],t);return t}(o));var a,h;if("string"==typeof n){var l=void 0;h=t.$vnode&&t.$vnode.ns||U.getTagNamespace(n),a=U.isReservedTag(n)?new gt(U.parsePlatformTagName(n),e,o,void 0,void 0,t):e&&e.pre||!r(l=Fe(t.$options,"components",n))?new gt(n,e,o,void 0,void 0,t):_e(l,e,t,o,n)}else a=_e(n,e,t,o);return i(a)?a:r(a)?(r(h)&&Ln(a,h),r(e)&&function(t){p(t.style)&&Xn(t.style);p(t.class)&&Xn(t.class)}(e),a):bt()}(t,n,e,o,s)}function Ln(t,n,e){if(t.ns=n,"foreignObject"===t.tag&&(n=void 0,e=!0),r(t.children))for(var o=0,i=t.children.length;o<i;o++){var h=t.children[o];r(h.tag)&&(s(h.ns)||a(e)&&"svg"!==h.tag)&&Ln(h,n,e)}}function Mn(t,n,e){kt();try{if(n)for(var o=n;o=o.$parent;){var i=o.$options.errorCaptured;if(i)for(var s=0;s<i.length;s++)try{if(!1===i[s].call(o,t,n,e))return}catch(t){In(t,o,"errorCaptured hook")}}In(t,n,e)}finally{Et()}}function On(t,n,e,o,i){var s;try{(s=e?t.apply(n,e):t.call(n))&&!s._isVue&&b(s)&&!s._handled&&(s.catch(function(t){return Mn(t,o,i+" (Promise/async)")}),s._handled=!0)}catch(t){Mn(t,o,i)}return s}function In(t,n,e){if(U.errorHandler)try{return U.errorHandler.call(null,t,n,e)}catch(n){n!==t&&Rn(n,null,"config.errorHandler")}Rn(t,n,e)}function Rn(t,n,e){if(!Q||"undefined"==typeof console)throw t;console.error(t)}var Nn,Bn=!1,Fn=[],zn=!1;function Wn(){zn=!1;var t=Fn.slice(0);Fn.length=0;for(var n=0;n<t.length;n++)t[n]()}if("undefined"!=typeof Promise&&ct(Promise)){var Gn=Promise.resolve();Nn=function(){Gn.then(Wn),nt&&setTimeout(O)},Bn=!0}else if(Y||"undefined"==typeof MutationObserver||!ct(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Nn="undefined"!=typeof setImmediate&&ct(setImmediate)?function(){setImmediate(Wn)}:function(){setTimeout(Wn,0)};else{var Hn=1,Un=new MutationObserver(Wn),qn=document.createTextNode(String(Hn));Un.observe(qn,{characterData:!0}),Nn=function(){Hn=(Hn+1)%2,qn.data=String(Hn)},Bn=!0}function Jn(t,n){var e;if(Fn.push(function(){if(t)try{t.call(n)}catch(t){Mn(t,n,"nextTick")}else e&&e(n)}),zn||(zn=!0,Nn()),!t&&"undefined"!=typeof Promise)return new Promise(function(t){e=t})}function Vn(t){return function(n,e){if(void 0===e&&(e=mt),e)return function(t,n,e){var o=t.$options;o[n]=Ie(o[n],e)}(e,t,n)}}Vn("beforeMount"),Vn("mounted"),Vn("beforeUpdate"),Vn("updated"),Vn("beforeDestroy"),Vn("destroyed"),Vn("activated"),Vn("deactivated"),Vn("serverPrefetch"),Vn("renderTracked"),Vn("renderTriggered"),Vn("errorCaptured");var $n=new pt;function Xn(t){return Qn(t,$n),$n.clear(),t}function Qn(t,n){var e,o,s=i(t);if(!(!s&&!p(t)||t.__v_skip||Object.isFrozen(t)||t instanceof gt)){if(t.__ob__){var r=t.__ob__.dep.id;if(n.has(r))return;n.add(r)}if(s)for(e=t.length;e--;)Qn(t[e],n);else if(zt(t))Qn(t.value,n);else for(e=(o=Object.keys(t)).length;e--;)Qn(t[o[e]],n)}}var Kn,Yn=0,Zn=function(){function t(t,n,e,o,i){var s,r;s=this,void 0===(r=Ht&&!Ht._vm?Ht:t?t._scope:void 0)&&(r=Ht),r&&r.active&&r.effects.push(s),(this.vm=t)&&i&&(t._watcher=this),o?(this.deep=!!o.deep,this.user=!!o.user,this.lazy=!!o.lazy,this.sync=!!o.sync,this.before=o.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=e,this.id=++Yn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new pt,this.newDepIds=new pt,this.expression="",c(n)?this.getter=n:(this.getter=function(t){if(!$.test(t)){var n=t.split(".");return function(t){for(var e=0;e<n.length;e++){if(!t)return;t=t[n[e]]}return t}}}(n),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()}return t.prototype.get=function(){var t;kt(this);var n=this.vm;try{t=this.getter.call(n,n)}catch(t){if(!this.user)throw t;Mn(t,n,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Xn(t),Et(),this.cleanupDeps()}return t},t.prototype.addDep=function(t){var n=t.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(t),this.depIds.has(n)||t.addSub(this))},t.prototype.cleanupDeps=function(){for(var t=this.deps.length;t--;){var n=this.deps[t];this.newDepIds.has(n.id)||n.removeSub(this)}var e=this.depIds;this.depIds=this.newDepIds,this.newDepIds=e,this.newDepIds.clear(),e=this.deps,this.deps=this.newDeps,this.newDeps=e,this.newDeps.length=0},t.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():Se(this)},t.prototype.run=function(){if(this.active){var t=this.get();if(t!==this.value||p(t)||this.deep){var n=this.value;if(this.value=t,this.user){var e='callback for watcher "'.concat(this.expression,'"');On(this.cb,this.vm,[t,n],this.vm,e)}else this.cb.call(this.vm,t,n)}}},t.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},t.prototype.depend=function(){for(var t=this.deps.length;t--;)this.deps[t].depend()},t.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&S(this.vm._scope.effects,this),this.active){for(var t=this.deps.length;t--;)this.deps[t].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},t}();function te(t,n){Kn.$on(t,n)}function ne(t,n){Kn.$off(t,n)}function ee(t,n){var e=Kn;return function o(){null!==n.apply(null,arguments)&&e.$off(t,o)}}function oe(t,n,e){Kn=t,$t(n,e||{},te,ne,ee,t),Kn=void 0}var ie=null;function se(t){var n=ie;return ie=t,function(){ie=n}}function re(t){for(;t&&(t=t.$parent);)if(t._inactive)return!0;return!1}function ae(t,n){if(n){if(t._directInactive=!1,re(t))return}else if(t._directInactive)return;if(t._inactive||null===t._inactive){t._inactive=!1;for(var e=0;e<t.$children.length;e++)ae(t.$children[e]);ce(t,"activated")}}function he(t,n){if(!(n&&(t._directInactive=!0,re(t))||t._inactive)){t._inactive=!0;for(var e=0;e<t.$children.length;e++)he(t.$children[e]);ce(t,"deactivated")}}function ce(t,n,e,o){void 0===o&&(o=!0),kt();var i=mt,s=Ht;o&&ut(t);var r=t.$options[n],a="".concat(n," hook");if(r)for(var h=0,c=r.length;h<c;h++)On(r[h],t,e||null,t,a);t._hasHookEvent&&t.$emit("hook:"+n),o&&(ut(i),s&&s.on()),Et()}var pe=[],le=[],me={},ue=!1,ge=!1,be=0;var de=0,fe=Date.now;if(Q&&!Y){var we=window.performance;we&&"function"==typeof we.now&&fe()>document.createEvent("Event").timeStamp&&(fe=function(){return we.now()})}var ve=function(t,n){if(t.post){if(!n.post)return 1}else if(n.post)return-1;return t.id-n.id};function ye(){var t,n;for(de=fe(),ge=!0,pe.sort(ve),be=0;be<pe.length;be++)(t=pe[be]).before&&t.before(),n=t.id,me[n]=null,t.run();var e=le.slice(),o=pe.slice();be=pe.length=le.length=0,me={},ue=ge=!1,function(t){for(var n=0;n<t.length;n++)t[n]._inactive=!0,ae(t[n],!0)}(e),function(t){var n=t.length;for(;n--;){var e=t[n],o=e.vm;o&&o._watcher===e&&o._isMounted&&!o._isDestroyed&&ce(o,"updated")}}(o),function(){for(var t=0;t<vt.length;t++){var n=vt[t];n.subs=n.subs.filter(function(t){return t}),n._pending=!1}vt.length=0}(),ht&&U.devtools&&ht.emit("flush")}function Se(t){var n=t.id;if(null==me[n]&&(t!==yt.target||!t.noRecurse)){if(me[n]=!0,ge){for(var e=pe.length-1;e>be&&pe[e].id>t.id;)e--;pe.splice(e+1,0,t)}else pe.push(t);ue||(ue=!0,Jn(ye))}}function ke(t,n){if(t){for(var e=Object.create(null),o=lt?Reflect.ownKeys(t):Object.keys(t),i=0;i<o.length;i++){var s=o[i];if("__ob__"!==s){var r=t[s].from;if(r in n._provided)e[s]=n._provided[r];else if("default"in t[s]){var a=t[s].default;e[s]=c(a)?a.call(n):a}else 0}}return e}}function Ee(t,n,e,s,r){var h,c=this,p=r.options;E(s,"_uid")?(h=Object.create(s))._original=s:(h=s,s=s._original);var l=a(p._compiled),m=!l;this.data=t,this.props=n,this.children=e,this.parent=s,this.listeners=t.on||o,this.injections=ke(p.inject,s),this.slots=function(){return c.$slots||vn(s,t.scopedSlots,c.$slots=dn(e,s)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return vn(s,t.scopedSlots,this.slots())}}),l&&(this.$options=p,this.$slots=this.slots(),this.$scopedSlots=vn(s,t.scopedSlots,this.$slots)),p._scopeId?this._c=function(t,n,e,o){var r=Dn(h,t,n,e,o,m);return r&&!i(r)&&(r.fnScopeId=p._scopeId,r.fnContext=s),r}:this._c=function(t,n,e,o){return Dn(h,t,n,e,o,m)}}function xe(t,n,e,o,i){var s=ft(t);return s.fnContext=e,s.fnOptions=o,n.slot&&((s.data||(s.data={})).slot=n.slot),s}function Ae(t,n){for(var e in n)t[C(e)]=n[e]}function Ce(t){return t.name||t.__name||t._componentTag}bn(Ee.prototype);var Te={init:function(t,n){if(t.componentInstance&&!t.componentInstance._isDestroyed&&t.data.keepAlive){var e=t;Te.prepatch(e,e)}else{(t.componentInstance=function(t,n){var e={_isComponent:!0,_parentVnode:t,parent:n},o=t.data.inlineTemplate;r(o)&&(e.render=o.render,e.staticRenderFns=o.staticRenderFns);return new t.componentOptions.Ctor(e)}(t,ie)).$mount(n?t.elm:void 0,n)}},prepatch:function(t,n){var e=n.componentOptions;!function(t,n,e,i,s){var r=i.data.scopedSlots,a=t.$scopedSlots,h=!!(r&&!r.$stable||a!==o&&!a.$stable||r&&t.$scopedSlots.$key!==r.$key||!r&&t.$scopedSlots.$key),c=!!(s||t.$options._renderChildren||h),p=t.$vnode;t.$options._parentVnode=i,t.$vnode=i,t._vnode&&(t._vnode.parent=i),t.$options._renderChildren=s;var l=i.data.attrs||o;t._attrsProxy&&En(t._attrsProxy,l,p.data&&p.data.attrs||o,t,"$attrs")&&(c=!0),t.$attrs=l,e=e||o;var m=t.$options._parentListeners;if(t._listenersProxy&&En(t._listenersProxy,e,m||o,t,"$listeners"),t.$listeners=t.$options._parentListeners=e,oe(t,e,m),n&&t.$options.props){_t(!1);for(var u=t._props,g=t.$options._propKeys||[],b=0;b<g.length;b++){var d=g[b],f=t.$options.props;u[d]=ze(d,f,n,t)}_t(!0),t.$options.propsData=n}c&&(t.$slots=dn(s,i.context),t.$forceUpdate())}(n.componentInstance=t.componentInstance,e.propsData,e.listeners,n,e.children)},insert:function(t){var n,e=t.context,o=t.componentInstance;o._isMounted||(o._isMounted=!0,ce(o,"mounted")),t.data.keepAlive&&(e._isMounted?((n=o)._inactive=!1,le.push(n)):ae(o,!0))},destroy:function(t){var n=t.componentInstance;n._isDestroyed||(t.data.keepAlive?he(n,!0):n.$destroy())}},je=Object.keys(Te);function _e(t,n,e,h,c){if(!s(t)){var l=e.$options._base;if(p(t)&&(t=l.extend(t)),"function"==typeof t){var m;if(s(t.cid)&&(t=function(t,n){if(a(t.error)&&r(t.errorComp))return t.errorComp;if(r(t.resolved))return t.resolved;var e=Cn;if(e&&r(t.owners)&&-1===t.owners.indexOf(e)&&t.owners.push(e),a(t.loading)&&r(t.loadingComp))return t.loadingComp;if(e&&!r(t.owners)){var o=t.owners=[e],i=!0,h=null,c=null;e.$on("hook:destroyed",function(){return S(o,e)});var l=function(t){for(var n=0,e=o.length;n<e;n++)o[n].$forceUpdate();t&&(o.length=0,null!==h&&(clearTimeout(h),h=null),null!==c&&(clearTimeout(c),c=null))},m=F(function(e){t.resolved=Tn(e,n),i?o.length=0:l(!0)}),u=F(function(n){r(t.errorComp)&&(t.error=!0,l(!0))}),g=t(m,u);return p(g)&&(b(g)?s(t.resolved)&&g.then(m,u):b(g.component)&&(g.component.then(m,u),r(g.error)&&(t.errorComp=Tn(g.error,n)),r(g.loading)&&(t.loadingComp=Tn(g.loading,n),0===g.delay?t.loading=!0:h=setTimeout(function(){h=null,s(t.resolved)&&s(t.error)&&(t.loading=!0,l(!1))},g.delay||200)),r(g.timeout)&&(c=setTimeout(function(){c=null,s(t.resolved)&&u(null)},g.timeout)))),i=!1,t.loading?t.loadingComp:t.resolved}}(m=t,l),void 0===t))return function(t,n,e,o,i){var s=bt();return s.asyncFactory=t,s.asyncMeta={data:n,context:e,children:o,tag:i},s}(m,n,e,h,c);n=n||{},to(t),r(n.model)&&function(t,n){var e=t.model&&t.model.prop||"value",o=t.model&&t.model.event||"input";(n.attrs||(n.attrs={}))[e]=n.model.value;var s=n.on||(n.on={}),a=s[o],h=n.model.callback;r(a)?(i(a)?-1===a.indexOf(h):a!==h)&&(s[o]=[h].concat(a)):s[o]=h}(t.options,n);var u=function(t,n){var e=n.options.props;if(!s(e)){var o={},i=t.attrs,a=t.props;if(r(i)||r(a))for(var h in e){var c=_(h);Qt(o,a,h,c,!0)||Qt(o,i,h,c,!1)}return o}}(n,t);if(a(t.options.functional))return function(t,n,e,s,a){var h=t.options,c={},p=h.props;if(r(p))for(var l in p)c[l]=ze(l,p,n||o);else r(e.attrs)&&Ae(c,e.attrs),r(e.props)&&Ae(c,e.props);var m=new Ee(e,c,a,s,t),u=h.render.call(null,m._c,m);if(u instanceof gt)return xe(u,e,m.parent,h);if(i(u)){for(var g=Kt(u)||[],b=new Array(g.length),d=0;d<g.length;d++)b[d]=xe(g[d],e,m.parent,h);return b}}(t,u,n,e,h);var g=n.on;if(n.on=n.nativeOn,a(t.options.abstract)){var d=n.slot;n={},d&&(n.slot=d)}!function(t){for(var n=t.hook||(t.hook={}),e=0;e<je.length;e++){var o=je[e],i=n[o],s=Te[o];i===s||i&&i._merged||(n[o]=i?Pe(s,i):s)}}(n);var f=Ce(t.options)||c;return new gt("vue-component-".concat(t.cid).concat(f?"-".concat(f):""),n,void 0,void 0,void 0,e,{Ctor:t,propsData:u,listeners:g,tag:c,children:h},m)}}}function Pe(t,n){var e=function(e,o){t(e,o),n(e,o)};return e._merged=!0,e}var De=O,Le=U.optionMergeStrategies;function Me(t,n,e){if(void 0===e&&(e=!0),!n)return t;for(var o,i,s,r=lt?Reflect.ownKeys(n):Object.keys(n),a=0;a<r.length;a++)"__ob__"!==(o=r[a])&&(i=t[o],s=n[o],e&&E(t,o)?i!==s&&m(i)&&m(s)&&Me(i,s):Ot(t,o,s));return t}function Oe(t,n,e){return e?function(){var o=c(n)?n.call(e,e):n,i=c(t)?t.call(e,e):t;return o?Me(o,i):i}:n?t?function(){return Me(c(n)?n.call(this,this):n,c(t)?t.call(this,this):t)}:n:t}function Ie(t,n){var e=n?t?t.concat(n):i(n)?n:[n]:t;return e?function(t){for(var n=[],e=0;e<t.length;e++)-1===n.indexOf(t[e])&&n.push(t[e]);return n}(e):e}function Re(t,n,e,o){var i=Object.create(t||null);return n?L(i,n):i}Le.data=function(t,n,e){return e?Oe(t,n,e):n&&"function"!=typeof n?t:Oe(t,n)},H.forEach(function(t){Le[t]=Ie}),G.forEach(function(t){Le[t+"s"]=Re}),Le.watch=function(t,n,e,o){if(t===it&&(t=void 0),n===it&&(n=void 0),!n)return Object.create(t||null);if(!t)return n;var s={};for(var r in L(s,t),n){var a=s[r],h=n[r];a&&!i(a)&&(a=[a]),s[r]=a?a.concat(h):i(h)?h:[h]}return s},Le.props=Le.methods=Le.inject=Le.computed=function(t,n,e,o){if(!t)return n;var i=Object.create(null);return L(i,t),n&&L(i,n),i},Le.provide=function(t,n){return t?function(){var e=Object.create(null);return Me(e,c(t)?t.call(this):t),n&&Me(e,c(n)?n.call(this):n,!1),e}:n};var Ne=function(t,n){return void 0===n?t:n};function Be(t,n,e){if(c(n)&&(n=n.options),function(t){var n=t.props;if(n){var e,o,s={};if(i(n))for(e=n.length;e--;)"string"==typeof(o=n[e])&&(s[C(o)]={type:null});else if(m(n))for(var r in n)o=n[r],s[C(r)]=m(o)?o:{type:o};t.props=s}}(n),function(t){var n=t.inject;if(n){var e=t.inject={};if(i(n))for(var o=0;o<n.length;o++)e[n[o]]={from:n[o]};else if(m(n))for(var s in n){var r=n[s];e[s]=m(r)?L({from:s},r):{from:r}}}}(n),function(t){var n=t.directives;if(n)for(var e in n){var o=n[e];c(o)&&(n[e]={bind:o,update:o})}}(n),!n._base&&(n.extends&&(t=Be(t,n.extends,e)),n.mixins))for(var o=0,s=n.mixins.length;o<s;o++)t=Be(t,n.mixins[o],e);var r,a={};for(r in t)h(r);for(r in n)E(t,r)||h(r);function h(o){var i=Le[o]||Ne;a[o]=i(t[o],n[o],e,o)}return a}function Fe(t,n,e,o){if("string"==typeof e){var i=t[n];if(E(i,e))return i[e];var s=C(e);if(E(i,s))return i[s];var r=T(s);return E(i,r)?i[r]:i[e]||i[s]||i[r]}}function ze(t,n,e,o){var i=n[t],s=!E(e,t),r=e[t],a=Ue(Boolean,i.type);if(a>-1)if(s&&!E(i,"default"))r=!1;else if(""===r||r===_(t)){var h=Ue(String,i.type);(h<0||a<h)&&(r=!0)}if(void 0===r){r=function(t,n,e){if(!E(n,"default"))return;var o=n.default;0;if(t&&t.$options.propsData&&void 0===t.$options.propsData[e]&&void 0!==t._props[e])return t._props[e];return c(o)&&"Function"!==Ge(n.type)?o.call(t):o}(o,i,t);var p=jt;_t(!0),Lt(r),_t(p)}return r}var We=/^\s*function (\w+)/;function Ge(t){var n=t&&t.toString().match(We);return n?n[1]:""}function He(t,n){return Ge(t)===Ge(n)}function Ue(t,n){if(!i(n))return He(n,t)?0:-1;for(var e=0,o=n.length;e<o;e++)if(He(n[e],t))return e;return-1}var qe={enumerable:!0,configurable:!0,get:O,set:O};function Je(t,n,e){qe.get=function(){return this[n][e]},qe.set=function(t){this[n][e]=t},Object.defineProperty(t,e,qe)}function Ve(t){var n=t.$options;if(n.props&&function(t,n){var e=t.$options.propsData||{},o=t._props=Nt({}),i=t.$options._propKeys=[],s=!t.$parent;s||_t(!1);var r=function(s){i.push(s);var r=ze(s,n,e,t);Mt(o,s,r,void 0,!0),s in t||Je(t,"_props",s)};for(var a in n)r(a);_t(!0)}(t,n.props),function(t){var n=t.$options,e=n.setup;if(e){var o=t._setupContext=kn(t);ut(t),kt();var i=On(e,null,[t._props||Nt({}),o],t,"setup");if(Et(),ut(),c(i))n.render=i;else if(p(i))if(t._setupState=i,i.__sfc){var s=t._setupProxy={};for(var r in i)"__sfc"!==r&&Wt(s,i,r)}else for(var r in i)J(r)||Wt(t,i,r)}}(t),n.methods&&function(t,n){t.$options.props;for(var e in n)t[e]="function"!=typeof n[e]?O:P(n[e],t)}(t,n.methods),n.data)!function(t){var n=t.$options.data;n=t._data=c(n)?function(t,n){kt();try{return t.call(n,n)}catch(t){return Mn(t,n,"data()"),{}}finally{Et()}}(n,t):n||{},m(n)||(n={});var e=Object.keys(n),o=t.$options.props,i=(t.$options.methods,e.length);for(;i--;){var s=e[i];0,o&&E(o,s)||J(s)||Je(t,"_data",s)}var r=Lt(n);r&&r.vmCount++}(t);else{var e=Lt(t._data={});e&&e.vmCount++}n.computed&&function(t,n){var e=t._computedWatchers=Object.create(null),o=at();for(var i in n){var s=n[i],r=c(s)?s:s.get;0,o||(e[i]=new Zn(t,r||O,O,$e)),i in t||Xe(t,i,s)}}(t,n.computed),n.watch&&n.watch!==it&&function(t,n){for(var e in n){var o=n[e];if(i(o))for(var s=0;s<o.length;s++)Ye(t,e,o[s]);else Ye(t,e,o)}}(t,n.watch)}var $e={lazy:!0};function Xe(t,n,e){var o=!at();c(e)?(qe.get=o?Qe(n):Ke(e),qe.set=O):(qe.get=e.get?o&&!1!==e.cache?Qe(n):Ke(e.get):O,qe.set=e.set||O),Object.defineProperty(t,n,qe)}function Qe(t){return function(){var n=this._computedWatchers&&this._computedWatchers[t];if(n)return n.dirty&&n.evaluate(),yt.target&&n.depend(),n.value}}function Ke(t){return function(){return t.call(this,this)}}function Ye(t,n,e,o){return m(e)&&(o=e,e=e.handler),"string"==typeof e&&(e=t[e]),t.$watch(n,e,o)}var Ze=0;function to(t){var n=t.options;if(t.super){var e=to(t.super);if(e!==t.superOptions){t.superOptions=e;var o=function(t){var n,e=t.options,o=t.sealedOptions;for(var i in e)e[i]!==o[i]&&(n||(n={}),n[i]=e[i]);return n}(t);o&&L(t.extendOptions,o),(n=t.options=Be(e,t.extendOptions)).name&&(n.components[n.name]=t)}}return n}function no(t){this._init(t)}function eo(t){t.cid=0;var n=1;t.extend=function(t){t=t||{};var e=this,o=e.cid,i=t._Ctor||(t._Ctor={});if(i[o])return i[o];var s=Ce(t)||Ce(e.options);var r=function(t){this._init(t)};return(r.prototype=Object.create(e.prototype)).constructor=r,r.cid=n++,r.options=Be(e.options,t),r.super=e,r.options.props&&function(t){var n=t.options.props;for(var e in n)Je(t.prototype,"_props",e)}(r),r.options.computed&&function(t){var n=t.options.computed;for(var e in n)Xe(t.prototype,e,n[e])}(r),r.extend=e.extend,r.mixin=e.mixin,r.use=e.use,G.forEach(function(t){r[t]=e[t]}),s&&(r.options.components[s]=r),r.superOptions=e.options,r.extendOptions=t,r.sealedOptions=L({},r.options),i[o]=r,r}}function oo(t){return t&&(Ce(t.Ctor.options)||t.tag)}function io(t,n){return i(t)?t.indexOf(n)>-1:"string"==typeof t?t.split(",").indexOf(n)>-1:!!u(t)&&t.test(n)}function so(t,n){var e=t.cache,o=t.keys,i=t._vnode,s=t.$vnode;for(var r in e){var a=e[r];if(a){var h=a.name;h&&!n(h)&&ro(e,r,o,i)}}s.componentOptions.children=void 0}function ro(t,n,e,o){var i=t[n];!i||o&&i.tag===o.tag||i.componentInstance.$destroy(),t[n]=null,S(e,n)}no.prototype._init=function(t){var n=this;n._uid=Ze++,n._isVue=!0,n.__v_skip=!0,n._scope=new Ut(!0),n._scope.parent=void 0,n._scope._vm=!0,t&&t._isComponent?function(t,n){var e=t.$options=Object.create(t.constructor.options),o=n._parentVnode;e.parent=n.parent,e._parentVnode=o;var i=o.componentOptions;e.propsData=i.propsData,e._parentListeners=i.listeners,e._renderChildren=i.children,e._componentTag=i.tag,n.render&&(e.render=n.render,e.staticRenderFns=n.staticRenderFns)}(n,t):n.$options=Be(to(n.constructor),t||{},n),n._renderProxy=n,n._self=n,function(t){var n=t.$options,e=n.parent;if(e&&!n.abstract){for(;e.$options.abstract&&e.$parent;)e=e.$parent;e.$children.push(t)}t.$parent=e,t.$root=e?e.$root:t,t.$children=[],t.$refs={},t._provided=e?e._provided:Object.create(null),t._watcher=null,t._inactive=null,t._directInactive=!1,t._isMounted=!1,t._isDestroyed=!1,t._isBeingDestroyed=!1}(n),function(t){t._events=Object.create(null),t._hasHookEvent=!1;var n=t.$options._parentListeners;n&&oe(t,n)}(n),function(t){t._vnode=null,t._staticTrees=null;var n=t.$options,e=t.$vnode=n._parentVnode,i=e&&e.context;t.$slots=dn(n._renderChildren,i),t.$scopedSlots=e?vn(t.$parent,e.data.scopedSlots,t.$slots):o,t._c=function(n,e,o,i){return Dn(t,n,e,o,i,!1)},t.$createElement=function(n,e,o,i){return Dn(t,n,e,o,i,!0)};var s=e&&e.data;Mt(t,"$attrs",s&&s.attrs||o,null,!0),Mt(t,"$listeners",n._parentListeners||o,null,!0)}(n),ce(n,"beforeCreate",void 0,!1),function(t){var n=ke(t.$options.inject,t);n&&(_t(!1),Object.keys(n).forEach(function(e){Mt(t,e,n[e])}),_t(!0))}(n),Ve(n),function(t){var n=t.$options.provide;if(n){var e=c(n)?n.call(t):n;if(!p(e))return;for(var o=qt(t),i=lt?Reflect.ownKeys(e):Object.keys(e),s=0;s<i.length;s++){var r=i[s];Object.defineProperty(o,r,Object.getOwnPropertyDescriptor(e,r))}}}(n),ce(n,"created"),n.$options.el&&n.$mount(n.$options.el)},function(t){var n={get:function(){return this._data}},e={get:function(){return this._props}};Object.defineProperty(t.prototype,"$data",n),Object.defineProperty(t.prototype,"$props",e),t.prototype.$set=Ot,t.prototype.$delete=It,t.prototype.$watch=function(t,n,e){var o=this;if(m(n))return Ye(o,t,n,e);(e=e||{}).user=!0;var i=new Zn(o,t,n,e);if(e.immediate){var s='callback for immediate watcher "'.concat(i.expression,'"');kt(),On(n,o,[i.value],o,s),Et()}return function(){i.teardown()}}}(no),function(t){var n=/^hook:/;t.prototype.$on=function(t,e){var o=this;if(i(t))for(var s=0,r=t.length;s<r;s++)o.$on(t[s],e);else(o._events[t]||(o._events[t]=[])).push(e),n.test(t)&&(o._hasHookEvent=!0);return o},t.prototype.$once=function(t,n){var e=this;function o(){e.$off(t,o),n.apply(e,arguments)}return o.fn=n,e.$on(t,o),e},t.prototype.$off=function(t,n){var e=this;if(!arguments.length)return e._events=Object.create(null),e;if(i(t)){for(var o=0,s=t.length;o<s;o++)e.$off(t[o],n);return e}var r,a=e._events[t];if(!a)return e;if(!n)return e._events[t]=null,e;for(var h=a.length;h--;)if((r=a[h])===n||r.fn===n){a.splice(h,1);break}return e},t.prototype.$emit=function(t){var n=this,e=n._events[t];if(e){e=e.length>1?D(e):e;for(var o=D(arguments,1),i='event handler for "'.concat(t,'"'),s=0,r=e.length;s<r;s++)On(e[s],n,o,n,i)}return n}}(no),function(t){t.prototype._update=function(t,n){var e=this,o=e.$el,i=e._vnode,s=se(e);e._vnode=t,e.$el=i?e.__patch__(i,t):e.__patch__(e.$el,t,n,!1),s(),o&&(o.__vue__=null),e.$el&&(e.$el.__vue__=e);for(var r=e;r&&r.$vnode&&r.$parent&&r.$vnode===r.$parent._vnode;)r.$parent.$el=r.$el,r=r.$parent},t.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},t.prototype.$destroy=function(){var t=this;if(!t._isBeingDestroyed){ce(t,"beforeDestroy"),t._isBeingDestroyed=!0;var n=t.$parent;!n||n._isBeingDestroyed||t.$options.abstract||S(n.$children,t),t._scope.stop(),t._data.__ob__&&t._data.__ob__.vmCount--,t._isDestroyed=!0,t.__patch__(t._vnode,null),ce(t,"destroyed"),t.$off(),t.$el&&(t.$el.__vue__=null),t.$vnode&&(t.$vnode.parent=null)}}}(no),function(t){bn(t.prototype),t.prototype.$nextTick=function(t){return Jn(t,this)},t.prototype._render=function(){var t=this,n=t.$options,e=n.render,o=n._parentVnode;o&&t._isMounted&&(t.$scopedSlots=vn(t.$parent,o.data.scopedSlots,t.$slots,t.$scopedSlots),t._slotsProxy&&An(t._slotsProxy,t.$scopedSlots)),t.$vnode=o;var s,r=mt,a=Cn;try{ut(t),Cn=t,s=e.call(t._renderProxy,t.$createElement)}catch(n){Mn(n,t,"render"),s=t._vnode}finally{Cn=a,ut(r)}return i(s)&&1===s.length&&(s=s[0]),s instanceof gt||(s=bt()),s.parent=o,s}}(no);var ao=[String,RegExp,Array],ho={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:ao,exclude:ao,max:[String,Number]},methods:{cacheVNode:function(){var t=this,n=t.cache,e=t.keys,o=t.vnodeToCache,i=t.keyToCache;if(o){var s=o.tag,r=o.componentInstance,a=o.componentOptions;n[i]={name:oo(a),tag:s,componentInstance:r},e.push(i),this.max&&e.length>parseInt(this.max)&&ro(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var t in this.cache)ro(this.cache,t,this.keys)},mounted:function(){var t=this;this.cacheVNode(),this.$watch("include",function(n){so(t,function(t){return io(n,t)})}),this.$watch("exclude",function(n){so(t,function(t){return!io(n,t)})})},updated:function(){this.cacheVNode()},render:function(){var t=this.$slots.default,n=jn(t),e=n&&n.componentOptions;if(e){var o=oo(e),i=this.include,s=this.exclude;if(i&&(!o||!io(i,o))||s&&o&&io(s,o))return n;var r=this.cache,a=this.keys,h=null==n.key?e.Ctor.cid+(e.tag?"::".concat(e.tag):""):n.key;r[h]?(n.componentInstance=r[h].componentInstance,S(a,h),a.push(h)):(this.vnodeToCache=n,this.keyToCache=h),n.data.keepAlive=!0}return n||t&&t[0]}}};!function(t){var n={get:function(){return U}};Object.defineProperty(t,"config",n),t.util={warn:De,extend:L,mergeOptions:Be,defineReactive:Mt},t.set=Ot,t.delete=It,t.nextTick=Jn,t.observable=function(t){return Lt(t),t},t.options=Object.create(null),G.forEach(function(n){t.options[n+"s"]=Object.create(null)}),t.options._base=t,L(t.options.components,ho),function(t){t.use=function(t){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(t)>-1)return this;var e=D(arguments,1);return e.unshift(this),c(t.install)?t.install.apply(t,e):c(t)&&t.apply(null,e),n.push(t),this}}(t),function(t){t.mixin=function(t){return this.options=Be(this.options,t),this}}(t),eo(t),function(t){G.forEach(function(n){t[n]=function(t,e){return e?("component"===n&&m(e)&&(e.name=e.name||t,e=this.options._base.extend(e)),"directive"===n&&c(e)&&(e={bind:e,update:e}),this.options[n+"s"][t]=e,e):this.options[n+"s"][t]}})}(t)}(no),Object.defineProperty(no.prototype,"$isServer",{get:at}),Object.defineProperty(no.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(no,"FunctionalRenderContext",{value:Ee}),no.version="2.7.16";var co=v("style,class"),po=v("input,textarea,option,select,progress"),lo=v("contenteditable,draggable,spellcheck"),mo=v("events,caret,typing,plaintext-only"),uo=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),go="http://www.w3.org/1999/xlink",bo=function(t){return":"===t.charAt(5)&&"xlink"===t.slice(0,5)},fo=function(t){return bo(t)?t.slice(6,t.length):""},wo=function(t){return null==t||!1===t};function vo(t){for(var n=t.data,e=t,o=t;r(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(n=yo(o.data,n));for(;r(e=e.parent);)e&&e.data&&(n=yo(n,e.data));return function(t,n){if(r(t)||r(n))return So(t,ko(n));return""}(n.staticClass,n.class)}function yo(t,n){return{staticClass:So(t.staticClass,n.staticClass),class:r(t.class)?[t.class,n.class]:n.class}}function So(t,n){return t?n?t+" "+n:t:n||""}function ko(t){return Array.isArray(t)?function(t){for(var n,e="",o=0,i=t.length;o<i;o++)r(n=ko(t[o]))&&""!==n&&(e&&(e+=" "),e+=n);return e}(t):p(t)?function(t){var n="";for(var e in t)t[e]&&(n&&(n+=" "),n+=e);return n}(t):"string"==typeof t?t:""}var Eo={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},xo=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Ao=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Co=function(t){return xo(t)||Ao(t)};var To=Object.create(null);var jo=v("text,number,password,search,email,tel,url");var _o=Object.freeze({__proto__:null,createElement:function(t,n){var e=document.createElement(t);return"select"!==t||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&e.setAttribute("multiple","multiple"),e},createElementNS:function(t,n){return document.createElementNS(Eo[t],n)},createTextNode:function(t){return document.createTextNode(t)},createComment:function(t){return document.createComment(t)},insertBefore:function(t,n,e){t.insertBefore(n,e)},removeChild:function(t,n){t.removeChild(n)},appendChild:function(t,n){t.appendChild(n)},parentNode:function(t){return t.parentNode},nextSibling:function(t){return t.nextSibling},tagName:function(t){return t.tagName},setTextContent:function(t,n){t.textContent=n},setStyleScope:function(t,n){t.setAttribute(n,"")}}),Po={create:function(t,n){Do(n)},update:function(t,n){t.data.ref!==n.data.ref&&(Do(t,!0),Do(n))},destroy:function(t){Do(t,!0)}};function Do(t,n){var e=t.data.ref;if(r(e)){var o=t.context,s=t.componentInstance||t.elm,a=n?null:s,h=n?void 0:s;if(c(e))On(e,o,[a],o,"template ref function");else{var p=t.data.refInFor,l="string"==typeof e||"number"==typeof e,m=zt(e),u=o.$refs;if(l||m)if(p){var g=l?u[e]:e.value;n?i(g)&&S(g,s):i(g)?g.includes(s)||g.push(s):l?(u[e]=[s],Lo(o,e,u[e])):e.value=[s]}else if(l){if(n&&u[e]!==s)return;u[e]=h,Lo(o,e,a)}else if(m){if(n&&e.value!==s)return;e.value=a}else 0}}}function Lo(t,n,e){var o=t._setupState;o&&E(o,n)&&(zt(o[n])?o[n].value=e:o[n]=e)}var Mo=new gt("",{},[]),Oo=["create","activate","update","remove","destroy"];function Io(t,n){return t.key===n.key&&t.asyncFactory===n.asyncFactory&&(t.tag===n.tag&&t.isComment===n.isComment&&r(t.data)===r(n.data)&&function(t,n){if("input"!==t.tag)return!0;var e,o=r(e=t.data)&&r(e=e.attrs)&&e.type,i=r(e=n.data)&&r(e=e.attrs)&&e.type;return o===i||jo(o)&&jo(i)}(t,n)||a(t.isAsyncPlaceholder)&&s(n.asyncFactory.error))}function Ro(t,n,e){var o,i,s={};for(o=n;o<=e;++o)r(i=t[o].key)&&(s[i]=o);return s}var No={create:Bo,update:Bo,destroy:function(t){Bo(t,Mo)}};function Bo(t,n){(t.data.directives||n.data.directives)&&function(t,n){var e,o,i,s=t===Mo,r=n===Mo,a=zo(t.data.directives,t.context),h=zo(n.data.directives,n.context),c=[],p=[];for(e in h)o=a[e],i=h[e],o?(i.oldValue=o.value,i.oldArg=o.arg,Go(i,"update",n,t),i.def&&i.def.componentUpdated&&p.push(i)):(Go(i,"bind",n,t),i.def&&i.def.inserted&&c.push(i));if(c.length){var l=function(){for(var e=0;e<c.length;e++)Go(c[e],"inserted",n,t)};s?Xt(n,"insert",l):l()}p.length&&Xt(n,"postpatch",function(){for(var e=0;e<p.length;e++)Go(p[e],"componentUpdated",n,t)});if(!s)for(e in a)h[e]||Go(a[e],"unbind",t,t,r)}(t,n)}var Fo=Object.create(null);function zo(t,n){var e,o,i=Object.create(null);if(!t)return i;for(e=0;e<t.length;e++){if((o=t[e]).modifiers||(o.modifiers=Fo),i[Wo(o)]=o,n._setupState&&n._setupState.__sfc){var s=o.def||Fe(n,"_setupState","v-"+o.name);o.def="function"==typeof s?{bind:s,update:s}:s}o.def=o.def||Fe(n.$options,"directives",o.name)}return i}function Wo(t){return t.rawName||"".concat(t.name,".").concat(Object.keys(t.modifiers||{}).join("."))}function Go(t,n,e,o,i){var s=t.def&&t.def[n];if(s)try{s(e.elm,t,e,o,i)}catch(o){Mn(o,e.context,"directive ".concat(t.name," ").concat(n," hook"))}}var Ho=[Po,No];function Uo(t,n){var e=n.componentOptions;if(!(r(e)&&!1===e.Ctor.options.inheritAttrs||s(t.data.attrs)&&s(n.data.attrs))){var o,i,h=n.elm,c=t.data.attrs||{},p=n.data.attrs||{};for(o in(r(p.__ob__)||a(p._v_attr_proxy))&&(p=n.data.attrs=L({},p)),p)i=p[o],c[o]!==i&&qo(h,o,i,n.data.pre);for(o in(Y||tt)&&p.value!==c.value&&qo(h,"value",p.value),c)s(p[o])&&(bo(o)?h.removeAttributeNS(go,fo(o)):lo(o)||h.removeAttribute(o))}}function qo(t,n,e,o){o||t.tagName.indexOf("-")>-1?Jo(t,n,e):uo(n)?wo(e)?t.removeAttribute(n):(e="allowfullscreen"===n&&"EMBED"===t.tagName?"true":n,t.setAttribute(n,e)):lo(n)?t.setAttribute(n,function(t,n){return wo(n)||"false"===n?"false":"contenteditable"===t&&mo(n)?n:"true"}(n,e)):bo(n)?wo(e)?t.removeAttributeNS(go,fo(n)):t.setAttributeNS(go,n,e):Jo(t,n,e)}function Jo(t,n,e){if(wo(e))t.removeAttribute(n);else{if(Y&&!Z&&"TEXTAREA"===t.tagName&&"placeholder"===n&&""!==e&&!t.__ieph){var o=function(n){n.stopImmediatePropagation(),t.removeEventListener("input",o)};t.addEventListener("input",o),t.__ieph=!0}t.setAttribute(n,e)}}var Vo={create:Uo,update:Uo};function $o(t,n){var e=n.elm,o=n.data,i=t.data;if(!(s(o.staticClass)&&s(o.class)&&(s(i)||s(i.staticClass)&&s(i.class)))){var a=vo(n),h=e._transitionClasses;r(h)&&(a=So(a,ko(h))),a!==e._prevClass&&(e.setAttribute("class",a),e._prevClass=a)}}var Xo,Qo={create:$o,update:$o},Ko="__r",Yo="__c";function Zo(t,n,e){var o=Xo;return function i(){null!==n.apply(null,arguments)&&ei(t,i,e,o)}}var ti=Bn&&!(ot&&Number(ot[1])<=53);function ni(t,n,e,o){if(ti){var i=de,s=n;n=s._wrapper=function(t){if(t.target===t.currentTarget||t.timeStamp>=i||t.timeStamp<=0||t.target.ownerDocument!==document)return s.apply(this,arguments)}}Xo.addEventListener(t,n,st?{capture:e,passive:o}:e)}function ei(t,n,e,o){(o||Xo).removeEventListener(t,n._wrapper||n,e)}function oi(t,n){if(!s(t.data.on)||!s(n.data.on)){var e=n.data.on||{},o=t.data.on||{};Xo=n.elm||t.elm,function(t){if(r(t[Ko])){var n=Y?"change":"input";t[n]=[].concat(t[Ko],t[n]||[]),delete t[Ko]}r(t[Yo])&&(t.change=[].concat(t[Yo],t.change||[]),delete t[Yo])}(e),$t(e,o,ni,ei,Zo,n.context),Xo=void 0}}var ii,si={create:oi,update:oi,destroy:function(t){return oi(t,Mo)}};function ri(t,n){if(!s(t.data.domProps)||!s(n.data.domProps)){var e,o,i=n.elm,h=t.data.domProps||{},c=n.data.domProps||{};for(e in(r(c.__ob__)||a(c._v_attr_proxy))&&(c=n.data.domProps=L({},c)),h)e in c||(i[e]="");for(e in c){if(o=c[e],"textContent"===e||"innerHTML"===e){if(n.children&&(n.children.length=0),o===h[e])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===e&&"PROGRESS"!==i.tagName){i._value=o;var p=s(o)?"":String(o);ai(i,p)&&(i.value=p)}else if("innerHTML"===e&&Ao(i.tagName)&&s(i.innerHTML)){(ii=ii||document.createElement("div")).innerHTML="<svg>".concat(o,"</svg>");for(var l=ii.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;l.firstChild;)i.appendChild(l.firstChild)}else if(o!==h[e])try{i[e]=o}catch(t){}}}}function ai(t,n){return!t.composing&&("OPTION"===t.tagName||function(t,n){var e=!0;try{e=document.activeElement!==t}catch(t){}return e&&t.value!==n}(t,n)||function(t,n){var e=t.value,o=t._vModifiers;if(r(o)){if(o.number)return w(e)!==w(n);if(o.trim)return e.trim()!==n.trim()}return e!==n}(t,n))}var hi={create:ri,update:ri},ci=x(function(t){var n={},e=/:(.+)/;return t.split(/;(?![^(]*\))/g).forEach(function(t){if(t){var o=t.split(e);o.length>1&&(n[o[0].trim()]=o[1].trim())}}),n});function pi(t){var n=li(t.style);return t.staticStyle?L(t.staticStyle,n):n}function li(t){return Array.isArray(t)?M(t):"string"==typeof t?ci(t):t}var mi,ui=/^--/,gi=/\s*!important$/,bi=function(t,n,e){if(ui.test(n))t.style.setProperty(n,e);else if(gi.test(e))t.style.setProperty(_(n),e.replace(gi,""),"important");else{var o=fi(n);if(Array.isArray(e))for(var i=0,s=e.length;i<s;i++)t.style[o]=e[i];else t.style[o]=e}},di=["Webkit","Moz","ms"],fi=x(function(t){if(mi=mi||document.createElement("div").style,"filter"!==(t=C(t))&&t in mi)return t;for(var n=t.charAt(0).toUpperCase()+t.slice(1),e=0;e<di.length;e++){var o=di[e]+n;if(o in mi)return o}});function wi(t,n){var e=n.data,o=t.data;if(!(s(e.staticStyle)&&s(e.style)&&s(o.staticStyle)&&s(o.style))){var i,a,h=n.elm,c=o.staticStyle,p=o.normalizedStyle||o.style||{},l=c||p,m=li(n.data.style)||{};n.data.normalizedStyle=r(m.__ob__)?L({},m):m;var u=function(t,n){var e,o={};if(n)for(var i=t;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(e=pi(i.data))&&L(o,e);(e=pi(t.data))&&L(o,e);for(var s=t;s=s.parent;)s.data&&(e=pi(s.data))&&L(o,e);return o}(n,!0);for(a in l)s(u[a])&&bi(h,a,"");for(a in u)i=u[a],bi(h,a,null==i?"":i)}}var vi={create:wi,update:wi},yi=/\s+/;function Si(t,n){if(n&&(n=n.trim()))if(t.classList)n.indexOf(" ")>-1?n.split(yi).forEach(function(n){return t.classList.add(n)}):t.classList.add(n);else{var e=" ".concat(t.getAttribute("class")||""," ");e.indexOf(" "+n+" ")<0&&t.setAttribute("class",(e+n).trim())}}function ki(t,n){if(n&&(n=n.trim()))if(t.classList)n.indexOf(" ")>-1?n.split(yi).forEach(function(n){return t.classList.remove(n)}):t.classList.remove(n),t.classList.length||t.removeAttribute("class");else{for(var e=" ".concat(t.getAttribute("class")||""," "),o=" "+n+" ";e.indexOf(o)>=0;)e=e.replace(o," ");(e=e.trim())?t.setAttribute("class",e):t.removeAttribute("class")}}function Ei(t){if(t){if("object"==typeof t){var n={};return!1!==t.css&&L(n,xi(t.name||"v")),L(n,t),n}return"string"==typeof t?xi(t):void 0}}var xi=x(function(t){return{enterClass:"".concat(t,"-enter"),enterToClass:"".concat(t,"-enter-to"),enterActiveClass:"".concat(t,"-enter-active"),leaveClass:"".concat(t,"-leave"),leaveToClass:"".concat(t,"-leave-to"),leaveActiveClass:"".concat(t,"-leave-active")}}),Ai=Q&&!Z,Ci="transition",Ti="animation",ji="transition",_i="transitionend",Pi="animation",Di="animationend";Ai&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(ji="WebkitTransition",_i="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Pi="WebkitAnimation",Di="webkitAnimationEnd"));var Li=Q?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(t){return t()};function Mi(t){Li(function(){Li(t)})}function Oi(t,n){var e=t._transitionClasses||(t._transitionClasses=[]);e.indexOf(n)<0&&(e.push(n),Si(t,n))}function Ii(t,n){t._transitionClasses&&S(t._transitionClasses,n),ki(t,n)}function Ri(t,n,e){var o=Bi(t,n),i=o.type,s=o.timeout,r=o.propCount;if(!i)return e();var a=i===Ci?_i:Di,h=0,c=function(){t.removeEventListener(a,p),e()},p=function(n){n.target===t&&++h>=r&&c()};setTimeout(function(){h<r&&c()},s+1),t.addEventListener(a,p)}var Ni=/\b(transform|all)(,|$)/;function Bi(t,n){var e,o=window.getComputedStyle(t),i=(o[ji+"Delay"]||"").split(", "),s=(o[ji+"Duration"]||"").split(", "),r=Fi(i,s),a=(o[Pi+"Delay"]||"").split(", "),h=(o[Pi+"Duration"]||"").split(", "),c=Fi(a,h),p=0,l=0;return n===Ci?r>0&&(e=Ci,p=r,l=s.length):n===Ti?c>0&&(e=Ti,p=c,l=h.length):l=(e=(p=Math.max(r,c))>0?r>c?Ci:Ti:null)?e===Ci?s.length:h.length:0,{type:e,timeout:p,propCount:l,hasTransform:e===Ci&&Ni.test(o[ji+"Property"])}}function Fi(t,n){for(;t.length<n.length;)t=t.concat(t);return Math.max.apply(null,n.map(function(n,e){return zi(n)+zi(t[e])}))}function zi(t){return 1e3*Number(t.slice(0,-1).replace(",","."))}function Wi(t,n){var e=t.elm;r(e._leaveCb)&&(e._leaveCb.cancelled=!0,e._leaveCb());var o=Ei(t.data.transition);if(!s(o)&&!r(e._enterCb)&&1===e.nodeType){for(var i=o.css,a=o.type,h=o.enterClass,l=o.enterToClass,m=o.enterActiveClass,u=o.appearClass,g=o.appearToClass,b=o.appearActiveClass,d=o.beforeEnter,f=o.enter,v=o.afterEnter,y=o.enterCancelled,S=o.beforeAppear,k=o.appear,E=o.afterAppear,x=o.appearCancelled,A=o.duration,C=ie,T=ie.$vnode;T&&T.parent;)C=T.context,T=T.parent;var j=!C._isMounted||!t.isRootInsert;if(!j||k||""===k){var _=j&&u?u:h,P=j&&b?b:m,D=j&&g?g:l,L=j&&S||d,M=j&&c(k)?k:f,O=j&&E||v,I=j&&x||y,R=w(p(A)?A.enter:A);0;var N=!1!==i&&!Z,B=Ui(M),z=e._enterCb=F(function(){N&&(Ii(e,D),Ii(e,P)),z.cancelled?(N&&Ii(e,_),I&&I(e)):O&&O(e),e._enterCb=null});t.data.show||Xt(t,"insert",function(){var n=e.parentNode,o=n&&n._pending&&n._pending[t.key];o&&o.tag===t.tag&&o.elm._leaveCb&&o.elm._leaveCb(),M&&M(e,z)}),L&&L(e),N&&(Oi(e,_),Oi(e,P),Mi(function(){Ii(e,_),z.cancelled||(Oi(e,D),B||(Hi(R)?setTimeout(z,R):Ri(e,a,z)))})),t.data.show&&(n&&n(),M&&M(e,z)),N||B||z()}}}function Gi(t,n){var e=t.elm;r(e._enterCb)&&(e._enterCb.cancelled=!0,e._enterCb());var o=Ei(t.data.transition);if(s(o)||1!==e.nodeType)return n();if(!r(e._leaveCb)){var i=o.css,a=o.type,h=o.leaveClass,c=o.leaveToClass,l=o.leaveActiveClass,m=o.beforeLeave,u=o.leave,g=o.afterLeave,b=o.leaveCancelled,d=o.delayLeave,f=o.duration,v=!1!==i&&!Z,y=Ui(u),S=w(p(f)?f.leave:f);0;var k=e._leaveCb=F(function(){e.parentNode&&e.parentNode._pending&&(e.parentNode._pending[t.key]=null),v&&(Ii(e,c),Ii(e,l)),k.cancelled?(v&&Ii(e,h),b&&b(e)):(n(),g&&g(e)),e._leaveCb=null});d?d(E):E()}function E(){k.cancelled||(!t.data.show&&e.parentNode&&((e.parentNode._pending||(e.parentNode._pending={}))[t.key]=t),m&&m(e),v&&(Oi(e,h),Oi(e,l),Mi(function(){Ii(e,h),k.cancelled||(Oi(e,c),y||(Hi(S)?setTimeout(k,S):Ri(e,a,k)))})),u&&u(e,k),v||y||k())}}function Hi(t){return"number"==typeof t&&!isNaN(t)}function Ui(t){if(s(t))return!1;var n=t.fns;return r(n)?Ui(Array.isArray(n)?n[0]:n):(t._length||t.length)>1}function qi(t,n){!0!==n.data.show&&Wi(n)}var Ji=function(t){var n,e,o={},c=t.modules,p=t.nodeOps;for(n=0;n<Oo.length;++n)for(o[Oo[n]]=[],e=0;e<c.length;++e)r(c[e][Oo[n]])&&o[Oo[n]].push(c[e][Oo[n]]);function l(t){var n=p.parentNode(t);r(n)&&p.removeChild(n,t)}function m(t,n,e,i,s,h,c){if(r(t.elm)&&r(h)&&(t=h[c]=ft(t)),t.isRootInsert=!s,!function(t,n,e,i){var s=t.data;if(r(s)){var h=r(t.componentInstance)&&s.keepAlive;if(r(s=s.hook)&&r(s=s.init)&&s(t,!1),r(t.componentInstance))return u(t,n),g(e,t.elm,i),a(h)&&function(t,n,e,i){var s,a=t;for(;a.componentInstance;)if(r(s=(a=a.componentInstance._vnode).data)&&r(s=s.transition)){for(s=0;s<o.activate.length;++s)o.activate[s](Mo,a);n.push(a);break}g(e,t.elm,i)}(t,n,e,i),!0}}(t,n,e,i)){var l=t.data,m=t.children,d=t.tag;r(d)?(t.elm=t.ns?p.createElementNS(t.ns,d):p.createElement(d,t),w(t),b(t,m,n),r(l)&&f(t,n),g(e,t.elm,i)):a(t.isComment)?(t.elm=p.createComment(t.text),g(e,t.elm,i)):(t.elm=p.createTextNode(t.text),g(e,t.elm,i))}}function u(t,n){r(t.data.pendingInsert)&&(n.push.apply(n,t.data.pendingInsert),t.data.pendingInsert=null),t.elm=t.componentInstance.$el,d(t)?(f(t,n),w(t)):(Do(t),n.push(t))}function g(t,n,e){r(t)&&(r(e)?p.parentNode(e)===t&&p.insertBefore(t,n,e):p.appendChild(t,n))}function b(t,n,e){if(i(n)){0;for(var o=0;o<n.length;++o)m(n[o],e,t.elm,null,!0,n,o)}else h(t.text)&&p.appendChild(t.elm,p.createTextNode(String(t.text)))}function d(t){for(;t.componentInstance;)t=t.componentInstance._vnode;return r(t.tag)}function f(t,e){for(var i=0;i<o.create.length;++i)o.create[i](Mo,t);r(n=t.data.hook)&&(r(n.create)&&n.create(Mo,t),r(n.insert)&&e.push(t))}function w(t){var n;if(r(n=t.fnScopeId))p.setStyleScope(t.elm,n);else for(var e=t;e;)r(n=e.context)&&r(n=n.$options._scopeId)&&p.setStyleScope(t.elm,n),e=e.parent;r(n=ie)&&n!==t.context&&n!==t.fnContext&&r(n=n.$options._scopeId)&&p.setStyleScope(t.elm,n)}function y(t,n,e,o,i,s){for(;o<=i;++o)m(e[o],s,t,n,!1,e,o)}function S(t){var n,e,i=t.data;if(r(i))for(r(n=i.hook)&&r(n=n.destroy)&&n(t),n=0;n<o.destroy.length;++n)o.destroy[n](t);if(r(n=t.children))for(e=0;e<t.children.length;++e)S(t.children[e])}function k(t,n,e){for(;n<=e;++n){var o=t[n];r(o)&&(r(o.tag)?(E(o),S(o)):l(o.elm))}}function E(t,n){if(r(n)||r(t.data)){var e,i=o.remove.length+1;for(r(n)?n.listeners+=i:n=function(t,n){function e(){0===--e.listeners&&l(t)}return e.listeners=n,e}(t.elm,i),r(e=t.componentInstance)&&r(e=e._vnode)&&r(e.data)&&E(e,n),e=0;e<o.remove.length;++e)o.remove[e](t,n);r(e=t.data.hook)&&r(e=e.remove)?e(t,n):n()}else l(t.elm)}function x(t,n,e,o){for(var i=e;i<o;i++){var s=n[i];if(r(s)&&Io(t,s))return i}}function A(t,n,e,i,h,c){if(t!==n){r(n.elm)&&r(i)&&(n=i[h]=ft(n));var l=n.elm=t.elm;if(a(t.isAsyncPlaceholder))r(n.asyncFactory.resolved)?j(t.elm,n,e):n.isAsyncPlaceholder=!0;else if(a(n.isStatic)&&a(t.isStatic)&&n.key===t.key&&(a(n.isCloned)||a(n.isOnce)))n.componentInstance=t.componentInstance;else{var u,g=n.data;r(g)&&r(u=g.hook)&&r(u=u.prepatch)&&u(t,n);var b=t.children,f=n.children;if(r(g)&&d(n)){for(u=0;u<o.update.length;++u)o.update[u](t,n);r(u=g.hook)&&r(u=u.update)&&u(t,n)}s(n.text)?r(b)&&r(f)?b!==f&&function(t,n,e,o,i){var a,h,c,l=0,u=0,g=n.length-1,b=n[0],d=n[g],f=e.length-1,w=e[0],v=e[f],S=!i;for(;l<=g&&u<=f;)s(b)?b=n[++l]:s(d)?d=n[--g]:Io(b,w)?(A(b,w,o,e,u),b=n[++l],w=e[++u]):Io(d,v)?(A(d,v,o,e,f),d=n[--g],v=e[--f]):Io(b,v)?(A(b,v,o,e,f),S&&p.insertBefore(t,b.elm,p.nextSibling(d.elm)),b=n[++l],v=e[--f]):Io(d,w)?(A(d,w,o,e,u),S&&p.insertBefore(t,d.elm,b.elm),d=n[--g],w=e[++u]):(s(a)&&(a=Ro(n,l,g)),s(h=r(w.key)?a[w.key]:x(w,n,l,g))?m(w,o,t,b.elm,!1,e,u):Io(c=n[h],w)?(A(c,w,o,e,u),n[h]=void 0,S&&p.insertBefore(t,c.elm,b.elm)):m(w,o,t,b.elm,!1,e,u),w=e[++u]);l>g?y(t,s(e[f+1])?null:e[f+1].elm,e,u,f,o):u>f&&k(n,l,g)}(l,b,f,e,c):r(f)?(r(t.text)&&p.setTextContent(l,""),y(l,null,f,0,f.length-1,e)):r(b)?k(b,0,b.length-1):r(t.text)&&p.setTextContent(l,""):t.text!==n.text&&p.setTextContent(l,n.text),r(g)&&r(u=g.hook)&&r(u=u.postpatch)&&u(t,n)}}}function C(t,n,e){if(a(e)&&r(t.parent))t.parent.data.pendingInsert=n;else for(var o=0;o<n.length;++o)n[o].data.hook.insert(n[o])}var T=v("attrs,class,staticClass,staticStyle,key");function j(t,n,e,o){var i,s=n.tag,h=n.data,c=n.children;if(o=o||h&&h.pre,n.elm=t,a(n.isComment)&&r(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(r(h)&&(r(i=h.hook)&&r(i=i.init)&&i(n,!0),r(i=n.componentInstance)))return u(n,e),!0;if(r(s)){if(r(c))if(t.hasChildNodes())if(r(i=h)&&r(i=i.domProps)&&r(i=i.innerHTML)){if(i!==t.innerHTML)return!1}else{for(var p=!0,l=t.firstChild,m=0;m<c.length;m++){if(!l||!j(l,c[m],e,o)){p=!1;break}l=l.nextSibling}if(!p||l)return!1}else b(n,c,e);if(r(h)){var g=!1;for(var d in h)if(!T(d)){g=!0,f(n,e);break}!g&&h.class&&Xn(h.class)}}else t.data!==n.text&&(t.data=n.text);return!0}return function(t,n,e,i){if(!s(n)){var h,c=!1,l=[];if(s(t))c=!0,m(n,l);else{var u=r(t.nodeType);if(!u&&Io(t,n))A(t,n,l,null,null,i);else{if(u){if(1===t.nodeType&&t.hasAttribute(W)&&(t.removeAttribute(W),e=!0),a(e)&&j(t,n,l))return C(n,l,!0),t;h=t,t=new gt(p.tagName(h).toLowerCase(),{},[],void 0,h)}var g=t.elm,b=p.parentNode(g);if(m(n,l,g._leaveCb?null:b,p.nextSibling(g)),r(n.parent))for(var f=n.parent,w=d(n);f;){for(var v=0;v<o.destroy.length;++v)o.destroy[v](f);if(f.elm=n.elm,w){for(var y=0;y<o.create.length;++y)o.create[y](Mo,f);var E=f.data.hook.insert;if(E.merged)for(var x=E.fns.slice(1),T=0;T<x.length;T++)x[T]()}else Do(f);f=f.parent}r(b)?k([t],0,0):r(t.tag)&&S(t)}}return C(n,l,c),n.elm}r(t)&&S(t)}}({nodeOps:_o,modules:[Vo,Qo,si,hi,vi,Q?{create:qi,activate:qi,remove:function(t,n){!0!==t.data.show?Gi(t,n):n()}}:{}].concat(Ho)});Z&&document.addEventListener("selectionchange",function(){var t=document.activeElement;t&&t.vmodel&&ts(t,"input")});var Vi={inserted:function(t,n,e,o){"select"===e.tag?(o.elm&&!o.elm._vOptions?Xt(e,"postpatch",function(){Vi.componentUpdated(t,n,e)}):$i(t,n,e.context),t._vOptions=[].map.call(t.options,Ki)):("textarea"===e.tag||jo(t.type))&&(t._vModifiers=n.modifiers,n.modifiers.lazy||(t.addEventListener("compositionstart",Yi),t.addEventListener("compositionend",Zi),t.addEventListener("change",Zi),Z&&(t.vmodel=!0)))},componentUpdated:function(t,n,e){if("select"===e.tag){$i(t,n,e.context);var o=t._vOptions,i=t._vOptions=[].map.call(t.options,Ki);if(i.some(function(t,n){return!N(t,o[n])}))(t.multiple?n.value.some(function(t){return Qi(t,i)}):n.value!==n.oldValue&&Qi(n.value,i))&&ts(t,"change")}}};function $i(t,n,e){Xi(t,n,e),(Y||tt)&&setTimeout(function(){Xi(t,n,e)},0)}function Xi(t,n,e){var o=n.value,i=t.multiple;if(!i||Array.isArray(o)){for(var s,r,a=0,h=t.options.length;a<h;a++)if(r=t.options[a],i)s=B(o,Ki(r))>-1,r.selected!==s&&(r.selected=s);else if(N(Ki(r),o))return void(t.selectedIndex!==a&&(t.selectedIndex=a));i||(t.selectedIndex=-1)}}function Qi(t,n){return n.every(function(n){return!N(n,t)})}function Ki(t){return"_value"in t?t._value:t.value}function Yi(t){t.target.composing=!0}function Zi(t){t.target.composing&&(t.target.composing=!1,ts(t.target,"input"))}function ts(t,n){var e=document.createEvent("HTMLEvents");e.initEvent(n,!0,!0),t.dispatchEvent(e)}function ns(t){return!t.componentInstance||t.data&&t.data.transition?t:ns(t.componentInstance._vnode)}var es={bind:function(t,n,e){var o=n.value,i=(e=ns(e)).data&&e.data.transition,s=t.__vOriginalDisplay="none"===t.style.display?"":t.style.display;o&&i?(e.data.show=!0,Wi(e,function(){t.style.display=s})):t.style.display=o?s:"none"},update:function(t,n,e){var o=n.value;!o!=!n.oldValue&&((e=ns(e)).data&&e.data.transition?(e.data.show=!0,o?Wi(e,function(){t.style.display=t.__vOriginalDisplay}):Gi(e,function(){t.style.display="none"})):t.style.display=o?t.__vOriginalDisplay:"none")},unbind:function(t,n,e,o,i){i||(t.style.display=t.__vOriginalDisplay)}},os={model:Vi,show:es},is={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function ss(t){var n=t&&t.componentOptions;return n&&n.Ctor.options.abstract?ss(jn(n.children)):t}function rs(t){var n={},e=t.$options;for(var o in e.propsData)n[o]=t[o];var i=e._parentListeners;for(var o in i)n[C(o)]=i[o];return n}function as(t,n){if(/\d-keep-alive$/.test(n.tag))return t("keep-alive",{props:n.componentOptions.propsData})}var hs=function(t){return t.tag||wn(t)},cs=function(t){return"show"===t.name},ps={name:"transition",props:is,abstract:!0,render:function(t){var n=this,e=this.$slots.default;if(e&&(e=e.filter(hs)).length){0;var o=this.mode;0;var i=e[0];if(function(t){for(;t=t.parent;)if(t.data.transition)return!0}(this.$vnode))return i;var s=ss(i);if(!s)return i;if(this._leaving)return as(t,i);var r="__transition-".concat(this._uid,"-");s.key=null==s.key?s.isComment?r+"comment":r+s.tag:h(s.key)?0===String(s.key).indexOf(r)?s.key:r+s.key:s.key;var a=(s.data||(s.data={})).transition=rs(this),c=this._vnode,p=ss(c);if(s.data.directives&&s.data.directives.some(cs)&&(s.data.show=!0),p&&p.data&&!function(t,n){return n.key===t.key&&n.tag===t.tag}(s,p)&&!wn(p)&&(!p.componentInstance||!p.componentInstance._vnode.isComment)){var l=p.data.transition=L({},a);if("out-in"===o)return this._leaving=!0,Xt(l,"afterLeave",function(){n._leaving=!1,n.$forceUpdate()}),as(t,i);if("in-out"===o){if(wn(s))return c;var m,u=function(){m()};Xt(a,"afterEnter",u),Xt(a,"enterCancelled",u),Xt(l,"delayLeave",function(t){m=t})}}return i}}},ls=L({tag:String,moveClass:String},is);delete ls.mode;var ms={props:ls,beforeMount:function(){var t=this,n=this._update;this._update=function(e,o){var i=se(t);t.__patch__(t._vnode,t.kept,!1,!0),t._vnode=t.kept,i(),n.call(t,e,o)}},render:function(t){for(var n=this.tag||this.$vnode.data.tag||"span",e=Object.create(null),o=this.prevChildren=this.children,i=this.$slots.default||[],s=this.children=[],r=rs(this),a=0;a<i.length;a++){if((p=i[a]).tag)if(null!=p.key&&0!==String(p.key).indexOf("__vlist"))s.push(p),e[p.key]=p,(p.data||(p.data={})).transition=r;else;}if(o){var h=[],c=[];for(a=0;a<o.length;a++){var p;(p=o[a]).data.transition=r,p.data.pos=p.elm.getBoundingClientRect(),e[p.key]?h.push(p):c.push(p)}this.kept=t(n,null,h),this.removed=c}return t(n,null,s)},updated:function(){var t=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";t.length&&this.hasMove(t[0].elm,n)&&(t.forEach(us),t.forEach(gs),t.forEach(bs),this._reflow=document.body.offsetHeight,t.forEach(function(t){if(t.data.moved){var e=t.elm,o=e.style;Oi(e,n),o.transform=o.WebkitTransform=o.transitionDuration="",e.addEventListener(_i,e._moveCb=function t(o){o&&o.target!==e||o&&!/transform$/.test(o.propertyName)||(e.removeEventListener(_i,t),e._moveCb=null,Ii(e,n))})}}))},methods:{hasMove:function(t,n){if(!Ai)return!1;if(this._hasMove)return this._hasMove;var e=t.cloneNode();t._transitionClasses&&t._transitionClasses.forEach(function(t){ki(e,t)}),Si(e,n),e.style.display="none",this.$el.appendChild(e);var o=Bi(e);return this.$el.removeChild(e),this._hasMove=o.hasTransform}}};function us(t){t.elm._moveCb&&t.elm._moveCb(),t.elm._enterCb&&t.elm._enterCb()}function gs(t){t.data.newPos=t.elm.getBoundingClientRect()}function bs(t){var n=t.data.pos,e=t.data.newPos,o=n.left-e.left,i=n.top-e.top;if(o||i){t.data.moved=!0;var s=t.elm.style;s.transform=s.WebkitTransform="translate(".concat(o,"px,").concat(i,"px)"),s.transitionDuration="0s"}}var ds={Transition:ps,TransitionGroup:ms};function fs(t,n){for(var e in n)t[e]=n[e];return t}no.config.mustUseProp=function(t,n,e){return"value"===e&&po(t)&&"button"!==n||"selected"===e&&"option"===t||"checked"===e&&"input"===t||"muted"===e&&"video"===t},no.config.isReservedTag=Co,no.config.isReservedAttr=co,no.config.getTagNamespace=function(t){return Ao(t)?"svg":"math"===t?"math":void 0},no.config.isUnknownElement=function(t){if(!Q)return!0;if(Co(t))return!1;if(t=t.toLowerCase(),null!=To[t])return To[t];var n=document.createElement(t);return t.indexOf("-")>-1?To[t]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:To[t]=/HTMLUnknownElement/.test(n.toString())},L(no.options.directives,os),L(no.options.components,ds),no.prototype.__patch__=Q?Ji:O,no.prototype.$mount=function(t,n){return function(t,n,e){var o;t.$el=n,t.$options.render||(t.$options.render=bt),ce(t,"beforeMount"),o=function(){t._update(t._render(),e)},new Zn(t,o,O,{before:function(){t._isMounted&&!t._isDestroyed&&ce(t,"beforeUpdate")}},!0),e=!1;var i=t._preWatchers;if(i)for(var s=0;s<i.length;s++)i[s].run();return null==t.$vnode&&(t._isMounted=!0,ce(t,"mounted")),t}(this,t=t&&Q?function(t){if("string"==typeof t){return document.querySelector(t)||document.createElement("div")}return t}(t):void 0,n)},Q&&setTimeout(function(){U.devtools&&ht&&ht.emit("init",no)},0);var ws=/[!'()*]/g,vs=function(t){return"%"+t.charCodeAt(0).toString(16)},ys=/%2C/g,Ss=function(t){return encodeURIComponent(t).replace(ws,vs).replace(ys,",")};function ks(t){try{return decodeURIComponent(t)}catch(t){0}return t}var Es=function(t){return null==t||"object"==typeof t?t:String(t)};function xs(t){var n={};return(t=t.trim().replace(/^(\?|#|&)/,""))?(t.split("&").forEach(function(t){var e=t.replace(/\+/g," ").split("="),o=ks(e.shift()),i=e.length>0?ks(e.join("=")):null;void 0===n[o]?n[o]=i:Array.isArray(n[o])?n[o].push(i):n[o]=[n[o],i]}),n):n}function As(t){var n=t?Object.keys(t).map(function(n){var e=t[n];if(void 0===e)return"";if(null===e)return Ss(n);if(Array.isArray(e)){var o=[];return e.forEach(function(t){void 0!==t&&(null===t?o.push(Ss(n)):o.push(Ss(n)+"="+Ss(t)))}),o.join("&")}return Ss(n)+"="+Ss(e)}).filter(function(t){return t.length>0}).join("&"):null;return n?"?"+n:""}var Cs=/\/?$/;function Ts(t,n,e,o){var i=o&&o.options.stringifyQuery,s=n.query||{};try{s=js(s)}catch(t){}var r={name:n.name||t&&t.name,meta:t&&t.meta||{},path:n.path||"/",hash:n.hash||"",query:s,params:n.params||{},fullPath:Ds(n,i),matched:t?Ps(t):[]};return e&&(r.redirectedFrom=Ds(e,i)),Object.freeze(r)}function js(t){if(Array.isArray(t))return t.map(js);if(t&&"object"==typeof t){var n={};for(var e in t)n[e]=js(t[e]);return n}return t}var _s=Ts(null,{path:"/"});function Ps(t){for(var n=[];t;)n.unshift(t),t=t.parent;return n}function Ds(t,n){var e=t.path,o=t.query;void 0===o&&(o={});var i=t.hash;return void 0===i&&(i=""),(e||"/")+(n||As)(o)+i}function Ls(t,n,e){return n===_s?t===n:!!n&&(t.path&&n.path?t.path.replace(Cs,"")===n.path.replace(Cs,"")&&(e||t.hash===n.hash&&Ms(t.query,n.query)):!(!t.name||!n.name)&&(t.name===n.name&&(e||t.hash===n.hash&&Ms(t.query,n.query)&&Ms(t.params,n.params))))}function Ms(t,n){if(void 0===t&&(t={}),void 0===n&&(n={}),!t||!n)return t===n;var e=Object.keys(t).sort(),o=Object.keys(n).sort();return e.length===o.length&&e.every(function(e,i){var s=t[e];if(o[i]!==e)return!1;var r=n[e];return null==s||null==r?s===r:"object"==typeof s&&"object"==typeof r?Ms(s,r):String(s)===String(r)})}function Os(t){for(var n=0;n<t.matched.length;n++){var e=t.matched[n];for(var o in e.instances){var i=e.instances[o],s=e.enteredCbs[o];if(i&&s){delete e.enteredCbs[o];for(var r=0;r<s.length;r++)i._isBeingDestroyed||s[r](i)}}}}var Is={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(t,n){var e=n.props,o=n.children,i=n.parent,s=n.data;s.routerView=!0;for(var r=i.$createElement,a=e.name,h=i.$route,c=i._routerViewCache||(i._routerViewCache={}),p=0,l=!1;i&&i._routerRoot!==i;){var m=i.$vnode?i.$vnode.data:{};m.routerView&&p++,m.keepAlive&&i._directInactive&&i._inactive&&(l=!0),i=i.$parent}if(s.routerViewDepth=p,l){var u=c[a],g=u&&u.component;return g?(u.configProps&&Rs(g,s,u.route,u.configProps),r(g,s,o)):r()}var b=h.matched[p],d=b&&b.components[a];if(!b||!d)return c[a]=null,r();c[a]={component:d},s.registerRouteInstance=function(t,n){var e=b.instances[a];(n&&e!==t||!n&&e===t)&&(b.instances[a]=n)},(s.hook||(s.hook={})).prepatch=function(t,n){b.instances[a]=n.componentInstance},s.hook.init=function(t){t.data.keepAlive&&t.componentInstance&&t.componentInstance!==b.instances[a]&&(b.instances[a]=t.componentInstance),Os(h)};var f=b.props&&b.props[a];return f&&(fs(c[a],{route:h,configProps:f}),Rs(d,s,h,f)),r(d,s,o)}};function Rs(t,n,e,o){var i=n.props=function(t,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(t);case"boolean":return n?t.params:void 0}}(e,o);if(i){i=n.props=fs({},i);var s=n.attrs=n.attrs||{};for(var r in i)t.props&&r in t.props||(s[r]=i[r],delete i[r])}}function Ns(t,n,e){var o=t.charAt(0);if("/"===o)return t;if("?"===o||"#"===o)return n+t;var i=n.split("/");e&&i[i.length-1]||i.pop();for(var s=t.replace(/^\//,"").split("/"),r=0;r<s.length;r++){var a=s[r];".."===a?i.pop():"."!==a&&i.push(a)}return""!==i[0]&&i.unshift(""),i.join("/")}function Bs(t){return t.replace(/\/(?:\s*\/)+/g,"/")}var Fs=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},zs=nr,Ws=Js,Gs=function(t,n){return Xs(Js(t,n),n)},Hs=Xs,Us=tr,qs=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Js(t,n){for(var e,o=[],i=0,s=0,r="",a=n&&n.delimiter||"/";null!=(e=qs.exec(t));){var h=e[0],c=e[1],p=e.index;if(r+=t.slice(s,p),s=p+h.length,c)r+=c[1];else{var l=t[s],m=e[2],u=e[3],g=e[4],b=e[5],d=e[6],f=e[7];r&&(o.push(r),r="");var w=null!=m&&null!=l&&l!==m,v="+"===d||"*"===d,y="?"===d||"*"===d,S=e[2]||a,k=g||b;o.push({name:u||i++,prefix:m||"",delimiter:S,optional:y,repeat:v,partial:w,asterisk:!!f,pattern:k?Ks(k):f?".*":"[^"+Qs(S)+"]+?"})}}return s<t.length&&(r+=t.substr(s)),r&&o.push(r),o}function Vs(t){return encodeURI(t).replace(/[\/?#]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function $s(t){return encodeURI(t).replace(/[?#]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function Xs(t,n){for(var e=new Array(t.length),o=0;o<t.length;o++)"object"==typeof t[o]&&(e[o]=new RegExp("^(?:"+t[o].pattern+")$",Zs(n)));return function(n,o){for(var i="",s=n||{},r=(o||{}).pretty?Vs:encodeURIComponent,a=0;a<t.length;a++){var h=t[a];if("string"!=typeof h){var c,p=s[h.name];if(null==p){if(h.optional){h.partial&&(i+=h.prefix);continue}throw new TypeError('Expected "'+h.name+'" to be defined')}if(Fs(p)){if(!h.repeat)throw new TypeError('Expected "'+h.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(h.optional)continue;throw new TypeError('Expected "'+h.name+'" to not be empty')}for(var l=0;l<p.length;l++){if(c=r(p[l]),!e[a].test(c))throw new TypeError('Expected all "'+h.name+'" to match "'+h.pattern+'", but received `'+JSON.stringify(c)+"`");i+=(0===l?h.prefix:h.delimiter)+c}}else{if(c=h.asterisk?$s(p):r(p),!e[a].test(c))throw new TypeError('Expected "'+h.name+'" to match "'+h.pattern+'", but received "'+c+'"');i+=h.prefix+c}}else i+=h}return i}}function Qs(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Ks(t){return t.replace(/([=!:$\/()])/g,"\\$1")}function Ys(t,n){return t.keys=n,t}function Zs(t){return t&&t.sensitive?"":"i"}function tr(t,n,e){Fs(n)||(e=n||e,n=[]);for(var o=(e=e||{}).strict,i=!1!==e.end,s="",r=0;r<t.length;r++){var a=t[r];if("string"==typeof a)s+=Qs(a);else{var h=Qs(a.prefix),c="(?:"+a.pattern+")";n.push(a),a.repeat&&(c+="(?:"+h+c+")*"),s+=c=a.optional?a.partial?h+"("+c+")?":"(?:"+h+"("+c+"))?":h+"("+c+")"}}var p=Qs(e.delimiter||"/"),l=s.slice(-p.length)===p;return o||(s=(l?s.slice(0,-p.length):s)+"(?:"+p+"(?=$))?"),s+=i?"$":o&&l?"":"(?="+p+"|$)",Ys(new RegExp("^"+s,Zs(e)),n)}function nr(t,n,e){return Fs(n)||(e=n||e,n=[]),e=e||{},t instanceof RegExp?function(t,n){var e=t.source.match(/\((?!\?)/g);if(e)for(var o=0;o<e.length;o++)n.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Ys(t,n)}(t,n):Fs(t)?function(t,n,e){for(var o=[],i=0;i<t.length;i++)o.push(nr(t[i],n,e).source);return Ys(new RegExp("(?:"+o.join("|")+")",Zs(e)),n)}(t,n,e):function(t,n,e){return tr(Js(t,e),n,e)}(t,n,e)}zs.parse=Ws,zs.compile=Gs,zs.tokensToFunction=Hs,zs.tokensToRegExp=Us;var er=Object.create(null);function or(t,n,e){n=n||{};try{var o=er[t]||(er[t]=zs.compile(t));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),o(n,{pretty:!0})}catch(t){return""}finally{delete n[0]}}function ir(t,n,e,o){var i="string"==typeof t?{path:t}:t;if(i._normalized)return i;if(i.name){var s=(i=fs({},t)).params;return s&&"object"==typeof s&&(i.params=fs({},s)),i}if(!i.path&&i.params&&n){(i=fs({},i))._normalized=!0;var r=fs(fs({},n.params),i.params);if(n.name)i.name=n.name,i.params=r;else if(n.matched.length){var a=n.matched[n.matched.length-1].path;i.path=or(a,r,n.path)}else 0;return i}var h=function(t){var n="",e="",o=t.indexOf("#");o>=0&&(n=t.slice(o),t=t.slice(0,o));var i=t.indexOf("?");return i>=0&&(e=t.slice(i+1),t=t.slice(0,i)),{path:t,query:e,hash:n}}(i.path||""),c=n&&n.path||"/",p=h.path?Ns(h.path,c,e||i.append):c,l=function(t,n,e){void 0===n&&(n={});var o,i=e||xs;try{o=i(t||"")}catch(t){o={}}for(var s in n){var r=n[s];o[s]=Array.isArray(r)?r.map(Es):Es(r)}return o}(h.query,i.query,o&&o.options.parseQuery),m=i.hash||h.hash;return m&&"#"!==m.charAt(0)&&(m="#"+m),{_normalized:!0,path:p,query:l,hash:m}}var sr,rr=function(){},ar={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(t){var n=this,e=this.$router,o=this.$route,i=e.resolve(this.to,o,this.append),s=i.location,r=i.route,a=i.href,h={},c=e.options.linkActiveClass,p=e.options.linkExactActiveClass,l=null==c?"router-link-active":c,m=null==p?"router-link-exact-active":p,u=null==this.activeClass?l:this.activeClass,g=null==this.exactActiveClass?m:this.exactActiveClass,b=r.redirectedFrom?Ts(null,ir(r.redirectedFrom),null,e):r;h[g]=Ls(o,b,this.exactPath),h[u]=this.exact||this.exactPath?h[g]:function(t,n){return 0===t.path.replace(Cs,"/").indexOf(n.path.replace(Cs,"/"))&&(!n.hash||t.hash===n.hash)&&function(t,n){for(var e in n)if(!(e in t))return!1;return!0}(t.query,n.query)}(o,b);var d=h[g]?this.ariaCurrentValue:null,f=function(t){hr(t)&&(n.replace?e.replace(s,rr):e.push(s,rr))},w={click:hr};Array.isArray(this.event)?this.event.forEach(function(t){w[t]=f}):w[this.event]=f;var v={class:h},y=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:a,route:r,navigate:f,isActive:h[u],isExactActive:h[g]});if(y){if(1===y.length)return y[0];if(y.length>1||!y.length)return 0===y.length?t():t("span",{},y)}if("a"===this.tag)v.on=w,v.attrs={href:a,"aria-current":d};else{var S=cr(this.$slots.default);if(S){S.isStatic=!1;var k=S.data=fs({},S.data);for(var E in k.on=k.on||{},k.on){var x=k.on[E];E in w&&(k.on[E]=Array.isArray(x)?x:[x])}for(var A in w)A in k.on?k.on[A].push(w[A]):k.on[A]=f;var C=S.data.attrs=fs({},S.data.attrs);C.href=a,C["aria-current"]=d}else v.on=w}return t(this.tag,v,this.$slots.default)}};function hr(t){if(!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey||t.defaultPrevented||void 0!==t.button&&0!==t.button)){if(t.currentTarget&&t.currentTarget.getAttribute){var n=t.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return t.preventDefault&&t.preventDefault(),!0}}function cr(t){if(t)for(var n,e=0;e<t.length;e++){if("a"===(n=t[e]).tag)return n;if(n.children&&(n=cr(n.children)))return n}}var pr="undefined"!=typeof window;function lr(t,n,e,o,i){var s=n||[],r=e||Object.create(null),a=o||Object.create(null);t.forEach(function(t){mr(s,r,a,t,i)});for(var h=0,c=s.length;h<c;h++)"*"===s[h]&&(s.push(s.splice(h,1)[0]),c--,h--);return{pathList:s,pathMap:r,nameMap:a}}function mr(t,n,e,o,i,s){var r=o.path,a=o.name;var h=o.pathToRegexpOptions||{},c=function(t,n,e){e||(t=t.replace(/\/$/,""));if("/"===t[0])return t;if(null==n)return t;return Bs(n.path+"/"+t)}(r,i,h.strict);"boolean"==typeof o.caseSensitive&&(h.sensitive=o.caseSensitive);var p={path:c,regex:ur(c,h),components:o.components||{default:o.component},alias:o.alias?"string"==typeof o.alias?[o.alias]:o.alias:[],instances:{},enteredCbs:{},name:a,parent:i,matchAs:s,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};if(o.children&&o.children.forEach(function(o){var i=s?Bs(s+"/"+o.path):void 0;mr(t,n,e,o,p,i)}),n[p.path]||(t.push(p.path),n[p.path]=p),void 0!==o.alias)for(var l=Array.isArray(o.alias)?o.alias:[o.alias],m=0;m<l.length;++m){0;var u={path:l[m],children:o.children};mr(t,n,e,u,i,p.path||"/")}a&&(e[a]||(e[a]=p))}function ur(t,n){return zs(t,[],n)}function gr(t,n){var e=lr(t),o=e.pathList,i=e.pathMap,s=e.nameMap;function r(t,e,r){var a=ir(t,e,!1,n),c=a.name;if(c){var p=s[c];if(!p)return h(null,a);var l=p.regex.keys.filter(function(t){return!t.optional}).map(function(t){return t.name});if("object"!=typeof a.params&&(a.params={}),e&&"object"==typeof e.params)for(var m in e.params)!(m in a.params)&&l.indexOf(m)>-1&&(a.params[m]=e.params[m]);return a.path=or(p.path,a.params),h(p,a,r)}if(a.path){a.params={};for(var u=0;u<o.length;u++){var g=o[u],b=i[g];if(br(b.regex,a.path,a.params))return h(b,a,r)}}return h(null,a)}function a(t,e){var o=t.redirect,i="function"==typeof o?o(Ts(t,e,null,n)):o;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return h(null,e);var a=i,c=a.name,p=a.path,l=e.query,m=e.hash,u=e.params;if(l=a.hasOwnProperty("query")?a.query:l,m=a.hasOwnProperty("hash")?a.hash:m,u=a.hasOwnProperty("params")?a.params:u,c){s[c];return r({_normalized:!0,name:c,query:l,hash:m,params:u},void 0,e)}if(p){var g=function(t,n){return Ns(t,n.parent?n.parent.path:"/",!0)}(p,t);return r({_normalized:!0,path:or(g,u),query:l,hash:m},void 0,e)}return h(null,e)}function h(t,e,o){return t&&t.redirect?a(t,o||e):t&&t.matchAs?function(t,n,e){var o=r({_normalized:!0,path:or(e,n.params)});if(o){var i=o.matched,s=i[i.length-1];return n.params=o.params,h(s,n)}return h(null,n)}(0,e,t.matchAs):Ts(t,e,o,n)}return{match:r,addRoute:function(t,n){var e="object"!=typeof t?s[t]:void 0;lr([n||t],o,i,s,e),e&&e.alias.length&&lr(e.alias.map(function(t){return{path:t,children:[n]}}),o,i,s,e)},getRoutes:function(){return o.map(function(t){return i[t]})},addRoutes:function(t){lr(t,o,i,s)}}}function br(t,n,e){var o=n.match(t);if(!o)return!1;if(!e)return!0;for(var i=1,s=o.length;i<s;++i){var r=t.keys[i-1];r&&(e[r.name||"pathMatch"]="string"==typeof o[i]?ks(o[i]):o[i])}return!0}var dr=pr&&window.performance&&window.performance.now?window.performance:Date;function fr(){return dr.now().toFixed(3)}var wr=fr();function vr(){return wr}function yr(t){return wr=t}var Sr=Object.create(null);function kr(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var t=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(t,""),e=fs({},window.history.state);return e.key=vr(),window.history.replaceState(e,"",n),window.addEventListener("popstate",Ar),function(){window.removeEventListener("popstate",Ar)}}function Er(t,n,e,o){if(t.app){var i=t.options.scrollBehavior;i&&t.app.$nextTick(function(){var s=function(){var t=vr();if(t)return Sr[t]}(),r=i.call(t,n,e,o?s:null);r&&("function"==typeof r.then?r.then(function(t){Pr(t,s)}).catch(function(t){0}):Pr(r,s))})}}function xr(){var t=vr();t&&(Sr[t]={x:window.pageXOffset,y:window.pageYOffset})}function Ar(t){xr(),t.state&&t.state.key&&yr(t.state.key)}function Cr(t){return jr(t.x)||jr(t.y)}function Tr(t){return{x:jr(t.x)?t.x:window.pageXOffset,y:jr(t.y)?t.y:window.pageYOffset}}function jr(t){return"number"==typeof t}var _r=/^#\d/;function Pr(t,n){var e,o="object"==typeof t;if(o&&"string"==typeof t.selector){var i=_r.test(t.selector)?document.getElementById(t.selector.slice(1)):document.querySelector(t.selector);if(i){var s=t.offset&&"object"==typeof t.offset?t.offset:{};n=function(t,n){var e=document.documentElement.getBoundingClientRect(),o=t.getBoundingClientRect();return{x:o.left-e.left-n.x,y:o.top-e.top-n.y}}(i,s={x:jr((e=s).x)?e.x:0,y:jr(e.y)?e.y:0})}else Cr(t)&&(n=Tr(t))}else o&&Cr(t)&&(n=Tr(t));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:t.behavior}):window.scrollTo(n.x,n.y))}var Dr,Lr=pr&&((-1===(Dr=window.navigator.userAgent).indexOf("Android 2.")&&-1===Dr.indexOf("Android 4.0")||-1===Dr.indexOf("Mobile Safari")||-1!==Dr.indexOf("Chrome")||-1!==Dr.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Mr(t,n){xr();var e=window.history;try{if(n){var o=fs({},e.state);o.key=vr(),e.replaceState(o,"",t)}else e.pushState({key:yr(fr())},"",t)}catch(e){window.location[n?"replace":"assign"](t)}}function Or(t){Mr(t,!0)}var Ir={redirected:2,aborted:4,cancelled:8,duplicated:16};function Rr(t,n){return Br(t,n,Ir.redirected,'Redirected when going from "'+t.fullPath+'" to "'+function(t){if("string"==typeof t)return t;if("path"in t)return t.path;var n={};return Fr.forEach(function(e){e in t&&(n[e]=t[e])}),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function Nr(t,n){return Br(t,n,Ir.cancelled,'Navigation cancelled from "'+t.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function Br(t,n,e,o){var i=new Error(o);return i._isRouter=!0,i.from=t,i.to=n,i.type=e,i}var Fr=["params","query","hash"];function zr(t){return Object.prototype.toString.call(t).indexOf("Error")>-1}function Wr(t,n){return zr(t)&&t._isRouter&&(null==n||t.type===n)}function Gr(t,n,e){var o=function(i){i>=t.length?e():t[i]?n(t[i],function(){o(i+1)}):o(i+1)};o(0)}function Hr(t){return function(n,e,o){var i=!1,s=0,r=null;Ur(t,function(t,n,e,a){if("function"==typeof t&&void 0===t.cid){i=!0,s++;var h,c=Vr(function(n){var i;((i=n).__esModule||Jr&&"Module"===i[Symbol.toStringTag])&&(n=n.default),t.resolved="function"==typeof n?n:sr.extend(n),e.components[a]=n,--s<=0&&o()}),p=Vr(function(t){var n="Failed to resolve async component "+a+": "+t;r||(r=zr(t)?t:new Error(n),o(r))});try{h=t(c,p)}catch(t){p(t)}if(h)if("function"==typeof h.then)h.then(c,p);else{var l=h.component;l&&"function"==typeof l.then&&l.then(c,p)}}}),i||o()}}function Ur(t,n){return qr(t.map(function(t){return Object.keys(t.components).map(function(e){return n(t.components[e],t.instances[e],t,e)})}))}function qr(t){return Array.prototype.concat.apply([],t)}var Jr="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Vr(t){var n=!1;return function(){for(var e=[],o=arguments.length;o--;)e[o]=arguments[o];if(!n)return n=!0,t.apply(this,e)}}var $r=function(t,n){this.router=t,this.base=function(t){if(!t)if(pr){var n=document.querySelector("base");t=(t=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else t="/";"/"!==t.charAt(0)&&(t="/"+t);return t.replace(/\/$/,"")}(n),this.current=_s,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Xr(t,n,e,o){var i=Ur(t,function(t,o,i,s){var r=function(t,n){"function"!=typeof t&&(t=sr.extend(t));return t.options[n]}(t,n);if(r)return Array.isArray(r)?r.map(function(t){return e(t,o,i,s)}):e(r,o,i,s)});return qr(o?i.reverse():i)}function Qr(t,n){if(n)return function(){return t.apply(n,arguments)}}$r.prototype.listen=function(t){this.cb=t},$r.prototype.onReady=function(t,n){this.ready?t():(this.readyCbs.push(t),n&&this.readyErrorCbs.push(n))},$r.prototype.onError=function(t){this.errorCbs.push(t)},$r.prototype.transitionTo=function(t,n,e){var o,i=this;try{o=this.router.match(t,this.current)}catch(t){throw this.errorCbs.forEach(function(n){n(t)}),t}var s=this.current;this.confirmTransition(o,function(){i.updateRoute(o),n&&n(o),i.ensureURL(),i.router.afterHooks.forEach(function(t){t&&t(o,s)}),i.ready||(i.ready=!0,i.readyCbs.forEach(function(t){t(o)}))},function(t){e&&e(t),t&&!i.ready&&(Wr(t,Ir.redirected)&&s===_s||(i.ready=!0,i.readyErrorCbs.forEach(function(n){n(t)})))})},$r.prototype.confirmTransition=function(t,n,e){var o=this,i=this.current;this.pending=t;var s,r,a=function(t){!Wr(t)&&zr(t)&&(o.errorCbs.length?o.errorCbs.forEach(function(n){n(t)}):console.error(t)),e&&e(t)},h=t.matched.length-1,c=i.matched.length-1;if(Ls(t,i)&&h===c&&t.matched[h]===i.matched[c])return this.ensureURL(),t.hash&&Er(this.router,i,t,!1),a(((r=Br(s=i,t,Ir.duplicated,'Avoided redundant navigation to current location: "'+s.fullPath+'".')).name="NavigationDuplicated",r));var p=function(t,n){var e,o=Math.max(t.length,n.length);for(e=0;e<o&&t[e]===n[e];e++);return{updated:n.slice(0,e),activated:n.slice(e),deactivated:t.slice(e)}}(this.current.matched,t.matched),l=p.updated,m=p.deactivated,u=p.activated,g=[].concat(function(t){return Xr(t,"beforeRouteLeave",Qr,!0)}(m),this.router.beforeHooks,function(t){return Xr(t,"beforeRouteUpdate",Qr)}(l),u.map(function(t){return t.beforeEnter}),Hr(u)),b=function(n,e){if(o.pending!==t)return a(Nr(i,t));try{n(t,i,function(n){!1===n?(o.ensureURL(!0),a(function(t,n){return Br(t,n,Ir.aborted,'Navigation aborted from "'+t.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(i,t))):zr(n)?(o.ensureURL(!0),a(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(a(Rr(i,t)),"object"==typeof n&&n.replace?o.replace(n):o.push(n)):e(n)})}catch(t){a(t)}};Gr(g,b,function(){var e=function(t){return Xr(t,"beforeRouteEnter",function(t,n,e,o){return function(t,n,e){return function(o,i,s){return t(o,i,function(t){"function"==typeof t&&(n.enteredCbs[e]||(n.enteredCbs[e]=[]),n.enteredCbs[e].push(t)),s(t)})}}(t,e,o)})}(u);Gr(e.concat(o.router.resolveHooks),b,function(){if(o.pending!==t)return a(Nr(i,t));o.pending=null,n(t),o.router.app&&o.router.app.$nextTick(function(){Os(t)})})})},$r.prototype.updateRoute=function(t){this.current=t,this.cb&&this.cb(t)},$r.prototype.setupListeners=function(){},$r.prototype.teardown=function(){this.listeners.forEach(function(t){t()}),this.listeners=[],this.current=_s,this.pending=null};var Kr=function(t){function n(n,e){t.call(this,n,e),this._startLocation=Yr(this.base)}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var t=this;if(!(this.listeners.length>0)){var n=this.router,e=n.options.scrollBehavior,o=Lr&&e;o&&this.listeners.push(kr());var i=function(){var e=t.current,i=Yr(t.base);t.current===_s&&i===t._startLocation||t.transitionTo(i,function(t){o&&Er(n,t,e,!0)})};window.addEventListener("popstate",i),this.listeners.push(function(){window.removeEventListener("popstate",i)})}},n.prototype.go=function(t){window.history.go(t)},n.prototype.push=function(t,n,e){var o=this,i=this.current;this.transitionTo(t,function(t){Mr(Bs(o.base+t.fullPath)),Er(o.router,t,i,!1),n&&n(t)},e)},n.prototype.replace=function(t,n,e){var o=this,i=this.current;this.transitionTo(t,function(t){Or(Bs(o.base+t.fullPath)),Er(o.router,t,i,!1),n&&n(t)},e)},n.prototype.ensureURL=function(t){if(Yr(this.base)!==this.current.fullPath){var n=Bs(this.base+this.current.fullPath);t?Mr(n):Or(n)}},n.prototype.getCurrentLocation=function(){return Yr(this.base)},n}($r);function Yr(t){var n=window.location.pathname,e=n.toLowerCase(),o=t.toLowerCase();return!t||e!==o&&0!==e.indexOf(Bs(o+"/"))||(n=n.slice(t.length)),(n||"/")+window.location.search+window.location.hash}var Zr=function(t){function n(n,e,o){t.call(this,n,e),o&&function(t){var n=Yr(t);if(!/^\/#/.test(n))return window.location.replace(Bs(t+"/#"+n)),!0}(this.base)||ta()}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var t=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,e=Lr&&n;e&&this.listeners.push(kr());var o=function(){var n=t.current;ta()&&t.transitionTo(na(),function(o){e&&Er(t.router,o,n,!0),Lr||ia(o.fullPath)})},i=Lr?"popstate":"hashchange";window.addEventListener(i,o),this.listeners.push(function(){window.removeEventListener(i,o)})}},n.prototype.push=function(t,n,e){var o=this,i=this.current;this.transitionTo(t,function(t){oa(t.fullPath),Er(o.router,t,i,!1),n&&n(t)},e)},n.prototype.replace=function(t,n,e){var o=this,i=this.current;this.transitionTo(t,function(t){ia(t.fullPath),Er(o.router,t,i,!1),n&&n(t)},e)},n.prototype.go=function(t){window.history.go(t)},n.prototype.ensureURL=function(t){var n=this.current.fullPath;na()!==n&&(t?oa(n):ia(n))},n.prototype.getCurrentLocation=function(){return na()},n}($r);function ta(){var t=na();return"/"===t.charAt(0)||(ia("/"+t),!1)}function na(){var t=window.location.href,n=t.indexOf("#");return n<0?"":t=t.slice(n+1)}function ea(t){var n=window.location.href,e=n.indexOf("#");return(e>=0?n.slice(0,e):n)+"#"+t}function oa(t){Lr?Mr(ea(t)):window.location.hash=t}function ia(t){Lr?Or(ea(t)):window.location.replace(ea(t))}var sa=function(t){function n(n,e){t.call(this,n,e),this.stack=[],this.index=-1}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.push=function(t,n,e){var o=this;this.transitionTo(t,function(t){o.stack=o.stack.slice(0,o.index+1).concat(t),o.index++,n&&n(t)},e)},n.prototype.replace=function(t,n,e){var o=this;this.transitionTo(t,function(t){o.stack=o.stack.slice(0,o.index).concat(t),n&&n(t)},e)},n.prototype.go=function(t){var n=this,e=this.index+t;if(!(e<0||e>=this.stack.length)){var o=this.stack[e];this.confirmTransition(o,function(){var t=n.current;n.index=e,n.updateRoute(o),n.router.afterHooks.forEach(function(n){n&&n(o,t)})},function(t){Wr(t,Ir.duplicated)&&(n.index=e)})}},n.prototype.getCurrentLocation=function(){var t=this.stack[this.stack.length-1];return t?t.fullPath:"/"},n.prototype.ensureURL=function(){},n}($r),ra=function(t){void 0===t&&(t={}),this.app=null,this.apps=[],this.options=t,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=gr(t.routes||[],this);var n=t.mode||"hash";switch(this.fallback="history"===n&&!Lr&&!1!==t.fallback,this.fallback&&(n="hash"),pr||(n="abstract"),this.mode=n,n){case"history":this.history=new Kr(this,t.base);break;case"hash":this.history=new Zr(this,t.base,this.fallback);break;case"abstract":this.history=new sa(this,t.base)}},aa={currentRoute:{configurable:!0}};ra.prototype.match=function(t,n,e){return this.matcher.match(t,n,e)},aa.currentRoute.get=function(){return this.history&&this.history.current},ra.prototype.init=function(t){var n=this;if(this.apps.push(t),t.$once("hook:destroyed",function(){var e=n.apps.indexOf(t);e>-1&&n.apps.splice(e,1),n.app===t&&(n.app=n.apps[0]||null),n.app||n.history.teardown()}),!this.app){this.app=t;var e=this.history;if(e instanceof Kr||e instanceof Zr){var o=function(t){e.setupListeners(),function(t){var o=e.current,i=n.options.scrollBehavior;Lr&&i&&"fullPath"in t&&Er(n,t,o,!1)}(t)};e.transitionTo(e.getCurrentLocation(),o,o)}e.listen(function(t){n.apps.forEach(function(n){n._route=t})})}},ra.prototype.beforeEach=function(t){return ca(this.beforeHooks,t)},ra.prototype.beforeResolve=function(t){return ca(this.resolveHooks,t)},ra.prototype.afterEach=function(t){return ca(this.afterHooks,t)},ra.prototype.onReady=function(t,n){this.history.onReady(t,n)},ra.prototype.onError=function(t){this.history.onError(t)},ra.prototype.push=function(t,n,e){var o=this;if(!n&&!e&&"undefined"!=typeof Promise)return new Promise(function(n,e){o.history.push(t,n,e)});this.history.push(t,n,e)},ra.prototype.replace=function(t,n,e){var o=this;if(!n&&!e&&"undefined"!=typeof Promise)return new Promise(function(n,e){o.history.replace(t,n,e)});this.history.replace(t,n,e)},ra.prototype.go=function(t){this.history.go(t)},ra.prototype.back=function(){this.go(-1)},ra.prototype.forward=function(){this.go(1)},ra.prototype.getMatchedComponents=function(t){var n=t?t.matched?t:this.resolve(t).route:this.currentRoute;return n?[].concat.apply([],n.matched.map(function(t){return Object.keys(t.components).map(function(n){return t.components[n]})})):[]},ra.prototype.resolve=function(t,n,e){var o=ir(t,n=n||this.history.current,e,this),i=this.match(o,n),s=i.redirectedFrom||i.fullPath,r=function(t,n,e){var o="hash"===e?"#"+n:n;return t?Bs(t+"/"+o):o}(this.history.base,s,this.mode);return{location:o,route:i,href:r,normalizedTo:o,resolved:i}},ra.prototype.getRoutes=function(){return this.matcher.getRoutes()},ra.prototype.addRoute=function(t,n){this.matcher.addRoute(t,n),this.history.current!==_s&&this.history.transitionTo(this.history.getCurrentLocation())},ra.prototype.addRoutes=function(t){this.matcher.addRoutes(t),this.history.current!==_s&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(ra.prototype,aa);var ha=ra;function ca(t,n){return t.push(n),function(){var e=t.indexOf(n);e>-1&&t.splice(e,1)}}ra.install=function t(n){if(!t.installed||sr!==n){t.installed=!0,sr=n;var e=function(t){return void 0!==t},o=function(t,n){var o=t.$options._parentVnode;e(o)&&e(o=o.data)&&e(o=o.registerRouteInstance)&&o(t,n)};n.mixin({beforeCreate:function(){e(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,o(this,this)},destroyed:function(){o(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",Is),n.component("RouterLink",ar);var i=n.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},ra.version="3.6.5",ra.isNavigationFailure=Wr,ra.NavigationFailureType=Ir,ra.START_LOCATION=_s,pr&&window.Vue&&window.Vue.use(ra);e(151),e(29),e(161);e(162),e(28);var pa={"components/AlgoliaSearchBox":()=>Promise.all([e.e(0),e.e(16)]).then(e.bind(null,368)),"components/DropdownLink":()=>Promise.all([e.e(0),e.e(15)]).then(e.bind(null,301)),"components/DropdownTransition":()=>Promise.all([e.e(0),e.e(22)]).then(e.bind(null,287)),"components/Home":()=>Promise.all([e.e(0),e.e(19)]).then(e.bind(null,337)),"components/NavLink":()=>e.e(24).then(e.bind(null,286)),"components/NavLinks":()=>Promise.all([e.e(0),e.e(14)]).then(e.bind(null,314)),"components/Navbar":()=>Promise.all([e.e(0),e.e(1),e.e(18)]).then(e.bind(null,363)),"components/Page":()=>Promise.all([e.e(0),e.e(13)]).then(e.bind(null,338)),"components/PageEdit":()=>Promise.all([e.e(0),e.e(20)]).then(e.bind(null,316)),"components/PageNav":()=>Promise.all([e.e(0),e.e(17)]).then(e.bind(null,317)),"components/Sidebar":()=>Promise.all([e.e(0),e.e(12)]).then(e.bind(null,339)),"components/SidebarButton":()=>Promise.all([e.e(0),e.e(23)]).then(e.bind(null,341)),"components/SidebarGroup":()=>Promise.all([e.e(0),e.e(3)]).then(e.bind(null,315)),"components/SidebarLink":()=>Promise.all([e.e(0),e.e(21)]).then(e.bind(null,302)),"components/SidebarLinks":()=>Promise.all([e.e(0),e.e(3)]).then(e.bind(null,300)),"global-components/Badge":()=>Promise.all([e.e(0),e.e(5)]).then(e.bind(null,373)),"global-components/CodeBlock":()=>Promise.all([e.e(0),e.e(6)]).then(e.bind(null,369)),"global-components/CodeGroup":()=>Promise.all([e.e(0),e.e(7)]).then(e.bind(null,370)),"layouts/404":()=>e.e(8).then(e.bind(null,371)),"layouts/Layout":()=>Promise.all([e.e(0),e.e(1),e.e(2),e.e(4)]).then(e.bind(null,372)),NotFound:()=>e.e(8).then(e.bind(null,371)),Layout:()=>Promise.all([e.e(0),e.e(1),e.e(2),e.e(4)]).then(e.bind(null,372))},la={"v-da2de522":()=>e.e(26).then(e.bind(null,374)),"v-2001fb4e":()=>e.e(27).then(e.bind(null,375)),"v-2f3530c9":()=>e.e(28).then(e.bind(null,376)),"v-636845c8":()=>e.e(29).then(e.bind(null,377)),"v-f7d9cd26":()=>e.e(25).then(e.bind(null,378)),"v-78599262":()=>e.e(32).then(e.bind(null,379)),"v-64f1ead8":()=>e.e(33).then(e.bind(null,380)),"v-28b0a469":()=>e.e(30).then(e.bind(null,381)),"v-a17ce206":()=>e.e(31).then(e.bind(null,382)),"v-a19f2896":()=>e.e(34).then(e.bind(null,383)),"v-c33b74c2":()=>e.e(35).then(e.bind(null,384)),"v-9c5327fe":()=>e.e(36).then(e.bind(null,385)),"v-2c126fcc":()=>e.e(37).then(e.bind(null,386)),"v-8d52ded2":()=>e.e(38).then(e.bind(null,387)),"v-5d77392a":()=>e.e(40).then(e.bind(null,388)),"v-cdb7a288":()=>e.e(39).then(e.bind(null,389)),"v-224245ba":()=>e.e(42).then(e.bind(null,390)),"v-f7c239a6":()=>e.e(43).then(e.bind(null,391)),"v-95af8644":()=>e.e(41).then(e.bind(null,392)),"v-3d6e59d9":()=>e.e(44).then(e.bind(null,393)),"v-6edf7b7d":()=>e.e(45).then(e.bind(null,394)),"v-1961f596":()=>e.e(47).then(e.bind(null,395)),"v-4106017b":()=>e.e(46).then(e.bind(null,396)),"v-cae23b10":()=>e.e(48).then(e.bind(null,397)),"v-d9f77642":()=>e.e(49).then(e.bind(null,398)),"v-305e971b":()=>e.e(50).then(e.bind(null,399)),"v-3f9edbee":()=>e.e(51).then(e.bind(null,400)),"v-5d43a8c2":()=>e.e(52).then(e.bind(null,401)),"v-5ad62fc1":()=>e.e(53).then(e.bind(null,402)),"v-26c996dc":()=>e.e(54).then(e.bind(null,403)),"v-aae4bb34":()=>e.e(55).then(e.bind(null,404)),"v-787fabfe":()=>e.e(56).then(e.bind(null,405)),"v-286ca650":()=>e.e(58).then(e.bind(null,406)),"v-5d38d082":()=>e.e(57).then(e.bind(null,407)),"v-2bfe0417":()=>e.e(59).then(e.bind(null,408)),"v-f6f5c342":()=>e.e(61).then(e.bind(null,409)),"v-38136cbc":()=>e.e(60).then(e.bind(null,410)),"v-b755f34a":()=>e.e(63).then(e.bind(null,411)),"v-fa68ae44":()=>e.e(62).then(e.bind(null,412)),"v-056a522d":()=>e.e(64).then(e.bind(null,413)),"v-5b57fb0d":()=>e.e(65).then(e.bind(null,414)),"v-61c3b8ad":()=>e.e(66).then(e.bind(null,415)),"v-14463ec3":()=>e.e(69).then(e.bind(null,416)),"v-53f85f06":()=>e.e(67).then(e.bind(null,417)),"v-54e9aaf8":()=>e.e(70).then(e.bind(null,418)),"v-44529e28":()=>e.e(68).then(e.bind(null,419)),"v-16e8b8b9":()=>e.e(72).then(e.bind(null,420)),"v-032b2ad1":()=>e.e(73).then(e.bind(null,421)),"v-171fdc9e":()=>e.e(71).then(e.bind(null,422)),"v-8dac8fa6":()=>e.e(74).then(e.bind(null,423)),"v-5a49a05e":()=>e.e(75).then(e.bind(null,424)),"v-15c96366":()=>e.e(76).then(e.bind(null,425)),"v-15a0fa33":()=>e.e(78).then(e.bind(null,426)),"v-4c7c3c10":()=>e.e(80).then(e.bind(null,427)),"v-92c85c98":()=>e.e(77).then(e.bind(null,428)),"v-54151d31":()=>e.e(79).then(e.bind(null,429)),"v-52181dea":()=>e.e(81).then(e.bind(null,430)),"v-f843628c":()=>e.e(82).then(e.bind(null,431)),"v-4f2319ea":()=>e.e(83).then(e.bind(null,432)),"v-64363060":()=>e.e(84).then(e.bind(null,433)),"v-c1c50c00":()=>e.e(85).then(e.bind(null,434)),"v-56978b5f":()=>e.e(86).then(e.bind(null,435)),"v-c5677bfe":()=>e.e(88).then(e.bind(null,436)),"v-bdbfea88":()=>e.e(91).then(e.bind(null,437)),"v-260b5d54":()=>e.e(87).then(e.bind(null,438)),"v-92e950d2":()=>e.e(90).then(e.bind(null,439)),"v-712cb044":()=>e.e(92).then(e.bind(null,440)),"v-6ec03868":()=>e.e(89).then(e.bind(null,441)),"v-2eaedb6e":()=>e.e(93).then(e.bind(null,442)),"v-3540e1c5":()=>e.e(94).then(e.bind(null,443)),"v-7089e216":()=>e.e(95).then(e.bind(null,444)),"v-3dfbeeed":()=>e.e(97).then(e.bind(null,445)),"v-977a0aa8":()=>e.e(96).then(e.bind(null,446)),"v-144734ad":()=>e.e(100).then(e.bind(null,447)),"v-0fc28bcc":()=>e.e(99).then(e.bind(null,448)),"v-0a0d6535":()=>e.e(98).then(e.bind(null,449)),"v-3373a337":()=>e.e(101).then(e.bind(null,450)),"v-4a20ef61":()=>e.e(103).then(e.bind(null,451)),"v-280dd1cd":()=>e.e(102).then(e.bind(null,452)),"v-1174bde6":()=>e.e(104).then(e.bind(null,453)),"v-688e457b":()=>e.e(105).then(e.bind(null,454)),"v-ce3ea426":()=>e.e(106).then(e.bind(null,455)),"v-d8ef86b2":()=>e.e(109).then(e.bind(null,456)),"v-4e56d102":()=>e.e(110).then(e.bind(null,457)),"v-bbd3dc82":()=>e.e(107).then(e.bind(null,458)),"v-a4e3491e":()=>e.e(108).then(e.bind(null,459)),"v-08541cb6":()=>e.e(111).then(e.bind(null,460)),"v-de7d7904":()=>e.e(112).then(e.bind(null,461)),"v-71a93604":()=>e.e(115).then(e.bind(null,462)),"v-1b698353":()=>e.e(113).then(e.bind(null,463)),"v-db49abd0":()=>e.e(117).then(e.bind(null,464)),"v-411bea41":()=>e.e(118).then(e.bind(null,465)),"v-f9343602":()=>e.e(114).then(e.bind(null,466)),"v-6c4cc6cd":()=>e.e(120).then(e.bind(null,467)),"v-4c4ad226":()=>e.e(119).then(e.bind(null,468)),"v-9bfdc082":()=>e.e(122).then(e.bind(null,469)),"v-86654e08":()=>e.e(116).then(e.bind(null,470)),"v-3d9b1a2a":()=>e.e(124).then(e.bind(null,471)),"v-007e978d":()=>e.e(127).then(e.bind(null,472)),"v-7b788ccd":()=>e.e(125).then(e.bind(null,473)),"v-ec9ad94a":()=>e.e(123).then(e.bind(null,474)),"v-6bd4b16e":()=>e.e(121).then(e.bind(null,475)),"v-4dfbdd24":()=>e.e(126).then(e.bind(null,476))};function ma(t){const n=Object.create(null);return function(e){return n[e]||(n[e]=t(e))}}const ua=/-(\w)/g,ba=ma(t=>t.replace(ua,(t,n)=>n?n.toUpperCase():"")),da=/\B([A-Z])/g,fa=ma(t=>t.replace(da,"-$1").toLowerCase()),wa=ma(t=>t.charAt(0).toUpperCase()+t.slice(1));function va(t,n){if(!n)return;if(t(n))return t(n);return n.includes("-")?t(wa(ba(n))):t(wa(n))||t(fa(n))}const ya=Object.assign({},pa,la),Sa=t=>ya[t],ka=t=>la[t],Ea=t=>pa[t],xa=t=>no.component(t);function Aa(t){return va(ka,t)}function Ca(t){return va(Ea,t)}function Ta(t){return va(Sa,t)}function ja(t){return va(xa,t)}function _a(...t){return Promise.all(t.filter(t=>t).map(async t=>{if(!ja(t)&&Ta(t)){const n=await Ta(t)();no.component(t,n.default)}}))}function Pa(t,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[t]=n)}var Da=e(122),La=e.n(Da),Ma=e(123),Oa=e.n(Ma),Ia={created(){if(this.siteMeta=this.$site.headTags.filter(([t])=>"meta"===t).map(([t,n])=>n),this.$ssrContext){const n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(t=n)?t.map(t=>{let n="<meta";return Object.keys(t).forEach(e=>{n+=` ${e}="${Oa()(t[e])}"`}),n+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=Na(this.$canonicalUrl)}var t},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const t=this.getMergedMetaTags();this.currentMetaTags=Ba(t,this.currentMetaTags)},getMergedMetaTags(){const t=this.$page.frontmatter.meta||[];return La()([{name:"description",content:this.$description}],t,this.siteMeta,Fa)},updateCanonicalLink(){Ra(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",Na(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){Ba(null,this.currentMetaTags),Ra()}};function Ra(){const t=document.querySelector("link[rel='canonical']");t&&t.remove()}function Na(t=""){return t?`<link href="${t}" rel="canonical" />`:""}function Ba(t,n){if(n&&[...n].filter(t=>t.parentNode===document.head).forEach(t=>document.head.removeChild(t)),t)return t.map(t=>{const n=document.createElement("meta");return Object.keys(t).forEach(e=>{n.setAttribute(e,t[e])}),document.head.appendChild(n),n})}function Fa(t){for(const n of["name","property","itemprop"])if(t.hasOwnProperty(n))return t[n]+n;return JSON.stringify(t)}var za=e(44),Wa=e.n(za),Ga={mounted(){Wa.a.configure({showSpinner:!1}),this.$router.beforeEach((t,n,e)=>{t.path===n.path||no.component(t.name)||Wa.a.start(),e()}),this.$router.afterEach(()=>{Wa.a.done(),this.isSidebarOpen=!1})}},Ha=(e(271),Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])}return t}),Ua=function(t){return"IMG"===t.tagName},qa=function(t){return t&&1===t.nodeType},Ja=function(t){return".svg"===(t.currentSrc||t.src).substr(-4).toLowerCase()},Va=function(t){try{return Array.isArray(t)?t.filter(Ua):function(t){return NodeList.prototype.isPrototypeOf(t)}(t)?[].slice.call(t).filter(Ua):qa(t)?[t].filter(Ua):"string"==typeof t?[].slice.call(document.querySelectorAll(t)).filter(Ua):[]}catch(t){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},$a=function(t,n){var e=Ha({bubbles:!1,cancelable:!1,detail:void 0},n);if("function"==typeof window.CustomEvent)return new CustomEvent(t,e);var o=document.createEvent("CustomEvent");return o.initCustomEvent(t,e.bubbles,e.cancelable,e.detail),o};!function(t,n){void 0===n&&(n={});var e=n.insertAt;if(t&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css","top"===e&&o.firstChild?o.insertBefore(i,o.firstChild):o.appendChild(i),i.styleSheet?i.styleSheet.cssText=t:i.appendChild(document.createTextNode(t))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Xa=function t(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=window.Promise||function(t){function n(){}t(n,n)},i=function(){for(var t=arguments.length,n=Array(t),e=0;e<t;e++)n[e]=arguments[e];var o=n.reduce(function(t,n){return[].concat(t,Va(n))},[]);return o.filter(function(t){return-1===h.indexOf(t)}).forEach(function(t){h.push(t),t.classList.add("medium-zoom-image")}),c.forEach(function(t){var n=t.type,e=t.listener,i=t.options;o.forEach(function(t){t.addEventListener(n,e,i)})}),b},s=function(){var t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).target,n=function(){var t={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},n=void 0,e=void 0;if(m.container)if(m.container instanceof Object)n=(t=Ha({},t,m.container)).width-t.left-t.right-2*m.margin,e=t.height-t.top-t.bottom-2*m.margin;else{var o=(qa(m.container)?m.container:document.querySelector(m.container)).getBoundingClientRect(),i=o.width,s=o.height,r=o.left,a=o.top;t=Ha({},t,{width:i,height:s,left:r,top:a})}n=n||t.width-2*m.margin,e=e||t.height-2*m.margin;var h=u.zoomedHd||u.original,c=Ja(h)?n:h.naturalWidth||n,p=Ja(h)?e:h.naturalHeight||e,l=h.getBoundingClientRect(),g=l.top,b=l.left,d=l.width,f=l.height,w=Math.min(Math.max(d,c),n)/d,v=Math.min(Math.max(f,p),e)/f,y=Math.min(w,v),S="scale("+y+") translate3d("+((n-d)/2-b+m.margin+t.left)/y+"px, "+((e-f)/2-g+m.margin+t.top)/y+"px, 0)";u.zoomed.style.transform=S,u.zoomedHd&&(u.zoomedHd.style.transform=S)};return new o(function(e){if(t&&-1===h.indexOf(t))e(b);else{if(u.zoomed)e(b);else{if(t)u.original=t;else{if(!(h.length>0))return void e(b);var o=h;u.original=o[0]}if(u.original.dispatchEvent($a("medium-zoom:open",{detail:{zoom:b}})),l=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,p=!0,u.zoomed=function(t){var n=t.getBoundingClientRect(),e=n.top,o=n.left,i=n.width,s=n.height,r=t.cloneNode(),a=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,h=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return r.removeAttribute("id"),r.style.position="absolute",r.style.top=e+a+"px",r.style.left=o+h+"px",r.style.width=i+"px",r.style.height=s+"px",r.style.transform="",r}(u.original),document.body.appendChild(g),m.template){var i=qa(m.template)?m.template:document.querySelector(m.template);u.template=document.createElement("div"),u.template.appendChild(i.content.cloneNode(!0)),document.body.appendChild(u.template)}if(u.original.parentElement&&"PICTURE"===u.original.parentElement.tagName&&u.original.currentSrc&&(u.zoomed.src=u.original.currentSrc),document.body.appendChild(u.zoomed),window.requestAnimationFrame(function(){document.body.classList.add("medium-zoom--opened")}),u.original.classList.add("medium-zoom-image--hidden"),u.zoomed.classList.add("medium-zoom-image--opened"),u.zoomed.addEventListener("click",r),u.zoomed.addEventListener("transitionend",function t(){p=!1,u.zoomed.removeEventListener("transitionend",t),u.original.dispatchEvent($a("medium-zoom:opened",{detail:{zoom:b}})),e(b)}),u.original.getAttribute("data-zoom-src")){u.zoomedHd=u.zoomed.cloneNode(),u.zoomedHd.removeAttribute("srcset"),u.zoomedHd.removeAttribute("sizes"),u.zoomedHd.removeAttribute("loading"),u.zoomedHd.src=u.zoomed.getAttribute("data-zoom-src"),u.zoomedHd.onerror=function(){clearInterval(s),console.warn("Unable to reach the zoom image target "+u.zoomedHd.src),u.zoomedHd=null,n()};var s=setInterval(function(){u.zoomedHd.complete&&(clearInterval(s),u.zoomedHd.classList.add("medium-zoom-image--opened"),u.zoomedHd.addEventListener("click",r),document.body.appendChild(u.zoomedHd),n())},10)}else if(u.original.hasAttribute("srcset")){u.zoomedHd=u.zoomed.cloneNode(),u.zoomedHd.removeAttribute("sizes"),u.zoomedHd.removeAttribute("loading");var a=u.zoomedHd.addEventListener("load",function(){u.zoomedHd.removeEventListener("load",a),u.zoomedHd.classList.add("medium-zoom-image--opened"),u.zoomedHd.addEventListener("click",r),document.body.appendChild(u.zoomedHd),n()})}else n()}}})},r=function(){return new o(function(t){if(!p&&u.original){p=!0,document.body.classList.remove("medium-zoom--opened"),u.zoomed.style.transform="",u.zoomedHd&&(u.zoomedHd.style.transform=""),u.template&&(u.template.style.transition="opacity 150ms",u.template.style.opacity=0),u.original.dispatchEvent($a("medium-zoom:close",{detail:{zoom:b}})),u.zoomed.addEventListener("transitionend",function n(){u.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(u.zoomed),u.zoomedHd&&document.body.removeChild(u.zoomedHd),document.body.removeChild(g),u.zoomed.classList.remove("medium-zoom-image--opened"),u.template&&document.body.removeChild(u.template),p=!1,u.zoomed.removeEventListener("transitionend",n),u.original.dispatchEvent($a("medium-zoom:closed",{detail:{zoom:b}})),u.original=null,u.zoomed=null,u.zoomedHd=null,u.template=null,t(b)})}else t(b)})},a=function(){var t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).target;return u.original?r():s({target:t})},h=[],c=[],p=!1,l=0,m=e,u={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(n)?m=n:(n||"string"==typeof n)&&i(n);var g=function(t){var n=document.createElement("div");return n.classList.add("medium-zoom-overlay"),n.style.background=t,n}((m=Ha({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},m)).background);document.addEventListener("click",function(t){var n=t.target;n!==g?-1!==h.indexOf(n)&&a({target:n}):r()}),document.addEventListener("keyup",function(t){var n=t.key||t.keyCode;"Escape"!==n&&"Esc"!==n&&27!==n||r()}),document.addEventListener("scroll",function(){if(!p&&u.original){var t=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(l-t)>m.scrollOffset&&setTimeout(r,150)}}),window.addEventListener("resize",r);var b={open:s,close:r,toggle:a,update:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t;if(t.background&&(g.style.background=t.background),t.container&&t.container instanceof Object&&(n.container=Ha({},m.container,t.container)),t.template){var e=qa(t.template)?t.template:document.querySelector(t.template);n.template=e}return m=Ha({},m,n),h.forEach(function(t){t.dispatchEvent($a("medium-zoom:update",{detail:{zoom:b}}))}),b},clone:function(){return t(Ha({},m,arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}))},attach:i,detach:function(){for(var t=arguments.length,n=Array(t),e=0;e<t;e++)n[e]=arguments[e];u.zoomed&&r();var o=n.length>0?n.reduce(function(t,n){return[].concat(t,Va(n))},[]):h;return o.forEach(function(t){t.classList.remove("medium-zoom-image"),t.dispatchEvent($a("medium-zoom:detach",{detail:{zoom:b}}))}),h=h.filter(function(t){return-1===o.indexOf(t)}),b},on:function(t,n){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return h.forEach(function(o){o.addEventListener("medium-zoom:"+t,n,e)}),c.push({type:"medium-zoom:"+t,listener:n,options:e}),b},off:function(t,n){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return h.forEach(function(o){o.removeEventListener("medium-zoom:"+t,n,e)}),c=c.filter(function(e){return!(e.type==="medium-zoom:"+t&&e.listener.toString()===n.toString())}),b},getOptions:function(){return m},getImages:function(){return h},getZoomedImage:function(){return u.original}};return b},Qa={data:()=>({zoom:null}),mounted(){this.updateZoom()},updated(){this.updateZoom()},methods:{updateZoom(){setTimeout(()=>{this.zoom&&this.zoom.detach(),this.zoom=Xa(".theme-default-content :not(a) > img",void 0)},1e3)}}},Ka=(e(65),e(43)),Ya=e.n(Ka),Za={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:Ya()(function(){this.setActiveHash()},300),setActiveHash(){const t=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter(n=>t.some(t=>t.hash===n.hash)),e=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+e;for(let t=0;t<n.length;t++){const s=n[t],r=n[t+1],a=0===t&&0===e||e>=s.parentElement.offsetTop+10&&(!r||e<r.parentElement.offsetTop-10),h=decodeURIComponent(this.$route.hash);if(a&&h!==decodeURIComponent(s.hash)){const e=s;if(i===o)for(let e=t+1;e<n.length;e++)if(h===decodeURIComponent(n[e].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(e.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},th={props:{parent:Object,code:String,options:{align:String,color:String,backgroundTransition:Boolean,backgroundColor:String,successText:String,staticIcon:Boolean}},data:()=>({success:!1,originalBackground:null,originalTransition:null}),computed:{alignStyle(){let t={};return t[this.options.align]="7.5px",t},iconClass(){return this.options.staticIcon?"":"hover"}},mounted(){this.originalTransition=this.parent.style.transition,this.originalBackground=this.parent.style.background},beforeDestroy(){this.parent.style.transition=this.originalTransition,this.parent.style.background=this.originalBackground},methods:{hexToRgb(t){let n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return n?{r:parseInt(n[1],16),g:parseInt(n[2],16),b:parseInt(n[3],16)}:null},copyToClipboard(t){if(navigator.clipboard)navigator.clipboard.writeText(this.code).then(()=>{this.setSuccessTransitions()},()=>{});else{let t=document.createElement("textarea");document.body.appendChild(t),t.value=this.code,t.select(),document.execCommand("Copy"),t.remove(),this.setSuccessTransitions()}},setSuccessTransitions(){if(clearTimeout(this.successTimeout),this.options.backgroundTransition){this.parent.style.transition="background 350ms";let t=this.hexToRgb(this.options.backgroundColor);this.parent.style.background=`rgba(${t.r}, ${t.g}, ${t.b}, 0.1)`}this.success=!0,this.successTimeout=setTimeout(()=>{this.options.backgroundTransition&&(this.parent.style.background=this.originalBackground,this.parent.style.transition=this.originalTransition),this.success=!1},500)}}},nh=th,eh=(e(272),e(0)),oh=Object(eh.a)(nh,function(){var t=this,n=t._self._c;return n("div",{staticClass:"code-copy"},[n("svg",{class:t.iconClass,style:t.alignStyle,attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},on:{click:t.copyToClipboard}},[n("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),t._v(" "),n("path",{attrs:{fill:t.options.color,d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"}})]),t._v(" "),n("span",{class:t.success?"success":"",style:t.alignStyle},[t._v("\n        "+t._s(t.options.successText)+"\n    ")])])},[],!1,null,"49140617",null).exports,ih=(e(273),{updated(){this.update()},methods:{update(){setTimeout(()=>{document.querySelectorAll('div[class*="language-"] pre').forEach(t=>{if(t.classList.contains("code-copy-added"))return;let n=new(no.extend(oh));n.options={align:"bottom",color:"#27b1ff",backgroundTransition:!0,backgroundColor:"#0075b8",successText:"Copied!",staticIcon:!1},n.code=t.innerText,n.parent=t,n.$mount(),t.classList.add("code-copy-added"),t.appendChild(n.$el)})},100)}}});const sh={icon:"",name:"自定义",link:null,newWindow:null,popover:null},rh={title:null,more:null},ah={name:"more",link:null};var hh={props:{config:{}},data:()=>({icon:void 0,name:void 0,popover:void 0}),created(){let t=sh;this.config&&(t=Object.assign({},sh,this.config)),this.icon=t.icon,this.name=t.name,this.link=t.link,this.newWindow=t.newWindow,t.popover&&(this.popover=Object.assign({},rh,this.config.popover),t.popover.more&&(this.popover.more=Object.assign({},ah,this.config.popover.more)))}},ch=Object(eh.a)(hh,function(){var t=this,n=t._self._c;return t.link?n("div",{staticClass:"option-box"},[n("a",{attrs:{href:t.link,target:t.newWindow?"":"_blank"}},[t.icon?n("i",{class:t.icon}):t._e(),t._v(" "),t.name?n("span",[t._v(t._s(t.name))]):t._e(),t._v(" "),t.popover?n("div",{staticClass:"popover"},[t.popover.title?[n("a",{attrs:{href:t.link,target:t.newWindow?"":"_blank"}},[n("div",{staticClass:"title"},[t._v(t._s(t.popover.title))])]),t._v(" "),n("hr")]:t._e(),t._v(" "),t._t("default"),t._v(" "),t.popover.more?n("a",{staticClass:"more-btn",attrs:{target:t.popover.newWindow?"_blank":"",href:t.popover.more.link}},[t._v("\n        "+t._s(t.popover.more.name)+"\n      ")]):t._e()],2):t._e()])]):n("div",{staticClass:"option-box"},[t.icon?n("i",{class:t.icon}):t._e(),t._v(" "),t.name?n("span",[t._v(t._s(t.name))]):t._e(),t._v(" "),t.popover?n("div",{staticClass:"popover"},[t.popover.title?[n("div",{staticClass:"title"},[t._v(t._s(t.popover.title))]),t._v(" "),n("hr")]:t._e(),t._v(" "),t._t("default"),t._v(" "),t.popover.more?n("a",{staticClass:"more-btn",attrs:{target:t.popover.newWindow?"":"_blank",href:t.popover.more.link}},[t._v("\n      "+t._s(t.popover.more.name)+"\n    ")]):t._e()],2):t._e()])},[],!1,null,"00602e9c",null).exports;const ph={type:"text",imageUrl:null,text:"",html:""};var lh={components:{BaseOpt:ch},props:{config:{}},data:()=>({popover:void 0}),created(){let t=this.config.popover;t&&(this.popover=Object.assign({},ph,t))}},mh={components:{CustomOpt:Object(eh.a)(lh,function(){var t=this,n=t._self._c;return n("base-opt",{attrs:{config:t.config}},[t.popover?n("div",{staticClass:"content"},["image"==t.popover.type?[n("img",{attrs:{width:"100%",src:t.popover.imageUrl}})]:t._e(),t._v(" "),"text"==t.popover.type?[t._v("\n      "+t._s(t.popover.text)+"\n    ")]:t._e(),t._v(" "),"html"==t.popover.type?[n("div",{domProps:{innerHTML:t._s(t.popover.html)}})]:t._e()],2):t._e()])},[],!1,null,"7ad71a68",null).exports},data:()=>({customOptConfigs:null}),created(){this.customOptConfigs=[{icon:"",name:"动态博客",link:"https://www.gotoxo.com",popover:{type:"html",title:"",html:'<iframe src="https://www.gotoxo.com"></iframe>'}},{icon:"",name:"备份博客",link:"https://notes-vuepress.pages.dev"}]}},uh=Object(eh.a)(mh,function(){var t=this,n=t._self._c;return n("aside",{staticClass:"me-toolbar-sidebar"},[n("div",{staticClass:"logic_first-node"}),t._v(" "),t._l(t.customOptConfigs,function(t){return n("custom-opt",{attrs:{config:t}})})],2)},[],!1,null,"16b8e0b2",null).exports,gh={name:"PageNavItem",props:{menus:{}},create(){},methods:{},watch:{}},bh=Object(eh.a)(gh,function(){var t=this,n=t._self._c;return n("div",t._l(t.menus,function(e){return n("ul",{staticClass:"sidebar-links page-nav-link"},[n("li",{staticClass:"sidebar-links page-nav-link"},[n("a",{staticClass:"sidebar-link page-nav-link",attrs:{href:e.path}},[t._v("\n        "+t._s(e.name)+"\n      ")]),t._v(" "),e.childs&&0!=e.childs.length?n("page-nav-item",{attrs:{menus:e.childs}}):t._e()],1)])}),0)},[],!1,null,"ff0b94d8",null).exports;const dh={icon:"iconfont icon-daohang",name:"导航"};var fh={components:{BaseOpt:ch,PageNavItem:bh},props:{config:{},pageObject:{},pageKey:{}},data:()=>({styleObject:{display:void 0},configP:null,headers:[],pageTitleObj:null}),created(){let t=dh;t=this.config?Object.assign({},dh,this.config):Object.assign({},dh,{popover:{}}),t.popover||(t.popover={}),this.configP=t},methods:{build(){let t=this.buildTocs();1==t.length?(this.pageTitleObj=t[0],this.headers=t[0].childs):this.headers=t},buildTocs(){let t=document.querySelectorAll(".page .content__default .header-anchor");if(t&&0!=t.length){let n=[],e=null,o=null,i=null,s=null,r=null,a=null;return t.forEach(t=>{let h=t.parentElement.tagName.toLowerCase(),c=parseInt(h.substr(1)),p={path:t.pathname+t.hash,name:t.nextSibling.data,level:c,childs:[]};switch(c){case 1:e=p,n.push(p);break;case 2:e.childs.push(p),o=p;break;case 3:o.childs.push(p),i=p;break;case 4:i.childs.push(p),s=p;break;case 5:s.childs.push(p),r=p;break;case 6:r.childs.push(p),a=p}}),n}}},watch:{pageKey(t){},pageObject(t){"/"!=t.path?(this.styleObject.display=void 0,this.$nextTick(()=>{this.build()})):this.styleObject.display="none"}}},wh=fh,vh=(e(274),Object(eh.a)(wh,function(){var t=this,n=t._self._c;return n("base-opt",{staticClass:"me-toolbar-sidebar-page-nav",style:t.styleObject,attrs:{config:t.configP}},[null!=t.pageTitleObj?n("a",{staticClass:"sidebar-link page-nav-title",attrs:{href:t.pageTitleObj.path}},[t._v("\n    "+t._s(t.pageTitleObj.name)+"\n  ")]):t._e(),t._v(" "),n("hr"),t._v(" "),n("div",{staticClass:"page-nav-scorll"},[n("page-nav-item",{attrs:{menus:t.headers}})],1)])},[],!1,null,"79cbeea4",null).exports),yh=[Ia,Ga,Qa,Za,ih,{created(){this._mrcodeToolbar={pageAsidebar:null,pageNav:null}},mounted(){},watch:{"$page.path"(t){},"$page.key"(t){this.pageNavUpdate(t,this.$page)}},updated(){this.init()},beforeDestroy(){},methods:{init(){this.pageAsidebarInsert(),{name:"导航"}&&this.pageNavInsert({name:"导航"})},pageAsidebarInsert(){if(this._mrcodeToolbar.pageAsidebar)return;const t=document.querySelectorAll(".theme-container");let n=null;if(t&&t.length>0&&(n=t[0]),!n)return;const e=new(no.extend(uh));e._parent=n,e.$mount(),n.appendChild(e.$el),this._mrcodeToolbar.pageAsidebar=e},pageNavInsert(t){if(!this._mrcodeToolbar.pageNav){let n=this._mrcodeToolbar.pageAsidebar;const e=new(no.extend(vh))({propsData:{config:t}});if(!n)return void this.init();e._parent=n.$el,e.$mount(),e.pageObject=this.$page,n.$el.insertBefore(e.$el,n.$el.firstChild),this._mrcodeToolbar.pageNav=e}},pageNavUpdate(t,n){this._mrcodeToolbar.pageNav&&(this._mrcodeToolbar.pageNav.pageKey=t,this._mrcodeToolbar.pageNav.pageObject=n)}}}],Sh={name:"GlobalLayout",computed:{layout(){const t=this.getLayout();return Pa("layout",t),no.component(t)}},methods:{getLayout(){if(this.$page.path){const t=this.$page.frontmatter.layout;return t&&(this.$vuepress.getLayoutAsyncComponent(t)||this.$vuepress.getVueComponent(t))?t:"Layout"}return"NotFound"}}},kh=Object(eh.a)(Sh,function(){return(0,this._self._c)(this.layout,{tag:"component"})},[],!1,null,null,null).exports;!function(t,n,e){switch(n){case"components":t[n]||(t[n]={}),Object.assign(t[n],e);break;case"mixins":t[n]||(t[n]=[]),t[n].push(...e);break;default:throw new Error("Unknown option name.")}}(kh,"mixins",yh);const Eh=[{name:"v-da2de522",path:"/DBS/MySQL%E4%BA%8B%E4%BB%B6.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-da2de522").then(e)}},{path:"/DBS/MySQL事件.html",redirect:"/DBS/MySQL%E4%BA%8B%E4%BB%B6.html"},{path:"/DBS/MySQL事件.html",redirect:"/DBS/MySQL%E4%BA%8B%E4%BB%B6.html"},{name:"v-2001fb4e",path:"/DBS/MySQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-2001fb4e").then(e)}},{path:"/DBS/MySQL备份恢复.html",redirect:"/DBS/MySQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D.html"},{path:"/DBS/MySQL备份恢复.html",redirect:"/DBS/MySQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D.html"},{name:"v-2f3530c9",path:"/DBS/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-2f3530c9").then(e)}},{path:"/DBS/MySQL存储过程.html",redirect:"/DBS/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html"},{path:"/DBS/MySQL存储过程.html",redirect:"/DBS/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html"},{name:"v-636845c8",path:"/DBS/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-636845c8").then(e)}},{path:"/DBS/MySQL安装配置.html",redirect:"/DBS/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html"},{path:"/DBS/MySQL安装配置.html",redirect:"/DBS/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html"},{name:"v-f7d9cd26",path:"/DBS/MySQL.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-f7d9cd26").then(e)}},{name:"v-78599262",path:"/DBS/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-78599262").then(e)}},{path:"/DBS/index.html",redirect:"/DBS/"},{name:"v-64f1ead8",path:"/DBS/mysql-udf%E5%AE%89%E8%A3%85.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-64f1ead8").then(e)}},{path:"/DBS/mysql-udf安装.html",redirect:"/DBS/mysql-udf%E5%AE%89%E8%A3%85.html"},{path:"/DBS/mysql-udf安装.html",redirect:"/DBS/mysql-udf%E5%AE%89%E8%A3%85.html"},{name:"v-28b0a469",path:"/DBS/Oracle.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-28b0a469").then(e)}},{name:"v-a17ce206",path:"/DBS/PostgreSQL.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-a17ce206").then(e)}},{name:"v-a19f2896",path:"/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8BSQL%E6%A0%87%E5%87%86.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-a19f2896").then(e)}},{path:"/DBS/关系型SQL标准.html",redirect:"/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8BSQL%E6%A0%87%E5%87%86.html"},{path:"/DBS/关系型SQL标准.html",redirect:"/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8BSQL%E6%A0%87%E5%87%86.html"},{name:"v-c33b74c2",path:"/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-c33b74c2").then(e)}},{path:"/DBS/关系型数据库.html",redirect:"/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93.html"},{path:"/DBS/关系型数据库.html",redirect:"/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93.html"},{name:"v-9c5327fe",path:"/Go/GoGUI.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-9c5327fe").then(e)}},{name:"v-2c126fcc",path:"/Go/Go%E7%88%AC%E8%99%AB.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-2c126fcc").then(e)}},{path:"/Go/Go爬虫.html",redirect:"/Go/Go%E7%88%AC%E8%99%AB.html"},{path:"/Go/Go爬虫.html",redirect:"/Go/Go%E7%88%AC%E8%99%AB.html"},{name:"v-8d52ded2",path:"/Go/Go%E7%AC%94%E8%AE%B0.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-8d52ded2").then(e)}},{path:"/Go/Go笔记.html",redirect:"/Go/Go%E7%AC%94%E8%AE%B0.html"},{path:"/Go/Go笔记.html",redirect:"/Go/Go%E7%AC%94%E8%AE%B0.html"},{name:"v-5d77392a",path:"/Go/Go%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-5d77392a").then(e)}},{path:"/Go/Go编译打包.html",redirect:"/Go/Go%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85.html"},{path:"/Go/Go编译打包.html",redirect:"/Go/Go%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85.html"},{name:"v-cdb7a288",path:"/Go/Go%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-cdb7a288").then(e)}},{path:"/Go/Go第三方库.html",redirect:"/Go/Go%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{path:"/Go/Go第三方库.html",redirect:"/Go/Go%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{name:"v-224245ba",path:"/IDE/Chromium.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-224245ba").then(e)}},{name:"v-f7c239a6",path:"/IDE/Eclipse.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-f7c239a6").then(e)}},{name:"v-95af8644",path:"/Go/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-95af8644").then(e)}},{path:"/Go/index.html",redirect:"/Go/"},{name:"v-3d6e59d9",path:"/IDE/Git%E4%BD%BF%E7%94%A8.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-3d6e59d9").then(e)}},{path:"/IDE/Git使用.html",redirect:"/IDE/Git%E4%BD%BF%E7%94%A8.html"},{path:"/IDE/Git使用.html",redirect:"/IDE/Git%E4%BD%BF%E7%94%A8.html"},{name:"v-6edf7b7d",path:"/IDE/Git%E6%9C%8D%E5%8A%A1.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-6edf7b7d").then(e)}},{path:"/IDE/Git服务.html",redirect:"/IDE/Git%E6%9C%8D%E5%8A%A1.html"},{path:"/IDE/Git服务.html",redirect:"/IDE/Git%E6%9C%8D%E5%8A%A1.html"},{name:"v-1961f596",path:"/IDE/IDEA%E6%8F%92%E4%BB%B6.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-1961f596").then(e)}},{path:"/IDE/IDEA插件.html",redirect:"/IDE/IDEA%E6%8F%92%E4%BB%B6.html"},{path:"/IDE/IDEA插件.html",redirect:"/IDE/IDEA%E6%8F%92%E4%BB%B6.html"},{name:"v-4106017b",path:"/IDE/IDEA%E4%BD%BF%E7%94%A8.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-4106017b").then(e)}},{path:"/IDE/IDEA使用.html",redirect:"/IDE/IDEA%E4%BD%BF%E7%94%A8.html"},{path:"/IDE/IDEA使用.html",redirect:"/IDE/IDEA%E4%BD%BF%E7%94%A8.html"},{name:"v-cae23b10",path:"/IDE/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-cae23b10").then(e)}},{path:"/IDE/index.html",redirect:"/IDE/"},{name:"v-d9f77642",path:"/IDE/Subversion.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-d9f77642").then(e)}},{name:"v-305e971b",path:"/IDE/TextEditor.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-305e971b").then(e)}},{name:"v-3f9edbee",path:"/IDE/VisualStudioCode.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-3f9edbee").then(e)}},{name:"v-5d43a8c2",path:"/IDE/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-5d43a8c2").then(e)}},{path:"/IDE/软件安全.html",redirect:"/IDE/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8.html"},{path:"/IDE/软件安全.html",redirect:"/IDE/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8.html"},{name:"v-5ad62fc1",path:"/Java/CAS-Shiro.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-5ad62fc1").then(e)}},{name:"v-26c996dc",path:"/Java/JDK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-26c996dc").then(e)}},{path:"/Java/JDK安装配置.html",redirect:"/Java/JDK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html"},{path:"/Java/JDK安装配置.html",redirect:"/Java/JDK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html"},{name:"v-aae4bb34",path:"/Java/JDK%E5%B7%A5%E5%85%B7.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-aae4bb34").then(e)}},{path:"/Java/JDK工具.html",redirect:"/Java/JDK%E5%B7%A5%E5%85%B7.html"},{path:"/Java/JDK工具.html",redirect:"/Java/JDK%E5%B7%A5%E5%85%B7.html"},{name:"v-787fabfe",path:"/Java/JavaGUI.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-787fabfe").then(e)}},{name:"v-286ca650",path:"/Java/Java%E6%B3%A8%E8%A7%A3.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-286ca650").then(e)}},{path:"/Java/Java注解.html",redirect:"/Java/Java%E6%B3%A8%E8%A7%A3.html"},{path:"/Java/Java注解.html",redirect:"/Java/Java%E6%B3%A8%E8%A7%A3.html"},{name:"v-5d38d082",path:"/Java/Java%E6%9E%84%E5%BB%BA%E7%AE%A1%E7%90%86.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-5d38d082").then(e)}},{path:"/Java/Java构建管理.html",redirect:"/Java/Java%E6%9E%84%E5%BB%BA%E7%AE%A1%E7%90%86.html"},{path:"/Java/Java构建管理.html",redirect:"/Java/Java%E6%9E%84%E5%BB%BA%E7%AE%A1%E7%90%86.html"},{name:"v-2bfe0417",path:"/Java/Java%E7%AC%94%E8%AE%B0.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-2bfe0417").then(e)}},{path:"/Java/Java笔记.html",redirect:"/Java/Java%E7%AC%94%E8%AE%B0.html"},{path:"/Java/Java笔记.html",redirect:"/Java/Java%E7%AC%94%E8%AE%B0.html"},{name:"v-f6f5c342",path:"/Java/ORM.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-f6f5c342").then(e)}},{name:"v-38136cbc",path:"/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-38136cbc").then(e)}},{path:"/Java/Java第三方库.html",redirect:"/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{path:"/Java/Java第三方库.html",redirect:"/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{name:"v-b755f34a",path:"/Java/SPI.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-b755f34a").then(e)}},{name:"v-fa68ae44",path:"/Java/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-fa68ae44").then(e)}},{path:"/Java/index.html",redirect:"/Java/"},{name:"v-056a522d",path:"/Java/Spring.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-056a522d").then(e)}},{name:"v-5b57fb0d",path:"/Java/Tomcat.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-5b57fb0d").then(e)}},{name:"v-61c3b8ad",path:"/Other/Bookmarks.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-61c3b8ad").then(e)}},{name:"v-14463ec3",path:"/Other/%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-14463ec3").then(e)}},{path:"/Other/专业术语.html",redirect:"/Other/%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD.html"},{path:"/Other/专业术语.html",redirect:"/Other/%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD.html"},{name:"v-53f85f06",path:"/Other/Markdown.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-53f85f06").then(e)}},{name:"v-54e9aaf8",path:"/Other/%E4%B9%A6%E7%B1%8D%E5%92%8C%E5%8D%9A%E5%AE%A2.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-54e9aaf8").then(e)}},{path:"/Other/书籍和博客.html",redirect:"/Other/%E4%B9%A6%E7%B1%8D%E5%92%8C%E5%8D%9A%E5%AE%A2.html"},{path:"/Other/书籍和博客.html",redirect:"/Other/%E4%B9%A6%E7%B1%8D%E5%92%8C%E5%8D%9A%E5%AE%A2.html"},{name:"v-44529e28",path:"/Other/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-44529e28").then(e)}},{path:"/Other/index.html",redirect:"/Other/"},{name:"v-16e8b8b9",path:"/PL/C.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-16e8b8b9").then(e)}},{name:"v-032b2ad1",path:"/PL/CPlusPlus.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-032b2ad1").then(e)}},{name:"v-171fdc9e",path:"/Other/%E5%85%8D%E8%B4%B9%E6%9C%8D%E5%8A%A1.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-171fdc9e").then(e)}},{path:"/Other/免费服务.html",redirect:"/Other/%E5%85%8D%E8%B4%B9%E6%9C%8D%E5%8A%A1.html"},{path:"/Other/免费服务.html",redirect:"/Other/%E5%85%8D%E8%B4%B9%E6%9C%8D%E5%8A%A1.html"},{name:"v-8dac8fa6",path:"/PL/CSharp.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-8dac8fa6").then(e)}},{name:"v-5a49a05e",path:"/PL/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-5a49a05e").then(e)}},{path:"/PL/index.html",redirect:"/PL/"},{name:"v-15c96366",path:"/PL/Rust.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-15c96366").then(e)}},{name:"v-15a0fa33",path:"/PL/%E4%BA%A4%E4%BA%92%E5%8D%8F%E8%AE%AE.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-15a0fa33").then(e)}},{path:"/PL/交互协议.html",redirect:"/PL/%E4%BA%A4%E4%BA%92%E5%8D%8F%E8%AE%AE.html"},{path:"/PL/交互协议.html",redirect:"/PL/%E4%BA%A4%E4%BA%92%E5%8D%8F%E8%AE%AE.html"},{name:"v-4c7c3c10",path:"/PL/%E5%8A%A0%E5%AF%86%E8%AE%A4%E8%AF%81.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-4c7c3c10").then(e)}},{path:"/PL/加密认证.html",redirect:"/PL/%E5%8A%A0%E5%AF%86%E8%AE%A4%E8%AF%81.html"},{path:"/PL/加密认证.html",redirect:"/PL/%E5%8A%A0%E5%AF%86%E8%AE%A4%E8%AF%81.html"},{name:"v-92c85c98",path:"/PL/%E4%B8%AD%E9%97%B4%E4%BB%B6.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-92c85c98").then(e)}},{path:"/PL/中间件.html",redirect:"/PL/%E4%B8%AD%E9%97%B4%E4%BB%B6.html"},{path:"/PL/中间件.html",redirect:"/PL/%E4%B8%AD%E9%97%B4%E4%BB%B6.html"},{name:"v-54151d31",path:"/PL/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-54151d31").then(e)}},{path:"/PL/人工智能.html",redirect:"/PL/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD.html"},{path:"/PL/人工智能.html",redirect:"/PL/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD.html"},{name:"v-52181dea",path:"/PL/%E5%AE%B9%E5%99%A8%E8%99%9A%E6%8B%9F%E6%9C%BA.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-52181dea").then(e)}},{path:"/PL/容器虚拟机.html",redirect:"/PL/%E5%AE%B9%E5%99%A8%E8%99%9A%E6%8B%9F%E6%9C%BA.html"},{path:"/PL/容器虚拟机.html",redirect:"/PL/%E5%AE%B9%E5%99%A8%E8%99%9A%E6%8B%9F%E6%9C%BA.html"},{name:"v-f843628c",path:"/PL/%E6%8A%80%E6%9C%AF%E6%A6%82%E5%BF%B5.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-f843628c").then(e)}},{path:"/PL/技术概念.html",redirect:"/PL/%E6%8A%80%E6%9C%AF%E6%A6%82%E5%BF%B5.html"},{path:"/PL/技术概念.html",redirect:"/PL/%E6%8A%80%E6%9C%AF%E6%A6%82%E5%BF%B5.html"},{name:"v-4f2319ea",path:"/PL/%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-4f2319ea").then(e)}},{path:"/PL/文档处理.html",redirect:"/PL/%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86.html"},{path:"/PL/文档处理.html",redirect:"/PL/%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86.html"},{name:"v-64363060",path:"/PL/%E7%A1%AC%E4%BB%B6%E4%BA%A4%E4%BA%92.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-64363060").then(e)}},{path:"/PL/硬件交互.html",redirect:"/PL/%E7%A1%AC%E4%BB%B6%E4%BA%A4%E4%BA%92.html"},{path:"/PL/硬件交互.html",redirect:"/PL/%E7%A1%AC%E4%BB%B6%E4%BA%A4%E4%BA%92.html"},{name:"v-c1c50c00",path:"/PL/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-c1c50c00").then(e)}},{path:"/PL/编程规范.html",redirect:"/PL/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.html"},{path:"/PL/编程规范.html",redirect:"/PL/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.html"},{name:"v-56978b5f",path:"/PL/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E7%BC%96%E7%A0%81.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-56978b5f").then(e)}},{path:"/PL/表达式和编码.html",redirect:"/PL/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E7%BC%96%E7%A0%81.html"},{path:"/PL/表达式和编码.html",redirect:"/PL/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E7%BC%96%E7%A0%81.html"},{name:"v-c5677bfe",path:"/Python/PythonGUI.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-c5677bfe").then(e)}},{name:"v-bdbfea88",path:"/Python/Python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-bdbfea88").then(e)}},{path:"/Python/Python第三方库.html",redirect:"/Python/Python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{path:"/Python/Python第三方库.html",redirect:"/Python/Python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{name:"v-260b5d54",path:"/PL/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-260b5d54").then(e)}},{path:"/PL/跨平台开发.html",redirect:"/PL/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91.html"},{path:"/PL/跨平台开发.html",redirect:"/PL/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91.html"},{name:"v-92e950d2",path:"/Python/Python%E7%AC%94%E8%AE%B0.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-92e950d2").then(e)}},{path:"/Python/Python笔记.html",redirect:"/Python/Python%E7%AC%94%E8%AE%B0.html"},{path:"/Python/Python笔记.html",redirect:"/Python/Python%E7%AC%94%E8%AE%B0.html"},{name:"v-712cb044",path:"/Python/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-712cb044").then(e)}},{path:"/Python/index.html",redirect:"/Python/"},{name:"v-6ec03868",path:"/Python/Python%E7%88%AC%E8%99%AB.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-6ec03868").then(e)}},{path:"/Python/Python爬虫.html",redirect:"/Python/Python%E7%88%AC%E8%99%AB.html"},{path:"/Python/Python爬虫.html",redirect:"/Python/Python%E7%88%AC%E8%99%AB.html"},{name:"v-2eaedb6e",path:"/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-2eaedb6e").then(e)}},{path:"/index.html",redirect:"/"},{name:"v-3540e1c5",path:"/Shell/PowerShell.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-3540e1c5").then(e)}},{name:"v-7089e216",path:"/Shell/PowerShell%E5%91%BD%E4%BB%A4.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-7089e216").then(e)}},{path:"/Shell/PowerShell命令.html",redirect:"/Shell/PowerShell%E5%91%BD%E4%BB%A4.html"},{path:"/Shell/PowerShell命令.html",redirect:"/Shell/PowerShell%E5%91%BD%E4%BB%A4.html"},{name:"v-3dfbeeed",path:"/Shell/ShellScript.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-3dfbeeed").then(e)}},{name:"v-977a0aa8",path:"/Shell/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-977a0aa8").then(e)}},{path:"/Shell/index.html",redirect:"/Shell/"},{name:"v-144734ad",path:"/Shell/WindowsBatch.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-144734ad").then(e)}},{name:"v-0fc28bcc",path:"/Shell/Shell%E5%91%BD%E4%BB%A4.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-0fc28bcc").then(e)}},{path:"/Shell/Shell命令.html",redirect:"/Shell/Shell%E5%91%BD%E4%BB%A4.html"},{path:"/Shell/Shell命令.html",redirect:"/Shell/Shell%E5%91%BD%E4%BB%A4.html"},{name:"v-0a0d6535",path:"/Shell/ShellWindows.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-0a0d6535").then(e)}},{name:"v-3373a337",path:"/Shell/WindowsJScript.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-3373a337").then(e)}},{name:"v-4a20ef61",path:"/Shell/WindowsVBAScript.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-4a20ef61").then(e)}},{name:"v-280dd1cd",path:"/Shell/WindowsScript.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-280dd1cd").then(e)}},{name:"v-1174bde6",path:"/Shell/WindowsVBScript.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-1174bde6").then(e)}},{name:"v-688e457b",path:"/System/Android.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-688e457b").then(e)}},{name:"v-ce3ea426",path:"/System/CentOS.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-ce3ea426").then(e)}},{name:"v-d8ef86b2",path:"/System/Linux%E7%BD%91%E7%BB%9C%E9%98%B2%E7%81%AB%E5%A2%99.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-d8ef86b2").then(e)}},{path:"/System/Linux网络防火墙.html",redirect:"/System/Linux%E7%BD%91%E7%BB%9C%E9%98%B2%E7%81%AB%E5%A2%99.html"},{path:"/System/Linux网络防火墙.html",redirect:"/System/Linux%E7%BD%91%E7%BB%9C%E9%98%B2%E7%81%AB%E5%A2%99.html"},{name:"v-4e56d102",path:"/System/Linux%E9%85%8D%E7%BD%AE.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-4e56d102").then(e)}},{path:"/System/Linux配置.html",redirect:"/System/Linux%E9%85%8D%E7%BD%AE.html"},{path:"/System/Linux配置.html",redirect:"/System/Linux%E9%85%8D%E7%BD%AE.html"},{name:"v-bbd3dc82",path:"/System/IOS.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-bbd3dc82").then(e)}},{name:"v-a4e3491e",path:"/System/Linux.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-a4e3491e").then(e)}},{name:"v-08541cb6",path:"/System/Nginx.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-08541cb6").then(e)}},{name:"v-de7d7904",path:"/System/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-de7d7904").then(e)}},{path:"/System/index.html",redirect:"/System/"},{name:"v-71a93604",path:"/System/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-71a93604").then(e)}},{path:"/System/内网穿透.html",redirect:"/System/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html"},{path:"/System/内网穿透.html",redirect:"/System/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html"},{name:"v-1b698353",path:"/System/Windows.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-1b698353").then(e)}},{name:"v-db49abd0",path:"/System/%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-db49abd0").then(e)}},{path:"/System/文件压缩解压.html",redirect:"/System/%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B.html"},{path:"/System/文件压缩解压.html",redirect:"/System/%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B.html"},{name:"v-411bea41",path:"/System/%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-411bea41").then(e)}},{path:"/System/邮箱服务.html",redirect:"/System/%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1.html"},{path:"/System/邮箱服务.html",redirect:"/System/%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1.html"},{name:"v-f9343602",path:"/System/Windows%E8%BD%AF%E4%BB%B6.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-f9343602").then(e)}},{path:"/System/Windows软件.html",redirect:"/System/Windows%E8%BD%AF%E4%BB%B6.html"},{path:"/System/Windows软件.html",redirect:"/System/Windows%E8%BD%AF%E4%BB%B6.html"},{name:"v-6c4cc6cd",path:"/Web/HTML.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-6c4cc6cd").then(e)}},{name:"v-4c4ad226",path:"/Web/CSS.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-4c4ad226").then(e)}},{name:"v-9bfdc082",path:"/Web/JavaScript%E6%A1%86%E6%9E%B6.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-9bfdc082").then(e)}},{path:"/Web/JavaScript框架.html",redirect:"/Web/JavaScript%E6%A1%86%E6%9E%B6.html"},{path:"/Web/JavaScript框架.html",redirect:"/Web/JavaScript%E6%A1%86%E6%9E%B6.html"},{name:"v-86654e08",path:"/System/%E6%8C%82%E8%BD%BD%E7%BD%91%E7%9B%98.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-86654e08").then(e)}},{path:"/System/挂载网盘.html",redirect:"/System/%E6%8C%82%E8%BD%BD%E7%BD%91%E7%9B%98.html"},{path:"/System/挂载网盘.html",redirect:"/System/%E6%8C%82%E8%BD%BD%E7%BD%91%E7%9B%98.html"},{name:"v-3d9b1a2a",path:"/Web/JavaScript%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-3d9b1a2a").then(e)}},{path:"/Web/JavaScript第三方库.html",redirect:"/Web/JavaScript%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{path:"/Web/JavaScript第三方库.html",redirect:"/Web/JavaScript%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{name:"v-007e978d",path:"/files.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-007e978d").then(e)}},{name:"v-7b788ccd",path:"/Web/NodeJS.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-7b788ccd").then(e)}},{name:"v-ec9ad94a",path:"/Web/JavaScript%E7%AC%94%E8%AE%B0.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-ec9ad94a").then(e)}},{path:"/Web/JavaScript笔记.html",redirect:"/Web/JavaScript%E7%AC%94%E8%AE%B0.html"},{path:"/Web/JavaScript笔记.html",redirect:"/Web/JavaScript%E7%AC%94%E8%AE%B0.html"},{name:"v-6bd4b16e",path:"/Web/JavaScript.html",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-6bd4b16e").then(e)}},{name:"v-4dfbdd24",path:"/Web/",component:kh,beforeEnter:(t,n,e)=>{_a("Layout","v-4dfbdd24").then(e)}},{path:"/Web/index.html",redirect:"/Web/"},{path:"*",component:kh}],xh={title:"",description:"",base:"/",headTags:[["link",{rel:"icon",href:"/images/icons/logo.png"}],["link",{rel:"apple-touch-icon",href:"/images/icons/logo.png"}],["link",{rel:"manifest",href:"/manifest.json"}],["meta",{name:"theme-color",content:"#3eaf7c"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}],["meta",{name:"msapplication-TileImage",content:"/images/icons/logo.png"}],["meta",{name:"msapplication-TileColor",content:"#ffffff"}],["meta",{name:"keywords",content:"bajins,vue,vuepress,vuepress-theme,theme,主题,vuepress主题,blog\n        ,vuepress-blog,java,python,shell,sql,golang,script,shell script,nginx,windows,去广告,androd,google drive\n        ,one drive,idea,eclipse,git,小程序"}],["meta",{name:"referrer",content:"never"}],["script",{type:"text/javascript",src:"/assets/js/load.js"}]],pages:[{title:"MySQL事件",frontmatter:{description:"MySQL5.1版本开始引进event概念，MySQL中的事件(event：时间触发器)是用于执行定时或周期性的任务，类似Linux中的crontab，\n> 但是后者只能精确到分钟，事件可以精确到秒。\n>\n> 通过单独或调用存储过程使用，在某一特定的时间点，触发相关的SQL语句或存储过程。\n>\n> 事件由一个特定的线程来管理的，也就是所谓的事件调度器，但是事件不能直接调用。",meta:[{name:"twitter:title",content:"MySQL事件"},{name:"twitter:description",content:"MySQL5.1版本开始引进event概念，MySQL中的事件(event：时间触发器)是用于执行定时或周期性的任务，类似Linux中的crontab，\n> 但是后者只能精确到分钟，事件可以精确到秒。\n>\n> 通过单独或调用存储过程使用，在某一特定的时间点，触发相关的SQL语句或存储过程。\n>\n> 事件由一个特定的线程来管理的，也就是所谓的事件调度器，但是事件不能直接调用。"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/DBS/MySQL%E4%BA%8B%E4%BB%B6.html"},{property:"og:type",content:"article"},{property:"og:title",content:"MySQL事件"},{property:"og:description",content:"MySQL5.1版本开始引进event概念，MySQL中的事件(event：时间触发器)是用于执行定时或周期性的任务，类似Linux中的crontab，\n> 但是后者只能精确到分钟，事件可以精确到秒。\n>\n> 通过单独或调用存储过程使用，在某一特定的时间点，触发相关的SQL语句或存储过程。\n>\n> 事件由一个特定的线程来管理的，也就是所谓的事件调度器，但是事件不能直接调用。"},{property:"og:url",content:"https://bajins.com/DBS/MySQL%E4%BA%8B%E4%BB%B6.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"MySQL事件"},{itemprop:"description",content:"MySQL5.1版本开始引进event概念，MySQL中的事件(event：时间触发器)是用于执行定时或周期性的任务，类似Linux中的crontab，\n> 但是后者只能精确到分钟，事件可以精确到秒。\n>\n> 通过单独或调用存储过程使用，在某一特定的时间点，触发相关的SQL语句或存储过程。\n>\n> 事件由一个特定的线程来管理的，也就是所谓的事件调度器，但是事件不能直接调用。"}]},regularPath:"/DBS/MySQL%E4%BA%8B%E4%BB%B6.html",relativePath:"DBS/MySQL事件.md",key:"v-da2de522",path:"/DBS/MySQL%E4%BA%8B%E4%BB%B6.html",headers:[{level:2,title:"事件是什么",slug:"事件是什么"},{level:2,title:"查看事件调度器",slug:"查看事件调度器"},{level:2,title:"开启事件调度器",slug:"开启事件调度器"},{level:2,title:"查看事件",slug:"查看事件"},{level:2,title:"查看事件创建语句",slug:"查看事件创建语句"},{level:2,title:"创建事件",slug:"创建事件"},{level:3,title:"每隔一秒执行",slug:"每隔一秒执行"},{level:3,title:"每天凌晨1点执行",slug:"每天凌晨1点执行"},{level:3,title:"每隔一分钟执行",slug:"每隔一分钟执行"},{level:3,title:"指定时间范围内执行",slug:"指定时间范围内执行"},{level:3,title:"一小时后只执行一次",slug:"一小时后只执行一次"},{level:2,title:"修改事件",slug:"修改事件"},{level:2,title:"删除事件",slug:"删除事件"},{level:2,title:"开启事件",slug:"开启事件"},{level:2,title:"停止事件",slug:"停止事件"},{level:2,title:"启动定时器",slug:"启动定时器"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' MySQL事件 \n 事件是什么 查看事件调度器 开启事件调度器 查看事件 查看事件创建语句 创建事件 每隔一秒执行 每天凌晨1点执行 每隔一分钟执行 指定时间范围内执行 一小时后只执行一次 修改事件 删除事件 开启事件 停止事件 启动定时器 \n 事件是什么 \n \n MySQL5.1版本开始引进event概念，MySQL中的事件(event：时间触发器)是用于执行定时或周期性的任务，类似Linux中的 crontab ，\n但是后者只能精确到分钟，事件可以精确到秒。 \n 通过单独或调用存储过程使用，在某一特定的时间点，触发相关的SQL语句或存储过程。 \n 事件由一个特定的线程来管理的，也就是所谓的事件调度器，但是事件不能直接调用。 \n \n \n 整个服务器重启、断电会导致event事件恢复成默认 OFF 关闭状态，需要在 mysql.ini 文件中修改加入 event_scheduler = ON \n 查看事件调度器 \n \n MySQL中调度器 event_scheduler 负责调用事件，也就是由全局变量 event_scheduler 的状态决定，它默认是 OFF , 一般是 OFF 。 \n \n SHOW  VARIABLES  LIKE   \'%event_scheduler%\' ; \n 开启事件调度器 \n SET   GLOBAL  event_scheduler = 1 \n 查看事件 \n SHOW  EVENTS ; \n\n SELECT   *   FROM  information_schema . events ; \n SELECT   *   FROM  mysql . event ; \n 查看事件创建语句 \n SHOW   CREATE  EVENT event_name\n 创建事件 \n \n EVERY 后面可以跟可选的 STARTS 和 ENDS ，指定事件开始和结束时间，在这个时间段内，时间定时执行。\n STARTS 和 ENDS 可同时指定，或者只指定 STARTS ，或两者都不指定。 \n 每隔一秒执行 \n DELIMITER  $$\n\n CREATE  EVENT  ` executed_every_second ` \n\n -- 设置触发点 \n ON  SCHEDULE\n\t -- 使用EVERY关键字指定时间间隔，每隔一秒执行 \n\tEVERY  1   SECOND \n\n -- 可以设置这个事件是执行一次还是持久执行，默认为`NOT PRESERVE` \n -- 即默认的计划任务执行完毕后自动drop该事件 \n ON  COMPLETION PRESERVE \n -- 可是设置该事件创建后状态是否开启或关闭，默认为`ENABLE` \n ENABLE \n -- 可以给该事件加上注释，最大长度64个字节 \n COMMENT   "每隔一秒执行" \n DO \n\t BEGIN \n\t\t\n\t\t SELECT   *   FROM   USER   LIMIT   10 ; \n\t\t\n\t END $$\n\n DELIMITER   ; \n 每天凌晨1点执行 \n DELIMITER  $$\n\n CREATE  EVENT  ` 1_am_every_day ` \n\n -- 设置触发点 \n ON  SCHEDULE\n\t -- 使用EVERY关键字指定时间间隔，每天启动时间 \n\tEVERY  1   DAY  STARTS DATE_ADD ( DATE_ADD ( CURDATE ( ) ,   INTERVAL   1   DAY ) ,   INTERVAL   1   HOUR ) \n\n -- 可以设置这个事件是执行一次还是持久执行，默认为`NOT PRESERVE` \n -- 即默认的计划任务执行完毕后自动drop该事件 \n ON  COMPLETION PRESERVE \n -- 可是设置该事件创建后状态是否开启或关闭，默认为`ENABLE` \n ENABLE \n -- 可以给该事件加上注释，最大长度64个字节 \n COMMENT   "每天凌晨1点执行" \n DO \n\t BEGIN \n\t\t\n\t\t SELECT   *   FROM   USER   LIMIT   10 ; \n\t\t\n\t END $$\n\n DELIMITER   ; \n 每隔一分钟执行 \n DELIMITER  $$\n\n CREATE  EVENT  ` executed_every_minute ` \n\n -- 设置触发点 \n ON  SCHEDULE\n\t -- 使用EVERY关键字指定时间间隔，每隔一分钟执行 \n\tEVERY  1   MINUTE \n\n -- 可以设置这个事件是执行一次还是持久执行，默认为`NOT PRESERVE` \n -- 即默认的计划任务执行完毕后自动drop该事件 \n ON  COMPLETION PRESERVE \n -- 可是设置该事件创建后状态是否开启或关闭，默认为`ENABLE` \n ENABLE \n -- 可以给该事件加上注释，最大长度64个字节 \n COMMENT   "每隔一分钟执行" \n DO \n\t BEGIN \n\t\t\n\t\t SELECT   *   FROM   USER   LIMIT   10 ; \n\t\t\n\t END $$\n\n DELIMITER   ; \n 指定时间范围内执行 \n DELIMITER  $$\n\n CREATE  EVENT  ` 1_am_every_range ` \n\n -- 设置触发点 \n ON  SCHEDULE\n\t -- 使用EVERY关键字指定时间间隔，每隔一分钟执行 \n\tEVERY  1   MINUTE \n\t -- 使用STARTS关键字指定开始时间，当前时间一小时之后开始执行 \n\tSTARTS  CURRENT_TIMESTAMP   +   INTERVAL   1   HOUR \n\t -- 使用ENDS关键字指定结束时间，当前时间一个月后结束执行 \n\tENDS  CURRENT_TIMESTAMP   +   INTERVAL   1   MONTH \n\n -- 可以设置这个事件是执行一次还是持久执行，默认为`NOT PRESERVE` \n -- 即默认的计划任务执行完毕后自动drop该事件 \n ON  COMPLETION PRESERVE \n -- 可是设置该事件创建后状态是否开启或关闭，默认为`ENABLE` \n ENABLE \n -- 可以给该事件加上注释，最大长度64个字节 \n COMMENT   "每隔一分钟执行，指定开始时间和结束时间" \n DO \n\t BEGIN \n\t\t\n\t\t SELECT   *   FROM   USER   LIMIT   10 ; \n\t\t\n\t END $$\n\n DELIMITER   ; \n 一小时后只执行一次 \n DELIMITER  $$\n\n CREATE  EVENT  ` after_hour_execute_once ` \n\n -- 设置触发点 \n ON  SCHEDULE\n\t -- 使用AT关键字指定只执行一次的时间，一小时后只执行一次 \n\tAT  CURRENT_TIMESTAMP   +   INTERVAL   1   HOUR \n\n -- 可以设置这个事件是执行一次还是持久执行，默认为`NOT PRESERVE` \n -- 即默认的计划任务执行完毕后自动drop该事件 \n ON  COMPLETION PRESERVE \n -- 可是设置该事件创建后状态是否开启或关闭，默认为`ENABLE` \n ENABLE \n -- 可以给该事件加上注释，最大长度64个字节 \n COMMENT   "一小时后只执行一次" \n DO \n\t BEGIN \n\t\t\n\t\t SELECT   *   FROM   USER   LIMIT   10 ; \n\t\t\n\t END $$\n\n DELIMITER   ; \n 修改事件 \n ALTER  EVENT event_name\n   [ ON  SCHEDULE SCHEDULE ] \n   [ RENAME   TO  new_event_name ] \n   [ ON  COMPLETION  [ NOT ]  PRESERVE ] \n   [ COMMENT   \'comment\' ] \n   [ ENABLE   |   DISABLE ] \n   [ DO  sql_statement ] \n 删除事件 \n DROP  EVENT  [ IF   EXISTS ]  event_name\n 开启事件 \n ALTER  EVENT event_name  ENABLE ; \n 停止事件 \n ALTER  EVENT event_name  DISABLE ; \n 启动定时器 \n ALTER  EVENT event_remind_status  ON     \nCOMPLETION PRESERVE  ENABLE ;  \n \n ',createdTime:1761814324e3},{title:"MySQL备份恢复",frontmatter:{description:"热备份 https://github.com/percona/percona-xtrabackup\nhttps://github.com/blylei/frabit\n读取binlog https://github.com/zendesk/maxwell\nhttps://github.com/alibaba/canal",meta:[{name:"image",content:"https://bajins.com/images/MySQL_binlog.png"},{name:"twitter:title",content:"MySQL备份恢复"},{name:"twitter:description",content:"热备份 https://github.com/percona/percona-xtrabackup\nhttps://github.com/blylei/frabit\n读取binlog https://github.com/zendesk/maxwell\nhttps://github.com/alibaba/canal"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/MySQL_binlog.png"},{name:"twitter:url",content:"https://bajins.com/DBS/MySQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D.html"},{property:"og:type",content:"article"},{property:"og:title",content:"MySQL备份恢复"},{property:"og:description",content:"热备份 https://github.com/percona/percona-xtrabackup\nhttps://github.com/blylei/frabit\n读取binlog https://github.com/zendesk/maxwell\nhttps://github.com/alibaba/canal"},{property:"og:image",content:"https://bajins.com/images/MySQL_binlog.png"},{property:"og:url",content:"https://bajins.com/DBS/MySQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"MySQL备份恢复"},{itemprop:"description",content:"热备份 https://github.com/percona/percona-xtrabackup\nhttps://github.com/blylei/frabit\n读取binlog https://github.com/zendesk/maxwell\nhttps://github.com/alibaba/canal"},{itemprop:"image",content:"https://bajins.com/images/MySQL_binlog.png"}]},regularPath:"/DBS/MySQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D.html",relativePath:"DBS/MySQL备份恢复.md",key:"v-2001fb4e",path:"/DBS/MySQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"binlog2sql",slug:"binlog2sql"},{level:3,title:"MySQL必须设置参数",slug:"mysql必须设置参数"},{level:3,title:"user需要的最小权限集合",slug:"user需要的最小权限集合"},{level:3,title:"查看目前的binlog文件",slug:"查看目前的binlog文件"},{level:3,title:"定位误操作SQL的binlog位置",slug:"定位误操作sql的binlog位置"},{level:3,title:"生成sql文件回滚",slug:"生成sql文件回滚"},{level:3,title:"不生成sql文件回滚",slug:"不生成sql文件回滚"},{level:2,title:"mysqldump",slug:"mysqldump"},{level:3,title:"mysqldump导出",slug:"mysqldump导出"},{level:3,title:"mysqldump导入",slug:"mysqldump导入"},{level:3,title:"mysqldump两台主机同步",slug:"mysqldump两台主机同步"},{level:2,title:"source命令导入",slug:"source命令导入"},{level:2,title:"主从同步",slug:"主从同步"},{level:3,title:"配置主服务器",slug:"配置主服务器"},{level:3,title:"配置从服务器",slug:"配置从服务器"},{level:3,title:"如果出现以下错误",slug:"如果出现以下错误"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" MySQL备份恢复 \n Flag binlog2sql MySQL必须设置参数 user需要的最小权限集合 查看目前的binlog文件 定位误操作SQL的binlog位置 生成sql文件回滚 不生成sql文件回滚 mysqldump mysqldump导出 mysqldump导入 mysqldump两台主机同步 source命令导入 主从同步 配置主服务器 配置从服务器 如果出现以下错误 \n Flag \n \n 热备份  https://github.com/percona/percona-xtrabackup \n https://github.com/blylei/frabit \n 读取binlog  https://github.com/zendesk/maxwell \n https://github.com/alibaba/canal \n binlog2sql \n \n https://dev.mysql.com/doc/refman/8.0/en/mysqlbinlog.html \n \n \n 使用此方式之前一定是MySQL开启了bin-log的才可行，如果没有安装开源工具 binlog2sql 那么请安装。 \n binlog2sql是一款简单易用的binlog解析工具，其中一个功能就是生成回滚SQL。 \n \n \n https://github.com/danfengcao/binlog2sql \n https://github.com/Michaelsky0913/binlog2sql \n \n git  clone https://github.com/danfengcao/binlog2sql.git\n cd  binlog2sql/\npip  install   -r  requirements.txt\n MySQL必须设置参数 \n [ mysqld ] \nserver_id  =   1 \nlog_bin  =  /var/log/mysql/mysql-bin.log\nmax_binlog_size  =  1G\nbinlog_format  =  row\nbinlog_row_image  =  full\n user需要的最小权限集合 \n select ,  super / replication  client ,   replication  slave\n -- 建议授权 \n GRANT   SELECT ,   REPLICATION  SLAVE ,   REPLICATION  CLIENT  ON   * . *   TO  \n 查看目前的binlog文件 \n show  master logs ; \n \n \n 查询结果 \n \n \n \n \n Log_name \n File_size \n \n \n \n \n mysql-bin.000001 \n 177 \n \n \n mysql-bin.000002 \n 437 \n \n \n mysql-bin.000003 \n 685 \n \n \n mysql-bin.000004 \n 1702399 \n \n \n mysql-bin.000005 \n 963964 \n \n \n mysql-bin.000006 \n 13118637 \n \n \n mysql-bin.000007 \n 26765043 \n 定位误操作SQL的binlog位置 \n \n 可以看到最新的binlog文件是mysql-bin.000007，我们再定位误操作SQL的binlog位置 \n`binlog2sql.py`文件在`binlog2sql/binlog2sql/`文件夹下 \n如果命令最后不加时间可输出最近操作的SQL命令 \npython binlog2sql/binlog2sql.py  -h127.0.0.1  -P端口 -u账号 -p '密码'   \\ \n    -d数据库 -t表 --start-file = 'binlog文件'   \\ \n    --start-datetime = '之前误操作的SQL执行开始时间'   \\ \n    --stop-datetime = '之前误操作的SQL执行结束时间' \n \n \n 当程序跑完之后看最后一条数据最末尾： #start 5117865 end 13679060 time 2018-06-12 10:07:53 \n开始位置（start 5117865）和结束位置（end 13679060） \n 生成sql文件回滚 \n \n 生成 rollback.sql 文件，并检查回滚SQL是否正确 \n \n python binlog2sql/binlog2sql.py  -h127.0.0.1  -P端口 -u账号 -p '密码'   \\ \n    -d数据库 -t表 --start-file = 'binlog文件'  --start-position = 开始位置  \\ \n    --stop-position = 结束位置  -B   >  rollback.sql\n \n \n 查看当前文件夹下是否生成了rollback.sql文件,确认回滚SQL正确，如果有就执行回滚 \n \n mysql  -h127.0.0.1  -P端口 -u账号 -p '密码'   <  rollback.sql\n 不生成sql文件回滚 \n \n 不生成rollback.sql文件，执行命令后在输出中检查回滚SQL是否正确 \n \n python binlog2sql/binlog2sql.py  -h127.0.0.1  -P端口 -u账号 -p '密码'   \\ \n    -d数据库 -t表 --start-file = 'binlog文件'  --start-position = 开始位置  \\ \n    --stop-position = 结束位置  -B \n \n \n 确认回滚SQL正确，执行回滚语句。登录MySQL确认，数据回滚成功。 \n \n python binlog2sql/binlog2sql.py  -h127.0.0.1  -P端口 -u账号 -p '密码'   \\ \n    -d数据库 -t表 --start-file = 'binlog文件'  --start-position = 开始位置  \\ \n    --stop-position = 结束位置  -B   |  mysql  -h127.0.0.1  -P端口 -u账号 -p '密码' \n mysqldump \n \n https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html \n \n \n 如果是在本机上备份本机的数据库地址和端口可以不要，如果是在本机上备份其他主机上的数据库就需要地址和端口 \n \n \n MySQL备份并删除历史.sh \n MySQL同步远程数据库到本地.sh \n \n \n mysqldump 命令需要手动输入密码，所以一般不输入 -p 参数 \n \n \n mysqldump数据导出参数说明 \n mysqldump数据导出参数说明 \n \n 参数说明 \n \n -d  结构(--no-data:不导出任何数据，只导出数据库表结构) \n -t  数据(--no-create-info:只导出数据，而不添加CREATE TABLE 语句) \n -n  (--no-create-db:只导出数据，而不添加CREATE DATABASE 语句） \n -R  (--routines:导出存储过程以及自定义函数) \n -E  (--events:导出事件) \n --triggers  (默认导出触发器，使用--skip-triggers屏蔽导出) \n -B  (--databases:导出数据库列表，单个库时可省略） \n --tables  表列表（单个表时可省略）\n \n ①同时导出结构以及数据时可同时省略-d和-t \n ②同时不导出结构和数据可使用-ntd \n ③只导出存储过程和函数可使用-R -ntd \n ④导出所有(结构&数据&存储过程&函数&事件&触发器)使用-R -E(相当于①，省略了-d -t;触发器默认导出) \n ⑤只导出结构&函数&事件&触发器使用 -R -E -d \n \n \n --opt 等同于以下参数，该选项默认开启， 可以用--skip-opt禁用\n \n --add-drop-table \n --add-locks \n --create-options \n --quick \n --extended-insert \n --lock-tables \n --skip-set-charset \n --disable-keys \n --default-character-set=utf8 \n --hex-blob  使用十六进制符号转储二进制字符串列 \n --single-transaction \n --flush-logs \n --compress \n \n \n \n \n --opt 在创建表结构之前 会有 DROP TABLE IF EXISTS \n 原表在创建的时候指定了AUTO_INCREMENT，在使用了--opt 仍然和建表时候一样存在参数，在使用参数--skip-opt的时候，忽略了此参数AUTO_INCREMENT \n 在使用参数--opt的时候，创建表的类型，字符集等等都是默认参数ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;当使用了--skip-opt的时候，这些参数都给忽略了 \n 导出原表中的数据，--opt是一个insert多个value，在使用了--skip-opt的时候，是多个insert组成的； \n \n -- 查看字符编码的系统变量 \n show  variables  like   '%char%' ; \n -- 设置默认的字符集为utf8 \n set  character_set_database = utf8 ; \n mysqldump导出 \n \n Access denied; you need (at least one of) the SUPER privilege(s) for this operation \n只导出结构&函数&事件&触发器使用 \nmysqldump  -R   -E   -d  -h需要备份的主机地址 -P端口 -u用户名  -p  数据库名 --default-character-set = utf 8 >  /home/backup.sql\n只导出存储过程和函数可使用 \nmysqldump  -R   -ntd  -h需要备份的主机地址 -P端口 -u用户名  -p  数据库名 --default-character-set = utf 8 >  /home/backup.sql\n导出单个数据库中所有(结构&数据&存储过程&函数&事件&触发器)到sql文件 \nmysqldump  -R   -E  -h需要备份的主机地址 -P端口 -u用户名  -p  数据库名 --default-character-set = utf 8 >  /home/backup.sql\nmysqldump 备份并压缩sql文件 \nmysqldump  -R   -E  -h主机地址 -P端口 -u用户名  -p  数据库名 --default-character-set = utf8  |   gzip   >  /home/backup.sql.gz\n备份所有的数据库到一个sql文件 \nmysqldump  -R   -E  -h主机地址 -P端口 -u用户名  -p  --all-databases --default-character-set = utf 8 >  /home/all.sql\n从一个数据库导出到另一个数据库 \nmysqldump  -R   -E  -u用户名  -p  数据库名  |  mysql 新数据库名 -u用户名 -p密码\n \n \n 如果提示如下错误，执行 vi /etc/my.cnf \n \n \n mysqldump: [Warning] Using a password on the command line interface can be insecure \n[mysqldump] \n [ client ] \n查看mysql.scok位置 netstat -ln | grep mysql \n #socket = /tmp/mysql.scok \n default-character-set   =   utf8mb4 \n host   =   127.0.0.1 \n user   =   root \n password   =   ' 123 ' \n导出 \nmysqldump --defaults-extra-file = /etc/my.cnf 新数据库名  >  database.sql\n导入 \nmysql --defaults-extra-file = /etc/my.cnf 新数据库名  <  database.sql\n \n @ echo  off \n\n :: 存储sql脚本文件的目录 \n set   \"dirPath=D:\\mysql_backup\" \n :: 数据库名 \n set   \"databaseName=demo\" \n :: 设置时间变量 \n set   \"Ymd=%date:~0,4%%date:~5,2%%date:~8,2%\" \n\n :: 创建存储的文件夹 \n if   not   exist   %dirPath%   md   %dirPath% \n\n :: 执行备份操作 \n mysqldump   --opt   --user =root  --password =root  --host = 127 . 0 . 0 . 1   --protocol =tcp  ^ \n     --port = 3306   --default-character-set =utf8  --single-transaction =TRUE  ^ \n     --routines   --events   %databaseName%  >D:\\mysql_backup\\backup_demo_ %Ymd% .sql \n\n :: 从文件夹或树中选择要进行批处理的文件，删除两周前的备份数据 \n forfiles   /p   %dirPath%   /m  backup_*.sql  -d   -14   /c   \"cmd /c del /f @path\" \n \n Windows导出，Linux导入编码问题 \n mysqldump db –default-character-set = latin1  -r  utf8.dump\n把里面的 CHARSET=latin1 替换为 CHARSET=utf8，删掉其中的 SET NAMES latin1 \n sed   -e  s,CHARSET = latin1,CHARSET = utf8,g  <  utf8.dump  >  utf8.dump.edited\n导入 \nmysql  -uroot   -p  --default-character-set = utf8 db\n \n -- 设置数据库编码 \n SET  names utf8 ; \nSOURCE utf8 . dump . edited ; \n mysqldump导入 \n用mysqldump导入本地sql文件 \nmysqldump -h主机地址 -P端口 -u用户名 数据库名  <  /home/backup.sql\nmysql直接用压缩文件恢复 \ngunzip  <  backup.sql.gz  |  mysql -h主机地址 -P端口 -u用户名 -p密码 数据库名\nmysql从本地sql文件导入 \nmysql -h主机地址 -P端口 -u用户名 -p密码 数据库名  <  backupfile.sql\n mysqldump两台主机同步 \n mysqldump  -R   -E  -h导出的主机地址 -P端口 -u用户名  -p  数据库名  |  mysql -h导入的主机地址 -P端口 -u用户名 -p密码  -C  数据库名\n source命令导入 \n进入MySQL并指定数据库 \nuse 数据库名 ; \n导入数据（注意sql文件的路径） \n source  /home/backup.sql ; \n 主从同步 \n 配置主服务器 \n 在[mysqld]节点下按需添加 \n [mysqld]\n设置server_id，一般设置为IP,注意要唯一\nserver_id=100\n复制过滤：也就是指定数据库不用同步,多个之间用','号分割\nbinlog-ignore-db=mysql,information_schema,preformance_schema\n指定需要同步的二进制数据库\nbinlog-do-db=test\n开启二进制日志功能，可以随便取，最好有含义（关键就是这里了）\nlog-bin=edu-mysql-bin\n为每个session 分配的内存，在事务过程中用来存储二进制日志的缓存\nbinlog_cache_size=1M\n主从复制的格式（mixed,statement,row，默认格式是statement）\nbinlog_format=mixed\n二进制日志自动删除/过期的天数。默认值为0，表示不自动删除。\nexpire_logs_days=5\n跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。\n如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致\nslave_skip_errors=1062\n \n 创建数据同步用户 \n \n 这里主要是要授予用户REPLICATION SLAVE权限和REPLICATION CLIENT权限 \n \n CREATE   USER   IF   NOT   EXISTS   'slave' @'%'  IDENTIFIED  BY   '密码' ; \n GRANT   REPLICATION  SLAVE ,   REPLICATION  CLIENT  ON   * . *   TO   'slave' @'%' ; \nFLUSH  PRIVILEGES ; \n 配置从服务器 \n 在[mysqld]节点下按需添加 \n \n 从库中的 server-id 值一定不要跟主库的一样 \n \n [mysqld]\n设置server_id，一般设置为IP,注意要唯一\nserver_id=101\n复制过滤：也就是指定数据库不用同步,多个之间用','号分割\nbinlog-ignore-db=mysql,information_schema,preformance_schema\n指定需要同步的二进制数据库\nbinlog-do-db=test\n开启二进制日志功能，以备Slave作为其它Slave的Master时使用\nlog-bin=edu-mysql-slave1-bin\n为每个session 分配的内存，在事务过程中用来存储二进制日志的缓存\nbinlog_cache_size=1M\n主从复制的格式（mixed,statement,row，默认格式是statement）\nbinlog_format=mixed\n二进制日志自动删除/过期的天数。默认值为0，表示不自动删除。\nexpire_logs_days=5\n跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。\n如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致\nslave_skip_errors=1062\nrelay_log配置中继日志\nrelay_log=edu-mysql-relay-bin\nlog_slave_updates表示slave将复制事件写进自己的二进制日志\nlog_slave_updates=1\n防止改变数据(除了特殊的线程)\nread_only=1\n \n 先查询主服务器当前二进制log文件 \n SHOW  MASTER  STATUS ; \n \n \n 查询出来如下 \n \n \n \n \n File \n Position \n Binlog_Do_DB \n Binlog_Ignore_DB \n Executed_Gtid_Set \n \n \n \n \n mysql-bin.000025 \n 154 \n ichangg_im \n \n \n \n \n \n 进入从服务器MySQL执行以下命令 \n CHANGE MASTER  TO  MASTER_HOST = '主服务器IP' , MASTER_PORT = 3306 , MASTER_USER = '主服务器同步用户名' , MASTER_PASSWORD = '密码' , MASTER_LOG_FILE = '主MySQL二进制文件名' , MASTER_LOG_POS = Position字段中数据 , MASTER_CONNECT_RETRY = 30 ; \n \n \n MASTER_HOST='192.168.1.100'  #Master的IP地址 \n MASTER_USER='slave'  #用于同步数据的用户（在Master中授权的用户） \n MASTER_PASSWORD='123456'  #同步数据用户的密码 \n MASTER_PORT=3306  #Master数据库服务的端口 \n MASTER_LOG_FILE='edu-mysql-bin.000001'  #指定Slave从哪个日志文件开始读复制数据（Master上执行命令的结果的File字段） \n MASTER_LOG_POS=429  #从哪个POSITION号开始读（Master上执行命令的结果的Position字段） \n MASTER_CONNECT_RETRY=30  #当建立主从连接时，如果连接建立失败，间隔多久后重试。单位为秒，默认设置为60秒，同步延迟调优参数。 \n \n 查看主从同步状态 \n show  slave  status ; \n \n 开启复制 \n START  SLAVE ; \n 如果出现以下错误 \n \n ERROR 1872 (HY000): Slave failed to initialize relay log info structure from the repository \n \n \n 看样子是找不到中继日志的仓库，但是查看变量 relay log 的位置是设置了的 \n \n show  variables  like   'relay%' ; \n \n \n 重置复制信息 \n \n RESET MASTER ; \n \n \n 查看主从复制是否还有主从配置 \n \n SHOW  SLAVE  STATUS \\G\n \n \n 如果还有就执行以下命令清除所有 \n \n RESET SLAVE  ALL ; \n \n \n 再次开启复制 \n \n START  SLAVE ; \n \n \n 查看主从复制是否成功 \n \n SHOW  SLAVE  STATUS \\G\n \n Operation CREATE USER failed \n \n Error 'Operation CREATE USER failed for 'slave'@'%'' on query. Default database: ''. Query: \n \n 'CREATE USER 'slave'@'%' IDENTIFIED WITH 'mysql_native_password' AS '*040A65A51A0B047A826CDE05448536015D471E15'' \n \n \n \n 先执行以下命令 \n \n STOP SLAVE ; \nFLUSH  PRIVILEGES ; \n START  SLAVE ; \n \n \n 如果错误仍然存在，执行以下命令 \n \n STOP SLAVE ; \n DROP   USER   'slave' @'%' ; \n START  SLAVE ; \n \n ",createdTime:1761814324e3},{title:"MySQL存储过程",frontmatter:{description:"CREATE DEFINER=root@% PROCEDURE select_review ( IN gs BIGINT,IN rid BIGINT,OUT result VARCHAR(255))\nBEGIN",meta:[{name:"twitter:title",content:"MySQL存储过程"},{name:"twitter:description",content:"CREATE DEFINER=root@% PROCEDURE select_review ( IN gs BIGINT,IN rid BIGINT,OUT result VARCHAR(255))\nBEGIN"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/DBS/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html"},{property:"og:type",content:"article"},{property:"og:title",content:"MySQL存储过程"},{property:"og:description",content:"CREATE DEFINER=root@% PROCEDURE select_review ( IN gs BIGINT,IN rid BIGINT,OUT result VARCHAR(255))\nBEGIN"},{property:"og:url",content:"https://bajins.com/DBS/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"MySQL存储过程"},{itemprop:"description",content:"CREATE DEFINER=root@% PROCEDURE select_review ( IN gs BIGINT,IN rid BIGINT,OUT result VARCHAR(255))\nBEGIN"}]},regularPath:"/DBS/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html",relativePath:"DBS/MySQL存储过程.md",key:"v-2f3530c9",path:"/DBS/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html",headers:[{level:2,title:"创建游标存储过程",slug:"创建游标存储过程"},{level:3,title:"调用存储过程，查询返回结果",slug:"调用存储过程-查询返回结果"},{level:3,title:"多次调用存储过程，并拼接结果",slug:"多次调用存储过程-并拼接结果"},{level:2,title:"循环",slug:"循环"},{level:2,title:"异常处理",slug:"异常处理"},{level:2,title:"插入或更新upsert",slug:"插入或更新upsert"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" MySQL存储过程 \n 创建游标存储过程 调用存储过程，查询返回结果 多次调用存储过程，并拼接结果 循环 异常处理 插入或更新upsert \n 创建游标存储过程 \n -- 将语句的结束符号从分号;临时改为两个$$(可以是自定义) \n DELIMITER  $$\n USE   ` table_name ` $$\n -- 判断删除存储过程 \n DROP   PROCEDURE   IF   EXISTS  select_review$$\n -- IN输入参数 OUT输出参数 \n CREATE   DEFINER = ` root ` @`%`   PROCEDURE  select_review  (   IN  gs  BIGINT , IN  rid  BIGINT , OUT  result  VARCHAR ( 255 ) )  \n BEGIN \n\n\t DECLARE  _email  VARCHAR ( 32 ) ; \n\t DECLARE  i  INT ; \n\t DECLARE  r  VARCHAR ( 255 ) ; \n\t DECLARE  s  INT   DEFAULT   0 ; \n\t -- 遍历数据结束标志 \n\t DECLARE  done  INT   DEFAULT   FALSE ; \n\t -- 游标 \n\t DECLARE  r_name  CURSOR   FOR   ( SELECT  email  FROM  company c  JOIN  u_user u  ON  c . id = u . company_id  JOIN  u_user_role ur  ON  u . id = ur . uid  WHERE  ur . rid = rid  AND  c . id = gs ) ; \n\t -- 设定捕捉异常的结束标志 \n\t DECLARE   CONTINUE   HANDLER   FOR  SQLWARNING ,   NOT  FOUND ,  SQLEXCEPTION  SET  done  =   TRUE ; \n\t -- 统计循环条数并赋值给变量i \n\t -- 赋值多列使用：列名1 ,列名2 INTO 变量名1,变量名2 \n\t SELECT   COUNT ( nickname )   INTO  i  FROM  company c  JOIN  u_user u  ON  c . id = u . company_id  JOIN  u_user_role ur  ON  u . id = ur . uid  WHERE  ur . rid = rid  AND  c . id = gs ; \n\t\n\t -- 打开游标 \n\t OPEN  r_name ; \n\t -- 自定义循环体开始 \n\trLoop: LOOP \n\t\t -- 取值 赋值给变量，多个以,号分割 \n\t\t -- FETCH NEXT FROM r_name INTO _email,password1,name1; \n\t\t FETCH  r_name  INTO  _email ; \n\t\t\t\t\n\t\t SET  s = s + 1 ; -- 循环一次加1 \n\t\t IF ( i = 1 )   then \n\t\t\t SET  r = CONCAT ( '[{\"Push_MC\":\"' , _email , '\"}]' ) ; \n\t\t ELSEIF ( s = 1 )   THEN \n\t\t\t SET  r = CONCAT ( '[{\"Push_MC\":\"' , _email , '\"},' ) ; \n\t\t ELSEIF ( s = i )   THEN \n\t\t\t SET  r = CONCAT ( r , '{\"Push_MC\":\"' , _email , '\"}]' ) ; \n\t\t ELSE \n\t\t\t SET  r = CONCAT ( r , '{\"Push_MC\":\"' , _email , '\"},' ) ; \n\t\t END   IF ; \n\t\t\n\t\t -- 判断是否继续循环 \n\t\t -- IF done OR s=i THEN \n\t\t IF  s = i  THEN \n\t\t\t LEAVE  rLoop ; -- 结束循环 \n\t\t\t -- ITERATE rLoop;-- 跳过继续循环 \n\t\t END   IF ; \n\t\t\n\t END   LOOP  rLoop ; -- 结束自定义循环体 \n\t CLOSE  r_name ; -- 关闭游标 \n\t\t SET  result = r ; -- 返回结果 \n\t -- 自定义异常 \n\t -- SIGNAL SQLSTATE 'HY000' SET MESSAGE_TEXT = '错误！' ; \n -- 使用自定义结束标志结束 \n END $$\n -- 还原结束标志 \n DELIMITER   ; \n 调用存储过程，查询返回结果 \n -- 调用存储过程，@sum变量为返回结果 \n call  select_review ( 输入参数一 , 输入参数二 , @sum ) ; \n -- 查询返回结果 \n select   @sum  e ; \n 多次调用存储过程，并拼接结果 \n -- 调用存储过程，@sum变量为返回结果 \n call  select_review ( 输入参数一 , 输入参数二 , @sum ) ; \n -- 定义变量接收拼接返回结果 \n SET   @e = CONCAT ( '[' , @sum ) ; \n\n call  select_review ( 输入参数一 , 输入参数二 , @sum ) ; \n SET   @e = CONCAT ( @e , ',' , @sum ) ; \n\n SET   @declaration = ( SELECT  email  FROM  u_user  WHERE  id = 48 ) ; \n SET   @e = CONCAT ( @e , ',{\"Push_MC\":\"' , @declaration , '\"}]' ) ; \n\n -- 查询最终拼接结果 \n SELECT   @e  e ; \n 循环 \n \n LOOP 、 WHILE 、 REPEAT \n \n -- 将语句的结束符号从分号;临时改为两个$$(可以是自定义) \n DELIMITER  $$\n USE   ` table_name ` $$\n -- 判断删除存储过程 \n DROP   PROCEDURE   IF   EXISTS   ` add_year_month_info ` $$\n\n CREATE   DEFINER = ` yc ` @`%`   PROCEDURE   ` add_year_month_info ` ( ) \n BEGIN \n\t\t /*\n\t\tCALL add_year_month_info()\n\t\t*/ \n\t\t\n\t\t -- 统计循环次数变量 \n\t\t DECLARE  i  INT   DEFAULT   1 ; \n\t\t -- 需要循环次数变量 \n\t\t DECLARE  a  INT   DEFAULT   12 ; \n\t\t -- 设定捕捉异常的结束标志 \n\t\t -- DECLARE CONTINUE HANDLER FOR SQLWARNING, NOT FOUND, SQLEXCEPTION SET done = TRUE; \n\t\t\n\t\t -- 自定义LOOP循环体开始 \n\t\trLoop: LOOP \n\t\t\t -- 判断是否继续循环 \n\t\t\t IF   ( i > a )   THEN \n\t\t\t\t -- 结束循环，意思同boeak \n\t\t\t\t LEAVE  rLoop ; \n\t\t\t\t -- 跳过继续循环 \n\t\t\t\t -- ITERATE rLoop; \n\t\t\t END   IF ; \n\t\t\t -- 循环一次加1 \n\t\t\t SET  i = i + 1 ; \n\t\t\t\n\t\t\t SELECT   *   FROM   USER   WHERE  id = i ; \n\t\t\t\n\t\t -- 结束自定义循环体 \n\t\t END   LOOP  rLoop ; \n\t\t\n\t\t -- 恢复初始值 \n\t\t SET  i = 1 ; \n\t\t\n\t\t -- WHILE循环开始 \n\t\t WHILE  i <= a  DO \n\t\t\t SET  i = i + 1 ; \n\t\t\t\n\t\t\t SELECT   *   FROM   USER   WHERE  id = i ; \n\t\t\t\n\t\t -- 循环结束 \n\t\t END   WHILE ; \n\t\t\n\t\t -- 恢复初始值 \n\t\t SET  i = 1 ; \n\t\t\n\t\t -- REPEAT循环开始 \n\t\t REPEAT \n\t\t\t SET  i = i + 1 ; \n\t\t\t\n\t\t\t SELECT   *   FROM   USER   WHERE  id = i ; \n\t\t\t\n\t\t -- 循环结束 \n\t\tUNTIL i > a  END   REPEAT ; \n\t -- 使用自定义结束标志结束 \n\t END $$\n\n DELIMITER   ; \n 异常处理 \n DELIMITER  $$\n -- 判断删除存储过程 \n DROP   PROCEDURE   IF   EXISTS  err ; \n CREATE   PROCEDURE  err ( )  \n BEGIN \n\t DECLARE  code  VARCHAR ( 5 )   DEFAULT   '00000' ; \n\t DECLARE  msg  TEXT ; \n\t DECLARE  errno  INT ; \n\t\n\t -- EXIT：发生错误时退出当前代码块 \n\t -- DECLARE EXIT HANDLER FOR SQLEXCEPTION,SQLWARNING,NOT FOUND \n\t\n\t /*CONTINUE: 发送错误时继续执行后续代码\n\tSQLWARNING是对所有以01开头的SQLSTATE代码的速记\n\tNOT FOUND是对所有以02开头的SQLSTATE代码的速记\n\tSQLEXCEPTION是对所有没有被SQLWARNING或NOT FOUND捕获的SQLSTATE代码的速记*/ \n\t DECLARE   CONTINUE    HANDLER   FOR  SQLEXCEPTION , SQLWARNING , NOT  FOUND\n\t\n\t BEGIN   -- 捕获到异常时执行的代码块 \n\t -- 赋值错误代码给code变量，赋值错误信息给msg变量 \n\tGET DIAGNOSTICS CONDITION  1  code  =  RETURNED_SQLSTATE , errno  =  MYSQL_ERRNO ,  msg  =  MESSAGE_TEXT ; \n\t -- 保存错误信息到日志表中 \n\t -- INSERT INTO sql_log(errno,code,description,create_time,message) VALUES(errno,code,'存储过程：err',NOW(),msg); \n\t\n\t SELECT  CONCAT ( \"ERROR \" ,  errno , '[' ,  code ,   '] ' ,  msg )  sqlerrm ; \n\t\t\n\t END ; \n\t SELECT   *   FROM  a ; \n\t\n END  $$\n DELIMITER ; \n \n CALL  err ( ) ; \n 插入或更新upsert \n delimiter  $\n CREATE   PROCEDURE  merge_a_to_b  ( )   BEGIN \n -- 定义需要插入从a表插入b表的过程变量 \n DECLARE  _ID  VARCHAR   ( 16 ) ; \n DECLARE  _NAME  VARCHAR   ( 16 ) ; \n -- 游标遍历数据结束标志 \n DECLARE  done  INT   DEFAULT   FALSE ; \n -- 游标指向a表结果集第一条-1位置 \n DECLARE  cur_account  CURSOR   FOR   SELECT  ID ,  NAME  FROM  test_a ; \n -- 游标指向a表结果集最后一条加1位置 设置结束标志 \n DECLARE   CONTINUE   HANDLER   FOR   NOT  FOUND   SET  done  =   TRUE ; \n -- 打开游标 \n OPEN  cur_account ; \n -- 遍历游标 \nread_loop :\n LOOP \n --  取值a表当前位置数据到临时变量 \n\t FETCH   NEXT   FROM  cur_account  INTO  _ID , _NAME ; \n\n -- 如果取值结束 跳出循环 \n IF  done  THEN   LEAVE  read_loop ;  \n END   IF ; \n\n -- 当前数据做 对比 如果b表存在则更新时间 不存在则插入 \n IF   NOT   EXISTS   (   SELECT   1   FROM  TEST_B  WHERE  ID  =  _ID  AND  NAME = _NAME  )  \n\t THEN \n\t\t INSERT   INTO  TEST_B  ( ID ,  NAME , operatime )   VALUES   ( _ID , _NAME , now ( ) ) ; \n\t ELSE  \n\t\t UPDATE  TEST_B   set  operatime  =   now ( )   WHERE  ID  =  _ID  AND  NAME = _NAME ; \n END   IF ; \n\n END   LOOP ; \n CLOSE  cur_account ; \n\n END  $\n \n ",createdTime:1761814324e3},{title:"MySQL安装配置",frontmatter:{description:"https://github.com/mysql\nhttps://dev.mysql.com/downloads",meta:[{name:"image",content:"https://bajins.com/images/MySQL-glibc%E4%B8%8B%E8%BD%BD.png"},{name:"twitter:title",content:"MySQL安装配置"},{name:"twitter:description",content:"https://github.com/mysql\nhttps://dev.mysql.com/downloads"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/MySQL-glibc%E4%B8%8B%E8%BD%BD.png"},{name:"twitter:url",content:"https://bajins.com/DBS/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html"},{property:"og:type",content:"article"},{property:"og:title",content:"MySQL安装配置"},{property:"og:description",content:"https://github.com/mysql\nhttps://dev.mysql.com/downloads"},{property:"og:image",content:"https://bajins.com/images/MySQL-glibc%E4%B8%8B%E8%BD%BD.png"},{property:"og:url",content:"https://bajins.com/DBS/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"MySQL安装配置"},{itemprop:"description",content:"https://github.com/mysql\nhttps://dev.mysql.com/downloads"},{itemprop:"image",content:"https://bajins.com/images/MySQL-glibc%E4%B8%8B%E8%BD%BD.png"}]},regularPath:"/DBS/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html",relativePath:"DBS/MySQL安装配置.md",key:"v-636845c8",path:"/DBS/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"Windows版安装",slug:"windows版安装"},{level:2,title:"CentOS安装",slug:"centos安装"},{level:3,title:"yum安装",slug:"yum安装"},{level:3,title:"编译安装",slug:"编译安装"},{level:2,title:"配置",slug:"配置"},{level:3,title:"yum安装配置",slug:"yum安装配置"},{level:3,title:"宝塔面板安装配置",slug:"宝塔面板安装配置"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' MySQL安装配置 \n Flag Windows版安装 CentOS安装 yum安装 编译安装 配置 yum安装配置 宝塔面板安装配置 \n Flag \n \n https://github.com/mysql \n https://dev.mysql.com/downloads \n \n \n 如何选择适合的 MySQL Connector/J 版本 \n MySQL JDBC驱动版本与数据库版本的对应关系及注意事项 \n mysql-connector-java与mysql以及JDK的对应版本 \n 如何在 Ubuntu 20.04 上安装 MySQL \n ubuntu20 使用命令安装 mysql \n ubuntu20 安装和配置mysql8.0.23 \n ubuntu20安装mysql8 \n ubuntu20.04安装mysql8.0 \n \n \n 在MySQL 8.0上， auth_socket 默认情况下，root用户通过插件进行身份验证。该auth_socket插件对localhost通过Unix套接字文件\n从进行连接的用户进行身份验证。这意味着您不能通过提供密码来以root用户身份进行身份验证。 \n Windows版安装 \n \n 这里是介绍免安装版的Mysql \n \n \n 安装服务： mysqld --install  如果执行错误需要安装C++运行库 \n 初始化： mysqld --initialize --console  会产生一个随机密码\n \n mysqld –initialize-insecure  初始化数据库，并设置默认root密码为空 \n mysqladmin -u root password 密码";  创建root用户的密码 \n \n \n 开启服务： net start mysql \n 关闭服务： net stop mysql \n 登录mysql： mysql -u root -p \n 修改密码： alter user \'root\'@\'localhost\' identified by \'密码\'; \n 标记删除mysql服务： sc delete mysql \n CentOS安装 \n yum安装 \n \n https://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/ \n https://blog.imzhengfei.com/centos-7-an-zhuang-pei-zhi-mysql/ \n \n \n 首先 CentOS7 默认已经不支持 mysql ，因为收费了你懂得，所以内部集成了 mariadb ，\n而安装 mysql 的话会和 mariadb 的文件冲突，所以需要先卸载掉 mariadb ，以下为卸载 mariadb ，安装 mysql 的步骤。 \n \n 卸载 \n查看软件包 \n rpm   -qa   |   grep   -i   "mariadb\\|mysql" \n--nodeps强制卸载 \n rpm   -e   --nodeps  mariadb-libs-5.5.56-2.el7.x86_64\n检测系统是否存在mysql \nyum list installed  |   grep  mysql\n删除mysql依赖项 \nyum remove  -y  mysql mysql-server mysql-libs mysql-server\n \n \n 查找残留目录 \n \n whereis  mysql\n \n 安装依赖 \n yum  -y   install  libaio glibc\n \n 下载yum源 \nMySQL 8.0 \n wget  https://repo.mysql.com//mysql80-community-release-el7-1.noarch.rpm\n \n 安装yum源 \n yum  -y  localinstall mysql80-community-release-el7-1.noarch.rpm\n \n 查看所有版本 \n yum repolist all  |   grep  mysql\n \n \n 可以看到这里默认启用了 MySQL 8.0 Community Server ，而我们需要安装的是 MySQL 5.7 Community Server \n \n 修改源设置 \n vi  /etc/yum.repos.d/mysql-community.repo\n \n \n 找到mysql57-community节点 \n \n \n 将 enabled=0 改成 enabled=1 \n \n [ mysql57-community ] \n name = MySQL  5.7  Community Server\n baseurl = http://repo.mysql.com/yum/mysql-5.7-community/el/7/ $basearch /\n enabled = 0 \n gpgcheck = 1 \n gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\n \n \n 找到 mysql80-community 节点 \n \n \n 将 enabled=1 改成 enabled=0 \n \n [ mysql80-community ] \n name = MySQL  8.0  Community Server\n baseurl = http://repo.mysql.com/yum/mysql-8.0-community/el/7/ $basearch /\n enabled = 1 \n gpgcheck = 1 \n \n \n 或者使用命令 \n禁用MySQL版本 \nyum-config-manager  --disable  mysql80-community\n启用MySQL版本 \nyum-config-manager  --enable  mysql57-community\n \n 查看默认启用版本 \n yum repolist enabled  |   grep  mysql\n \n 安装 \n yum  -y   install  mysql-community-server\n \n 查看安装版本 \n mysqld  -V \n 编译安装 \n 下载 \n \n https://dev.mysql.com/downloads/mysql/5.7.html#downloads \n \n \n 解压 \n \n 建议：不要安装到其它目录，否则数据库初始化的时候会报 cannot change dir 的错 \n \n tar  zxvf mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz  -C  /usr/local/mysql\n重命名 \n mv  mysql-5.7.22-linux-glibc2.12-x86_64 mysql\n \n 创建用户组 \n group  add  mysql\n \n 创建用户 \n user  add   -r   -g  mysql mysql\n \n \n \n 为了安全性，给mysql数据库创建专有用户，该用户只能访问mysql目录，不能访问系统其它目录 \n \n \n 另外不建议直接用root初始化mysql，否则连接mysql时会报错： \n \n \n \n [ERROR] Fatal error: Please read "Security" section of the manual to find out how to run mysqld as root! \n \n 创建data目录 \n cd  /usr/local/mysql\n mkdir  data\n \n 指定用户和用户组 \n cd  /usr/local\n chown   -R  mysql mysql/\n chgrp   -R  mysql mysql/\n \n \n -R 包含目录下所有和目录和文件 \n \n 初始化 \n cd  /usr/local/mysql/bin\n\n./mysqld  --initialize   --user = mysql  \\ \n --basedir = /usr/local/mysql/  \\ \n --datadir = /usr/local/mysql/data/  \\ \n --lc_messages_dir = /usr/local/mysql/share  \\ \n --lc_messages = en_US\n \n \n 记住生成的临时密码,如果忘记密码或者想重新初始化，可以先将 mysql/data 目录中文件删除，然后再执行初始化命令 \n \n 启动 \n cd  /usr/local/mysql/bin\n启动 \n./mysqld_safe  --user = mysql  & \n \n 设为开机启动 \n cd  /usr/local/mysql/support-files/\n cp  mysql.server /etc/init.d/mysql\n vi  /etc/init.d/mysql\n \n \n 将mysql目录填上 \n \n basedir = /usr/local/mysql/\n datadir = /usr/local/mysql/data/\n \n 授权 \n chmod  +x /etc/init.d/mysql\n \n 添加开机启动 \n chkconfig   --add  mysql\n \n service启动 \n重启服务 \n service  mysql restart\n停止服务 \n service  mysql stop\n启动服务 \n service  mysql start\n查看服务 \n service  mysql status\n 配置 \n \n 5.7动态参数  5.7 Dynamic System Variables \n 8.0动态参数  8.0 Dynamic System Variables \n \n https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html \n set persist  修改并持久化动态参数 \n set persist_only  持久化静态参数 \n \n \n 服务器系统变量 - 官网 \n \n \n 从5.7.17后mysql就没有默认的 my_default.cnf 文件，需要手动创建 \n \n \n windows在mysql目录下创建一个ini或cnf配置文件 \n \n vi  /etc/my.cnf\n \n \n 按 i 后输入以下内容 \n \n [mysqld]\nsql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES \n一般配置选项\nbasedir = /usr/local/mysql/\ndatadir = /usr/local/mysql/data\nport = 3306\ncharacter-set-server = utf8\nexplicit_defaults_for_timestamp = true\nsocket = /var/run/mysqld/mysqld.sock\n0：区分大小写，1：不区分大小写\nlower_case_table_names =1\n\n#下面是可选项，要不要都行，如果出现启动错误，则全部注释掉，\n#保留最基本的配置选项，然后尝试添加某些配置项后启动，检测配置项是否有误\nback_log = 300\nmax_connections = 3000\nmax_connect_errors = 50\ntable_open_cache = 4096\nmax_allowed_packet = 32M\n#binlog_cache_size = 4M\n\nmax_heap_table_size = 128M\nread_rnd_buffer_size = 16M\nsort_buffer_size = 16M\njoin_buffer_size = 16M\nthread_cache_size = 16\nquery_cache_size = 128M\nquery_cache_limit = 4M\nft_min_word_len = 8\n默认开启事件调度器ON或者是1\nevent_scheduler=ON\nthread_stack = 512K\n#默认是REPEATABLE-READ，改成读已提交\ntransaction-isolation=READ-COMMITTED\n#永久设置手动提交事务\n#autocommit=0\ntmp_table_size = 128M\n#log-bin=mysql-bin\nlong_query_time = 6\n\nserver_id=1\n\ninnodb_buffer_pool_size = 1G\ninnodb_thread_concurrency = 16\ninnodb_log_buffer_size = 16M\n\ninnodb_log_file_size = 512M\ninnodb_log_files_in_group = 3\ninnodb_max_dirty_pages_pct = 90\ninnodb_lock_wait_timeout = 120\ninnodb_file_per_table = on\n\n[mysqldump]\nquick\nmax_allowed_packet = 32M\n\n[mysql]\nno-auto-rehash\ndefault-character-set=utf8\nsafe-updates\n\n[myisamchk]\nkey_buffer = 16M\nsort_buffer_size = 16M\nread_buffer = 8M\nwrite_buffer = 8M\n\n[mysqlhotcopy]\ninteractive-timeout\n\n[mysqld_safe]\nopen-files-limit = 8192\n yum安装配置 \n [client]\n#password   = your_password\nport        = 3306\nsocket      = /var/lib/mysql/mysql.sock\n\n[mysqld]\nport        = 3306\nsocket      = /var/lib/mysql/mysql.sock\ndatadir = /var/lib/mysql\nsymbolic-links= 0\nlog-error= /var/log/mysqld.log\npid-file= /var/run/mysqld/mysqld.pid\nskip-external-locking\nperformance_schema_max_table_instances=400\ntable_definition_cache=400\nkey_buffer_size = 32M\nmax_allowed_packet = 100G\ntable_open_cache = 128\nsort_buffer_size = 768K\nnet_buffer_length = 8K\nread_buffer_size = 768K\nread_rnd_buffer_size = 512K\nmyisam_sort_buffer_size = 8M\nthread_cache_size = 16\nquery_cache_size = 16M\ntmp_table_size = 32M\nsql-mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\n\nexplicit_defaults_for_timestamp = true\n#skip-networking\nmax_connections = 500\nmax_connect_errors = 100\nopen_files_limit = 65535\n0：区分大小写，1：不区分大小写\nlower_case_table_names =1\n默认开启事件调度器ON或者是1\nevent_scheduler=ON\n\nthread_stack = 512K\n#默认是REPEATABLE-READ，改成读已提交\ntransaction-isolation=READ-COMMITTED\n#永久设置手动提交事务\n#autocommit=0\ntmp_table_size = 128M\n#注释掉之后，会关闭binlog日志\nlog-bin=mysql-bin\n#注释掉之后，会关闭binlog日志\nbinlog_format=mixed\n数据库ID号,为1时表示为Master,其中master_id必须为1到232–1\n之间的一个正整数值，主从server-id不能一样;\nserver-id = 1\n#自动删除5天前的日志。默认值为0，表示从不删除。\nexpire_logs_days = 5\nslow_query_log=1\nslow-query-log-file=/var/lib/mysql/mysql-slow.log\nlong_query_time=3\n#log_queries_not_using_indexes=on\nMySQL5.7.11拥有，默认值为keyring_file，\nInnoDB表空间在初始化InnoDB之前需要此插件来加密，\nMySQL5.7.12及以后此参数默认为空\n#early-plugin-load = ""\n\n#loose-innodb-trx=0\n#loose-innodb-locks=0\n#loose-innodb-lock-waits=0\n#loose-innodb-cmp=0\n#loose-innodb-cmp-per-index=0\n#loose-innodb-cmp-per-index-reset=0\n#loose-innodb-cmp-reset=0\n#loose-innodb-cmpmem=0\n#loose-innodb-cmpmem-reset=0\n#loose-innodb-buffer-page=0\n#loose-innodb-buffer-page-lru=0\n#loose-innodb-buffer-pool-stats=0\n#loose-innodb-metrics=0\n#loose-innodb-ft-default-stopword=0\n#loose-innodb-ft-inserted=0\n#loose-innodb-ft-deleted=0\n#loose-innodb-ft-being-deleted=0\n#loose-innodb-ft-config=0\n#loose-innodb-ft-index-cache=0\n#loose-innodb-ft-index-table=0\n#loose-innodb-sys-tables=0\n#loose-innodb-sys-tablestats=0\n#loose-innodb-sys-indexes=0\n#loose-innodb-sys-columns=0\n#loose-innodb-sys-fields=0\n#loose-innodb-sys-foreign=0\n#loose-innodb-sys-foreign-cols=0\n\ndefault_storage_engine = InnoDB\ninnodb_data_home_dir = /var/lib/mysql\ninnodb_data_file_path = ibdata1:10M:autoextend\ninnodb_log_group_home_dir = /var/lib/mysql\ninnodb_buffer_pool_size = 128M\ninnodb_log_file_size = 64M\ninnodb_log_buffer_size = 16M\ninnodb_flush_log_at_trx_commit = 1\ninnodb_lock_wait_timeout = 120\ninnodb_max_dirty_pages_pct = 90\ninnodb_read_io_threads = 3\ninnodb_write_io_threads = 3\n\n[mysqldump]\nquick\nmax_allowed_packet = 16M\n\n[mysql]\nno-auto-rehash\n\n[myisamchk]\nkey_buffer_size = 32M\nsort_buffer_size = 768K\nread_buffer = 2M\nwrite_buffer = 2M\n\n[mysqlhotcopy]\ninteractive-timeout\n 宝塔面板安装配置 \n [client]\n#password   = your_password\nport        = 3306\nsocket      = /tmp/mysql.sock\n\n[mysqld]\nport        = 3306\nsocket      = /tmp/mysql.sock\ndatadir = /usr/local/mysql/data\nskip-external-locking\nperformance_schema_max_table_instances=400\ntable_definition_cache=400\nkey_buffer_size = 32M\nmax_allowed_packet = 100G\ntable_open_cache = 128\nsort_buffer_size = 768K\nnet_buffer_length = 8K\nread_buffer_size = 768K\nread_rnd_buffer_size = 512K\nmyisam_sort_buffer_size = 8M\nthread_cache_size = 16\nquery_cache_size = 16M\ntmp_table_size = 32M\nsql-mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\n\nexplicit_defaults_for_timestamp = true\n#skip-networking\nmax_connections = 500\nmax_connect_errors = 100\nopen_files_limit = 65535\n0：区分大小写，1：不区分大小写\nlower_case_table_names =1\n默认开启事件调度器ON或者是1\nevent_scheduler=ON\n\nthread_stack = 512K\n#默认是REPEATABLE-READ，改成读已提交\ntransaction-isolation=READ-COMMITTED\n#永久设置手动提交事务\n#autocommit=0\ntmp_table_size = 128M\n#注释掉之后，会关闭binlog日志\nlog-bin=mysql-bin\n#注释掉之后，会关闭binlog日志\nbinlog_format=mixed\nserver-id = 1\n#自动删除5天前的日志。默认值为0，表示从不删除。\nexpire_logs_days = 5\nslow_query_log=1\nslow-query-log-file=/usr/local/mysql/data/mysql-slow.log\nlong_query_time=3\n#log_queries_not_using_indexes=on\nMySQL5.7.11拥有，默认值为keyring_file，\nInnoDB表空间在初始化InnoDB之前需要此插件来加密，\nMySQL5.7.12及以后此参数默认为空\n#early-plugin-load = ""\n\n#loose-innodb-trx=0\n#loose-innodb-locks=0\n#loose-innodb-lock-waits=0\n#loose-innodb-cmp=0\n#loose-innodb-cmp-per-index=0\n#loose-innodb-cmp-per-index-reset=0\n#loose-innodb-cmp-reset=0\n#loose-innodb-cmpmem=0\n#loose-innodb-cmpmem-reset=0\n#loose-innodb-buffer-page=0\n#loose-innodb-buffer-page-lru=0\n#loose-innodb-buffer-pool-stats=0\n#loose-innodb-metrics=0\n#loose-innodb-ft-default-stopword=0\n#loose-innodb-ft-inserted=0\n#loose-innodb-ft-deleted=0\n#loose-innodb-ft-being-deleted=0\n#loose-innodb-ft-config=0\n#loose-innodb-ft-index-cache=0\n#loose-innodb-ft-index-table=0\n#loose-innodb-sys-tables=0\n#loose-innodb-sys-tablestats=0\n#loose-innodb-sys-indexes=0\n#loose-innodb-sys-columns=0\n#loose-innodb-sys-fields=0\n#loose-innodb-sys-foreign=0\n#loose-innodb-sys-foreign-cols=0\n\ndefault_storage_engine = InnoDB\ninnodb_data_home_dir = /usr/local/mysql/data\ninnodb_data_file_path = ibdata1:10M:autoextend\ninnodb_log_group_home_dir = /usr/local/mysql/data\ninnodb_buffer_pool_size = 128M\ninnodb_log_file_size = 64M\ninnodb_log_buffer_size = 16M\ninnodb_flush_log_at_trx_commit = 1\ninnodb_lock_wait_timeout = 120\ninnodb_max_dirty_pages_pct = 90\ninnodb_read_io_threads = 3\ninnodb_write_io_threads = 3\n\n[mysqldump]\nquick\nmax_allowed_packet = 16M\n\n[mysql]\nno-auto-rehash\n\n[myisamchk]\nkey_buffer_size = 32M\nsort_buffer_size = 768K\nread_buffer = 2M\nwrite_buffer = 2M\n\n[mysqlhotcopy]\ninteractive-timeout\n \n \n 按 ESC 后输入 :wq 退出 \n \n',createdTime:1761814324e3},{title:"MySQL",frontmatter:{description:"https://github.com/guodongxiaren/MySQL-docs\nhttps://github.com/phpmyadmin/phpmyadmin\nhttps://github.com/vrana/adminer\n备份并上传对象存储 https://github.com/iKeepLearn/db-back-tool\n如果是MySQL引起的CPU消耗过大，你会如何优化？\n全文搜索 https://github.com/mengzhuo/sqlalchemy-fulltext-search\nMySQL系列——MySQL实现序列（Sequence）效果\nMySQL索引数据结构入门",meta:[{name:"image",content:"https://bajins.com/images/sql执行顺序.png"},{name:"twitter:title",content:"MySQL"},{name:"twitter:description",content:"https://github.com/guodongxiaren/MySQL-docs\nhttps://github.com/phpmyadmin/phpmyadmin\nhttps://github.com/vrana/adminer\n备份并上传对象存储 https://github.com/iKeepLearn/db-back-tool\n如果是MySQL引起的CPU消耗过大，你会如何优化？\n全文搜索 https://github.com/mengzhuo/sqlalchemy-fulltext-search\nMySQL系列——MySQL实现序列（Sequence）效果\nMySQL索引数据结构入门"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/sql执行顺序.png"},{name:"twitter:url",content:"https://bajins.com/DBS/MySQL.html"},{property:"og:type",content:"article"},{property:"og:title",content:"MySQL"},{property:"og:description",content:"https://github.com/guodongxiaren/MySQL-docs\nhttps://github.com/phpmyadmin/phpmyadmin\nhttps://github.com/vrana/adminer\n备份并上传对象存储 https://github.com/iKeepLearn/db-back-tool\n如果是MySQL引起的CPU消耗过大，你会如何优化？\n全文搜索 https://github.com/mengzhuo/sqlalchemy-fulltext-search\nMySQL系列——MySQL实现序列（Sequence）效果\nMySQL索引数据结构入门"},{property:"og:image",content:"https://bajins.com/images/sql执行顺序.png"},{property:"og:url",content:"https://bajins.com/DBS/MySQL.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"MySQL"},{itemprop:"description",content:"https://github.com/guodongxiaren/MySQL-docs\nhttps://github.com/phpmyadmin/phpmyadmin\nhttps://github.com/vrana/adminer\n备份并上传对象存储 https://github.com/iKeepLearn/db-back-tool\n如果是MySQL引起的CPU消耗过大，你会如何优化？\n全文搜索 https://github.com/mengzhuo/sqlalchemy-fulltext-search\nMySQL系列——MySQL实现序列（Sequence）效果\nMySQL索引数据结构入门"},{itemprop:"image",content:"https://bajins.com/images/sql执行顺序.png"}]},regularPath:"/DBS/MySQL.html",relativePath:"DBS/MySQL.md",key:"v-f7d9cd26",path:"/DBS/MySQL.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"索引",slug:"索引"},{level:2,title:"常用语句",slug:"常用语句"},{level:3,title:"命令行",slug:"命令行"},{level:3,title:"随机取值",slug:"随机取值"},{level:3,title:"随机插入",slug:"随机插入"},{level:3,title:"查询分组中某字段最大值",slug:"查询分组中某字段最大值"},{level:3,title:"删除重复值",slug:"删除重复值"},{level:3,title:"查询数据库中的存储过程",slug:"查询数据库中的存储过程"},{level:3,title:"事务隔离级别修改",slug:"事务隔离级别修改"},{level:2,title:"数据库信息",slug:"数据库信息"},{level:3,title:"查看数据库详细信息",slug:"查看数据库详细信息"},{level:3,title:"查看所有数据库信息",slug:"查看所有数据库信息"},{level:3,title:"查看一个数据库占用空间的大小",slug:"查看一个数据库占用空间的大小"},{level:3,title:"查看一个表占用空间的大小",slug:"查看一个表占用空间的大小"},{level:2,title:"时间函数",slug:"时间函数"},{level:3,title:"获得当前日期",slug:"获得当前日期"},{level:3,title:"获得当前时间time函数",slug:"获得当前时间time函数"},{level:3,title:"获得当前UTC日期时间函数",slug:"获得当前utc日期时间函数"},{level:3,title:"格式化日期",slug:"格式化日期"},{level:3,title:"生成18位uuid加14位精确到秒的时间",slug:"生成18位uuid加14位精确到秒的时间"},{level:3,title:"日期增加或者减去一个时间间隔",slug:"日期增加或者减去一个时间间隔"},{level:3,title:"日期时间相减",slug:"日期时间相减"},{level:3,title:"时间戳",slug:"时间戳"},{level:3,title:"日期时间选取",slug:"日期时间选取"},{level:3,title:"返回星期和月份名称",slug:"返回星期和月份名称"},{level:2,title:"用户管理",slug:"用户管理"},{level:3,title:"查看授权",slug:"查看授权"},{level:3,title:"创建用户并授权",slug:"创建用户并授权"},{level:3,title:"撤销用户权限",slug:"撤销用户权限"},{level:3,title:"删除账户及权限",slug:"删除账户及权限"},{level:2,title:"安装后修改密码",slug:"安装后修改密码"},{level:3,title:"使用默认密码进入修改密码",slug:"使用默认密码进入修改密码"},{level:3,title:"修改配置修改密码",slug:"修改配置修改密码"},{level:2,title:"常见问题",slug:"常见问题"},{level:3,title:"GROUP_CONCAT",slug:"group-concat"},{level:3,title:"修改默认值大小",slug:"修改默认值大小"},{level:3,title:"自定义函数",slug:"自定义函数"},{level:3,title:"表名未忽略大小写",slug:"表名未忽略大小写"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" MySQL \n Flag 索引 常用语句 命令行 随机取值 随机插入 查询分组中某字段最大值 删除重复值 查询数据库中的存储过程 事务隔离级别修改 数据库信息 查看数据库详细信息 查看所有数据库信息 查看一个数据库占用空间的大小 查看一个表占用空间的大小 时间函数 获得当前日期 获得当前时间time函数 获得当前UTC日期时间函数 格式化日期 生成18位uuid加14位精确到秒的时间 日期增加或者减去一个时间间隔 日期时间相减 时间戳 日期时间选取 返回星期和月份名称 用户管理 查看授权 创建用户并授权 撤销用户权限 删除账户及权限 安装后修改密码 使用默认密码进入修改密码 修改配置修改密码 常见问题 GROUP_CONCAT 修改默认值大小 自定义函数 表名未忽略大小写 \n Flag \n \n https://github.com/topics/innodb \n https://github.com/topics/mysql \n \n \n https://github.com/guodongxiaren/MySQL-docs \n https://github.com/phpmyadmin/phpmyadmin \n https://github.com/vrana/adminer \n 备份并上传对象存储  https://github.com/iKeepLearn/db-back-tool \n 如果是MySQL引起的CPU消耗过大，你会如何优化？ \n 全文搜索  https://github.com/mengzhuo/sqlalchemy-fulltext-search \n MySQL系列——MySQL实现序列（Sequence）效果 \n MySQL索引数据结构入门 \n \n \n MySQL优化工具 \n \n 压测  https://github.com/topics/sysbench \n \n Mysql专栏 - 线上调优与压力测试 \n \n \n \n \n https://github.com/major/MySQLTuner-perl \n https://github.com/BMDan/tuning-primer.sh \n pt-query-digest、pt-variable-advisor： https://www.percona.com/downloads/percona-toolkit/LATEST/ \n https://www.red-gate.com/products \n https://www.sqlgate.com \n https://www.jetprofiler.com \n https://www.solarwinds.com/zh/database-performance-monitoring-software \n 高可用复制管理工具  https://github.com/openark/orchestrator \n 水平切片集群扩展  https://github.com/vitessio/vitess \n 配置管理  https://github.com/AhmedAredah/DBSwitcher \n \n MySql5.0以上字符串数据类型可以存的汉字个数 \n \n https://dev.mysql.com/doc/refman/5.7/en/data-types.html \n \n \n 注意谨慎选择较大的存储数据类型 \n \n \n UTF8MB4编码：一个汉字 = 4 个字节，英文是一个字节（bytes） \n UTF8编码：一个汉字 = 3 个字节，英文是一个字节（bytes） \n GBK编码： 一个汉字 = 2 个字节，英文是一个字节（bytes） \n \n \n 在UTF8状态下 longtext : 4294967295/3=1431655765 个汉字，约14亿，存储空间占用：4294967295/1024/1024/1024=4G 的数据 \n 在UTF8状态下 mediumtext : 16777215/3=5592405 个汉字，约560万，存储空间占用：16777215/1024/1024=16M 的数据 \n 在UTF8状态下 text : 65535/3=21845个汉字，约20000，存储空间占用：65535/1024=64K 的数据 \n 在UTF8状态下 tinytext : 256/3=85个汉字，存储空间占用：256 bytes \n 在UTF8MB4状态下 varchar ： (65535 - 2) / 4 = 16383 个汉字，英文也为 16383 个字符串，存储空间占用：64k \n 在UTF8状态下 varchar ： (65535 - 2) / 3 = 21844 个汉字，英文也为 21844 个字符串，存储空间占用：64k \n 在GBK状态下 varchar ： (65535 - 2) / 2 = 32766 个汉字，英文也为 32766 个字符串，存储空间占用：64k \n \n \n varchar 超过255个字节会有2字节的额外占用空间开销，所以减2，如果是255以下，则减1 \n \n \n mysql的varchar与text对比 \n 索引 \n \n 索引是加速搜索引擎检索数据的一种特殊表查询。简单地说，索引是一个指向表中数据的指针。\n索引也是一张表，该表保存了主键与索引字段，并指向实体表的记录。因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件。\n建立索引会占用磁盘空间的索引文件。 \n \n \n 一个数据库中的索引与一本书的索引目录是非常相似的。\n拿汉语字典的目录页（索引）打比方，我们可以按拼音、笔画、偏旁部首等排序的目录（索引）快速查找到需要的字。 \n \n \n 索引有助于加快 SELECT 查询和 WHERE 子句，但它会减慢使用 UPDATE 和 INSERT 语句时的数据输入。索引可以创建或删除，但不会影响数据。\n使用 CREATE INDEX 语句创建索引，它允许命名索引，指定表及要索引的一列或多列，并指示索引是升序排列还是降序排列。\n索引也可以是唯一的，与 UNIQUE 约束类似，在列上或列组合上防止重复条目。 \n \n \n 在线DDL操作 - 官网 \n MySQL 全文索引实现简单版搜索引擎 \n mysql数据库的索引类型 \n 详细介绍mysql索引类型：FULLTEXT、NORMAL、SPATIAL、UNIQUE \n MYSQL8.0全文索引使用 \n \n -- 强制使用指定索引 \n FORCE   INDEX   ( 索引名 ) \n \n 从数据结构角度 \n \n BTREE \n HASH \n \n 从物理存储角度 \n \n 聚集索引（clustered index） \n 非聚集索引（non-clustered index） \n \n 从逻辑角度 \n \n Normal（普通索引） \n \n CREATE   INDEX  索引名  ON  表名 ( ` 字段名 ` ( length ) ) ; \n ALTER   TABLE  表名  ADD   INDEX  IndexName ( ` 字段名 ` ( length ) ) ; \n \n \n Unique（唯一索引） \n \n CREATE   UNIQUE   INDEX  索引名  ON  表名 ( ` 字段名 ` ( length ) ) ; \n ALTER   TABLE  表名  ADD   UNIQUE   ( column_list ) ; \n \n \n 组合索引 \n \n CREATE   INDEX  索引名  On  表名 ( ` 字段名 ` ( length ) , ` 字段名 ` ( length ) , . . . ) ; \n ALTER   TABLE  表名  ADD   INDEX  索引名  ( id , name ) ; \n \n \n \n SPATIAL（空间索引） \n \n \n Full Text（全文索引） \n \n \n \n https://dev.mysql.com/doc/refman/8.0/en/fulltext-search.html \n ngram全文分析器 - 官网 \n最小字符长度，默认是4，必须要匹配大于4的才会有返回结果 \n ft_min_word_len = 2 \n存储在InnoDB的FULLTEXT索引中的最小词长 \n innodb_ft_min_token_size = 2 \n中文检索分词插件，设置分词大小，取值范围是1到10,默认值是2，分词的SIZE越大,索引的体积就越大 \n注意位置必须放在全文索引的配置后面 \n ngram_token_size = 1 \n \n -- 查看所有全文索引相关参数 \n SHOW   GLOBAL  VARIABLES  LIKE   '%ft%' ; \n SHOW   GLOBAL  VARIABLES  LIKE   'ngram_token_size' ; \n \n ALTER   TABLE  tablename  ADD  FULLTEXT ( column1 ,  column2 ) ; \n \n \n MySQL全文索引之布尔全文索引、查询扩展全文索引 \n \n --  \n SELECT   *   FROM  表名  WHERE   MATCH ( column1 ,  column2 )  AGAINST ( 'aa' , 'bb' , 'cc' . . . ) ; \n -- 使用IN BOOLEAN MODE匹配不完整单词，默认IN NATURAL LANGUAGE MODE（自然语言模式） \n SELECT   *   FROM   表名  WHERE   MATCH ( 字段 )  AGAINST ( '关键词'   IN   BOOLEAN   MODE ) ; \n \n 重新构建索引文件 \n \n 重建或修复表或索引 - 官网 \n \n -- 对于InnoDB存储引擎的表无效 \nREPAIR  TABLE  表名  QUICK ; \n -- InnoDB对表进行索引的重新构建 \n ALTER   TABLE  表名  ENGINE = INNODB ; \n -- 使用优化指令也可以起到同样的作用，同时这个指令会完成更多的优化作用。OPTIMIZE TABLE运行过程中，MySQL会锁定表 \n OPTIMIZE   TABLE  表名 ; \n -- 执行之后会返回如下信息，但实际上是执行成功的 \n -- Table does not support optimize, doing recreate + analyze instead \n 常用语句 \n -- 根据表注释查找对应的表 \n SELECT  TABLE_NAME 表名 , TABLE_COMMENT  '表注解'   FROM  INFORMATION_SCHEMA . TABLES \n  WHERE  TABLE_SCHEMA  =   '数据库名'   AND  TABLE_COMMENT   LIKE   '%注释关键词%' ; \n \n -- 插入或替换 若id=1的记录不存在，REPLACE语句将插入新记录，否则，当前id=1的记录将被删除，然后再插入新记录。 \n REPLACE   INTO  students  ( id ,  class_id ,  name ,  gender ,  score )   VALUES   ( 1 ,   1 ,   '小明' ,   'F' ,   99 ) ; \n -- 插入或更新 upsert \n INSERT   INTO  students  ( id ,  class_id ,  name ,  gender ,  score )   VALUES   ( 1 ,   1 ,   '小明' ,   'F' ,   99 )   ON   DUPLICATE   KEY   UPDATE  name = '小明' ,  gender = 'F' ,  score = 99 ; \n -- 插入或忽略 \n INSERT   IGNORE   INTO  students  ( id ,  class_id ,  name ,  gender ,  score )   VALUES   ( 1 ,   1 ,   '小明' ,   'F' ,   99 ) ; \n 命令行 \n \n 可以用shell脚本操作mysql数据库，使用mysql的 -e 参数可以执行各种sql的(创建，删除，增，删，改、查)等各种操作。 \n \n #!/bin/bash \n数据库信息 \n HOSTNAME = \"192.168.111.84\" \n PORT = \"3306\" \n USERNAME = \"root\" \n PASSWORD = \"\" \n数据库名称 \n DBNAME = \"test_db_test\" \n数据库中表的名称 \n TABLENAME = \"test_table_test\" \n查询数据库  \nmysql  -hlocalhost   -P3306   -uroot   -pabc123   -e   \"show databases;\" \n创建数据库 \n create_db_sql = \"create database IF NOT EXISTS  ${DBNAME} \" \nmysql -h ${ HOSTNAME }   -P ${PORT}   -u ${USERNAME}  -p ${PASSWORD}   -e \" ${create_db_sql} \" \n创建表 \n create_table_sql = \"create table IF NOT EXISTS  ${TABLENAME}  (name varchar(20), id int(11) default 0)\" \nmysql -h ${ HOSTNAME }   -P ${PORT}   -u ${USERNAME}  -p ${PASSWORD}   ${DBNAME}   -e \" ${create_table_sql} \" \n插入数据 \n insert_sql = \"insert into  ${TABLENAME}  values('billchen',2)\" \nmysql -h ${ HOSTNAME }   -P ${PORT}   -u ${USERNAME}  -p ${PASSWORD}   ${DBNAME}   -e \" ${insert_sql} \" \n查询 \n select_sql = \"select * from  ${TABLENAME} \" \nmysql -h ${ HOSTNAME }   -P ${PORT}   -u ${USERNAME}  -p ${PASSWORD}   ${DBNAME}   -e \" ${select_sql} \" \n更新数据 \n update_sql = \"update  ${TABLENAME}  set id=3\" \nmysql -h ${ HOSTNAME }   -P ${PORT}   -u ${USERNAME}  -p ${PASSWORD}   ${DBNAME}   -e \" ${update_sql} \" \nmysql -h ${ HOSTNAME }   -P ${PORT}   -u ${USERNAME}  -p ${PASSWORD}   ${DBNAME}   -e \" ${select_sql} \" \n删除数据 \n delete_sql = \"delete from  ${TABLENAME} \" \nmysql -h ${ HOSTNAME }   -P ${PORT}   -u ${USERNAME}  -p ${PASSWORD}   ${DBNAME}   -e \" ${delete_sql} \" \nmysql -h ${ HOSTNAME }   -P ${PORT}   -u ${USERNAME}  -p ${PASSWORD}   ${DBNAME}   -e \" ${select_sql} \" \n 随机取值 \n \n 先根据rand()和id获取一遍随机数，再跟原表关联，最后取出值，因为是随机取，\n所以你的id值越平均，数据量越大，最后limit之前获取的id值就会越接近整表数据量的一半，limit取到的结果也越接近。 \n \n SELECT   *   FROM   ` table1 `   AS  t1  JOIN   ( SELECT   ROUND ( RAND ( )   *   ( SELECT   MAX ( id )   FROM   ` table1 ` ) )   AS  id )   AS  t2  WHERE  t1 . id  >=  t2 . id  ORDER   BY  t1 . id  ASC   LIMIT   1 \n \n \n 最大减去最小值乘以随机值获取随机数 \n \n SELECT   *   FROM   USER   WHERE  id  >=   (   (   SELECT   MAX (  id  )   FROM   USER   )   -   (   SELECT   MIN (  id  )   FROM   USER   )   )   *  RAND (   )   +   (   SELECT   MIN (  id  )   FROM   USER   )   LIMIT   1 \n \n \n order by rand() 效率极低，采用JOIN的语法比直接在WHERE中使用函数效率还要高很多 \n 随机插入 \n \n 连续有限队列随机取 \n \n update  table1  set  a  =   ( floor ( rand ( )   *   4 )   +   3 )   where  b  =   84 ; \n \n \n 非连续有限队列随机取 \n \n update  table1  set  a  =  elt ( floor ( rand ( )   *   4 )   +   1 ,   5 ,   7 ,   11 ,   13 )   where  b  =   84 ; \n 查询分组中某字段最大值 \n SELECT   *   FROM  表名  GROUP   BY  别名 . 字段  HAVING   MAX ( 别名 . 字段 ) ; \n -- 因为`group by`后取的一条数据默认是按照主键id排序后的第一条，所以对表先排序，然后再分组 \n SELECT  别名 . *   FROM   ( SELECT   *   FROM  表名  ORDER   BY  字段  DESC )   AS  别名  GROUP   BY  别名 . 字段 ; \n 删除重复值 \n 查询单个字段 \n \n 方式一 \n \n DELETE   FROM  test  WHERE  id  NOT   IN ( SELECT   MIN ( id )   FROM  images  GROUP   BY  name ) \n \n \n 方式二 \n \n DELETE   FROM  test  WHERE  name \n IN ( SELECT  name  FROM  test  GROUP   BY  name  HAVING   COUNT ( name ) > 1 )  \n AND  id  NOT   IN ( SELECT   MIN ( id )   FROM  test  GROUP   BY  name  HAVING   COUNT ( name ) > 1 ) \n 查询数据库中的存储过程 \n selectnamefrom mysql . proc   where  db  =   'your_db_name'  andtype =   'PROCEDURE' ; \n\n show   procedure   status ; \n\n -- 查看存储过程或函数的创建代码 \n show   create   procedure  proc_name ; \n show   create   function  func_name ; \n 事务隔离级别修改 \n SET   [ SESSION   |   GLOBAL ]   TRANSACTION   ISOLATION   LEVEL   [ READ   UNCOMMITTED   |   READ   COMMITTED   |   REPEATABLE   READ   |   SERIALIZABLE ] ; \n \n \n \n \n 代码 \n 说明 \n \n \n \n \n SESSION \n 当前会话 \n \n \n GLOBAL \n 全局 \n \n \n READ UNCOMMITTED \n 读取未提交内容 \n \n \n READ COMMITTED \n 读取提交内容 \n \n \n REPEATABLE READ \n 可重读 \n \n \n SERIALIZABLE \n 可串行化 \n 数据库信息 \n 查看数据库详细信息 \n \n information_schema 数据库记录每个表和数据库的详细信息，在该库中有一个TABLES表： \n \n \n \n \n 字段 \n 说明 \n \n \n \n \n TABLE_SCHEMA \n 数据库名 \n \n \n TABLE_NAME \n 表名 \n \n \n ENGINE \n 所使用的存储引擎 \n \n \n TABLES_ROWS \n 记录数 \n \n \n DATA_LENGTH \n 数据大小 \n \n \n INDEX_LENGTH \n 索引大小 \n \n \n \n \n 其他字段请参考MySQL的手册，我们只需要了解这几个就足够了。 \n 查看所有数据库信息 \n SELECT \n\ttable_schema  AS   '数据库' , \n\t sum (  table_rows  )   AS   '总行数' , \n\t sum (   TRUNCATE   (  data_length  /   1024   /   1024 ,   2   )   )   AS   '数据容量(MB)' , \n\t sum (   TRUNCATE   (  index_length  /   1024   /   1024 ,   2   )   )   AS   '索引容量(MB)'  \n FROM \n\tinformation_schema . TABLES  \n GROUP   BY \n\ttable_schema \n ORDER   BY \n\t sum (  table_rows  )   DESC ; \n 查看一个数据库占用空间的大小 \n \n 那就相当于是数据大小( DATA_LENGTH )+索引大小( INDEX_LENGTH )即可 \n \n SELECT \n\ttable_schema  AS   '数据库' , \n\ttable_name  AS   '表名' , \n\ttable_rows  AS   '行数' , \n\t TRUNCATE   (  data_length  /   1024   /   1024 ,   2   )   AS   '数据容量(MB)' , \n\t TRUNCATE   (  index_length  /   1024   /   1024 ,   2   )   AS   '索引容量(MB)'  \n FROM \n\tinformation_schema . TABLES  \n WHERE \n\ttable_schema  =   '数据库'  \n ORDER   BY \n\ttable_rows  DESC ; \n 查看一个表占用空间的大小 \n \n 那就相当于是数据大小( DATA_LENGTH )+索引大小( INDEX_LENGTH )即可 \n \n SELECT \n\ttable_schema  AS   '数据库' , \n\ttable_name  AS   '表名' , \n\ttable_rows  AS   '行数' , \n\t TRUNCATE   (  data_length  /   1024   /   1024 ,   2   )   AS   '数据容量(MB)' , \n\t TRUNCATE   (  index_length  /   1024   /   1024 ,   2   )   AS   '索引容量(MB)'  \n FROM \n\tinformation_schema . TABLES  \n WHERE \n\ttable_schema  =   '数据库'  \n\t AND  TABLE_NAME  =   '表名'  \n ORDER   BY \n\ttable_rows  DESC ; \n 时间函数 \n \n now() \n sysdate()  日期时间函数跟 now() 类似，不同之处在于：now() 在执行开始时值就得到了， sysdate() 在函数执行时动态得到值。 \n 获得当前日期 \n \n curdate() 下面的两个时间函数同阶\n \n current_date() \n current_date \n 获得当前时间time函数 \n \n curtime() 下面的两个时间函数同阶\n \n current_time() \n current_time \n 获得当前UTC日期时间函数 \n \n utc_date() \n utc_time() \n utc_timestamp() \n 格式化日期 \n \n DATE_FORMAT(date, format) \n 生成18位uuid加14位精确到秒的时间 \n CONCAT ( LEFT ( REPLACE ( UUID ( ) , '-' , '' ) , 18 ) , DATE_FORMAT ( NOW ( ) ,   '%Y%m%d%H%i%S' ) ) \n \n \n \n \n 格式 \n 说明 \n \n \n \n \n %% \n 直接值“%” \n \n \n %a \n 一周中每一天名称的缩写（Sun, Mon, ..., Sat） \n \n \n %b \n 缩写的月名（ January, February,...., December） \n \n \n %c \n 数字表示的月份（1, 2, ...., 12） \n \n \n %d \n 两位数字表示月中的天数（00, 01,..., 31） \n \n \n %D \n 英文后缀表示月中的天数（1st, 2nd, 3rd,...） \n \n \n %e \n 数字形式表示月中的天数（1, 2， ..., 31） \n \n \n %H \n 两位数字形式的小时，24 小时（00,01, ..., 23） \n \n \n %h \n 两位数字形式的小时，12 小时（01,02, ..., 12） \n \n \n %I ,  %i \n 两位数字形式的分（ 00,01, ..., 59） \n \n \n %j \n 以三位数字表示年中的天数（ 001, 002, ..., 366） \n \n \n %k \n 数字形式的小时，24 小时（0,1, ..., 23） \n \n \n %l \n 数字形式的小时，12 小时（1, 2, ..., 12） \n \n \n %M \n 月名（January, February, ..., December） \n \n \n %m \n 两位数字表示的月份（01, 02, ..., 12） \n \n \n %p \n AM或PM \n \n \n %r \n 12 小时的时间形式（hh:mm:ss AM 或hh:mm:ss PM） \n \n \n %S ,  %s \n 两位数字形式的秒（ 00,01, ..., 59） \n \n \n %T \n 24 小时的时间形式（hh:mm:ss） \n \n \n %U \n 周（0, 1, 52），其中Sunday 为周中的第一天 \n \n \n %u \n 周（0, 1, 52），其中Monday 为周中的第一天 \n \n \n %W \n 一周中每一天的名称（Sunday, Monday, ..., Saturday） \n \n \n %w \n 以数字形式表示周中的天数（ 0 = Sunday, 1=Monday, ..., 6=Saturday） \n \n \n %Y \n 四位数字表示的年份 \n \n \n %y \n 两位数字表示的年份 \n 日期增加或者减去一个时间间隔 \n \n date_add() \n date_sub() \n \n set   @dt   =   now ( ) ; \n select  date_add ( @dt ,   interval   1   day ) ;   -- add 1 day \n select  date_add ( @dt ,   interval   1   hour ) ;   -- add 1 hour \n select  date_add ( @dt ,   interval   1   minute ) ;   -- ... \n select  date_add ( @dt ,   interval   1   second ) ; \n select  date_add ( @dt ,   interval   1  microsecond ) ; \n select  date_add ( @dt ,   interval   1  week ) ; \n select  date_add ( @dt ,   interval   1   month ) ; \n select  date_add ( @dt ,   interval   1  quarter ) ; \n select  date_add ( @dt ,   interval   1   year ) ; \n select  date_add ( @dt ,   interval   - 1   day ) ;   -- sub 1 day \n 日期时间相减 \n \n 两个日期相减 date1 - date2，返回天数。 \n \n \n 注意： timediff(time1,time2)  函数的两个参数类型必须相同。 \n \n select  datediff ( '2008-08-08' ,   '2008-08-01' ) ;   -- 7 \n select  datediff ( '2008-08-01' ,   '2008-08-08' ) ;   -- -7 \nMySQL timediff ( time1 , time2 ) ：两个日期相减 time1  -  time2，返回  time  差值。\n select  timediff ( '2008-08-08 08:08:08' ,   '2008-08-08 00:00:00' ) ;   -- 08:08:08 \n select  timediff ( '08:08:08' ,   '00:00:00' ) ;   -- 08:08:08 \n 时间戳 \n timestamp ( date )   -- date to timestamp \n timestamp ( dt , time )   -- dt + time \ntimestampadd ( unit , interval , datetime_expr )   -- \ntimestampdiff ( unit , datetime_expr1 , datetime_expr2 )   -- \n\n select   timestamp ( '2008-08-08' ) ;   -- 2008-08-08 00:00:00 \n select   timestamp ( '2008-08-08 08:00:00' ,   '01:01:01' ) ;   -- 2008-08-08 09:01:01 \n select   timestamp ( '2008-08-08 08:00:00' ,   '10 01:01:01' ) ;   -- 2008-08-18 09:01:01 \n select  timestampadd ( day ,   1 ,   '2008-08-08 08:00:00' ) ;   -- 2008-08-09 08:00:00 \n select  date_add ( '2008-08-08 08:00:00' ,   interval   1   day ) ;   -- 2008-08-09 08:00:00 \nMySQL timestampadd ( )  函数类似于 date_add ( ) 。\n select  timestampdiff ( year , '2002-05-01' , '2001-01-01' ) ;   -- -1 \n select  timestampdiff ( day   , '2002-05-01' , '2001-01-01' ) ;   -- -485 \n select  timestampdiff ( hour , '2008-08-08 12:00:00' , '2008-08-08 00:00:00' ) ;   -- -12 \n select  datediff ( '2008-08-08 12:00:00' ,   '2008-08-01 00:00:00' ) ;   -- 7 \n 日期时间选取 \n \n 日期时间的各个部分：日期、时间、年、季度、月、日、小时、分钟、秒、微秒 \n \n set   @dt   =   '2008-09-10 07:15:30.123456' ; \n \n select   date ( @dt ) ;   -- 2008-09-10 \n select   time ( @dt ) ;   -- 07:15:30.123456 \n select   year ( @dt ) ;   -- 2008 \n select  quarter ( @dt ) ;   -- 3 \n select   month ( @dt ) ;   -- 9 \n select  week ( @dt ) ;   -- 36 \n select   day ( @dt ) ;   -- 10 \n select   hour ( @dt ) ;   -- 7 \n select   minute ( @dt ) ;   -- 15 \n select   second ( @dt ) ;   -- 30 \n select  microsecond ( @dt ) ;   -- 123456 \n \n \n Extract() \n \n set   @dt   =   '2008-09-10 07:15:30.123456' ; \n \n select  extract ( year   from   @dt ) ;   -- 2008 \n select  extract ( quarter  from   @dt ) ;   -- 3 \n select  extract ( month   from   @dt ) ;   -- 9 \n select  extract ( week  from   @dt ) ;   -- 36 \n select  extract ( day   from   @dt ) ;   -- 10 \n select  extract ( hour   from   @dt ) ;   -- 7 \n select  extract ( minute   from   @dt ) ;   -- 15 \n select  extract ( second   from   @dt ) ;   -- 30 \n select  extract ( microsecond  from   @dt ) ;   -- 123456select extract(year_month from @dt); -- 200809 \n select  extract ( day_hour  from   @dt ) ;   -- 1007 \n select  extract ( day_minute  from   @dt ) ;   -- 100715 \n select  extract ( day_second  from   @dt ) ;   -- 10071530 \n select  extract ( day_microsecond  from   @dt ) ;   -- 10071530123456 \n select  extract ( hour_minute  from   @dt ) ;   -- 715 \n select  extract ( hour_second  from   @dt ) ;   -- 71530 \n select  extract ( hour_microsecond  from   @dt ) ;   -- 71530123456 \n select  extract ( minute_second  from   @dt ) ;   -- 1530 \n select  extract ( minute_microsecond  from   @dt ) ;   -- 1530123456 \n select  extract ( second_microsecond  from   @dt ) ;   -- 30123456 \n \n \n dayofweek()  返回日期参数，在一周中的位置。 \n dayofmonth()  返回日期参数，在一月中的位置。 \n dayofyear()  返回日期参数，在一年中的位置。 \n \n set   @dt   =   '2008-08-08' ; \n select  dayofweek ( @dt ) ;   -- 6 \n select  dayofmonth ( @dt ) ;   -- 8 \n select  dayofyear ( @dt ) ;   -- 221 \n获取当前日期 \n SELECT  CURDATE ( ) ; \n获取当月最后一天 \n SELECT  LAST_DAY ( CURDATE ( ) ) ; \n获取当月第一天 \n SELECT  DATE_ADD ( CURDATE ( ) , INTERVAL   - DAY ( CURDATE ( ) ) + 1   DAY ) ; \n获取下个月的第一天 \n SELECT  DATE_ADD ( CURDATE ( ) - DAY ( CURDATE ( ) ) + 1 , INTERVAL   1   MONTH ) ; \n获取上个月的今天 \n SELECT  DATE_SUB ( CURDATE ( ) ,   INTERVAL   1   MONTH ) ; \nMySQL last_day() 函数非常有用，比如我想得到当前月份中有多少天，可以这样来计算： \n SELECT   NOW ( ) ,   DAY ( LAST_DAY ( NOW ( ) ) )   AS  days ; \n或者 \n SELECT   DAY ( LAST_DAY ( CURDATE ( ) ) ) ; \n或者 \n SELECT  DATEDIFF ( DATE_ADD ( CURDATE ( ) - DAY ( CURDATE ( ) ) + 1 , INTERVAL   1   MONTH   ) , DATE_ADD ( CURDATE ( ) , INTERVAL   - DAY ( CURDATE ( ) ) + 1   DAY ) )   AS  days  FROM  DUAL ; \n \n /*上个月今天的当前时间*/ \n SELECT  DATE_SUB ( NOW ( ) , INTERVAL   1   MONTH ) ; \n\n /*上个月今天的当前时间（时间戳）*/ \n SELECT  UNIX_TIMESTAMP ( DATE_SUB ( NOW ( ) , INTERVAL   1   MONTH ) ) ; \n\n /*上个月的第一天*/ \n SELECT  DATE_SUB ( DATE_SUB ( DATE_FORMAT ( NOW ( ) , '%y-%m-%d 00:00:00' ) , INTERVAL  EXTRACT ( DAY   FROM   NOW ( ) ) - 1   DAY ) , INTERVAL   1   MONTH ) ; \n\n /*上个月的第一天（时间戳）*/ \n SELECT  UNIX_TIMESTAMP ( DATE_SUB ( DATE_SUB ( DATE_FORMAT ( NOW ( ) , '%y-%m-%d 00:00:00' ) , INTERVAL  EXTRACT ( DAY   FROM   NOW ( ) ) - 1   DAY ) , INTERVAL   1   MONTH ) ) ; \n\n /*上个月的第一天：*/ \n SELECT  DATE_SUB ( DATE_SUB ( DATE_FORMAT ( NOW ( ) , '%y-%m-%d' ) , INTERVAL  EXTRACT ( DAY   FROM   NOW ( ) ) - 1   DAY ) , INTERVAL   1   MONTH ) ; \n\n /*上个月的最后一天：*/ \n SELECT  DATE_SUB ( DATE_SUB ( DATE_FORMAT ( NOW ( ) , '%y-%m-%d' ) , INTERVAL  EXTRACT ( DAY   FROM   NOW ( ) )   DAY ) , INTERVAL   0   MONTH )   AS   DATE ; \n\n /*这个月的第一天：*/ \n SELECT  DATE_SUB ( DATE_SUB ( DATE_FORMAT ( NOW ( ) , '%y-%m-%d' ) , INTERVAL  EXTRACT ( DAY   FROM   NOW ( ) ) - 1   DAY ) , INTERVAL   0   MONTH ) ; \n\n /*这个月的最后一天：*/ \n SELECT  DATE_SUB ( DATE_SUB ( DATE_FORMAT ( NOW ( ) , '%y-%m-%d' ) , INTERVAL  EXTRACT ( DAY   FROM   NOW ( ) )   DAY ) , INTERVAL - 1   MONTH )   AS   DATE ; \n 返回星期和月份名称 \n \n dayname() \n monthname() \n \n set   @dt   =   '2008-08-08' ; \n select  dayname ( @dt ) ;   -- Friday \n select  monthname ( @dt ) ;   -- August \n 用户管理 \n 查看授权 \n查看root用户 \n SHOW  GRANTS ; \n查看指定用户 \n SHOW  GRANTS  FOR   'root' @'localhost' ; \n 创建用户并授权 \n \n 以root用户登录到数据库后进行用户创建 \n \n CREATE 创建的用户需要手动授权 \n \n username  将要创建的用户名； \n host  指定该用户在哪个主机上可以登录， %  表示在任何一台电脑上都可以登录 \n password  该用户的登录密码，密码可以为空，若为空则该用户可以不需要密码登录服务器 \n创建本地登录账户 \n CREATE   USER   'admin' @'localhost'  IDENTIFIED  BY   '密码' ; \n创建所有主机可登录账户 \n CREATE   USER   'admin' @'%'  IDENTIFIED  BY   '密码' ; \n \n GRANT 创建用户或授权 \n \n GRANT  用户存在时会进行授权，用户不存在时，创建用户并授权。\n \n 8.0 必须先创建其他用户再授权（不能授权给自己），否则会报错 You are not allowed to create a user with GRANT \n \n \n WITH GRANT OPTION  这个选项表示该用户可以将自己拥有的权限授权给别人 \n PRIVILEGES  用户的操作权限，如 INSERT , DELETE , UPDATE , SELECT 等。所有权限则使用 ALL PRIVILEGES 。 \n database.table  数据库名.表名，所有数据库和表用 *.* 表示。用“`”（反引号）包裹。 \n IDENTIFIED BY  指定密码，如果不带此属性会导致创建的用户无法远程连接，虽然从 mysql.user 查出 host 为 % \n \n 8.0 使用此语句会报错 \n创建只读账号 \n GRANT   SELECT   ON   database . *   TO   'reader' @'%'  IDENTIFIED  BY   \"密码\" ; \n增删改查账号 \n GRANT   INSERT , DELETE , UPDATE , SELECT   ON   database . *   TO   'writer' @'%'  IDENTIFIED  BY   \"密码\" ; \n创建拥有所有权限的账户，并且所有主机可登录 \n GRANT   ALL   PRIVILEGES   ON   database . *   TO   'root' @'%'  IDENTIFIED  BY   '密码'   WITH   GRANT   OPTION ; \nMySQL 8.0 为用户授权所有权限 \n GRANT   ALL   PRIVILEGES   ON   database . *   TO   'root' @'%'   WITH   GRANT   OPTION ; \n刷新权限 \nFLUSH  PRIVILEGES ; \n查看用户信息 \n select   user , host  from  mysql . user ; \n 撤销用户权限 \n REVOKE  privilege  ON  databasename . tablename  FROM   'username' @'host' ; \n刷新权限 \nFLUSH  PRIVILEGES ; \n 删除账户及权限 \n DROP   USER   'username' @'host' ; \n刷新权限 \nFLUSH  PRIVILEGES ; \n 安装后修改密码 \n 使用默认密码进入修改密码 \n \n 查看root账号的默认密码 \n \n \n mysql5.7安装完成之后，在 /var/log/mysqld.log 文件中给root生成了一个默认密码。通过下面的方式找到root默认密码，然后登录mysql。 \n其中`root@localhost:`后面部分就是默认密码 \n grep   'temporary password'  /var/log/mysqld.log\n \n \n 修改密码 \n \n ALTER   USER   'root' @'localhost'  IDENTIFIED  BY   '新密码' ; \n8.0 \n ALTER   USER   'root' @'localhost'  IDENTIFIED  WITH  mysql_native_password  BY   'password' ; \n刷新权限 \nFLUSH  PRIVILEGES ; \n \n \n 如果出现以下错误，就说明密码强度不够： \n \n \n ERROR 1819 (HY000): Your password does not satisfy the current policy requirements \n \n \n 需要修改以下两个参数，然后再次修改密码 \n \n set   global  validate_password_policy = 0 ; \n set   global  validate_password_length = 自己想要的密码长度 ; \n 修改配置修改密码 \n \n 修改 /etc/my.cnf \n \n \n 在 [mysqld] 小节下添加一行,修改密码完成后需要删除此行 \n \n skip-grant-tables  =   1 \n \n \n 这一行配置让 mysqld 启动时不对密码进行验证 \n \n \n 重启 \n \n systemctl restart mysqld\n \n \n 使用 root 用户登录 \n \n mysql  -uroot \n \n \n 切换到 mysql 数据库 \n \n use  mysql\n \n \n 更新 user 表 \n \n update   user   set  authentication_string  =  password ( '新密码' ) , password_expired  =   'N' ,  password_last_changed  =   now ( )   where   user   =   'root' ; \n \n \n 在 5.7 之前的版本密码字段的字段名是 password ， 5.7 版本改为了 authentication_string \n使用set设置密码 \n set  password  for   'root' @'localhost' = password ( '123456' ) ; \n或者使用update修改 \n update   user   set  password = PASSWORD ( \"123456\" )   where   user = 'root' ; \n 常见问题 \n GROUP_CONCAT \n \n 使用 GROUP_CONCAT 出现 \n \n \n Row 147 was cut by GROUP_CONCAT() \n \n \n 由于MySQL的 GROUP_CONCAT 有默认大小值，先查询一下 \n \n SHOW  VARIABLES  LIKE   'group_concat_max_len' ; \n #或者 \n SELECT  @ @global.group_concat_max_len ; \n \n \n 默认值为1024 \n \n \n \n \n Variable_name \n Value \n \n \n \n \n group_concat_max_len \n 1024 \n 修改默认值大小 \n \n 在MySQL配置文件中添加配置 \n \n #-1为最大值或根据实际需求设置长度 \ngroup_concat_max_len  =   -1 \n \n \n 如果是生产环境下，不能擅自重启MySQL服务，则可以通过语句设置 group_concat 的作用范围 \n \n SET   GLOBAL  group_concat_max_len = - 1 ; \n SET   SESSION  group_concat_max_len = - 1 ; \n 自定义函数 \n 执行自定义函数报错 \n \n This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable) \n \n \n 查看是否开启 log_bin_trust_function_creators \n \n SHOW  VARIABLES  LIKE   'log_bin_trust_function_creators' ; \n #或者 \n SELECT  @ @global.log_bin_trust_function_creators ; \n \n \n 默认关闭 \n \n \n \n \n Variable_name \n Value \n \n \n \n \n log_bin_trust_function_creators \n OFF \n \n \n \n \n 开启 \n \n \n 在MySQL配置文件中 [mysqld] 节点下加上 \n \n log_bin_trust_function_creators = 1 \n \n \n 如果是生产环境下，不能擅自重启MySQL服务，则可以通过语句开启，重启后无效 \n \n SET   GLOBAL  log_bin_trust_function_creators  =   1 ; \n #或者 \n SET   GLOBAL  log_bin_trust_function_creators = TRUE ; \n 表名未忽略大小写 \n vim  /etc/my.cnf\n \n 在[mysqld]模块中添加 \n lower_case_table_names  =   1 \n \n 保存并重启mysql \n",createdTime:1761814324e3},{title:"DBS",frontmatter:{description:"DBS（Data Base System，数据库系统）包括：DB（数据库）和DBMS（database management system，数据库管理系统）\n> ，Structured Query Language(SQL)",meta:[{name:"twitter:title",content:"DBS"},{name:"twitter:description",content:"DBS（Data Base System，数据库系统）包括：DB（数据库）和DBMS（database management system，数据库管理系统）\n> ，Structured Query Language(SQL)"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/DBS/"},{property:"og:type",content:"article"},{property:"og:title",content:"DBS"},{property:"og:description",content:"DBS（Data Base System，数据库系统）包括：DB（数据库）和DBMS（database management system，数据库管理系统）\n> ，Structured Query Language(SQL)"},{property:"og:url",content:"https://bajins.com/DBS/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"DBS"},{itemprop:"description",content:"DBS（Data Base System，数据库系统）包括：DB（数据库）和DBMS（database management system，数据库管理系统）\n> ，Structured Query Language(SQL)"}]},regularPath:"/DBS/",relativePath:"DBS/README.md",key:"v-78599262",path:"/DBS/",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"其他数据库",slug:"其他数据库"},{level:3,title:"NewSQL数据库",slug:"newsql数据库"},{level:3,title:"NoSQL-文档数据库",slug:"nosql-文档数据库"},{level:3,title:"NoSQL-键值存储(Key-Value Store)",slug:"nosql-键值存储-key-value-store"},{level:3,title:"NoSQL-列式数据库(Columnar/Wide-Column)",slug:"nosql-列式数据库-columnar-wide-column"},{level:3,title:"NoSQL-图数据库(Graph Database)",slug:"nosql-图数据库-graph-database"},{level:3,title:"时间序列数据库(Time-Series Database)",slug:"时间序列数据库-time-series-database"},{level:3,title:"向量数据库(Vector Database)",slug:"向量数据库-vector-database"},{level:3,title:"内存数据库(In-Memory Database)",slug:"内存数据库-in-memory-database"},{level:3,title:"嵌入式数据库(Embedded Database)",slug:"嵌入式数据库-embedded-database"},{level:3,title:"分布式数据库/存储系统",slug:"分布式数据库-存储系统"},{level:3,title:"搜索引擎/分析系统",slug:"搜索引擎-分析系统"},{level:3,title:"其他特殊用途数据库/存储",slug:"其他特殊用途数据库-存储"},{level:2,title:"Redis",slug:"redis"},{level:2,title:"MongoDB",slug:"mongodb"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" DBS \n Flag 其他数据库 NewSQL数据库 NoSQL-文档数据库 NoSQL-键值存储(Key-Value Store) NoSQL-列式数据库(Columnar/Wide-Column) NoSQL-图数据库(Graph Database) 时间序列数据库(Time-Series Database) 向量数据库(Vector Database) 内存数据库(In-Memory Database) 嵌入式数据库(Embedded Database) 分布式数据库/存储系统 搜索引擎/分析系统 其他特殊用途数据库/存储 Redis MongoDB \n Flag \n \n DBS（Data Base System，数据库系统）包括：DB（数据库）和DBMS（database management system，数据库管理系统）\n，Structured Query Language(SQL) \n \n \n https://github.com/SPLware/esProc \n 数据库大全  https://github.com/cmu-db/dbdb.io \n 基准测试  https://github.com/ClickHouse/ClickBench \n https://github.com/zilliztech/VectorDBBench \n https://github.com/PlaytikaOSS/testcontainers-spring-boot \n \n \n https://github.com/pingcap/awesome-database-learning \n https://github.com/dunwu/db-tutorial \n https://docs.aws.amazon.com/zh_cn/redshift/latest/dg/cm_chap_SQLCommandRef.html \n https://www.alibabacloud.com/help/zh/analyticdb-for-mysql/latest/sql-manual \n https://github.com/prisma/dataguide \n https://github.com/digoal/blog \n https://ivanzz1001.github.io/records/archives \n 自学SQL网  http://xuesql.cn \n 克隆Sqlite学习  https://github.com/cstack/db_tutorial \n 数据库压测  https://github.com/akopytov/sysbench \n https://github.com/stcarrez/sql-benchmark \n 优化和改写  https://github.com/XiaoMi/soar \n https://www.1keydata.com/cn/sql \n https://www.twle.cn/l/yufei/sql/sql-basic-index.html \n https://www.begtut.com/sql/sql-ref-keywords.html \n https://wizardforcel.gitbooks.io/w3school-sql \n 键值存储引擎教程  https://github.com/skyzh/mini-lsm \n HiveSQL教程  https://www.gairuo.com/p/hive-sql-tutorial \n 加密  https://github.com/hashicorp/vault \n 通用SQL解析  https://www.sqlparser.com \n \n https://github.com/sqlparser \n \n \n https://github.com/search?p=9&q=data+to+sql \n https://github.com/search?q=generate+sql \n https://github.com/search?q=sqlparser \n https://github.com/search?q=sql+visitor \n https://github.com/topics/sql-statement \n 信创SQL转换  https://github.com/CongKeCK/sql-convert \n \n \n 什么是实体化视图？ \n \n 备份/迁移/复制/同步/导入导出 \n \n (EXTRACT，TRANSFORMATION，LOAD) ETL： Talend 、Kettle、Informatica、Inaplex Inaport、Hevo、Xplenty、Skyvia、DBConvert Studio、Sprinkle \n \n \n https://github.com/topics/etl \n https://github.com/topics/etl-pipeline \n https://github.com/topics/etl-framework \n https://github.com/topics/redshift \n https://github.com/topics/binlog \n https://github.com/topics/flashback \n 迁移  https://github.com/topics/migrations \n https://github.com/topics/migration \n https://github.com/topics/db2 \n https://github.com/topics/database-migrations \n https://github.com/topics/data-migration \n \n \n 复制  https://gitee.com/dromara/dbswitch \n \n https://github.com/Henryhuang0411/mydbswitch \n \n \n https://github.com/osalvador/ReplicaDB \n 同步数据  https://github.com/86dbs/dbsyncer \n https://github.com/JumpMind/symmetric-ds \n \n https://sourceforge.net/projects/symmetricds \n https://www.symmetricds.org \n \n \n https://github.com/viant/dbsync \n https://github.com/pentaho/pentaho-kettle \n \n https://github.com/zhaxiaodong9860/kettle-scheduler \n https://github.com/xiaoymin/KettleInAction100 \n \n \n https://github.com/sqlpipe/sqlpipe \n https://github.com/apache/nifi \n https://github.com/amacneil/dbmate \n https://github.com/rust-db/refinery \n https://github.com/pressly/goose \n https://github.com/rubenv/sql-migrate \n \n https://github.com/go-gorp/gorp \n https://bitbucket.org/liamstask/goose \n \n \n https://github.com/Qovery/replibyte \n https://github.com/alibaba/DataX \n \n https://github.com/WeiYe-Jing/datax-web \n \n \n https://github.com/alibaba/otter \n https://github.com/redpanda-data/connect \n https://github.com/DTStack/chunjun \n https://github.com/singer-io \n \n https://github.com/transferwise/pipelinewise \n \n \n https://github.com/wgzhao/Addax \n https://github.com/airbytehq/airbyte \n https://github.com/apache/flink-cdc \n https://github.com/tapdata/tapdata \n 版本管理  https://github.com/flyway/flyway \n \n Migrations \n ErrorOverrides \n Flyway 入门教程 \n Flyway 数据库脚本版本控制工具 \n 用flyway对数据库管理和迁移 \n \n \n https://github.com/liquibase \n https://github.com/sqitchers/sqitch \n https://github.com/ariga/atlas \n https://github.com/CourseOrchestra/celesta \n https://github.com/planetscale \n https://github.com/lecaillon/Evolve \n https://github.com/rdagumampan/yuniql \n https://github.com/golang-migrate/migrate \n https://github.com/compose/transporter \n https://github.com/gobackup/gobackup \n https://github.com/estuary/flow \n \n https://github.com/gazette/core \n \n \n https://github.com/ibmdb \n https://github.com/cakephp/phinx \n https://www.sqlines.com \n https://gitee.com/sxfad/porter \n DbVisualizer  https://www.dbvis.com \n PostgreSQL迁移  https://github.com/jackc/tern \n https://github.com/dimitri/pgcopydb \n https://github.com/DTStack/flinkx \n https://gitee.com/ghi/dbsyncer \n https://github.com/jeessy2/backup-x \n https://github.com/jeessy2/backup-db \n https://github.com/database-mesh \n https://github.com/eduardolat/pgbackweb \n https://github.com/Hornetlabs/synchdb \n https://github.com/dimitri/pgloader \n https://github.com/darold/ora2pg \n \n https://sourceforge.net/projects/ora2pg \n https://github.com/vibhorkum/pg_background \n 兼容性函数  https://github.com/orafce/orafce \n https://github.com/zaops/or2pg-admin \n https://github.com/Guy-Incognito/ora2pg \n https://github.com/RiprLutuk/copy-table-oracle-to-postgresql \n https://github.com/romkoval/py-ora2pg \n https://gitlab.com/ongresinc \n https://github.com/ongres \n https://hub.docker.com/r/riprlutuk/ora2pg \n \n \n https://github.com/cybertec-postgresql/ora_migrator \n https://github.com/semay-cli/sql-migration \n https://github.com/the4thdoctor/pg_chameleon \n https://github.com/dalibo/sqlserver2pgsql \n https://github.com/stripe/pg-schema-diff \n https://github.com/m1h1r-a/ddl-migration-conversion \n https://github.com/kurtbuilds/sql \n https://sqlbackupandftp.com/download \n https://dbconvert.com/download \n 日志解析订阅和消费  https://github.com/alibaba/canal \n https://github.com/ucarGroup/DataLink \n 数据库监控  https://github.com/debezium/debezium \n https://github.com/percona/pmm \n \n 数据库分类 \n \n 关系型数据库(SQL) \n 非关系型数据库(NoSQL)：键值、列存储、图形、文档、搜索引擎 \n 网状数据库 \n 层次数据库 \n 新型数据库(NewSQL)：关系型数据库与NoSQL的结合  The bridge between SQL and NoSQL \n 分布式数据库 \n \n NoSQL \n \n 1970: NoSQL = We have no SQL \n 1980: NoSQL = Know SQL \n 2000: NoSQL = No SQL! \n 2005: NoSQL = Not only SQL \n 2013: NoSQL = No, SQL! \n \n \n NoSQL 是什么？  https://www.mongodb.com/zh-cn/nosql-explained \n 其他数据库 \n \n https://github.com/polardb \n https://db-engines.com/en/ranking \n \n https://q-success.com/web_services \n \n \n https://github.com/wbtlb \n 图数据库 \n \n \n https://github.com/SQream \n \n https://github.com/KxSystems/javakdb \n \n \n https://github.com/exasol \n https://github.com/Teradata \n https://github.com/cloudera \n https://github.com/ActianCorp \n https://github.com/cubrid \n https://github.com/MonetDB/MonetDB \n https://github.com/baidu/BaikalDB \n https://github.com/stoneatom/stonedb \n https://github.com/snowflakedb \n https://github.com/edgedb \n NewSQL数据库 \n \n https://github.com/pingcap/tidb \n https://github.com/pingcap/tikv \n https://github.com/tikv/tikv \n https://github.com/yugabyte/yugabyte-db \n https://github.com/cockroachdb \n \n https://github.com/auxten/postgresql-parser \n \n \n https://github.com/dolthub/dolt \n \n https://github.com/attic-labs/noms \n \n \n https://github.com/crate/crate \n https://github.com/StarRocks/starrocks \n https://github.com/datafuselabs/databend \n NoSQL-文档数据库 \n \n https://github.com/rethinkdb \n https://github.com/apache/couchdb \n https://github.com/arangodb/arangodb \n https://github.com/realm/realm-core  (嵌入式/独立部署) \n NoSQL-键值存储(Key-Value Store) \n \n https://github.com/valkey-io/valkey \n https://github.com/memcached/memcached \n \n https://github.com/bradfitz/gomemcache  (客户端库 - GO) \n \n \n https://github.com/EQ-Alpha/KeyDB \n https://github.com/Snapchat/KeyDB \n https://github.com/OpenAtomFoundation/pika \n https://github.com/distributedio/titan \n https://github.com/ledisdb \n https://github.com/reborndb \n https://github.com/facebook/rocksdb  (嵌入式 - C++)\n \n https://github.com/xiaomi/pegasus-rocksdb  (嵌入式 - C++) \n https://github.com/apache/incubator-pegasus \n \n \n https://github.com/KvrocksLabs/kvrocks \n https://github.com/apache/incubator-kvrocks \n https://github.com/RocksCloud/rocksredis \n https://github.com/flower-corp/rosedb  (嵌入式 - Go) \n https://github.com/roseduan/rosedb  (嵌入式 - Go) \n https://github.com/couchbase/moss  (嵌入式 - Go) \n https://github.com/peterbourgon/diskv  (嵌入式 - Go) \n https://github.com/google/leveldb  (嵌入式 - C++) \n https://github.com/pmqs/BerkeleyDB  (嵌入式 - C) \n https://github.com/erthink/libmdbx  (嵌入式 - C) \n https://github.com/cberner/redb  (嵌入式 - Rust) \n https://github.com/nalgeon/redka  (兼容Redis API) \n https://codeberg.org/redict/redict  (嵌入式 - Rust) \n https://github.com/photondb/photondb  (嵌入式 - Rust) \n https://github.com/tikv/agatedb  (嵌入式 - Rust) \n https://github.com/komora-io/marble  (嵌入式 - Rust) \n https://gitlab.com/tglman/persy  (嵌入式 - Rust) \n https://nest.pijul.com/pijul/sanakirja  (嵌入式 - Rust) \n https://github.com/rustbase/dustdata  (嵌入式 - Rust) \n https://github.com/seladb/pickledb-rs  (嵌入式 - Rust) \n https://github.com/dragonflydb \n https://github.com/microsoft/garnet \n NoSQL-列式数据库(Columnar/Wide-Column) \n \n https://github.com/apache/cassandra \n https://github.com/scylladb/scylla \n https://github.com/apache/hbase \n https://github.com/ClickHouse/ClickHouse \n https://github.com/apache/kudu \n https://github.com/apache/kylin \n https://github.com/apache/druid \n https://github.com/griddb/griddb \n https://github.com/infinispan/infinispan \n NoSQL-图数据库(Graph Database) \n \n https://github.com/neo4j/neo4j \n https://github.com/JanusGraph/janusgraph \n https://github.com/apache/incubator-hugegraph \n https://github.com/vesoft-inc/nebula \n https://github.com/orientechnologies/orientdb \n https://github.com/arangodb/arangodb \n https://github.com/cayleygraph/cayley \n https://github.com/CodyKochmann/graphdb \n https://objectivity.com/infinitegraph \n \n https://infinitegraph.com \n https://github.com/objectivity/JavaULBTraining \n \n \n https://allegrograph.com \n 时间序列数据库(Time-Series Database) \n \n https://github.com/influxdata/influxdb \n \n https://github.com/InfluxCommunity \n \n \n https://github.com/VictoriaMetrics/VictoriaMetrics \n https://github.com/thanos-io/thanos \n https://github.com/cortexproject/cortex \n https://github.com/OpenTSDB/opentsdb \n https://github.com/timescale/timescaledb \n https://github.com/questdb/questdb \n https://github.com/taosdata/TDengine \n https://github.com/apache/iotdb \n https://github.com/CeresDB/ceresdb \n https://github.com/openGemini/openGemini \n 向量数据库(Vector Database) \n \n https://github.com/facebookresearch/faiss  (嵌入式/库 - C++/Python) \n https://github.com/chroma-core/chroma \n https://github.com/milvus-io/milvus \n https://github.com/weaviate/weaviate \n https://github.com/qdrant/qdrant \n https://github.com/vespa-engine/vespa \n https://github.com/vdaas/vald \n https://github.com/pgvector/pgvector  (PostgreSQL扩展) \n https://github.com/towhee-io \n https://github.com/pinecone-io \n 内存数据库(In-Memory Database) \n \n https://github.com/valkey-io/valkey \n https://github.com/memcached/memcached \n https://github.com/EQ-Alpha/KeyDB \n https://github.com/Snapchat/KeyDB \n https://github.com/dragonflydb \n https://github.com/microsoft/garnet \n https://github.com/VictoriaMetrics/VictoriaMetrics  (可混合持久化) \n https://github.com/influxdata/influxdb  (可混合持久化) \n https://www.sqlite.org/index.html  (可内存模式 ) \n 嵌入式数据库(Embedded Database) \n \n https://github.com/realm/realm-core  (Java/GO/Python/Rust) \n https://github.com/facebook/rocksdb  (C++)\n \n https://github.com/xiaomi/pegasus-rocksdb  (C++) \n \n \n https://github.com/google/leveldb  (C++) \n https://github.com/erthink/libmdbx  (C) \n https://github.com/cberner/redb  (Rust) \n https://github.com/flower-corp/rosedb  (Go) \n https://github.com/roseduan/rosedb  (Go) \n https://github.com/couchbase/moss  (Go) \n https://github.com/nalgeon/redka  (兼容Redis API) \n https://codeberg.org/redict/redict  (Rust) \n https://github.com/photondb/photondb  (Rust) \n https://github.com/tikv/agatedb  (Rust) \n https://github.com/komora-io/marble  (Rust) \n https://gitlab.com/tglman/persy  (Rust) \n https://nest.pijul.com/pijul/sanakirja  (Rust) \n https://github.com/rustbase/dustdata  (Rust) \n https://github.com/seladb/pickledb-rs  (Rust) \n https://github.com/bradfitz/gomemcache  (客户端库 - GO) \n https://github.com/facebookresearch/faiss  (库 - C++/Python) \n https://www.sqlite.org/index.html \n 分布式数据库/存储系统 \n \n https://github.com/apache/ignite \n \n http://blog.nimblex.cn/archives \n https://www.ignite-service.cn/doc/java \n https://github.com/owen-jia/ignite-yardstick \n https://github.com/gridgain/gridgain \n \n \n https://github.com/dremio \n https://github.com/machbase \n https://github.com/Xeograph \n https://github.com/forcedotcom \n https://github.com/tidb-incubator \n https://github.com/ydb-platform/ydb \n https://github.com/matrixorigin/matrixone \n https://github.com/particuleio \n https://github.com/etcd-io/etcd \n https://github.com/basho/riak \n https://github.com/placeholderkv/placeholderkv \n https://github.com/datenlord/Xline \n https://github.com/freenet/locutus \n https://github.com/engula/engula \n https://github.com/apple/foundationdb \n \n https://github.com/FoundationDB/fdb-record-layer \n \n \n https://github.com/tidb-incubator/tidis \n \n https://github.com/yongman/tidis \n \n \n https://github.com/zhihu/zetta \n https://github.com/oceanbase/oceanbase \n https://github.com/Tencent/paxosstore \n https://gitee.com/mirrors/EdgeFS \n https://github.com/codenotary/immudb \n https://github.com/surrealdb/surrealdb \n https://github.com/bridgedb/BridgeDb \n https://github.com/mit-pdos/noria \n https://github.com/risingwavelabs/risingwave \n https://github.com/risinglightdb/risinglight \n https://github.com/apache/incubator-paimon \n https://github.com/pola-rs/polars \n https://github.com/topics/spark \n \n https://github.com/apache/spark \n \n https://github.com/allwefantasy/spark-binlog \n \n \n https://github.com/spark-jobserver \n https://github.com/JerryLead/SparkInternals \n https://github.com/lw-lin/CoolplaySpark \n https://github.com/databricks/koalas \n \n \n https://github.com/facebookincubator/velox \n https://github.com/tigerbeetle/tigerbeetle \n 搜索引擎/分析系统 \n \n https://github.com/elastic/elasticsearch \n https://github.com/apache/solr \n https://github.com/apache/kafka \n https://github.com/apache/atlas \n https://github.com/MarquezProject/marquez \n https://github.com/yyun543/minidb \n 其他特殊用途数据库/存储 \n \n https://github.com/etcd-io/bbolt  (嵌入式 - Go) \n https://github.com/jnwatson/py-lmdb  (嵌入式 - Python/C) \n https://github.com/sirixdb  (XML/JSON版本化存储) \n https://github.com/hivedb/hive  (Flutter嵌入式 - Dart) \n https://gitlab.com/cznic/ql  (嵌入式 - Go) \n https://github.com/TrinityCore/TrinityCore  (游戏服务器数据库) \n https://github.com/sones/sones  (图数据库) \n https://github.com/zopefoundation/ZODB  (Python对象数据库) \n Redis \n \n https://github.com/redis \n https://redis.io/documentation \n \n \n https://github.com/huangz1990 \n \n http://redisdoc.com \n http://doc.redisfans.com \n \n \n https://github.com/antirez/redis-doc \n \n http://www.redis.cn/documentation.html \n \n \n https://github.com/guodongxiaren/redis-wiki \n https://github.com/yu-linfeng/redis5.x_tutorial \n redis常用特性  https://github.com/LxyTe/redis \n https://github.com/Ctzzhang/Ctzzhang.github.io \n Redlock安全吗？ \n Java  https://github.com/redisson \n https://github.com/RedisJSON \n https://github.com/lettuce-io/lettuce-core \n \n Lettuce相较于Jedis有哪些优缺点？ \n \n \n Go  https://github.com/gomodule/redigo \n C#  https://github.com/StackExchange/StackExchange.Redis \n https://github.com/imperugo/StackExchange.Redis.Extensions \n \n 存储方式 \n \n 适合用 String 存储的情况：\n \n 每次需要访问大量的字段 \n 存储的结构具有多层嵌套的时候 \n \n \n 适合用 Hash 存储的情况：\n \n 在大多数情况中只需要访问少量字段 \n 自己始终知道哪些字段可用，防止使用 mget 时获取不到想要的数据 \n \n \n \n 安装 \n wget  https://download.redis.io/redis-stable.tar.gz\n tar   -zvf  redis-stable.tar.gz\n cd  redis-stable\n make \n make   install \n cp  redis.conf /etc/redis.conf\n vi  /etc/redis.conf\n \n \n 输入 /daemon 按 A 或 i 把 daemonize no 改成 daemonize yes \n允许任意IP访问：输入 /NETWORK 搜索，替换 bind 127.0.0.1 为 bind 0.0.0.0 \n设置访问密码：输入 /SECURITY 搜索，取消注释 requirepass foobared \n修改 protected-mode yes (保护模式，需配置设置访问密码) 为  protected-mode no \n启动 \nredis-server /etc/redis.conf\n ps   -ef   |   grep  redis\n连接redis \nredis-cli  -p  端口  -a  密码\n配置设置密码，不会修改配置文件 \nconfig  set  requirepass 密码\n单实例关闭redis \nredis-cli  shutdown \n多实例关闭，指定端口关闭redis \nredis-cli  -p   6379   shutdown \n MongoDB \n \n https://github.com/mongodb \n \n \n 客户端  https://github.com/Studio3T/robomongo \n 存储引擎模块  https://github.com/mongodb-partners/mongo-rocks \n https://github.com/erikolson186/zangodb \n \n \n MongoDB 高级查询 \n \n",createdTime:1761814324e3},{title:"mysql-udf安装",frontmatter:{description:"yum install -y libcurl*\n`",meta:[{name:"twitter:title",content:"mysql-udf安装"},{name:"twitter:description",content:"yum install -y libcurl*\n`"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/DBS/mysql-udf%E5%AE%89%E8%A3%85.html"},{property:"og:type",content:"article"},{property:"og:title",content:"mysql-udf安装"},{property:"og:description",content:"yum install -y libcurl*\n`"},{property:"og:url",content:"https://bajins.com/DBS/mysql-udf%E5%AE%89%E8%A3%85.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"mysql-udf安装"},{itemprop:"description",content:"yum install -y libcurl*\n`"}]},regularPath:"/DBS/mysql-udf%E5%AE%89%E8%A3%85.html",relativePath:"DBS/mysql-udf安装.md",key:"v-64f1ead8",path:"/DBS/mysql-udf%E5%AE%89%E8%A3%85.html",headers:[{level:2,title:"一、mysql-udf-http",slug:"一、mysql-udf-http"},{level:3,title:"安装cur",slug:"安装cur"},{level:3,title:"安装mysql-udf-http",slug:"安装mysql-udf-http"},{level:3,title:"创建",slug:"创建"},{level:3,title:"删除",slug:"删除"},{level:3,title:"验证是否安装成功",slug:"验证是否安装成功"},{level:3,title:"Description",slug:"description"},{level:3,title:"实例",slug:"实例"},{level:2,title:"二、mysql-udf-json",slug:"二、mysql-udf-json"},{level:3,title:"创建",slug:"创建-2"},{level:3,title:"删除",slug:"删除-2"},{level:3,title:"验证是否安装成功",slug:"验证是否安装成功-2"},{level:3,title:"实例",slug:"实例-2"},{level:3,title:"创建触发器",slug:"创建触发器"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" mysql-udf安装 \n 一、mysql-udf-http 安装cur 安装mysql-udf-http 创建 删除 验证是否安装成功 Description 实例 二、mysql-udf-json 创建 删除 验证是否安装成功 实例 创建触发器 \n 一、mysql-udf-http \n 安装cur \n yum install  - y libcurl * \n \n \n 或者 \n \n yum install  - y curl * \n 安装mysql-udf-http \n \n 项目网址：http://code.google.com/p/mysql-udf-http/ \n 中文说明：http://blog.zyan.cc/mysql-udf-http/ \n \n tar zxvf mysql - udf - http - 1.0 . tar . gz\ncd mysql - udf - http - 1.0 \n . / configure  --prefix=/usr/local/mysql-udf-http --with-mysql=/usr/local/mysql/bin/mysql_config \nmake  &&  make install\n \n \n 如果提示 configure: error: no acceptable C compiler found in $PATH 需要安装 GCC 编译器 \n \n yum install  - y gcc\n \n \n 如果没有 mysql_config 请执行以下命令 \n \n yum install  - y mysql - devel\n \n \n 搜索 mysql-udf-http.so 文件位置 \n \n find  /   - name mysql - udf - http . so\n \n \n 由于 mysql-udf-http.so 不在 mysql/lib/plugin/ 目录下，所以需要创建软连接或者复制过去 \n \n \n 创建软连接 \n \n ln  - s  / usr / local / mysql - udf - http / lib / mysql - udf - http . so  / usr / local / mysql / lib / plugin / mysql - udf - http . so\n \n \n 或者复制 \n \n cp  / usr / local / mysql - udf - http / lib / mysql - udf *   / usr / local / mysql / lib / plugin / \n \n \n 重启mysql \n \n service mysqld restart\n \n \n 或者 \n \n systemctl restart mysqld . service\n 创建 \n create   function  http_get  returns  string  soname   'mysql-udf-http.so' ; \n create   function  http_post  returns  string  soname   'mysql-udf-http.so' ; \n create   function  http_put  returns  string  soname   'mysql-udf-http.so' ; \n create   function  http_delete  returns  string  soname   'mysql-udf-http.so' ; \n 删除 \n DROP   FUNCTION   IF   EXISTS  http_get ; \n DROP   FUNCTION   IF   EXISTS  http_post ; \n DROP   FUNCTION   IF   EXISTS  http_put ; \n DROP   FUNCTION   IF   EXISTS  http_delete ; \n 验证是否安装成功 \n select   *   from  mysql . func ;  \n Description \n SELECT  http_get ( '<url>' ) ; \n SELECT  http_post ( '<url>' ,   '<data>' ) ; \n SELECT  http_put ( '<url>' ,   '<data>' ) ; \n SELECT  http_delete ( '<url>' ) ; \n 实例 \n /* HTTP GET、POST方式提交关键词“xoyo”到百度移动搜索 */   \n SELECT  http_get ( 'http://m.baidu.com/s?word=xoyo&pn=0' ) ;   \n SELECT  http_post ( 'http://m.baidu.com/s' , 'word=xoyo&pn=0' ) ;   \n  \n /* 新浪微博开放平台：获取新浪用户ID为103500的最近一条微博内容 */   \n SELECT  http_get ( 'http://api.t.sina.com.cn/statuses/user_timeline/103500.json?count=1&source=1561596835' )   AS   data ;   \n /* 新浪微博开放平台：发表一条微博 */   \n SELECT  http_post ( 'http://your_sina_uid:your_password@api.t.sina.com.cn/statuses/update.xml?source=1561596835' ,   'status=Thins is sina weibo test information' ) ;   \n  \n /* Tokyo Tyrant 写入、读取、删除操作 */   \n SELECT  http_put ( 'http://192.168.8.34:1978/key' ,   'This is value' ) ;   \n SELECT  http_get ( 'http://192.168.8.34:1978/key' ) ;   \n SELECT  http_delete ( 'http://192.168.8.34:1978/key' ) ;   \n 二、mysql-udf-json \n wget https: //github.com/claer-ding/lib_mysqludf_json/archive/2013.zip \nunzip  2013. zip\ncd lib_mysqludf_json - 2013 \ngcc $ ( / usr / local / mysql / bin / mysql_config  --cflags) -shared -fPIC -o lib_mysqludf_json.so lib_mysqludf_json.c \ncp lib_mysqludf_json . so  / usr / local / mysql / lib / plugin / \n 创建 \n create   function  lib_mysqludf_json_info  returns  string  soname   'lib_mysqludf_json.so' ; \n create   function  json_array  returns  string  soname   'lib_mysqludf_json.so' ; \n create   function  json_members  returns  string  soname   'lib_mysqludf_json.so' ; \n create   function  json_object  returns  string  soname   'lib_mysqludf_json.so' ; \n create   function  json_values  returns  string  soname   'lib_mysqludf_json.so' ; \n 删除 \n DROP   FUNCTION   IF   EXISTS  lib_mysqludf_json_info ; \n DROP   FUNCTION   IF   EXISTS  json_array ; \n DROP   FUNCTION   IF   EXISTS  json_members ; \n DROP   FUNCTION   IF   EXISTS  json_object ; \n DROP   FUNCTION   IF   EXISTS  json_values ; \n 验证是否安装成功 \n select   *   from  mysql . func ;  \n 实例 \n \n 返回json对象 \n \n select  json_object ( login_name  as   user , login_password  as  pwd )   as   user   from  t_sys_loginperson ; \n \n \n 返回json数组 \n \n select  json_array ( login_name , login_password )   as   user   from  t_sys_loginperson ; \n 创建触发器 \n /* INSERT插入操作的触发器 */   \n /*开头将结束符号定义为|*/ \n DELIMITER   |   \n DROP   TRIGGER   IF   EXISTS  mytable_insert ;   \n CREATE   TRIGGER  mytable_insert  \n AFTER   INSERT   ON  mytable  \n FOR EACH ROW   BEGIN   \n     SET   @tt_json   =   ( SELECT  json_object ( id , addtime , title )   FROM  mytable  WHERE  id  =  NEW . id  LIMIT   1 ) ;   \n     SET   @tt_resu   =   ( SELECT  http_put ( CONCAT ( 'http://192.168.8.34:1978/' ,  NEW . id ) ,   @tt_json ) ) ;   \n /*使用|结束*/ \n END   |   \n /*最后使用DELIMITER ; 将结束符号还原*/ \n DELIMITER   ;   \n \n /* UPDATE更新操作的触发器 */   \n DELIMITER   |   \n DROP   TRIGGER   IF   EXISTS  mytable_update ;   \n CREATE   TRIGGER  mytable_update  \n AFTER   UPDATE   ON  mytable  \n FOR EACH ROW   BEGIN \n\t /*判断表中字段新数据与旧数据变化*/ \n\t if  new . status <> old . status   then \n     SET   @tt_json   =   ( SELECT  json_object ( id , addtime , title )   FROM  mytable  WHERE  id  =  OLD . id  LIMIT   1 ) ;   \n     SET   @tt_resu   =   ( SELECT  http_get ( CONCAT ( 'http://192.168.8.34:1978/' ,  OLD . id ) ,   @tt_json ) ) ;   \n\t /*结束判断*/ \n\t end   if ; \n END   |   \n DELIMITER   ;   \n \n /* DELETE删除操作的触发器 */   \n DELIMITER   |   \n DROP   TRIGGER   IF   EXISTS  mytable_delete ;   \n CREATE   TRIGGER  mytable_delete  \n AFTER   DELETE   ON  mytable  \n FOR EACH ROW   BEGIN   \n     SET   @tt_resu   =   ( SELECT  http_delete ( CONCAT ( 'http://192.168.8.34:1978/' ,  OLD . id ) ) ) ;   \n END   |   \n DELIMITER   ;   \n \n ",createdTime:1761814324e3},{title:"Oracle",frontmatter:{description:"Oracle两种临时表的创建及使用方法\nhttps://docs.oracle.com/en/database/oracle/oracle-database/21/lnoci/preface.html",meta:[{name:"twitter:title",content:"Oracle"},{name:"twitter:description",content:"Oracle两种临时表的创建及使用方法\nhttps://docs.oracle.com/en/database/oracle/oracle-database/21/lnoci/preface.html"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/DBS/Oracle.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Oracle"},{property:"og:description",content:"Oracle两种临时表的创建及使用方法\nhttps://docs.oracle.com/en/database/oracle/oracle-database/21/lnoci/preface.html"},{property:"og:url",content:"https://bajins.com/DBS/Oracle.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Oracle"},{itemprop:"description",content:"Oracle两种临时表的创建及使用方法\nhttps://docs.oracle.com/en/database/oracle/oracle-database/21/lnoci/preface.html"}]},regularPath:"/DBS/Oracle.html",relativePath:"DBS/Oracle.md",key:"v-28b0a469",path:"/DBS/Oracle.html",headers:[{level:2,title:"Flag",slug:"flag"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Oracle \n Flag \n Flag \n \n Oracle with as + / + materialize / 优化 \n Oracle两种临时表的创建及使用方法 \n https://docs.oracle.com/en/database/oracle/oracle-database/21/lnoci/preface.html \n \n \n 空字符串''同等NULL，字符串与数字类型会自动转换 \n \n \n Oracle Call Interface（OCI）是Oracle提供的一组C语言API，用于开发Oracle数据库应用程序。\nOCI提供了一种直接访问Oracle数据库的方式，使开发人员可以编写高效且可扩展的应用程序 \n \n -- 创建会话级临时表来存储原数据，并删除表数据 \n CREATE   GLOBAL   TEMPORARY   TABLE  TEST_BAK  AS   ( SELECT   *   FROM  TEST ) ; \n\n -- 查看临时表数据 \n SELECT   *   FROM  TEST_BAK ; \n\n -- Oracle中类似于PostgreSQL的unnest \n -- https://docs.oracle.com/en/database/oracle/oracle-database/23/addci/extensibility-constants-types-and-mappings.html \n select   *   from   table ( sys . odcinumberlist ( 3 , 4 , 3 ) ) \n select   *   from   table ( sys . odcivarchar2list ( '3a' , '4b' , '3d' ) ) \n\n -- 常量子查询 \n字段  IN   ( SELECT   10000   FROM  dual  UNION   ALL   SELECT   20000   FROM  dual ) \n\n -- 清空数据 delete是dml操作；truncate是ddl操作，ddl隐式提交不能回滚，会回收表空间 \n DELETE   FROM  TEST ; \n -- 将目标字段数据清空 \n --UPDATE TEST SET MEASURED = NULL; \n\n -- 修改表字段 \n ALTER   TABLE  TEST  MODIFY  MEASURED NUMBER ( 18 , 6 ) ; \n\n -- 还原表结构 \n INSERT   INTO  TEST  SELECT   *   FROM  TEST_BAK ; \n\n -- 删除临时表 \n DROP   TABLE  TEST_BAK ; \n\n\n -- 替代LISTAGG拼接超4000字符长度 \n SELECT \nREGEXP_REPLACE ( RTRIM ( XMLSERIALIZE ( CONTENT XMLAGG ( XMLELEMENT ( E , colname , ',' ) . EXTRACT ( '//text()' ) )   AS  CLOB ) , ', ' ) , '(,)+' , ',' )  a , \nREGEXP_REPLACE ( RTRIM ( XMLAGG ( XMLELEMENT ( E , colname , ',' ) . EXTRACT ( '//text()' ) ) . getclobval ( ) , ',' ) , '(,)+' , ',' )  b , \nREGEXP_REPLACE ( RTRIM ( REGEXP_REPLACE ( XMLSERIALIZE ( CONTENT XMLAGG ( XMLELEMENT ( e ,  colname  ||   ',' ) )   AS  CLOB ) , '<E>|</E>' , '' ) , ',' ) , '(,)+' , ',' )  c\n FROM  table_name\n GROUP   BY  grouping_column ; \n \n 系统表 \n \n USER_TABLES  当前用户拥有的表： TABLE_NAME , TABLESPACE_NAME , LAST_ANALYZED \n DBA_TABLES  包括系统表：多了 OWER 列 \n ALL_TABLES  所有用户的表：多了 OWER 列 \n ALL_OBJECTS  当前用户有访问权限的所有对象： OWER , OBJECT_NAME , SUBOBJECT_NAME , OBJECT_ID , CREATED , LAST_DDL_TIME , TIMESTAMP , STATUS \n USER_TAB_COLUMNS  当前用户拥有的表字段 \n ALL_TAB_COLUMNS \n DBA_TAB_COLUMNS \n USER_TAB_COMMENTS  当前用户拥有的表注释 ： TABLE_NAME , TABLE_TYPE , COMMENTS \n DBA_TAB_COMMENTS  ：多了 OWER 列 \n ALL_TAB_COMMENTS  ：多了 OWER 列 \n USER_COL_COMMENTS  当前用户拥有的表字段注释 ：  TABLE_NAME , COLUMN_NAME , COMMENTS \n DBA_COL_COMMENTS  ：多了 OWER 列 \n ALL_COL_COMMENTS  ：多了 OWER 列 \n \n \n SELECT * FROM USER_TAB_COMMENTS WHERE COMMENTS LIKE '%摘要%' \n \n 分组获取最新一条数据（查询各组最新的一条记录） \n \n over partition by 分析函数（开窗函数） \n \n SELECT   *   FROM   ( \n     SELECT  ROW_NUMBER ( )   OVER ( PARTITION   BY  分组字段名  ORDER   BY  排序字段名  DESC )  rn , t . *   FROM  test1 t\n     )   WHERE  rn  =   1 ; \n\n SELECT  t . *   FROM  test1 t  GROUP   BY  分组字段名  ORDER   BY  排序字段名  DESC   FETCH   FIRST   1   ROWS  ONLY ; \n\n\n SELECT   *   FROM   ( \n     select  eb_vipcode , eb_time , MAX ( eb_time )   over ( partition   by  eb_vipcode )   as   \"atime\"   from  eb_daskexpdateinfo\n     )  x  where  eb_time  =   \"atime\" ; \n\n SELECT   *   FROM   ( \n     select  ID_ , COMPANY_NAME , USAGE_RATE , CREATE_TIME\n     , MAX ( CREATE_TIME )   over ( partition   by  COMPANY_NAME )   as   \"atime\"   from  SPEC_RATE_ORIGIN\n     )  x  where  CREATE_TIME  =   \"atime\" ; \n \n \n group by \n \n SELECT  eb_vipcode , MAX ( eb_time )   AS   \"atime\"   FROM  eb_daskexpdateinfo  group   by  eb_vipcode\n \n \n inner join \n \n SELECT  A . *   FROM  SPEC_RATE_ORIGIN A  INNER   JOIN   ( \n     SELECT  COMPANY_NAME , MAX ( CREATE_TIME )   AS   \"atime\"   FROM  SPEC_RATE_ORIGIN  group   by  COMPANY_NAME\n     )  B  ON  A . COMPANY_NAME  =  B . COMPANY_NAME  AND  A . CREATE_TIME  =  B . \"atime\" ; \n \n 一次执行多条SQL \n INSERT   ALL \n  INTO  a表 ( 字段 )   VALUES ( 各个值 1 ) \n  INTO  a表 ( 字段 )   VALUES ( 其它值 2 ) \n  INTO  a表 ( 字段 )   VALUES ( 其它值 3 ) \n SELECT   1   FROM  DUAL ; \n \n \n 使用 begin…end; \n \n \n 如何在Oracle中一次执行多条sql语句 \n \n begin \n insert   into  table_name  ( 列名 , 列名 )   values   ( express , express ) ; \n insert   into  table_name  ( 列名 , 列名 )   values   ( express , express ) ; \n insert   into  table_name  ( 列名 , 列名 )   values   ( express , express ) ; \n insert   into  table_name  ( 列名 , 列名 )   values   ( express , express ) ; \n end ; \n \n 插入或更新 upsert \n \n SQL语句 存在就更新不存在就插入 \n merge into 的用法 \n \n MERGE   INTO  table_name alias1   \n USING   ( table | view | sub_query )  alias2  \n ON   ( join  condition )    \n WHEN   MATCHED   THEN    \n     UPDATE  table_name  SET  col1  =  col_val1\n WHEN   NOT   MATCHED   THEN    \n     INSERT   ( column_list )   VALUES   ( column_values ) ; \n \n 死锁 \n -- 查询死锁会话 \n SELECT  l . session_id sid ,  s . serial #, l.locked_mode, l.oracle_username, l.os_user_name \n ,  s . machine ,  s . terminal ,  o . object_name ,  s . logon_time ,  p . SPID\n  FROM  v$locked_object l ,  all_objects o ,  v$ session  s , v$process p\n  WHERE  l . object_id  =  o . object_id  AND  l . session_id  =  s . sid  AND  s . paddr  =  p . addr\n  ORDER   BY  sid ,  s . serial #; \n\n -- 结束 \n alter  system  kill   session   'sid,serial#' ; \n \n orakill SID spid\n \n 查看所有表结构 \n SELECT  t1 . Table_Name  ||  chr ( 13 )   ||  t3 . comments        AS   \"表名称及说明\" , \n        --t3.comments                                 AS \"表说明\", \n       t1 . COLUMN_ID                                   AS   \"序号\" , \n       t1 . Column_Name                                 AS   \"字段名称\" , \n       t1 . DATA_TYPE  ||   '('   ||  t1 . DATA_LENGTH  ||   ')'    AS   \"数据类型\" , \n       t1 . NullAble                                    AS   \"是否为空\" , \n       t2 . Comments                                    AS   \"字段说明\" , \n       t1 . Data_Default                                AS   \"默认值\" \n        --t4.created                                  AS \"建表时间\" \n FROM  cols t1\n LEFT   JOIN  user_col_comments t2  ON  t1 . Table_name  =  t2 . Table_name  AND  t1 . Column_Name  =  t2 . Column_Name\n LEFT   JOIN  user_tab_comments t3  ON  t1 . Table_name  =  t3 . Table_name\n LEFT   JOIN  user_objects t4  ON  t1 . table_name  =  t4 . OBJECT_NAME\n WHERE   NOT   EXISTS   ( \n     SELECT  t4 . Object_Name\n     FROM  User_objects t4\n     WHERE  t4 . Object_Type  =   'TABLE'   AND  t4 . Temporary   =   'Y'   AND  t4 . Object_Name  =  t1 . Table_Name\n ) \n ORDER   BY  t1 . Table_Name ,  t1 . Column_ID ; \n\n -- 查询表字段信息 \n WITH  ct  AS   ( \n     SELECT  u3 . table_name , u3 . column_name , u4 . constraint_type  FROM  user_cons_columns u3\n     JOIN  user_constraints u4  ON  u4 . constraint_name = u3 . constraint_name  AND  u4 . constraint_type = 'P' \n ) \n SELECT   DISTINCT  u1 . column_id\n ,  u1 . column_name\n ,  u1 . data_type  AS  column_type\n ,   ( CASE   WHEN  u1 . data_type = 'NVARCHAR2'   THEN  u1 . data_length / 2   ELSE  u1 . data_length  END )   AS  data_length\n ,   ( CASE   WHEN  DECODE ( u1 . nullable ,   'Y' ,   'N' ,   'N' ,   'Y' ,   'N' ) = 'Y'   THEN   0   ELSE   1   END )   AS  nullable\n ,  u1 . data_precision  AS  data_precision\n ,  u1 . data_scale  AS  data_scale\n ,  u2 . comments\n ,  DECODE ( ct . constraint_type , 'P' , 'PRI' )   AS  column_key\n FROM  user_tab_columns u1\n LEFT   JOIN  user_col_comments u2  ON  u1 . table_name = u2 . table_name  AND  u1 . column_name = u2 . column_name\n LEFT   JOIN  ct  ON  ct . table_name = u1 . table_name  AND  ct . column_name = u1 . column_name\n WHERE  u1 . table_name =   '表名' \n ORDER   BY  u1 . column_id\n \n 日期时间 \n \n Oracle日期格式转换 to_date,to_char,to_timetamp 相互转换 \n \n SELECT  SYSDATE ,  SYSTIMESTAMP  FROM  dual ; \n SELECT  TO_CHAR ( TO_TIMESTAMP ( '2023-05-08 10:10:10' ,   'yyyy-mm-dd hh24:mi:ss' ) ,   'ww' )   FROM  dual ; \n -- 得到当天凌晨0点0分0秒的日期 \n SELECT  TRUNC ( SYSDATE )   FROM  DUAL ; \n -- 获取今天最后的时间（即午夜之前的那一刻） \n SELECT  TRUNC ( SYSDATE )   +   0.99999   AS  last_time  FROM  DUAL ; \n SELECT  TRUNC ( SYSDATE )   +   1   -   1 / 86400   AS  last_time  FROM  dual ; \n SELECT  TRUNC ( SYSDATE )   +   1   -   INTERVAL   '1'   SECOND   AS  last_time  FROM  DUAL ; \n SELECT  TRUNC ( SYSDATE )   +   INTERVAL   '1'   DAY   -   INTERVAL   '1'   SECOND   AS  last_time  FROM  DUAL ; \n SELECT  TRUNC ( SYSDATE )   +   INTERVAL   '23'   HOUR   +   INTERVAL   '59'   MINUTE   +   INTERVAL   '59'   SECOND   AS  last_time  FROM  DUAL ; \n -- 获取本周开始日期（星期一） \n SELECT  TRUNC ( SYSDATE ,   'IW' )   FROM  DUAL ; \n -- 获取本周结束日期（星期日） \n SELECT  TRUNC ( SYSDATE ,   'IW' )   +   7   -   1   FROM  DUAL ; \n -- 获取当月开始时间和结束时间 \n SELECT  TRUNC ( SYSDATE ,   'MM' )   FROM  DUAL\n SELECT  TRUNC ( LAST_DAY ( SYSDATE ) ) +   0.99999   FROM  DUAL\n -- 获取今年开始时间和结束时间 \n SELECT  TO_CHAR ( TRUNC ( SYSDATE ,   'YYYY' ) ,   'YYYY-MM-DD HH24:MI:SS' )   AS  start_date , \n       TO_CHAR ( LAST_DAY ( TRUNC ( SYSDATE ,   'YYYY' )   +   0.99999 ) ,   'YYYY-MM-DD HH24:MI:SS' )   AS  end_date\n FROM  dual ; \n SELECT  TO_DATE ( EXTRACT ( YEAR   FROM  SYSDATE )   ||   '-01-01' ,   'YYYY-MM-DD HH24:MI:SS' )   AS  start_date , \n       TO_DATE ( EXTRACT ( YEAR   FROM  SYSDATE )   ||   '-12-31 23:59:59' ,   'YYYY-MM-DD HH24:MI:SS' )   AS  end_date\n FROM  dual ; \n SELECT  TRUNC ( SYSDATE ,   'YYYY' )   AS  start_date , \n  TRUNC ( SYSDATE  +   INTERVAL   '1'   YEAR ,   'YYYY' )   -   INTERVAL   '1'   SECOND   AS  end_date\n FROM  dual\n -- FM格式模型来实现不要前导零 \n SELECT  TO_CHAR ( SYSDATE ,   'FMMM' )   AS  one_digit_month\n FROM  dual ; \n\n\n -- 获取倒推时间列表 \n SELECT  TRUNC ( sysdate  -  NumToDSInterval ( level - 1 ,   'hour' ) ,   'MI' )   AS  ds  -- 'day','hour','minute','second' \n ,  TRUNC ( sysdate  -  NumToYMInterval ( level - 1 ,   'month' ) ,   'MI' )   AS  ym  -- 'year','month' \n FROM  dual  CONNECT   BY   level   <=   12 ; \n\n SELECT  TO_CHAR ( Add_Months ( TRUNC ( sysdate , 'YYYY' ) ,   Level - 1 ) ,   'FMMonth' )   AS  month_name  FROM  Dual  CONNECT   BY   Level   <=   12 ; \n SELECT  TRUNC ( SYSDATE  -   LEVEL / 24 ,   'HH24' )   AS  HOURMIN  FROM  DUAL  CONNECT   BY   LEVEL   <=   12   ORDER   BY   1 ; \n\n -- 将数据按半小时进行分组 \n SELECT  TO_CHAR ( record_date ,   'YYYY-MM-DD HH24' )   ||   CASE   WHEN  TO_CHAR ( record_date ,   'MI' )   <   '30'   THEN   ':00'   ELSE   ':30'   END   AS  half_hour , \n        SUM ( col_8 )   AS  total_money\n FROM  table_name\n GROUP   BY  TO_CHAR ( record_date ,   'YYYY-MM-DD HH24' )   ||   CASE   WHEN  TO_CHAR ( record_date ,   'MI' )   <   '30'   THEN   ':00'   ELSE   ':30'   END \n\n SELECT  TRUNC ( record_date ,   'HH24' )   +   CASE   WHEN  TO_CHAR ( record_date ,   'MI' )   <   '30'   THEN   INTERVAL   '0'   MINUTE   ELSE   INTERVAL   '30'   MINUTE   END   AS  half_hour , \n        SUM ( col_8 )   AS  total_money\n FROM  table_name\n GROUP   BY  TRUNC ( record_date ,   'HH24' )   +   CASE   WHEN  TO_CHAR ( record_date ,   'MI' )   <   '30'   THEN   INTERVAL   '0'   MINUTE   ELSE   INTERVAL   '30'   MINUTE   END \n \n 随机取数 \n SELECT   * \n FROM  test a\n --WHERE rownum = FLOOR(DBMS_RANDOM.VALUE(1, 10)) \n WHERE   MOD ( rownum ,  floor ( DBMS_RANDOM . VALUE ( 1 ,   10 ) ) )   =   0 \n FETCH   FIRST   ROW  ONLY\n\n -- 重建排序 \n SELECT   *   FROM   ( \n     SELECT  a . * ,  rownum  as  rn\n     FROM  test a\n ) \n WHERE   MOD ( rn ,  floor ( DBMS_RANDOM . VALUE ( 1 ,   1 ) ) )   =   0 \n ORDER   BY  dbms_random . value \n FETCH   FIRST   ROW  ONLY ; \n\n -- Oracle类PostgreSQL的generate_series函数 \n SELECT  ROWNUM  AS  num  FROM  dual  CONNECT   BY  ROWNUM  <=   3 ; \n SELECT   LEVEL   AS  num  FROM  DUAL  CONNECT   BY   LEVEL   <=   3 ; \n -- 使用序列 \n CREATE  SEQUENCE seq_num  START   WITH   1  INCREMENT  BY   1  NOMAXVALUE ; \n SELECT   NEXT   VALUE   FOR  seq_num  AS  num  FROM  DUAL  WHERE   NEXT   VALUE   FOR  seq_num  <=   3 ; \n \n ",createdTime:1761814324e3},{title:"PostgreSQL",frontmatter:{description:"https://github.com/postgres/postgres\n    http://postgres.cn/docs/14/catalogs.html\n    连接字符串\n    https://jdbc.postgresql.org\nhttps://github.com/postgrespro\nhttps://github.com/citusdata\nhttps://github.com/neondatabase/neon\nhttps://github.com/pgpartman\nhttps://github.com/PostgREST/postgrest\nhttps://github.com/CrunchyData\n客户端 https://github.com/sosedoff/pgweb\nhttps://github.com/prest/prest\nhttps://github.com/alibaba/PolarDB-for-PostgreSQL\nhttps://github.com/npgsql\nhttps://github.com/commandprompt/pgmanage\n管理器 https://github.com/sorintlab/stolon\nhttps://github.com/achristmascarl/rainfrog\nhttps://github.com/lesovsky/pgcenter\n连接池工具 https://github.com/pgbouncer/pgbouncer\n扩展Rust开发框架 https://github.com/tcdi/pgx\n迁移 https://github.com/sbdchd/squawk\n分片水平扩展 https://github.com/pg-sharding/spqr\n解析器 https://github.com/pganalyze/libpg_query",meta:[{name:"twitter:title",content:"PostgreSQL"},{name:"twitter:description",content:"https://github.com/postgres/postgres\n    http://postgres.cn/docs/14/catalogs.html\n    连接字符串\n    https://jdbc.postgresql.org\nhttps://github.com/postgrespro\nhttps://github.com/citusdata\nhttps://github.com/neondatabase/neon\nhttps://github.com/pgpartman\nhttps://github.com/PostgREST/postgrest\nhttps://github.com/CrunchyData\n客户端 https://github.com/sosedoff/pgweb\nhttps://github.com/prest/prest\nhttps://github.com/alibaba/PolarDB-for-PostgreSQL\nhttps://github.com/npgsql\nhttps://github.com/commandprompt/pgmanage\n管理器 https://github.com/sorintlab/stolon\nhttps://github.com/achristmascarl/rainfrog\nhttps://github.com/lesovsky/pgcenter\n连接池工具 https://github.com/pgbouncer/pgbouncer\n扩展Rust开发框架 https://github.com/tcdi/pgx\n迁移 https://github.com/sbdchd/squawk\n分片水平扩展 https://github.com/pg-sharding/spqr\n解析器 https://github.com/pganalyze/libpg_query"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/DBS/PostgreSQL.html"},{property:"og:type",content:"article"},{property:"og:title",content:"PostgreSQL"},{property:"og:description",content:"https://github.com/postgres/postgres\n    http://postgres.cn/docs/14/catalogs.html\n    连接字符串\n    https://jdbc.postgresql.org\nhttps://github.com/postgrespro\nhttps://github.com/citusdata\nhttps://github.com/neondatabase/neon\nhttps://github.com/pgpartman\nhttps://github.com/PostgREST/postgrest\nhttps://github.com/CrunchyData\n客户端 https://github.com/sosedoff/pgweb\nhttps://github.com/prest/prest\nhttps://github.com/alibaba/PolarDB-for-PostgreSQL\nhttps://github.com/npgsql\nhttps://github.com/commandprompt/pgmanage\n管理器 https://github.com/sorintlab/stolon\nhttps://github.com/achristmascarl/rainfrog\nhttps://github.com/lesovsky/pgcenter\n连接池工具 https://github.com/pgbouncer/pgbouncer\n扩展Rust开发框架 https://github.com/tcdi/pgx\n迁移 https://github.com/sbdchd/squawk\n分片水平扩展 https://github.com/pg-sharding/spqr\n解析器 https://github.com/pganalyze/libpg_query"},{property:"og:url",content:"https://bajins.com/DBS/PostgreSQL.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"PostgreSQL"},{itemprop:"description",content:"https://github.com/postgres/postgres\n    http://postgres.cn/docs/14/catalogs.html\n    连接字符串\n    https://jdbc.postgresql.org\nhttps://github.com/postgrespro\nhttps://github.com/citusdata\nhttps://github.com/neondatabase/neon\nhttps://github.com/pgpartman\nhttps://github.com/PostgREST/postgrest\nhttps://github.com/CrunchyData\n客户端 https://github.com/sosedoff/pgweb\nhttps://github.com/prest/prest\nhttps://github.com/alibaba/PolarDB-for-PostgreSQL\nhttps://github.com/npgsql\nhttps://github.com/commandprompt/pgmanage\n管理器 https://github.com/sorintlab/stolon\nhttps://github.com/achristmascarl/rainfrog\nhttps://github.com/lesovsky/pgcenter\n连接池工具 https://github.com/pgbouncer/pgbouncer\n扩展Rust开发框架 https://github.com/tcdi/pgx\n迁移 https://github.com/sbdchd/squawk\n分片水平扩展 https://github.com/pg-sharding/spqr\n解析器 https://github.com/pganalyze/libpg_query"}]},regularPath:"/DBS/PostgreSQL.html",relativePath:"DBS/PostgreSQL.md",key:"v-a17ce206",path:"/DBS/PostgreSQL.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"备份恢复",slug:"备份恢复"},{level:2,title:"修改连接类型",slug:"修改连接类型"},{level:2,title:"启动",slug:"启动"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" PostgreSQL \n Flag 备份恢复 修改连接类型 启动 \n Flag \n \n https://github.com/topics/postgrest \n https://github.com/topics/postgresql \n https://github.com/dhamaniasad/awesome-postgres \n \n \n https://github.com/postgres/postgres \n \n http://postgres.cn/docs/14/catalogs.html \n 连接字符串 \n https://jdbc.postgresql.org \n \n \n https://github.com/postgrespro \n https://github.com/citusdata \n https://github.com/neondatabase/neon \n https://github.com/pgpartman \n https://github.com/PostgREST/postgrest \n https://github.com/CrunchyData \n 客户端  https://github.com/sosedoff/pgweb \n https://github.com/prest/prest \n https://github.com/alibaba/PolarDB-for-PostgreSQL \n https://github.com/npgsql \n https://github.com/commandprompt/pgmanage \n 管理器  https://github.com/sorintlab/stolon \n https://github.com/achristmascarl/rainfrog \n https://github.com/lesovsky/pgcenter \n 连接池工具  https://github.com/pgbouncer/pgbouncer \n 扩展Rust开发框架  https://github.com/tcdi/pgx \n 迁移  https://github.com/sbdchd/squawk \n 分片水平扩展  https://github.com/pg-sharding/spqr \n 解析器  https://github.com/pganalyze/libpg_query \n \n \n 文本搜索和分析  https://github.com/zombodb/zombodb \n \n \n 开发指南  https://github.com/dongxuyang1985/postgresql_dev_guide \n 不剪发的Tony老师《SQL编程思想》作者 \n Postgresql库常用系统表 \n PostgreSQL upsert(插入更新)教程 \n PostgreSQL_树形结构的递归查询 \n postgresql递归查询 \n PostgreSQL窗口函数 \n PostgreSQL 触发器 \n PostgreSQL的存储过程及基本使用 \n PostgreSQL事件触发器实战教程 \n pg12.5中分区表的一些操作 \n Postgresql12 分区表实例以及自动添加分区 \n postgresql常见数值,字符,日期类型常见函数总结 \n PostgreSQL学习手册(目录) \n PostgreSQL中的OID \n \n -- 插入或更新 upsert \n INSERT   INTO  table_name ( column_list )  \n VALUES ( value_list ) \n ON  CONFLICT target  action ; \n\n -- https://zhuanlan.zhihu.com/p/342722338 \n -- https://dba.stackexchange.com/questions/91247/optimizing-a-postgres-query-with-a-large-in/91539 \n -- https://www.postgresql.org/docs/current/arrays.html \n -- https://www.postgresql.org/docs/current/functions-array.html \n -- 临时表 \n with  tmp_table  as   ( \n     select  unnest ( '{\n        10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000\n    }' :: bigint [ ] )   \"aid\" \n ) \n select   *   from  tmp_table\n\n -- https://zhuanlan.zhihu.com/p/38381497 \n -- WITH ORDINALITY返回记录的每一行行号 \n SELECT   *   FROM  unnest ( ARRAY [ 'a' , 'b' , 'c' , 'd' , 'e' , 'f' ] )   WITH  ORDINALITY ; \n\n -- 常量子查询 \n字段  in   (   VALUES   ( 10000 ) ,   ( 11000 ) ,   ( 12000 ) ,   ( 13000 ) ,   ( 14000 ) ,   ( 15000 ) ,   ( 16000 ) ,   ( 17000 ) ,   ( 18000 ) ,   ( 19000 ) ,   ( 20000 ) ) ; \n\n -- JSON \n -- https://www.postgresql.org/docs/current/functions-json.html \n -- https://www.crunchydata.com/developers/playground/basics-of-jsonb \n SELECT   *   FROM  jsonb_to_recordset ( '[{\"name\": \"batman\"}, {\"name\": \"superman\"}]' ::jsonb )   AS  x ( name  TEXT ) ; \n SELECT   *   FROM  json_array_elements_text ( '[\"batman\", \"superman\"]' ) ; \n \n 查询Postgres数据库中的所有表信息（表名、备注） \n SELECT \n\trelname  AS  tabname\n\t ,  cast ( obj_description (  relfilenode ,   'pg_class' )   AS   VARCHAR   )   AS   COMMENT \n     ,  b . description\n FROM  pg_class c\n LEFT   JOIN  pg_description b  ON  b . objsubid  = 0   AND  a . oid = b . objoid\n WHERE  relkind  =   'r'   AND  relname  NOT   LIKE   'pg_%'   AND  relname  NOT   LIKE   'sql_%' \n     -- AND relchecks=0 -- 过滤掉分表 \n ORDER   BY  relname\n\n\n -- 查询表字段信息 \n SELECT  col_description ( a . attrelid , a . attnum )   AS  comments\n --, format_type(a.atttypid,a.atttypmod) AS column_type\" \n ,  t . typname  AS  column_type\n ,  a . attname  AS  column_name\n ,   CASE   WHEN  a . attnotnull  THEN   0   ELSE   1   END   AS  nullable\n ,   CASE   WHEN  p . conname  IS   NULL   THEN   ''   ELSE   'PRI'   END   AS  column_key\n ,   CASE   WHEN  a . attlen > 0   THEN  a . attlen\n         WHEN  t . typname = 'numeric'   THEN  pc . numeric_precision\n         WHEN  t . typname = 'timestamp'   THEN  pc . datetime_precision\n         ELSE  a . atttypmod - 4 \n   END   AS  data_length\n ,   CASE   WHEN  a . attlen > 0   THEN  a . attlen\n         WHEN  t . typname = 'numeric'   THEN  pc . numeric_precision - pc . numeric_scale\n         WHEN  t . typname = 'timestamp'   THEN  pc . datetime_precision\n         WHEN  t . typname = 'varchar'   THEN  pc . character_maximum_length\n         ELSE  a . atttypmod - 4 \n   END   AS  data_precision\n ,  pc . numeric_scale  AS  data_scale\n FROM  pg_class c\n LEFT   JOIN  pg_attribute a  ON  a . attrelid = c . oid\n LEFT   JOIN  pg_constraint  as  p  ON  c . oid = p . conrelid  AND  p . conkey [ 1 ] = a . attnum  AND  p . contype = 'p' \n LEFT   JOIN  pg_type t  ON  t . oid = a . atttypid\n LEFT   JOIN  pg_namespace n  ON  n . oid = c . relnamespace\n -- LEFT JOIN pg_tables tb ON tb.schemaname=n.nspname AND tb.tablename=c.relname \n LEFT   JOIN  information_schema . columns  pc  ON  pc . table_schema = n . nspname  AND  pc . table_name = c . relname  AND  pc . column_name = a . attname\n WHERE  a . attisdropped = 'f'   AND  a . attnum > 0   AND  c . relname = '表名' \n -- ORDER BY a.attnum \n \n 查询Postgres数据库中的表字段名、类型、注释、注释是否为空 \n -- information_schema.COLUMNS \n SELECT \n\ta . attname  AS  NAME , \n\tcol_description (  a . attrelid ,  a . attnum  )   AS   COMMENT , \n\tformat_type (  a . atttypid ,  a . atttypmod  )   AS   type , \n\ta . attnotnull  AS  notnull\n FROM \n\tpg_class  AS  c , \n\tpg_attribute  AS  a\n WHERE \n\tc . relname  =   '表名' \n\t AND  a . attrelid  =  c . oid\n\t AND  a . attnum  > 0 \n \n UUID \n -- 不建议在高并发下使用，以下三个语句都可以生成 \n SELECT  uuid_in ( md5 ( random ( ) :: text   ||   now ( ) :: text ) ::cstring ) ; \n SELECT  uuid_in ( md5 ( random ( ) :: text   ||  clock_timestamp ( ) :: text ) ::cstring ) ; \n SELECT  md5 ( random ( ) :: text   ||  clock_timestamp ( ) :: text ) ::uuid ; \n -- 去掉-，32位 \n SELECT   REPLACE ( md5 ( random ( ) :: text   ||  clock_timestamp ( ) :: text ) , '-' , '' ) ; \n \n 日期时间 \n \n https://www.postgresql.org/docs/current/functions-datetime.html \n \n select  to_timestamp ( '2022-08-02 00:00:00' ,   'yyyy-MM-dd hh24:mi:ss' ) ; \n select  to_date ( '2022-08-02 23:59:59' ,   'yyyy-MM-dd HH24:mi:ss' ) ; \n select  to_char ( now ( ) ,   'yyyy-MM-dd HH24:mi:ss' ) ; \n select  date_trunc ( 'day' ,   now ( ) )   -   interval   '1d'   +   ( '6 hours' ) :: INTERVAL ; \n -- 得到当天凌晨0点0分0秒的日期 \n select  date_trunc ( 'day' ,   now ( ) ) ; \n -- 获取今天最后的时间（即午夜之前的那一刻） \n SELECT   CURRENT_DATE   +   INTERVAL   '1 day'   -   INTERVAL   '1 microsecond' ; \n SELECT   ( date_trunc ( 'day' ,   now ( ) )   +   INTERVAL   '1 day'   -   INTERVAL   '1 microsecond' ) :: timestamp ; \n SELECT  DATE_TRUNC ( 'day' ,   CURRENT_TIMESTAMP )   +   INTERVAL   '1 day - 1 microsecond' ; \n SELECT  DATE_TRUNC ( 'day' ,   CURRENT_TIMESTAMP )   +   INTERVAL   '1 day'   -   INTERVAL   '1 microsecond' ; \n -- 月末 \n select  date_trunc ( 'month' ,   now ( )   +   '1 months' )   +   '-1 days' ; \n -- 获取上个月的开始和结束时间 \n select  date_trunc ( 'month' ,   current_date   -   interval   '1 month' ) ,  date_trunc ( 'month' ,   current_date )   -   interval   '1 microsecond' ; \n\n -- 获取周数 \n select  extract ( week  FROM   timestamp   '2022-01-01' )  week ; \n SELECT  date_part ( 'week' ,   timestamp   '2022-01-01' )  week ; \n -- 遍历两个日期的每一天 https://stackoverflow.com/questions/6870499/generate-series-equivalent-in-mysql \n select   *   from  generate_series ( '2022-09-21 00:00:00' :: TIMESTAMP ,   '2022-09-22 00:00:00' :: TIMESTAMP ,   '1 day' ) ; \n -- 遍历两个日期的每小时 \n select   *   from  generate_series ( '2022-09-21 00:00:00' :: TIMESTAMP ,   '2022-09-22 00:00:00' :: TIMESTAMP ,   '1 hour' ) ; \n -- 每一天每一小时每一行的列数据 \n select \n    d:: date :: text   ||   ' '   || \n        to_char ( d:: time ,   'HH24:MM:SS' )   ||   ' - '   || \n        to_char ( d:: time   +   interval   '1 hour'   -   interval   '1 second' ,   'HH24:MM:SS' )   as   hour \n from \n    generate_series ( \n        ( date   '2022-09-21' ) :: timestamp , \n        ( date   '2022-09-22' ) :: timestamp , \n        interval   '1 hour' \n      )   as  d\n -- 计算时间差，实际时间不到1小时时，DATEDIFF会返回1，而DATE_PART返回0 \n SELECT  DATE_PART ( 'day' ,   '2011-12-30 08:55' :: timestamp   -   '2011-12-30 09:05' :: timestamp )   *   24   +  \n        DATE_PART ( 'hour' ,   '2011-12-30 08:55' :: timestamp   -   '2011-12-30 09:05' :: timestamp ) ; \n -- 计算月份差 \n SELECT   12 * EXTRACT ( YEAR   from  age ( '2023-06-01' , '2022-01-01' ) ) + EXTRACT ( MONTH   from  age ( '2023-06-01' , '2022-01-01' ) ) ; \n -- 提取days时结果是准确的；但提取hours的时候，出现的小时数没有考虑日期，最大23 \n SELECT  EXTRACT ( DAYS  FROM   NOW ( )   -   '2020-01-31 10:00:00' :: timestamp ) ; \n SELECT   ROUND ( ( EXTRACT ( EPOCH  FROM   timestamp   '2023-12-25 12:00:00'   -   timestamp   '2023-12-20 00:00:00' )   /   86400 ) :: NUMERIC ,   2 )   AS  days_diff ; \n \n 整数除法保留小数 \n select   1 / 2 ::float8\n select   1 / 2 :: numeric \n select   1 / cast ( 2   as   numeric ) \n 备份恢复 \n -- 表结构复制，包括索引和约束 \n create   table   schema . table_name_bak  ( like   schema . table_name including  all ) ; \n \n \n \n \n 步骤 \n 操作 \n 目的 \n 备注 \n \n \n \n \n 1 \n 转储源数据库 \n 为克隆或迁移创建逻辑备份 \n 使用  pg_dump  或  pg_basebackup  其他等效工具 \n \n \n 2 \n 准备目标数据库 \n 设置用户、角色和模式以避免权限问题 \n 确保扩展匹配 \n \n \n 3 \n 恢复SQL转储 \n 在新环境中重建完整的模式和数据 \n 使用  psql <  或  pg_restore \n \n \n 4 \n 重新应用只读权限 \n 强制执行访问控制并确保最小权限角色 \n 恢复后应用GRANT \n \n \n \n \n https://www.postgresql.org/docs/current/app-pgbasebackup.html \n https://www.postgresql.org/docs/current/app-pgdump.html \n https://www.postgresql.org/docs/current/app-pgrestore.html \n https://www.postgresql.org/docs/current/app-psql.html \n https://dev.to/w95/cloning-postgresql-databases-a-developers-guide-to-local-replication-14a6 \n \n #!/bin/bash \n\n SOURCE_DB = source_db\n TARGET_DB = target_db\n ADMIN_USER = admin_user\n HOST = your-rds-endpoint.amazonaws.com\nStep 1: Dump source database \n echo   \"Dumping  $SOURCE_DB ...\" \npg_dump  -h   $HOST   -U   $ADMIN_USER   -d   $SOURCE_DB   >   ${SOURCE_DB} _dump.sql\nStep 2: Prepare target database \npsql  -h   $HOST   -U   $ADMIN_USER   -d   $TARGET_DB   -f  db_clone_setup.sql\nStep 3: Restore into target database \npsql  -h   $HOST   -U   $ADMIN_USER   -d   $TARGET_DB   <   ${SOURCE_DB} _dump.sql\n \n \n 默认使用相同模式恢复 \n使用自定义格式 (-F c) 或目录格式 (-F d)  \n--schema指定要过滤的模式 \n--exclude-table=table_name：完全排除指定的表（包括表结构和数据） \n--exclude-table-data=table_name：只排除指定表的数据，但会备份表的结构 \n-f 指定备份文件 \n . \\pg_dump . exe  - h  \"192.168.24.100\"   - p 5432  - U  \"readonly\"   - d  \"test\"   - F c  - f backup . dump\n恢复到同名模式（Schema）下 --schema过滤指定模式 \n-l 或 --list 提取内容列表 \n-L 或 --use-list 只恢复在 restore_list.txt 文件中没有被注释掉的对象 \n . \\pg_restore . exe  - h  \"127.0.0.1\"   - p 5432  - U  \"t1\"   - d  \"postgres\"   -- no-owner  -- no-privileges  \"E:\\backup.dump\" \n \n -- 重命名模式（Schema） \n ALTER   SCHEMA  schema_A  RENAME   TO  schema_B ; \n -- 查看search_path（搜索路径）中是否有指定模式 \n SHOW  search_path ; \n -- 修改search_path（搜索路径），断开连接，然后重新登录，新的 search_path 设置才会生效 \n SET  search_path  =  schema_B ,   public ; \n -- SET search_path TO schema_B, public; \n ALTER   USER  postgres  SET  search_path  TO  schema_B ,   public ; \n ALTER  ROLE postgres  SET  search_path  TO  schema_B ,   public ; \n ALTER   DATABASE  test  SET  search_path  TO  schema_B ,   public ; \n -- 授予用户访问指定 schema 的权限 \n GRANT   USAGE   ON   SCHEMA  schema_B  TO  postgres ; \n -- 授予用户该 schema 下所有表的权限 \n GRANT   ALL   PRIVILEGES   ON   ALL   TABLES   IN   SCHEMA  schema_B  TO  postgres ; \n GRANT   SELECT ,   INSERT ,   UPDATE ,   DELETE   ON   ALL   TABLES   IN   SCHEMA  schema_B  TO  postgres ; \n -- 授予对所有序列的权限 \n GRANT   USAGE   ON   ALL  SEQUENCES  IN   SCHEMA  schema_B  TO  postgres ; \n -- 为未来创建的对象设置默认权限 \n -- FOR ROLE xx 规则应用于 xx 创建的表，可以不要 \n ALTER   DEFAULT   PRIVILEGES   FOR  ROLE postgres  IN   SCHEMA  schema_B  GRANT   SELECT ,   INSERT ,   UPDATE ,   DELETE   ON   TABLES   TO  postgres ; \n -- 为未来的序列设置权限 \n ALTER   DEFAULT   PRIVILEGES   IN   SCHEMA  schema_B  GRANT   USAGE   ON  SEQUENCES  TO  postgres ; \n -- 为未来创建的函数授予执行权限 \n ALTER   DEFAULT   PRIVILEGES   FOR  ROLE postgres  IN   SCHEMA  schema_B  GRANT   EXECUTE   ON  FUNCTIONS  TO  postgres ; \n \n \n 导出为纯文本格式并修改模式再恢复 \n导出为标准的 SQL 脚本纯文本格式 --schema指定要过滤的模式 -f 或 > 指定备份文件 \n . \\pg_dump . exe  - h  \"192.168.24.100\"   - p 5432  - U  \"readonly\"   - d  \"test\"   -- schema=schema_A > backup . sql\n将所有出现的旧模式名 schema_A 替换为新模式名 schema_B \n直接修改文件 (-i)，并创建一个名为 backup.sql.bak 的原始文件备份 (.bak) s/替换命令的开始 \\b 是一个“单词边界” \nsed  - i . bak  's/\\bchema_A\\./schema_B\\./g'  backup . sql\nsed 's/\\schema_A\\./schema_B\\./g' backup.sql > modified_backup.sql \nsearch_path（搜索路径）是一个会话变量，定义当你在查询中只写表名（而不带模式名）时，数据库应该按照什么顺序去哪些模式里查找这个表 \nsed  - i  \"s/SET search_path = schema_A/SET search_path = schema_B/g\"  backup . sql\n将修改后的 .sql 文件导入到目标数据库 \n-1 (--single-transaction) 标志，将整个脚本导入过程在单个事务中完成 \n-f 或 < 指定备份文件 \npsql  - U  \"t1\"   - d  \"postgres\"   - 1 < backup . sql\n 修改连接类型 \n SHOW  config_file ; \n SHOW  hba_file ; \n SHOW  postmaster_start_time ; \n SHOW  data_directory ; \n SHOW  listen_addresses ; \n SHOW  port ; \n SHOW  max_connections ; \n SHOW  unix_socket_directories ; \n SHOW  log_directory ; \n SHOW  log_filename ; \n SHOW  log_file_mode ; \n SHOW  log_truncate_on_rotation ; \n SHOW  log_rotation_age ; \n SHOW  log_rotation_size ; \n SHOW  log_checkpoints ; \n SHOW  log_connections ; \n SHOW  log_disconnections ; \n SHOW  log_statement ; \n SHOW  log_duration ; \n SHOW  log_error_verbosity ; \n SHOW  log_lock_waits ; \n SHOW  log_temp_files ; \n SHOW  log_autovacuum_min_duration ; \n SHOW  log_temp_files ; \n SHOW  log_autovacuum_min_duration ; \n SHOW  log_checkpoints ; \n \n \n postgresql.conf \n \n listen_addresses = '*'\n \n \n pg_hba.conf (Host-Based Authentication) \n在文件的末尾添加一行新客户端认证规则\n192.168.1.0/24：允许来自 192.168.1.0 到 192.168.1.255 子网的所有连接\ntrust ：允许任何用户使用任何密码连接到数据库\nTYPE  DATABASE        USER            ADDRESS                 METHOD\nhost    all             all             0.0.0.0/0               scram-sha-256\n 启动 \n初始化数据库 \n . \\initdb . exe  - D  \"D:\\PostgreSQL\\data\"   -- locale=C  -- username=postgres  -- encoding=UTF8\nstart: 启动 \nstop: 停止 \nrestart: 重启 \nreload: 重新加载服务器的配置文件，而不需要完全重启服务 \nstatus: 显示服务器的当前状态 \n-o: 将后面的字符串“透传”给 postgres 进程，覆盖 postgresql.conf 文件中的任何配置参数 \n-c: 设置一个配置参数 \n . \\pg_ctl . exe  start-o   \"-p 5433 -c listen_addresses=* -c log_statement=all\"   - D  \"../../PostgreSQL/data\"  \n \n ",createdTime:1761814324e3},{title:"关系型SQL标准",frontmatter:{description:"Structured Query Language：SQL86、SQL89、SQL92、SQL99、SQL2003、SQL2008、SQL2011、SQL2016",meta:[{name:"image",content:"https://bajins.com/images/ddl-dml-dcl.png"},{name:"twitter:title",content:"关系型SQL标准"},{name:"twitter:description",content:"Structured Query Language：SQL86、SQL89、SQL92、SQL99、SQL2003、SQL2008、SQL2011、SQL2016"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/ddl-dml-dcl.png"},{name:"twitter:url",content:"https://bajins.com/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8BSQL%E6%A0%87%E5%87%86.html"},{property:"og:type",content:"article"},{property:"og:title",content:"关系型SQL标准"},{property:"og:description",content:"Structured Query Language：SQL86、SQL89、SQL92、SQL99、SQL2003、SQL2008、SQL2011、SQL2016"},{property:"og:image",content:"https://bajins.com/images/ddl-dml-dcl.png"},{property:"og:url",content:"https://bajins.com/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8BSQL%E6%A0%87%E5%87%86.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"关系型SQL标准"},{itemprop:"description",content:"Structured Query Language：SQL86、SQL89、SQL92、SQL99、SQL2003、SQL2008、SQL2011、SQL2016"},{itemprop:"image",content:"https://bajins.com/images/ddl-dml-dcl.png"}]},regularPath:"/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8BSQL%E6%A0%87%E5%87%86.html",relativePath:"DBS/关系型SQL标准.md",key:"v-a19f2896",path:"/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8BSQL%E6%A0%87%E5%87%86.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"DDL/DML/DQL/DCL/TCL",slug:"ddl-dml-dql-dcl-tcl"},{level:2,title:"TREE树形结构",slug:"tree树形结构"},{level:2,title:"SQL1992",slug:"sql1992"},{level:2,title:"SQL1999",slug:"sql1999"},{level:3,title:"自连接",slug:"自连接"},{level:3,title:"子查询",slug:"子查询"},{level:3,title:"分页查询",slug:"分页查询"},{level:3,title:"连接查询",slug:"连接查询"},{level:3,title:"CASE",slug:"case"},{level:2,title:"SQL2003",slug:"sql2003"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 关系型SQL标准 \n Flag DDL/DML/DQL/DCL/TCL TREE树形结构 SQL1992 SQL1999 自连接 子查询 分页查询 连接查询 CASE SQL2003 \n Flag \n \n Structured Query Language：SQL86、SQL89、SQL92、SQL99、SQL2003、SQL2008、SQL2011、SQL2016 \n \n SQL标准主要由以下几个组织制定和维护 \n \n ISO/IEC JTC 1/SC 32 - 国际标准化组织,负责数据管理和交换。 \n ANSI X3H2 - 美国国家标准协会下属的一个委员会,负责数据库语言标准。 \n SQL标准委员会(SQL Standards Committee) - 包括数据库供应商和用户在内的多个组织,负责制定SQL标准。 \n \n SQL标准文档包括 \n \n SQL/Foundation - 基本SQL语法和功能。包含SELECT、DDL等语句。 \n SQL/Framework - 数据定义和控制语言。包括数据库对象和权限管理。 \n SQL/CLI - SQL调用接口的标准规范。 \n SQL/PSM - SQL的编程语言绑定规范。 \n SQL/MED - 联合多数据库的标准。 \n \n ISO SQL标准 \n \n https://www.iso.org/sql-standards.html \n Framework (SQL/Framework)：https://www.iso.org/standard/63555.html \n Foundation (SQL/Foundation)：https://www.iso.org/standard/50515.html \n Call-Level Interface (SQL/CLI)：https://www.iso.org/standard/63556.html \n Persistent Stored Modules (SQL/PSM)：https://www.iso.org/standard/65919.html \n Row Pattern Recognition (SQL/RPR)：https://www.iso.org/standard/65920.html \n Management of External Data (SQL/MED)：https://www.iso.org/standard/63559.html \n Object Language Bindings (SQL/OLB)：https://www.iso.org/standard/50517.html \n Information and Definition Schemas (SQL/Schemata)：https://www.iso.org/standard/50516.html \n SQL Routines and Types using the Java TM Programming Language (SQL/JRT)：https://www.iso.org/standard/65921.html \n XML-Related Specifications (SQL/XML)：https://www.iso.org/standard/50518.html \n \n \n SQL2011：https://www.iso.org/standard/53798.html \n SQL2016：https://www.iso.org/standard/63400.html \n https://github.com/crate/sql-99 \n https://standards.iso.org/ittf/PubliclyAvailableStandards/index.html \n \n ANSI SQL标准 \n \n http://webstore.ansi.org/find=sql \n SQL/Foundation (ANSI/INCITS 461): http://webstore.ansi.org/FindStandards.aspx?FacilityID=1&SearchString=sql%2ffoundation+ \n SQL/Framework (INCITS/ISO/IEC 9075-2): http://webstore.ansi.org/RecordDetail.aspx?sku=INCITS%2fISO%2fIEC+9075-2%3a2008 \n SQL/CLI (ANSI INCITS 445): https://webstore.ansi.org/RecordDetail.aspx?sku=INCITS+445-2008 \n SQL/PSM (ANSI INCITS/ISO/IEC 9075-4): http://webstore.ansi.org/RecordDetail.aspx?sku=INCITS%2fISO%2fIEC+9075-4%3a2008 \n \n \n 推荐性国家标准查询-数据库 \n SQL标准简介 \n 数据库必知词汇：SQL标准 \n SQL数据库中什么是游标？ \n SQL之游标 \n \n \n 在标准 SQL 中，字符串使用的是单引号。 \n \n \n 如果字符串本身也包括单引号，则使用两个单引号（注意，不是双引号，字符串中的双引号不需要另外转义）。 \n \n \n 有些SQL中使用双引号字符串，是其它的数据库对 SQL 的扩展，比如在MySQL中允许使用单引号和双引号两种。 \n \n \n 保留字不能用于表名，比如desc，此时需要加入反引号来区别，但使用表名时可忽略反引号。 \n 保留字不能用于字段名，比如desc，此时也需要加入反引号，并且insert等使用时也要加上反引号 \n DDL/DML/DQL/DCL/TCL \n \n DDL(Data Definition Language) 数据定义语言，用于定义和管理 SQL 数据库中的所有对象的语言\n \n CREATE - 创建 \n ALTER - 修改 \n DROP - 删除 \n TRUNCATE - 截断/移除，立即回收磁盘空间，而不需要后续的VACUUM操作 \n COMMENT - 注释 \n RENAME - 重命名 \n \n \n DML(Data Manipulation Language) 数据操纵语言，用于SQL中处理数据等操作统称为数据操纵语言，对模式对象内的数据执行查询\n \n INSERT - 添加 \n UPDATE - 更新 \n DELETE - 删除 \n CALL - 调用 \n EXPLAIN PLAN - 解释 \n LOCK TABLE - 锁，用于控制并发 \n \n \n DQL(Data Query Language) 数据查询语言，根据传递给它的查询获取一些模式关系\n \n SELECT - 用于从数据库中检索数据 \n \n \n DCL(Data Control Language) 数据控制语言，用来授予或回收访问数据库的某种特权\n \n GRANT - 授权 允许对象的创建者给某用户或某组或所有用户(PUBLIC)某些特定的权限。 \n REVOKE - 收回已经授予的权限 \n \n \n TCL(Transaction Control Language) 事务控制语言/存储过程控制预言\n \n COMMIT - 提交保存已完成的工作 \n SAVEPOINT - 在事务中设置保存点，可以回滚到此处 \n ROLLBACK - 回滚 \n SET TRANSACTION - 改变事务特性选项 \n TREE树形结构 \n \n start with 起始位置 connect by prior 本级=上级 \n start with 起始位置 connect by 本级=上级 \n connect by 本级=上级 \n SQL1992 \n \n COALESCE \n CASE \n AVG \n COUNT \n MAX \n MIN \n SUM \n TO_DATE \n <>  注意： != 是方言 \n SQL1999 \n sql分类 \n \n +  在哪一边的列，该表就补充null \n \n \n cross join 交叉连接 （笛卡尔积，表乘表） ，不需要on关键字 \n natural join 自然连接 （找两个表中相同的列，进行等值匹配），不需要on关键字 \n inner join 内连接\n \n 必须有on关键字，on表示连接条件 \n inner 关键字可以省略 \n \n \n outer join 外连接，outer关键字可以省略\n \n left outer join 左外连接， +  在等号右边 \n right outer join 右外连接， +  在等号左边 \n full outer join 全外连接 \n \n \n 等值连接 表的连接条件使用  = \n 非等值连接 表的连接条件使用  >、>=、 <、<=、!=、any  等 \n 自连接 自己连接自己 \n \n sql99语法：通过join关键字实现连接 \n \n 含义：1999年推出的sql语法 \n 支持： 等值连接、非等值连接 （内连接）、外连接 \n \n select  字段， . . . \n from  表 1 \n【 inner | left   outer | right   outer 】 join  表 2   on   连接条件\n【 inner | left   outer | right   outer 】 join  表 3   on   连接条件\n【 where  分组前筛选条件】\n【 group   by  分组字段】\n【 having  分组后的筛选条件】\n【 order   by  最后执行的，排序的字段或表达式】\n \n \n 好处：语句上，连接条件和筛选条件实现了分离，简洁明了！ \n 自连接 \n \n cross join：自然连接。主要用于产生笛卡尔积。\n \n select * from emp cross join dept; \n \n \n natural join：自然连接。这种情况下，数据库会自动找到一个字段来消除笛卡尔积。一般来说，数据库会找那些通过外键约束关联的字段。因此，有较大的局限性。\n \n select * from emp natural join dept; \n \n \n \n \n 案例：查询员工名和直接上级的名称 \n \n \n sql99 \n \n SELECT  e . last_name , m . last_name\n FROM  employees e\n JOIN  employees m  ON  e . ` manager_id ` = m . ` employee_id ` ; \n \n \n sql92 \n \n SELECT  e . last_name , m . last_name\n FROM  employees e , employees m \n WHERE  e . ` manager_id ` = m . ` employee_id ` ; \n 子查询 \n \n 含义：一条查询语句中又嵌套了另一条完整的select语句，其中被嵌套的select语句，称为子查询或内查询在外面的查询语句，称为主查询或外查询 \n \n 特点： \n \n 子查询都放在小括号内 \n 子查询可以放在from后面、select后面、where后面、having后面，但一般放在条件的右侧 \n 子查询优先于主查询执行，主查询使用了子查询的执行结果 \n 子查询根据查询结果的行数不同分为以下两类：\n \n 单行子查询，结果集只有一行，一般搭配单行操作符使用： > < = <> >= <= ，非法使用子查询的情况：\n \n 子查询的结果为一组值 \n 子查询的结果为空 \n \n \n 多行子查询，结果集有多行，一般搭配多行操作符使用：any、all、in、not in\n \n in： 属于子查询结果中的任意一个就行 \n any和all往往可以用其他查询代替 \n 分页查询 \n \n 应用场景：实际的web项目中需要根据用户的需求提交对应的分页查询的sql语句 \n \n select  字段 | 表达式 , . . . \n from  表\n【 where  筛选条件】\n【 group   by  分组字段】\n【 having  分组后的筛选条件】\n【 order   by  排序的字段】\n limit  【起始的记录索引，】 每页的记录数 ; \n \n 特点： \n \n 起始条目索引从0开始 \n limit子句放在查询语句的最后 \n 公式： select * from  表 limit （page-1）*sizePerPage, sizePerPage \n \n 假如：每页显示条目数sizePerPage,要显示的页数 page \n \n \n \n Oracle分页 \n select   *   from   ( \n     select  rownum  as  rn ,  first_name  from   ( select  first_name  from  some_table  order   by  first_name ) \n   )   where  rn  >   100    and  rn  <=   200 \n\n select   *   from   ( select  ncallernm ,   count ( * )  tol  from  tmp_86  group   by  ncallernm  order   by  tol  desc )   where  rownum < 20 \n\n select   *   from  OB_CALL_DATA_LOG rownum < 101   minus   select   *   from  OB_CALL_DATA_LOG rownum > 9 \n 连接查询 \n \n 连接查询的分类：\n \n 按年代分为sql192标准仅仅支持内连接，sql199标准支持内连接，左外连接，右外连接，交叉连接\n   - 按功能分为内连接，外连接，交叉连接 \n \n \n \n sql92标准：内连接包括 \n \n 等值连接： select name,boyname form boys,beauty where beauty.boyfriend_id = boys.id; \n \n 多表等值连接的结果为多表的交集部分;n表连接至少需要n-1个连接条件;多表的顺序没有要求;一般需要为表起别名 \n \n \n 非等值连接： select salary,grade_level form employees e,job_grades g where salary between g.'lowest_sal' and 'highest_sal'; \n 自连接： select e.employee_id,e.last_name,m.employee_id,m.last_name from employees e,employees m where e.'manager_id' = m.'employee_id'; \n \n sql99语法：包括内连接(inner)，外连接(left outer ,right outer,full outer)，交叉连接(cross join) \n \n 语法： select 查询列表 form 表1 别名 【连接类型】 join 表2 别名 on 连接条件 【where 筛选条件】 \n \n \n 特点：添加排序，分组，筛选，inner可以省略，筛选条件放在where后面，连接条件放在on后面，提高分离性 \n \n \n \n 内连接： select 查询列表 form 表1 别名 inner join 表2 别名 on 连接条件 \n \n 等值连接： select last_name,department_name form employee e inner join department d on e.'department_id' = d.'department_id'; \n 非等值连接： select  salary,grade_level from employee e join job_grades g on e.'salary' between g.'lowest_sal' and g.'highest_sal' group by grade_level; \n 自连接:  select e.last_name,m.last_name from employees e join employees m on e.'manager_id' = m.'employee_id' where e.'last_name' like '%k%'; \n \n \n \n 外连接：用于查询一个表中有，一个表中没有的，外连接的查询结果是主表中的所有记录 如果从表中有和它匹配的值，则显示出来，没有显示null \n \n 左外连接，left join左边的是主表：  select b.name,bo.* form beauty b left outer join boys bo on b.'boyfriend_id' = bo.'id'; \n 右外连接，right join右边的是主表：  select b.name,bo.* form boys bo right outer join  beauty b on b.'boyfriend_id' = bo.'id'; \n 全外连接，等于内连接的结果，加上表1有但表2没有的，加上表2有表一没有的 use girls;  select b.*,bo.* from beauty b full outer join boys bo on b.'boyfriend_id' = 'bo.id'; \n 交叉连接： select b.*,bo.* form beauty b cross join boys bo; \n CASE \n \n 同其他编程语言中的 switch...case 或 if...else 语句，可以直接在 order by  后面使用自定义排序 \n \n \n Case函数在满足了某个符合条件后，剩下的条件将会被自动忽略，因此，即使满足多个条件，执行过程中也只认第一个条件。\n在使用 CASE WHEN时，可以把它当作一个没有字段名的字段，字段值根据条件确认，在需要使用字段名时可以是用  as  来定义别名。 \n \n \n 简单Case函数 \n \n \n 简单Case函数胜在简洁，但是它只适用于这种单字段的单值比较 \n \n CASE  sex\n WHEN   '0'   THEN   '男' \n WHEN   '1'   THEN   '男' \n WHEN   '2'   THEN   '女' \n ELSE   '其他'   END \n \n \n Case搜索函数 \n \n \n Case搜索函数的优点在于适用于所有比较的情况 \n \n CASE   WHEN  sex  =   '1'   and  sex  =   '0'   THEN   '男' \n WHEN  sex  =   '2'   THEN   '女' \n ELSE   '其他'   END \n SQL2003 \n \n 窗口函数 \n \n \n 开窗函数（分析函数）简介:与聚合函数一样，开窗函数也是对行集组进行聚合计算，但是它不像普通聚合函数那样每组只返回一个值\n，开窗函数可以为每组返回多个值，因为开窗函数所执行聚合计算的行集组是窗口 \n \n \n 窗口函数是一种分析型的OLAP函数，OLAP是online analytical processing的简称，意思是对数据库数据进行实时分析处理 \n \n 窗口函数可以用在以下两种函数： \n \n 专用窗口函数：\n \n rank() ：按升序顺序，如果有并列名次的行，会占用下一名次的位置。 \n dese_rank() ：按降序顺序，如果并列名次的行，不占用下一名次的位置。 \n row_number() ：不考虑并列名次的情况。 \n \n \n 聚合函数： sum() , avg() , count() , max() , min() \n 向前向后取值： lag() ， lead() \n 百分位： percent_rank() \n 取值函数： first_value() ， last_value() ， nth_value() \n 分箱函数： ntile() \n \n 窗口函数语法 \n < 窗口函数 >   over   ( partition   by   < 用于分组的列名 >   order   by   < 用于排序的列名 > ) \n -- <窗口函数> WITHIN GROUP (ORDER BY <用于排序的列名>) \n \n 应用场景： \n \n topN问题 \n 经典排名问题 \n 在每个组里比较的问题 \n \n",createdTime:1761814324e3},{title:"关系型数据库",frontmatter:{description:"关系型数据库（Relational database）RDBMS，是指采用了关系模型来组织数据的数据库，其以行和列的形式存储数据，以便于用户理解\n> ，关系型数据库这一系列的行和列被称为表，一组表组成了数据库",meta:[{name:"twitter:title",content:"关系型数据库"},{name:"twitter:description",content:"关系型数据库（Relational database）RDBMS，是指采用了关系模型来组织数据的数据库，其以行和列的形式存储数据，以便于用户理解\n> ，关系型数据库这一系列的行和列被称为表，一组表组成了数据库"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93.html"},{property:"og:type",content:"article"},{property:"og:title",content:"关系型数据库"},{property:"og:description",content:"关系型数据库（Relational database）RDBMS，是指采用了关系模型来组织数据的数据库，其以行和列的形式存储数据，以便于用户理解\n> ，关系型数据库这一系列的行和列被称为表，一组表组成了数据库"},{property:"og:url",content:"https://bajins.com/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"关系型数据库"},{itemprop:"description",content:"关系型数据库（Relational database）RDBMS，是指采用了关系模型来组织数据的数据库，其以行和列的形式存储数据，以便于用户理解\n> ，关系型数据库这一系列的行和列被称为表，一组表组成了数据库"}]},regularPath:"/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93.html",relativePath:"DBS/关系型数据库.md",key:"v-c33b74c2",path:"/DBS/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"主流数据库对比",slug:"主流数据库对比"},{level:2,title:"事务",slug:"事务"},{level:2,title:"数据库设计",slug:"数据库设计"},{level:2,title:"SQLite3",slug:"sqlite3"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 关系型数据库 \n Flag 主流数据库对比 事务 数据库设计 SQLite3 \n Flag \n \n 关系型数据库（Relational database）RDBMS，是指采用了关系模型来组织数据的数据库，其以行和列的形式存储数据，以便于用户理解\n，关系型数据库这一系列的行和列被称为表，一组表组成了数据库 \n \n \n https://github.com/opengauss-mirror \n https://github.com/MariaDB \n \n https://github.com/mariadb-corporation \n \n \n https://github.com/percona/percona-server \n SQL代理  https://github.com/sysown/proxysql \n \n 分布式/集群数据库 \n \n https://github.com/VoltDB/voltdb \n \n https://github.com/DBOS-project/voltdb \n \n \n https://github.com/memsql \n \n https://www.singlestore.com \n \n \n https://github.com/cmu-db/noisepage \n https://github.com/greenplum-db \n https://github.com/babelfish-for-postgresql \n \n 嵌入式/本地数据库 \n \n https://github.com/eclipse-store/store  Java \n https://github.com/h2database/h2database \n https://sourceforge.net/projects/hsqldb \n \n http://hsqldb.org \n \n \n https://github.com/apache/derby \n https://github.com/artbits/quickio  Java \n https://github.com/jankotek/MapDB  Java \n https://github.com/FirebirdSQL/firebird \n \n 分析型/OLAP数据库 \n \n https://github.com/duckdb/duckdb \n \n 其他/新兴数据库 \n \n https://github.com/clockworklabs/SpacetimeDB \n \n 递归 \n \n Common Table Expression(公共表表达式)：在CTE中可以包括对自身的引用，因此这种表达式也被称为递归CTE \n \n \n SQL递归查询知多少 \n SQL 的递归查询 \n \n -- ORACLE \n查询语句  start   with  起始条件  connect   by  prior 递归条件\n -- 其他数据库 \n with  recursive cte  as ( \n  select  user_id , manager_id , name , name  as  manager_name  from  employee  where  manager_id = - 1 \n  union   all \n  select  c . user_id , c . manager_id , c . name , p . name  as  manager_name  from  cte p ,  employee c  on  p . user_id = c . manager_id\n ) \n select  user_id , manager_id , name , manager_name  from  cte\n \n 索引类型 \n \n \n \n 索引类型 \n 说明 \n \n \n \n \n B-TREE \n B树索引 \n \n \n HASH \n 哈希索引 \n \n \n GENERALIZED SEARCH TREE \n GIST平衡树结构索引 \n \n \n GENERALIZED INVERTED \n GIN倒排索引索引 \n \n \n SPATIAL \n 空间索引 \n \n \n FULL TEXT \n 全文索引 \n \n \n BITMAP \n 位图索引 \n \n \n INVERTED \n 反向索引 \n \n \n \n 通用日期时间 \n \n SQL 函数 \n \n 姚鑫 - 知乎 \n \n \n \n \n 获得当前日期+时间（date+time）函数 \n \n \n localtime \n localtimestamp \n current_date \n CURRENT_TIME \n current_timestamp \n \n CURRENT_TIMESTAMP  {  +   INTERVAL   1   [ HOUR | MONTH | WEEK | DAY | MINUTE | . . . ]  }\n \n \n INTERVAL 时间单位 \n \n \n \n \n 时间单位 \n 简写 \n 说明 \n \n \n \n \n MILLENNIUM \n ml \n 1000年 \n \n \n CENTURY \n cen \n 100年 \n \n \n DECADE \n dec \n 10年 \n \n \n YEAR \n y/yr \n 年 \n \n \n QUARTER \n \n 季度 \n \n \n MONTH \n mon \n 月 \n \n \n WEEK \n w \n 周 \n \n \n DAY \n d \n 天 \n \n \n HOUR \n h/hr \n 时 \n \n \n MINUTE \n m/min \n 分 \n \n \n SECOND \n s/sec \n 秒 \n \n \n MILLISECOND \n ms \n 毫秒 \n \n \n MICROSECOND \n us \n 微秒 \n \n \n NANOSECOND \n ns \n 纳秒 \n \n \n YEAR_MONTH \n yr_mon \n 年:月 \n \n \n DAY_HOUR \n d_hr \n 日:时 \n \n \n DAY_MINUTE \n d_min \n 日:分 \n \n \n DAY_SECOND \n d_sec \n 日:秒 \n \n \n HOUR_MINUTE \n hr_min \n 时:分 \n \n \n HOUR_SECOND \n hr_sec \n 时:秒 \n \n \n MINUTE_SECOND \n min_sec \n 分:秒 \n \n \n \n \n TRUNC(NUMBER)表示截断数字，TRUNC(date)表示截断日期 \n date_trunc 开始的日期时间 \n date_part 从时间戳中提取 年月日时分秒周 \n to_date 转日期 \n TO_TIMESTAMP 转时间戳 \n 主流数据库对比 \n 主流数据库数据类型对应关系 \n \n https://www.postgresql.org/docs/current/datatype.html \n https://dev.mysql.com/doc/refman/8.0/en/data-types.html \n https://docs.oracle.com/en/database/oracle/oracle-database/21/sqlrf/Data-Types.html \n https://learn.microsoft.com/zh-cn/sql/t-sql/data-types \n https://www.sqlite.org/datatype3.html \n \n \n \n \n 数据类型分类 \n SQL Server \n MySQL \n Oracle \n PostgreSQL \n SQLite \n \n \n \n \n 布尔值 \n bit \n bit \n SMALLINT \n bit \n \n \n \n 布尔值 \n \n \n \n boolean/bool \n \n \n \n 二进制 \n binary \n binary \n BLOB \n \n \n \n \n 二进制 \n double \n double \n BINARY_DOUBLE \n \n \n \n \n 二进制 \n float \n float \n BINARY_FLOAT \n \n \n \n \n 二进制 \n image \n blob \n BLOB \n \n \n \n \n 二进制 \n sql_variant \n longblob \n BLOB \n bytea \n \n \n \n 二进制 \n image \n longblob \n BLOB \n \n \n \n \n 二进制 \n image \n longblob \n LONGRAW \n \n \n \n \n 二进制 \n image \n mediumblob \n BLOB \n \n \n \n \n 二进制 \n image \n longblob \n RAW \n \n \n \n \n 二进制 \n uniqueidentifier \n VARCHAR \n ROWID \n \n \n \n \n 二进制 \n sql_variant \n longblob \n BLOB \n \n \n \n \n 二进制（外部） \n \n \n BFILE \n \n \n \n \n 日期 \n date \n date \n DATE \n date \n date \n \n \n 日期 \n datetime \n datetime \n DATE \n \n \n \n \n 日期 \n datetime2 \n datetime \n DATE \n \n \n \n \n 日期 \n datetimeoffset \n datetime \n DATE \n \n \n \n \n 日期 \n smalldatetime \n datetime \n DATE \n \n \n \n \n 日期 \n time \n time \n DATE \n time \n time \n \n \n 日期 \n timestamp \n timestamp \n TIMESTAMP \n timestamp \n timestamp \n \n \n 日期（带时区） \n \n \n TIMESTAMP WITH   LOCAL TIME ZONE \n timestamp with time zone/timestamptz \n \n \n \n 日期（带时区） \n \n \n \n time with time zone/timetz \n \n \n \n 数字 \n bigint \n bigint \n INTEGER \n bigint/int8 \n \n \n \n 数字 \n decimal \n decimal \n DECIMAL \n numeric/decimal \n decimal \n \n \n 数字 \n double \n double \n FLOAT \n double precision/float8 \n double \n \n \n 数字 \n float \n float \n FLOAT \n \n float \n \n \n 数字 \n int \n int \n INTEGER \n integer/int/int4 \n interger \n \n \n 数字 \n int \n mediumint \n INTEGER \n \n \n \n \n 数字 \n money \n decimal \n DECIMAL \n money \n \n \n \n 数字 \n numeric \n numeric \n NUMBER \n \n \n \n \n 数字 \n REAL \n REAL \n REAL \n real/float4 \n \n \n \n 数字 \n smallint \n smallint \n SMALLINT \n smallint/int2 \n smallint \n \n \n 数字 \n smallmoney \n numeric \n NUMERIC \n \n \n \n \n 数字 \n tinyint \n tinyint \n SMALLINT \n \n \n \n \n 数字 \n year \n year \n NUMBER \n \n \n \n \n 字符串 \n char \n char \n CHAR \n character/char \n char \n \n \n 字符串 \n varchar \n varchar \n VARCHAR2 \n character varying/varchar \n varchar/vargraphic \n \n \n 字符串 \n varchar \n enum \n VARCHAR2 \n \n \n \n \n 字符串 \n nchar \n varchar \n NCHAR \n \n graphic \n \n \n 字符串 \n nvarchar \n varchar \n NVARCHAR2 \n \n \n \n \n 字符串 \n nvarchar(max) \n varchar \n NVARCHAR2 \n \n \n \n \n 字符串 \n nvarchar \n varchar \n NVARCHAR2 \n \n \n \n \n 字符串 \n VARCHAR \n set \n VARCHAR2 \n \n \n \n \n 字符串 \n uniqueidentifier \n VARCHAR \n ROWID \n \n \n \n \n 字符串 \n uniqueidentifier \n VARCHAR \n UROWID \n \n \n \n \n 字符串 \n varchar(max) \n varchar \n VARCHAR2 \n \n \n \n \n 字符串（大） \n text \n text \n CLOB \n text \n \n \n \n 字符串（大） \n text \n longtext \n CLOB \n text \n \n \n \n 字符串（大） \n ntext \n text \n NCLOB \n text \n \n \n \n 字符串（大） \n text \n text \n CLOB \n text \n \n \n \n 字符串（大） \n TEXT \n tinytext \n CLOB \n text \n \n \n \n 字符串（大） \n xml \n TEXT \n CLOB \n xml \n \n \n \n 字符串（大） \n text \n text \n LONG \n \n \n \n \n 字符串（大） \n text \n mediumtext \n CLOB \n \n \n \n \n 字符串（大） \n ntext \n text \n CLOB \n \n \n \n \n 字符串（大） \n text \n JSON \n JSON \n json \n \n \n \n 字符串（二进制） \n varbinary \n tinyblob \n BLOB \n \n \n \n \n 字符串（二进制） \n varbinary \n varbinary \n BLOB \n \n \n \n \n 字符串（二进制） \n varbinary(max) \n varbinary \n BLOB \n \n \n \n \n 字符串（二进制） \n varbinary \n varbinary \n BLOB \n jsonb \n \n \n \n \n 架构模型对比 \n \n \n \n 特性 \n Oracle \n PostgreSQL \n MySQL \n \n \n \n \n (User/Role)与 Schema \n 一对一，用户名 = Schema 名 \n 用户 ≠ Schema，但可关联 \n 无 Schema 概念（Schema ≈ Database） \n \n \n Schema \n 用户拥有的对象集合 \n 命名空间，一个 DB 可有多个 Schema \n 等同于 Database \n \n \n Database \n 一个物理数据库（或 PDB） \n 一个逻辑数据库，包含多个 Schema \n 一个命名空间，包含表等对象 \n \n \n User与Role \n 用户和角色分离 \n 用户是带 LOGIN 的角色，统一模型 \n 用户和角色分离（8.0+ 支持角色） \n \n \n 跨数据库访问 \n 同实例内可通过 DB Link \n 需  dblink  或  foreign data wrapper \n 不支持直接跨库访问（需  dbname.tablename  在同一实例） \n \n \n 默认命名空间 \n 用户自己的 Schema \n public  和用户同名 Schema（在 search_path 中） \n 当前  USE database  的数据库 \n \n \n 权限管理粒度 \n 用户 → 角色 → 对象权限 \n 角色 → 成员 → 对象权限 \n 用户/角色 → 数据库/表级权限 \n \n \n \n \n Oracle \n \n CREATE   USER  alice IDENTIFIED  BY  pwd ; \n -- 自动创建 Schema ALICE \n CREATE   TABLE  alice . employees  ( . . . ) ; \n \n Oracle Instance\n└── Database (CDB or PDB)\n    ├── User: SCOTT → Schema: SCOTT → Tables, Views...\n    ├── User: HR     → Schema: HR     → Tables...\n    └── Roles: DBA, CONNECT...\n \n \n PostgreSQL \n \n CREATE   USER  alice ; \n CREATE   SCHEMA  alice  AUTHORIZATION  alice ; \n SET  search_path  TO  alice ; \n CREATE   TABLE  employees  ( . . . ) ;   -- 存入 alice Schema \n \n PostgreSQL Cluster (Instance)\n├── Database: sales\n│   ├── Schema: public\n│   ├── Schema: sales_team\n│   └── Tables...\n├── Database: hr\n│   ├── Schema: public\n│   └── Tables...\n└── Roles: alice (LOGIN), analyst (NOLOGIN), ...\n \n \n MySQL \n \n CREATE   DATABASE  hr ; \n CREATE   USER   'alice' @'localhost'  IDENTIFIED  BY   'pwd' ; \n GRANT   SELECT   ON  hr . *   TO   'alice' @'localhost' ; \n USE  hr ; \n CREATE   TABLE  employees  ( . . . ) ;   -- 在 hr 数据库中 \n \n MySQL Instance\n├── Database: sales\n│   └── Tables...\n├── Database: hr\n│   └── Tables...\n└── Users: 'alice'@'localhost', 'bob'@'%'\n└── Roles: analyst, admin (8.0+)\n 事务 \n \n 脏数据：未提交的数据 \n 不可重复读（Non-Repeatable Reads）：一个事务先后读取同一条记录，而事务在两次读取之间该数据被其它事务所修改，则两次读取的数据不同 \n 幻读（Phantom Reads）：一个事务按相同的查询条件重新读取以前检索过的数据，却发现其他事务插入了满足其查询条件的新数据 \n \n \n 事务概念 \n 事务隔离级别、脏读、不可重复读、幻读 \n 事务的四大特性 \n \n 遵循 ACID 事务规则 \n 1、A (Atomicity) 原子性 \n \n 一个事务要么全部提交成功，要么全部失败回滚，不能只执行其中的一部分操作，只要有一个操作失败，整个事务就失败，需要回滚。\n例如：从A账户转10元至B账户，分为两个步骤：1.从A账户取10元；2.存入10元至B账户。这两步要么一起完成，要么一起不完成，当只完成第一步，第二步失败的情况下\n，钱就会回滚到A账户中去，否则的话，钱就会莫名其妙少了10元。 \n \n 2、C (Consistency) 一致性 \n \n 数据库要一直处于一致的状态，事务的运行不会改变数据库原本的一致性约束。\n例如：现有完整性约束a+b=10，如果一个事务改变了a，那么必须得改变b，使得事务结束后依然满足a+b=10，否则事务失败。 \n \n 3、I (Isolation) 独立性/隔离性 \n \n 并发的事务之间不会互相影响，如果一个事务要访问的数据正在被另外一个事务修改，只要另外一个事务未提交，它所访问的数据就不受未提交事务的影响。\n例如：现在从A账户转10元至B账户，在这个交易还未完成的情况下，如果此时B查询自己的账户，是看不到新增加的10的。 \n \n 4、D (Durability) 持久性 \n \n 一旦事务提交后，它所做的修改将会永久的保存在数据库上，即使出现宕机也不会丢失 \n \n 运行模式 \n \n 自动提交事务：默认事务管理模式。如果一个语句成功地完成，则提交该语句；如果遇到错误，则回滚该语句。 \n 显式事务：以BEGIN TRANSACTION显式开始，以COMMIT或ROLLBACK显式结束。 \n 隐性事务：当连接以此模式进行操作时，sql将在提交或回滚当前事务后自动启动新事务。无须描述事务的开始，只需提交或回滚每个事务。它生成连续的事务链。 \n 数据库设计 \n 范式：Normal Format \n \n 符合某一种级别的关系模式的集合，表示一个关系内部各属性之间的联系的合理化程度。一个数据库表之间的所有字段之间的联系的合理性。 \n \n \n 范式是离散数学里的概念 \n 范式目标是在满足组织和存储的前提下使数据结构冗余最小化 \n 范式级别越高，表的级别就越标准 \n \n \n 第一范式：1NF，确保表中每一列数据的原子性，不可再分！ \n 第二范式：2NF，在满足第一范式的基础上，确保列数据要跟主键关联，不能出现部分依赖。 \n 第三范式：3NF，再满足第二范式的基础上，保证每一列数据都要跟主键直接关联，不能出现传递依赖。 \n BCNF范式,4NF,5NF \n 反范式：用空间换时间，通过适当的数据冗余提高查询效率，但冗余数据会牺牲数据一致性 \n \n \n 数据库设计-表结构的设计范式 \n 数据库设计三大范式 \n \n \n 数据库分库分表Java实战经验总结 \n 数据库分区 \n 数据库分区、分表、分库、分片 \n SQLite3 \n \n https://github.com/sqlite/sqlite \n https://github.com/tursodatabase/libsql \n \n \n SQLite教程（内置日期和时间函数） \n SQLite 教程 \n SQLite 教程 \n SQLite3 数据类型与亲和类型 \n \n \n 查看  https://github.com/coleifer/sqlite-web \n 扩展  https://github.com/mycelial/mycelite \n https://github.com/sqlitebrowser/sqlitebrowser \n 加密SQLite  https://github.com/sqlcipher \n https://github.com/utelle/wxsqlite3 \n https://github.com/resilar/sqleet \n Java实现  https://sqljet.com \n GO  https://github.com/cvilsmeier/go-sqlite-bench \n https://gitlab.com/cznic/sqlite \n https://github.com/ncruces/go-sqlite3 \n https://github.com/zombiezen/go-sqlite \n 分布式关系数据库  https://github.com/rqlite/rqlite \n https://github.com/jlongster/absurd-sql \n 后端  https://github.com/pocketbase/pocketbase \n \n 连接符 \n \n \n \n 连接符 \n 说明 \n \n \n \n \n - \n 算术减法 \n \n \n != \n 关系不等于 \n \n \n % \n 算术模量 \n \n \n & \n 逻辑与 \n \n \n * \n 算术乘法 \n \n \n / \n 算术除法 \n \n \n | \n 逻辑或 \n \n \n || \n 字符串串联 \n \n \n + \n 算术加法 \n \n \n < \n 关系小于 \n \n \n << \n 按位右移 \n \n \n <= \n 关系式小于或等于 \n \n \n <> \n 关系不等于 \n \n \n = \n 关系等于 \n \n \n == \n 关系等于 \n \n \n > \n 关系大于 \n \n \n >= \n 关系大于或等于 \n \n \n >> \n 按位左移 \n \n \n AND \n 逻辑与 \n \n \n GLOB \n 关系文件名匹配 \n \n \n IN \n 逻辑输入 \n \n \n LIKE \n 关系字符串匹配 \n \n \n OR \n 逻辑或 \n \n \n \n",createdTime:1761814324e3},{title:"GoGUI",frontmatter:{description:"Golang调用windows下的dll动态库中的函数使用syscall调用",meta:[{name:"twitter:title",content:"GoGUI"},{name:"twitter:description",content:"Golang调用windows下的dll动态库中的函数使用syscall调用"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Go/GoGUI.html"},{property:"og:type",content:"article"},{property:"og:title",content:"GoGUI"},{property:"og:description",content:"Golang调用windows下的dll动态库中的函数使用syscall调用"},{property:"og:url",content:"https://bajins.com/Go/GoGUI.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"GoGUI"},{itemprop:"description",content:"Golang调用windows下的dll动态库中的函数使用syscall调用"}]},regularPath:"/Go/GoGUI.html",relativePath:"Go/GoGUI.md",key:"v-9c5327fe",path:"/Go/GoGUI.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"设置壁纸",slug:"设置壁纸"},{level:2,title:"操作注册表",slug:"操作注册表"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' GoGUI \n Flag 设置壁纸 操作注册表 \n Flag \n \n Golang调用windows下的dll动态库中的函数使用 syscall 调用 \n \n \n GUI  https://github.com/lxn \n https://github.com/chzyer/readline \n https://github.com/go-ole/go-ole \n \n TaskScheduler  https://github.com/capnspacehook/taskmaster \n \n \n https://github.com/yusufpapurcu/wmi \n https://github.com/kardianos/service \n https://github.com/ying32/govcl \n https://github.com/akavel/rsrc \n https://github.com/tc-hib/winres \n \n https://github.com/tc-hib/go-winres \n \n \n https://github.com/josephspurrier/goversioninfo \n https://github.com/fyne-io/fyne \n https://github.com/visualfc/atk \n https://github.com/vugu/vugu \n https://github.com/wailsapp/wails \n https://github.com/cogentcore \n \n https://github.com/goki/gi \n \n \n \n \n https://qiankunli.github.io/2020/11/21/goroutine_system_call.html \n golang windows程序获取管理员权限（UAC ） \n how-do-i-force-my-net-application-to-run-as-administrator \n https://docs.microsoft.com/zh-cn/previous-versions/bb756929(v=msdn.10) \n 设置壁纸 \n \n https://docs.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-systemparametersinfoa \n \n \n main.go \n \n package  main\n\n import   ( \n     "errors" \n     "flag" \n     "image/jpeg" \n     "log" \n     "os" \n     "path/filepath" \n\n     "github.com/golang/sys/windows/registry" \n     "golang.org/x/image/bmp" \n ) \n\n type  WallpaperStyle  uint \n\n func   ( wps WallpaperStyle )   String ( )   string   { \n     return  wallpaperStyles [ wps ] \n } \n\n const   ( \n    Fill    WallpaperStyle  =   iota   // 填充 \n    Fit                            // 适应 \n    Stretch                        // 拉伸 \n    Tile                           // 平铺 \n    Center                         // 居中 \n    Cross                          // 跨区 \n\n ) \n\n var  wallpaperStyles  =   map [ WallpaperStyle ] string { \n     0 :   "填充" , \n     1 :   "适应" , \n     2 :   "拉伸" , \n     3 :   "平铺" , \n     4 :   "居中" , \n     5 :   "跨区" } \n\n var   ( \n    bgFile        string \n    bgStyle       int \n    sFile         string \n    waitTime      int \n    activeScreen  bool \n    passwd        bool \n ) \n\n var   ( \n    regist registry . Key\n ) \n\n func   init ( )   { \n    flag . StringVar ( & bgFile ,   "b" ,   "" ,   "set bg file path." ) \n    flag . IntVar ( & bgStyle ,   "style" ,   2 ,   "set desktop WallpaperStyle" ) \n\n    flag . BoolVar ( & activeScreen ,   "a" ,   true ,   "set screen active." ) \n    flag . StringVar ( & sFile ,   "s" ,   "" ,   "set screen save file path." ) \n    flag . IntVar ( & waitTime ,   "t" ,   0 ,   "set screen save wait time." ) \n    flag . BoolVar ( & passwd ,   "p" ,   true ,   "sets whether the screen saver requires the user to enter a password to display the Windows desktop. " ) \n\n } \n\n func   main ( )   { \n    flag . Parse ( ) \n\n     var  err  error \n    regist ,  err  =  registry . OpenKey ( registry . CURRENT_USER ,   `Control Panel\\Desktop` ,  registry . ALL_ACCESS ) \n     checkErr ( err ) \n     defer  regist . Close ( ) \n\n     // 设置桌面背景 \n     if  bgFile  !=   ""   { \n        style  :=   WallpaperStyle ( bgStyle ) \n         if  bgStyle  <   0   ||  bgStyle  >   5   { \n            style  =  Stretch\n         } \n         setDesktopWallpaper ( bgFile ,  style ) \n        log . Printf ( "设置桌面背景和位置 --\x3e %s, %s\\n" ,  bgFile ,  style ) \n     } \n\n    ok  :=   getScreenSaver ( ) \n    log . Printf ( "获取屏幕保护开关 --\x3e %t\\n" ,  ok ) \n     // 关闭屏幕保护 \n     if  ok  &&   ! activeScreen  { \n        regist . DeleteValue ( "SCRNSAVE.EXE" ) \n        log . Println ( "关闭屏幕保护" ) \n         return \n     } \n\n     // 设置屏幕保护 \n     if  sFile  !=   ""   &&  activeScreen  { \n        err  =  regist . SetStringValue ( "SCRNSAVE.EXE" ,  sFile ) \n         checkErr ( err ) \n         setScreenSaver ( SPI_SETSCREENSAVEACTIVE ,  TRUE ) \n        log . Printf ( "设置屏幕保护 --\x3e %s\\n" ,  sFile ) \n        ok  =   getScreenSaver ( ) \n     } \n\n     if  ok  { \n         // 设置屏幕保护时间 \n         if  waitTime  >   0   { \n             setScreenSaver ( SPI_SETSCREENSAVETIMEOUT ,   uint32 ( 60 * waitTime ) ) \n            log . Printf ( "设置屏幕保护等待时间 --\x3e %d分钟\\n" ,  waitTime ) \n         } \n\n         // 设置屏幕保护 在恢复时使用密码 \n         var   ( \n            passwdSwitch  string \n            passwdBool    uint32 \n         ) \n         if  passwd  { \n            passwdSwitch  =   "1" \n            passwdBool  =  TRUE\n         }   else   { \n            passwdSwitch  =   "0" \n            passwdBool  =  FALSE\n         } \n         // XP / server 2003 \n         setRegistString ( "ScreenSaverIsSecure" ,  passwdSwitch ) \n         // vista or later \n         if   checkVersion ( )   { \n             setScreenSaver ( SPI_SETSCREENSAVESECURE ,  passwdBool ) \n         } \n        log . Printf ( "设置屏幕保护恢复时是否使用密码 --\x3e %t\\n" ,  passwd ) \n     } \n } \n\n func   checkErr ( err  error )   { \n     if  err  !=   nil   { \n        log . Fatal ( err ) \n     } \n } \n\n // http://blog.csdn.net/kfysck/article/details/8153264 \n // Check that the OS is Vista or later (Vista is v6.0). \n func   checkVersion ( )   bool   { \n    version  :=   GetVersion ( ) \n    major  :=  version  &   0xFF \n     if  major  <   6   { \n         return   false \n     } \n     return   true \n } \n\n // jpg转换为bmp \n func   ConvertedWallpaper ( bgfile  string )   string   { \n    file ,  err  :=  os . Open ( bgfile ) \n     checkErr ( err ) \n     defer  file . Close ( ) \n\n    img ,  err  :=  jpeg . Decode ( file )   //解码 \n     checkErr ( err ) \n\n    bmpPath  :=  os . Getenv ( "USERPROFILE" )   +   `\\Local Settings\\Application Data\\Microsoft\\Wallpaper1.bmp` \n    bmpfile ,  err  :=  os . Create ( bmpPath ) \n     checkErr ( err ) \n     defer  bmpfile . Close ( ) \n\n    err  =  bmp . Encode ( bmpfile ,  img ) \n     checkErr ( err ) \n     return  bmpPath\n } \n\n func   setDesktopWallpaper ( bgFile  string ,  style WallpaperStyle )   error   { \n    ext  :=  filepath . Ext ( bgFile ) \n     // vista 以下的系统需要转换jpg为bmp（xp、2003） \n     if   ! checkVersion ( )   &&  ext  !=   ".bmp"   { \n         setRegistString ( "ConvertedWallpaper" ,  bgFile ) \n        bgFile  =   ConvertedWallpaper ( bgFile ) \n     } \n\n     // 设置桌面背景 \n     setRegistString ( "Wallpaper" ,  bgFile ) \n\n     /* 设置壁纸风格和展开方式\n    在Control Panel\\Desktop中的两个键值将被设置\n    TileWallpaper\n     0: 图片不被平铺\n     1: 被平铺\n    WallpaperStyle\n     0:  0表示图片居中，1表示平铺\n     2:  拉伸填充整个屏幕\n     6:  拉伸适应屏幕并保持高度比\n     10: 图片被调整大小裁剪适应屏幕保持纵横比\n     22: 跨区\n    */ \n     var  bgTileWallpaper ,  bgWallpaperStyle  string \n    bgTileWallpaper  =   "0" \n     switch  style  { \n     case  Fill :   // (Windows 7 or later) \n        bgWallpaperStyle  =   "10" \n     case  Fit :   // (Windows 7 or later) \n        bgWallpaperStyle  =   "6" \n     case  Stretch : \n        bgWallpaperStyle  =   "2" \n     case  Tile : \n        bgTileWallpaper  =   "1" \n        bgWallpaperStyle  =   "0" \n     case  Center : \n        bgWallpaperStyle  =   "0" \n     case  Cross :   // win10 or later \n        bgWallpaperStyle  =   "22" \n     } \n\n     setRegistString ( "WallpaperStyle" ,  bgWallpaperStyle ) \n     setRegistString ( "TileWallpaper" ,  bgTileWallpaper ) \n\n    ok  :=   SystemParametersInfo ( SPI_SETDESKWALLPAPER ,  FALSE ,   nil ,  SPIF_UPDATEINIFILE | SPIF_SENDWININICHANGE ) \n     if   ! ok  { \n         return  errors . New ( "Desktop background Settings fail." ) \n     } \n     return   nil \n } \n\n func   setRegistString ( name ,  value  string )   { \n    err  :=  regist . SetStringValue ( name ,  value ) \n     checkErr ( err ) \n } \n\n func   setScreenSaver ( uiAction ,  uiParam  uint32 )   { \n    ok  :=   SystemParametersInfo ( uiAction ,  uiParam ,   nil ,  SPIF_UPDATEINIFILE | SPIF_SENDWININICHANGE ) \n     if   ! ok  { \n        log . Fatal ( "Screen saver Settings fail." ) \n     } \n } \n\n func   getScreenSaver ( )   bool   { \n     _ ,   _ ,  err  :=  regist . GetStringValue ( "SCRNSAVE.EXE" ) \n     if  err  !=   nil   { \n         return   false \n     } \n     return   true \n } \n \n win.go \n \n https://github.com/golang/go/wiki/WindowsDLLs \n https://github.com/rainycape/dl \n golang syscall原理 \n https://gitlab.com/gitlab-org/gitlab-runner/-/blob/main/vendor/golang.org/x/sys/windows/dll_windows.go \n Breaking all the rules: Using Go to call Windows API \n \n package  main\n\n import   ( \n     "syscall" \n     "unsafe" \n ) \n\n const   ( \n     // 获取屏幕保护开关 \n    SPI_GETSCREENSAVEACTIVE  =   0x0010 \n     // 设置屏保开关 \n    SPI_SETSCREENSAVEACTIVE  =   0x0011 \n     // 设置屏保等待时间 \n    SPI_SETSCREENSAVETIMEOUT  =   0x000F \n     // 设备屏保在恢复时显示屏幕 \n    SPI_SETSCREENSAVESECURE  =   0x0077 \n\n     // 设置桌面背景 \n    SPI_SETDESKWALLPAPER  =   0x0014 \n\n     // 将新的系统范围的参数设置写入用户配置文件。 \n    SPIF_UPDATEINIFILE  =   1 \n\n     // 更新用户配置文件后广播WM_SETTINGCHANGE消息。 \n    SPIF_SENDWININICHANGE  =   2 \n\n    FALSE  =   0 \n    TRUE   =   1 \n ) \n\n var   ( \n     // Library \n    libuser32    uintptr \n    libkernel32  uintptr \n\n     // Functions \n    systemParametersInfo  uintptr \n    getVersion            uintptr \n ) \n\n func   init ( )   { \n     // Library \n    libuser32  =   MustLoadLibrary ( "user32.dll" ) \n    libkernel32  =   MustLoadLibrary ( "kernel32.dll" ) \n     // SystemParametersInfo有两个子函数针对不同的字符集： \n     // SystemParametersInfoW（Unicode）和SystemParametersInfoA（ANSI） \n    systemParametersInfo  =   MustGetProcAddress ( libuser32 ,   "SystemParametersInfoW" ) \n    getVersion  =   MustGetProcAddress ( libkernel32 ,   "GetVersion" ) \n } \n\n func   MustLoadLibrary ( name  string )   uintptr   { \n    lib ,  err  :=  syscall . LoadLibrary ( name ) \n     //modwinspool    = syscall.NewLazyDLL("winspool.drv") \n     //modwinspool, err = syscall.LoadDLL("winspool.drv") \n     //kernel32, err = syscall.LoadLibrary("winspool.drv") \n     //modwinspool    = windows.NewLazySystemDLL("winspool.drv") \n     // procClosePrinter = modwinspool.NewProc("ClosePrinter") \n     //h = syscall.MustLoadDLL("kernel32.dll") \n     //c = h.MustFindProc("GetDiskFreeSpaceExW") \n     if  err  !=   nil   { \n         panic ( err ) \n     } \n\n     return   uintptr ( lib ) \n } \n\n func   MustGetProcAddress ( lib  uintptr ,  name  string )   uintptr   { \n    addr ,  err  :=  syscall . GetProcAddress ( syscall . Handle ( lib ) ,  name ) \n     if  err  !=   nil   { \n         panic ( err ) \n     } \n\n     return   uintptr ( addr ) \n } \n\n /*\n之前已经通过注册表设置了壁纸的参数，但是还没有刷新配置。\n调用Win32 API位于user32.dll中函数SystemParametersInfo设置桌面壁纸，它支持我们从系统中获得硬件和配置信息。\n它有四个参数，第一个指明调用这个函数所要执行的操作，接下来的两个参数指明将要设置的数据，依据第一个参数的设定。\n*/ \n // uiAction：该参数指定要查询或设置的参数，换壁纸是SPI_SETDESKWALLPAPER（使得壁纸改变保存并持续可见） \n // uiParam：附加值 \n // pvParam：要修改或者查询的缓冲区 \n // fWinIni：指定用户配置文件是否被更新，如果是这样，则指定是否 WM_SETTINGCHANGE 将消息广播到所有的顶层窗口的更改通知他们，可以是0也可以是下列值： \n //      SPIF_UPDATEINIFILE：把新的系统参数的设置内容写入用户配置文件。 \n //      SPIF_SENDCHANGE：在更新用户配置文件之后发送WM_SETTINGCHANGE消息。 \n //      SPI_SENDWININICHANGE：与SPIF_SENDCHANGE一样。 \n // 换壁纸我们要给uiAction指定SPI_SETDESKWALLPAPER标志位，然后把SPIF_UPDATEINIFILE传递给fWinIni。 \n func   SystemParametersInfo ( uiAction ,  uiParam  uint32 ,  pvParam unsafe . Pointer ,  fWinIni  uint32 )   bool   { \n     // nargs 即参数的个数,一旦传错, 轻则调用失败,重者直接APPCARSH,多余的参数,用0代替 \n    ret ,   _ ,   _   :=  syscall . Syscall6 ( systemParametersInfo ,   4 ,   uintptr ( uiAction ) ,   uintptr ( uiParam ) ,   uintptr ( pvParam ) , \n         uintptr ( fWinIni ) ,   0 ,   0 ) \n     return  ret  !=   0 \n } \n\n func   GetVersion ( )   int64   { \n    ret ,   _ ,   _   :=  syscall . Syscall ( getVersion ,   0 ,   0 ,   0 ,   0 ) \n     return   int64 ( ret ) \n } \n\n func   stringToPointer ( str  string )  unsafe . Pointer  { \n     return  unsafe . Pointer ( syscall . StringToUTF16Ptr ( str ) ) \n } \n 操作注册表 \n package  main\n\n import   ( \n     "golang.org/x/sys/windows/registry" \n ) \n\n func   main ( )   { \n     // 创建：指定路径的项 \n     // 路径：HKEY_CURRENT_USER\\Software\\Hello Go \n    key ,  exists ,   _   :=  registry . CreateKey ( registry . CURRENT_USER ,   `SOFTWARE\\Hello Go` ,  registry . ALL_ACCESS ) \n     defer  key . Close ( ) \n\n     // 判断是否已经存在了 \n     if  exists  { \n         println ( `键已存在` ) \n     }   else   { \n         println ( `新建注册表键` ) \n     } \n\n     // 写入：32位整形值 \n    key . SetDWordValue ( `32位整形值` ,   uint32 ( 123456 ) ) \n     // 写入：64位整形值 \n    key . SetQWordValue ( `64位整形值` ,   uint64 ( 123456 ) ) \n     // 写入：字符串 \n    key . SetStringValue ( `字符串` ,   `hello` ) \n     // 写入：字符串数组 \n    key . SetStringsValue ( `字符串数组` ,   [ ] string { `hello` ,   `world` } ) \n     // 写入：二进制 \n    key . SetBinaryValue ( `二进制` ,   [ ] byte { 0x11 ,   0x22 } ) \n\n     // 读取：字符串 \n    s ,   _ ,   _   :=  key . GetStringValue ( `字符串` ) \n     println ( s ) \n\n     // 读取：一个项下的所有子项 \n    keys ,   _   :=  key . ReadSubKeyNames ( 0 ) \n     for   _ ,  key_subkey  :=   range  keys  { \n         // 输出所有子项的名字 \n         println ( key_subkey ) \n     } \n\n     // 创建：子项 \n    subkey ,   _ ,   _   :=  registry . CreateKey ( key ,   `子项` ,  registry . ALL_ACCESS ) \n     defer  subkey . Close ( ) \n\n     // 删除：子项 \n     // 该键有子项，所以会删除失败 \n     // 没有子项，删除成功 \n    registry . DeleteKey ( key ,   `子项` ) \n } \n \n ',createdTime:1761814324e3},{title:"Go爬虫",frontmatter:{description:"xpath和css选择器",meta:[{name:"twitter:title",content:"Go爬虫"},{name:"twitter:description",content:"xpath和css选择器"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Go/Go%E7%88%AC%E8%99%AB.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Go爬虫"},{property:"og:description",content:"xpath和css选择器"},{property:"og:url",content:"https://bajins.com/Go/Go%E7%88%AC%E8%99%AB.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Go爬虫"},{itemprop:"description",content:"xpath和css选择器"}]},regularPath:"/Go/Go%E7%88%AC%E8%99%AB.html",relativePath:"Go/Go爬虫.md",key:"v-2c126fcc",path:"/Go/Go%E7%88%AC%E8%99%AB.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"HTML解析",slug:"html解析"},{level:2,title:"chromedp",slug:"chromedp"},{level:2,title:"godet",slug:"godet"},{level:2,title:"gcd",slug:"gcd"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Go爬虫 \n Flag HTML解析 chromedp godet gcd \n Flag \n xpath和css选择器 \n HeadlessBrowser \n \n https://github.com/go-rod/rod \n https://github.com/derekparker/delve \n https://github.com/mafredri/cdp \n https://github.com/projectdiscovery/katana \n 类BeautifulSoup  https://github.com/anaskhan96/soup \n 示例  https://github.com/bestnite/bilinovel-downloader \n HTML解析 \n \n https://github.com/antchfx  htmlquery使用xpath选择器 \n https://github.com/PuerkitoBio/goquery  goquery使用css选择器 \n https://github.com/gocolly/colly \n https://github.com/go-predator/predator \n chromedp \n \n https://github.com/chromedp \n \n 该组织下有以下项目 \n \n https://github.com/chromedp/chromedp \n \n \n https://godoc.org/github.com/chromedp/chromedp \n \n \n https://github.com/chromedp/cdproto-gen \n \n \n 生成用于 Chrome DevTools 协议的命令，事件和类型的Go代码 \n \n \n https://github.com/chromedp/cdproto \n \n \n 包含针对 Chrome DevTools 协议域生成的命令，类型和事件 \n \n \n https://godoc.org/github.com/chromedp/cdproto \n \n cdproto 下有以下包 \n \n github.com/chromedp/cdproto/cdp \n \n \n cdp.TimeSinceEpoch(time.Now().Add(180 * 24 * time.Hour)) \n \n \n github.com/chromedp/cdproto/network  网络处理 \n \n \n 比如启用启用网络跟踪，现在将网络事件传递给客户端 network.Enable() \n \n \n github.com/chromedp/cdproto/page  chrome页面处理 \n \n \n 比如设置下载 page.SetDownloadBehavior(page.SetDownloadBehaviorBehaviorDeny) \n \n \n github.com/chromedp/cdproto/target  操作标签页  Target.createTarget \n \n // 根据url新建浏览器标签页 \ntag  :=  target . CreateTarget ( url ) \n // 新建浏览器标签页ID创建上下文，方式一 \nctx ,  cancel  =  chromedp . NewContext ( ctx ,  chromedp . WithTargetID ( target . ID ( tag . BrowserContextID ) ) ) \n\n // 根据上下文，返回targetID-打开的页面的ID。 \ntagId ,  err  :=  tag . Do ( ctx ) \n // 新建浏览器标签页ID创建上下文，方式二 \nctx ,  cancel  =  chromedp . NewContext ( ctx ,  chromedp . WithTargetID ( tagId ) ) \n \n \n chromedp.Targets(ctx)  获取浏览器实例的标签页信息列表 \n \n chromedp 能做什么 \n \n \n 反爬虫js，例如有的网页后台js自动发送心跳包，浏览器里会自动运行，不需要我们自动处理 \n \n \n 针对于前端页面的自动化测试 \n \n \n 解决类似VueJS和SPA之类的渲染 \n \n \n 解决网页的懒加载 \n \n \n 网页截图和pdf导出，而不需要额外的去学习其他的库实现 \n \n \n seo训练和刷点击量 \n \n \n 执行javascript 代码 \n \n \n 设置dom的标签属性 \n \n \n \n chromedp 同Python的 selenium ,它是使用 Chrome Debugging Protocol (简称cdp) 并且没有外部依赖 (如 Selenium ,  PhantomJS 等) \n \n \n golang headless browser包chromedp初探 \n go语言chromedp使用教程 \n \n \n \n \n 函数或变量 \n 说明 \n \n \n \n \n (a *ExecAllocator) Allocate(ctx context.Context, opts ...BrowserOption) (*Browser, error) \n \n \n \n (a *ExecAllocator) Wait() \n \n \n \n (a *RemoteAllocator) Allocate(ctx context.Context, opts ...BrowserOption) (*Browser, error) \n \n \n \n (a *RemoteAllocator) Wait() \n \n \n \n (f ActionFunc) Do(ctx context.Context) error \n \n \n \n (s *Selector) Do(ctx context.Context) error \n \n \n \n (t Tasks) Do(ctx context.Context) error \n \n \n \n After(f func(context.Context, ...*cdp.Node) error) QueryOption \n \n \n \n AtLeast(n int) QueryOption \n \n \n \n Attributes(sel interface{}, attributes *map[string]string, opts ...QueryOption) QueryAction \n \n \n \n AttributesAll(sel interface{}, attributes *[]map[string]string, opts ...QueryOption) QueryAction \n \n \n \n AttributeValue(sel interface{}, name string, value *string, ok *bool, opts ...QueryOption) QueryAction \n \n \n \n Blur(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n ByFunc(f func(context.Context, *cdp.Node) ([]cdp.NodeID, error)) QueryOption \n \n \n \n ByID(s *Selector) \n 只id来选择元素 \n \n \n ByJSPath(s *Selector) \n \n \n \n ByNodeID(s *Selector) \n 按节点ID选择元素 \n \n \n ByQuery(s *Selector) \n 根据document.querySelector的规则选择元素，返回单个节点 \n \n \n ByQueryAll(s *Selector) \n 根据document.querySelectorAll返回所有匹配的节点 \n \n \n BySearch(s *Selector) \n 如果不写，默认会使用这个选择器，类似devtools ctrl+f 搜索 \n \n \n Cancel(ctx context.Context) error \n \n \n \n CaptureScreenshot(res *[]byte) Action \n \n \n \n Clear(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n Click(sel interface{}, opts ...QueryOption) QueryAction \n 触发点击事件 \n \n \n CombinedOutput(w io.Writer) ExecAllocatorOption \n \n \n \n ComputedStyle(sel interface{}, style *[]*css.ComputedProperty, opts ...QueryOption) QueryAction \n \n \n \n Dimensions(sel interface{}, model **dom.BoxModel, opts ...QueryOption) QueryAction \n \n \n \n DisableGPU(a *ExecAllocator) \n 关闭gpu,服务器一般没有显卡 \n \n \n DoubleClick(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n Env(vars ...string) ExecAllocatorOption \n NAME=value形式的通用环境变量列表，用于传递到新的Chrome进程。 \n \n \n ExecPath(path string) ExecAllocatorOption \n \n \n \n Flag(name string, value interface{}) ExecAllocatorOption \n \n \n \n Focus(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n FromContext(ctx context.Context) *Context \n \n \n \n Headless(a *ExecAllocator) \n \n \n \n InnerHTML(sel interface{}, html *string, opts ...QueryOption) QueryAction \n \n \n \n JavascriptAttribute(sel interface{}, name string, res interface{}, opts ...QueryOption) QueryAction \n \n \n \n ListenBrowser(ctx context.Context, fn func(ev interface{})) \n \n \n \n ListenTarget(ctx context.Context, fn func(ev interface{})) \n \n \n \n Location(urlstr *string) Action \n \n \n \n MatchedStyle(sel interface{}, style **css.GetMatchedStylesForNodeReturns, opts ...QueryOption) QueryAction \n \n \n \n Navigate(urlstr string) NavigateAction \n 设置url \n \n \n NavigateBack() NavigateAction \n \n \n \n NavigateForward() NavigateAction \n \n \n \n NavigateToHistoryEntry(entryID int64) NavigateAction \n \n \n \n NavigationEntries(currentIndex *int64, entries *[]*page.NavigationEntry) NavigateAction \n \n \n \n NewContext(parent context.Context, opts ...ContextOption) (context.Context, context.CancelFunc) \n \n \n \n NewExecAllocator(parent context.Context, opts ...ExecAllocatorOption) (context.Context, context.CancelFunc) \n \n \n \n NewRemoteAllocator(parent context.Context, url string) (context.Context, context.CancelFunc) \n \n \n \n NodeEnabled(s *Selector) \n \n \n \n NoDefaultBrowserCheck(a *ExecAllocator) \n 禁用默认浏览器检查。 \n \n \n NodeIDs(sel interface{}, ids *[]cdp.NodeID, opts ...QueryOption) QueryAction \n \n \n \n NodeNotPresent(s *Selector) \n \n \n \n NodeNotVisible(s *Selector) \n \n \n \n NodeReady(s *Selector) \n \n \n \n Nodes(sel interface{}, nodes *[]*cdp.Node, opts ...QueryOption) QueryAction \n \n \n \n NodeSelected(s *Selector) \n \n \n \n NodeVisible(s *Selector) \n \n \n \n NoFirstRun(a *ExecAllocator) \n 禁用第一次运行对话框的Chrome命令行选项 \n \n \n NoSandbox(a *ExecAllocator) \n 用于禁用沙箱的Chrome命令行选项 \n \n \n OuterHTML(sel interface{}, html *string, opts ...QueryOption) QueryAction \n 获取HTML源码 \n \n \n ProxyServer(proxy string) ExecAllocatorOption \n \n \n \n Query(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n QueryAfter(sel interface{}, f func(context.Context, ...*cdp.Node) error, opts ...QueryOption) QueryAction \n \n \n \n Reload() NavigateAction \n \n \n \n RemoveAttribute(sel interface{}, name string, opts ...QueryOption) QueryAction \n \n \n \n Reset(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n Run(ctx context.Context, actions ...Action) error \n \n \n \n Screenshot(sel interface{}, picbuf *[]byte, opts ...QueryOption) QueryAction \n 标签截图，赋值给变量 \n \n \n ScrollIntoView(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n SendKeys(sel interface{}, v string, opts ...QueryOption) QueryAction \n 使用chromedp.ByID选择器。向标签输入内容。 \n \n \n SetAttributes(sel interface{}, attributes map[string]string, opts ...QueryOption) QueryAction \n \n \n \n SetAttributeValue(sel interface{}, name, value string, opts ...QueryOption) QueryAction \n \n \n \n SetJavascriptAttribute(sel interface{}, name, value string, opts ...QueryOption) QueryAction \n \n \n \n SetUploadFiles(sel interface{}, files []string, opts ...QueryOption) QueryAction \n \n \n \n SetValue(sel interface{}, value string, opts ...QueryOption) QueryAction \n \n \n \n Sleep(d time.Duration) Action \n 等待时间 \n \n \n Stop() NavigateAction \n \n \n \n Submit(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n Targets(ctx context.Context) ([]*target.Info, error) \n \n \n \n Text(sel interface{}, text *string, opts ...QueryOption) QueryAction \n \n \n \n TextContent(sel interface{}, text *string, opts ...QueryOption) QueryAction \n \n \n \n Title(title *string) Action \n \n \n \n UserAgent(userAgent string) ExecAllocatorOption \n \n \n \n UserDataDir(dir string) ExecAllocatorOption \n \n \n \n Value(sel interface{}, value *string, opts ...QueryOption) QueryAction \n 取值并赋值给变量 \n \n \n WaitEnabled(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n WaitFunc(wait func(context.Context, *cdp.Frame, ...cdp.NodeID) ([]*cdp.Node, error)) QueryOption \n \n \n \n waitLoaded(ctx context.Context) error \n \n \n \n WaitNewTarget(ctx context.Context, fn func(*target.Info) bool) <-chan target.ID \n \n \n \n WaitNotPresent(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n WaitNotVisible(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n WaitReady(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n WaitSelected(sel interface{}, opts ...QueryOption) QueryAction \n \n \n \n WaitVisible(sel interface{}, opts ...QueryOption) QueryAction \n 等待指定标签元素加载完成 \n \n \n WindowSize(width, height int) ExecAllocatorOption \n 设置初始窗口大小的命令行选项。 \n \n \n WithBrowserOption(opts ...BrowserOption) ContextOption \n \n \n \n WithDebugf(f func(string, ...interface{})) ContextOption \n \n \n \n WithErrorf(f func(string, ...interface{})) ContextOption \n \n \n \n WithLogf(f func(string, ...interface{})) ContextOption \n \n \n \n WithTargetID(id target.ID) ContextOption \n godet \n \n https://github.com/raff/godet \n \n \n 截图 \n \n package  main\n\n import   "fmt" \n import   "time" \n\n import   "github.com/raff/godet" \n\n func   main ( )   { \n\t // connect to Chrome instance \n\tremote ,  err  :=  godet . Connect ( "localhost:9222" ,   false ) \n\t if  err  !=   nil   { \n\t\tfmt . Println ( "cannot connect to Chrome instance:" ,  err ) \n\t\t return \n\t } \n\n\t // disconnect when done \n\t defer  remote . Close ( ) \n\n\t // get browser and protocol version \n\tversion ,   _   :=  remote . Version ( ) \n\tfmt . Println ( version ) \n\n\t // get list of open tabs \n\ttabs ,   _   :=  remote . TabList ( "" ) \n\tfmt . Println ( tabs ) \n\n\t // install some callbacks \n\tremote . CallbackEvent ( godet . EventClosed ,   func ( params godet . Params )   { \n\t\tfmt . Println ( "RemoteDebugger connection terminated." ) \n\t } ) \n\n\tremote . CallbackEvent ( "Network.requestWillBeSent" ,   func ( params godet . Params )   { \n\t\tfmt . Println ( "requestWillBeSent" , \n\t\t\tparams [ "type" ] , \n\t\t\tparams [ "documentURL" ] , \n\t\t\tparams [ "request" ] . ( map [ string ] interface { } ) [ "url" ] ) \n\t } ) \n\n\tremote . CallbackEvent ( "Network.responseReceived" ,   func ( params godet . Params )   { \n\t\tfmt . Println ( "responseReceived" , \n\t\t\tparams [ "type" ] , \n\t\t\tparams [ "response" ] . ( map [ string ] interface { } ) [ "url" ] ) \n\t } ) \n\n\tremote . CallbackEvent ( "Log.entryAdded" ,   func ( params godet . Params )   { \n\t\tentry  :=  params [ "entry" ] . ( map [ string ] interface { } ) \n\t\tfmt . Println ( "LOG" ,  entry [ "type" ] ,  entry [ "level" ] ,  entry [ "text" ] ) \n\t } ) \n\n\t // block loading of most images \n\t _   =  remote . SetBlockedURLs ( "*.jpg" ,   "*.png" ,   "*.gif" ) \n\n\t // create new tab \n\ttab ,   _   :=  remote . NewTab ( "https://www.google.com" ) \n\tfmt . Println ( tab ) \n\n\t // enable event processing \n\tremote . RuntimeEvents ( true ) \n\tremote . NetworkEvents ( true ) \n\tremote . PageEvents ( true ) \n\tremote . DOMEvents ( true ) \n\tremote . LogEvents ( true ) \n\n\t // navigate in existing tab \n\t _   =  remote . ActivateTab ( tabs [ 0 ] ) \n\n\t //remote.StartPreciseCoverage(true, true) \n\n\t // re-enable events when changing active tab \n\tremote . AllEvents ( true )   // enable all events \n\n\t _ ,   _   =  remote . Navigate ( "https://www.google.com" ) \n\n\t // evaluate Javascript expression in existing context \n\tres ,   _   :=  remote . EvaluateWrap ( `\n            console.log("hello from godet!")\n            return 42;\n        ` ) \n\tfmt . Println ( res ) \n\n\t // take a screenshot \n\t _   =  remote . SaveScreenshot ( "screenshot.png" ,   0644 ,   0 ,   true ) \n\n\ttime . Sleep ( time . Second ) \n\n\t // or save page as PDF \n\t _   =  remote . SavePDF ( "page.pdf" ,   0644 ,  godet . PortraitMode ( ) , \n            godet . Scale ( 0.5 ) ,  godet . Dimensions ( 6.0 ,   2.0 ) ) \n\n\t // if err := remote.SetInputFiles(0, []string{"hello.txt"}); err != nil { \n\t //     fmt.Println("setInputFiles", err) \n\t // } \n\n\ttime . Sleep ( 5   *  time . Second ) \n\n\t //remote.StopPreciseCoverage() \n\n\tr ,  err  :=  remote . GetPreciseCoverage ( true ) \n\t if  err  !=   nil   { \n\t\tfmt . Println ( "error profiling" ,  err ) \n\t }   else   { \n\t\tfmt . Println ( r ) \n\t } \n\n\t // Allow downloads \n\t _   =  remote . SetDownloadBehavior ( godet . AllowDownload ,   "/tmp/" ) \n\t _ ,   _   =  remote . Navigate ( url ) \n\n\ttime . Sleep ( time . Second ) \n\n\t // Block downloads \n\t _   =  remote . SetDownloadBehavior ( godet . DenyDownload ,   "" ) \n\t _ ,   _   =  remote . Navigate ( url ) \n } \n gcd \n \n https://github.com/wirepair/gcd \n \n \n 截图 \n \n package  main\n\n import   ( \n\t "encoding/base64" \n\t "flag" \n\t "fmt" \n\t "log" \n\t "net/url" \n\t "os" \n\t "runtime" \n\t "sync" \n\t "time" \n\n\t "github.com/wirepair/gcd" \n\t "github.com/wirepair/gcd/gcdapi" \n ) \n\n const   ( \n\tnumTabs  =   5 \n ) \n\n var  debugger  * gcd . Gcd\n var  wg sync . WaitGroup\n\n var  path  string \n var  dir  string \n var  port  string \n\n func   init ( )   { \n\t switch  runtime . GOOS  { \n\t case   "windows" : \n\t\tflag . StringVar ( & path ,   "chrome" , \n             "C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" , \n             "path to chrome" ) \n\t\tflag . StringVar ( & dir ,   "dir" ,   "C:\\\\temp\\\\" ,   "user directory" ) \n\t case   "darwin" : \n\t\tflag . StringVar ( & path ,   "chrome" , \n             "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" , \n             "path to chrome" ) \n\t\tflag . StringVar ( & dir ,   "dir" ,   "/tmp/" ,   "user directory" ) \n\t case   "linux" : \n\t\tflag . StringVar ( & path ,   "chrome" ,   "/usr/bin/chromium-browser" ,   "path to chrome" ) \n\t\tflag . StringVar ( & dir ,   "dir" ,   "/tmp/" ,   "user directory" ) \n\t } \n\n\tflag . StringVar ( & port ,   "port" ,   "9222" ,   "Debugger port" ) \n } \n\n func   main ( )   { \n\t var  err  error \n\turls  :=   [ ] string { "http://www.google.com" ,   "http://www.veracode.com" , \n             "http://www.microsoft.com" ,   "http://bbc.co.uk" , \n             "http://www.reddit.com/r/golang" } \n\n\tflag . Parse ( ) \n\n\tdebugger  =  gcd . NewChromeDebugger ( ) \n\tdebugger . StartProcess ( path ,  dir ,  port ) \n\t defer  debugger . ExitProcess ( ) \n\n\ttargets  :=   make ( [ ] * gcd . ChromeTarget ,  numTabs ) \n\n\t for  i  :=   0 ;  i  <  numTabs ;  i ++   { \n\t\twg . Add ( 1 ) \n\t\ttargets [ i ] ,  err  =  debugger . NewTab ( ) \n\t\t if  err  !=   nil   { \n\t\t\tlog . Fatalf ( "error getting targets" ) \n\t\t } \n\t\tpage  :=  targets [ i ] . Page\n\t\tpage . Enable ( ) \n\t\ttargets [ i ] . Subscribe ( "Page.loadEventFired" ,  pageLoaded ) \n\t\t // navigate \n\t\tnavigateParams  :=   & gcdapi . PageNavigateParams { Url :  urls [ i ] } \n\t\t _ ,   _ ,   _ ,  err  :=  page . NavigateWithParams ( navigateParams ) \n\t\t if  err  !=   nil   { \n\t\t\tlog . Fatalf ( "error: %s\\n" ,  err ) \n\t\t } \n\t } \n\twg . Wait ( ) \n\t for  i  :=   0 ;  i  <  numTabs ;  i ++   { \n\t\t takeScreenShot ( targets [ i ] ) \n\t } \n } \n\n func   pageLoaded ( target  * gcd . ChromeTarget ,  event  [ ] byte )   { \n\ttarget . Unsubscribe ( "Page.loadEventFired" ) \n\twg . Done ( ) \n } \n\n func   takeScreenShot ( target  * gcd . ChromeTarget )   { \n\tdom  :=  target . DOM\n\tpage  :=  target . Page\n\tdoc ,  err  :=  dom . GetDocument ( - 1 ,   true ) \n\t if  err  !=   nil   { \n\t\tfmt . Printf ( "error getting doc: %s\\n" ,  err ) \n\t\t return \n\t } \n\n\tdebugger . ActivateTab ( target ) \n\ttime . Sleep ( 1   *  time . Second )   // give it a sec to paint \n\tu ,  urlErr  :=  url . Parse ( doc . DocumentURL ) \n\t if  urlErr  !=   nil   { \n\t\tfmt . Printf ( "error parsing url: %s\\n" ,  urlErr ) \n\t\t return \n\t } \n\n\tfmt . Printf ( "Taking screen shot of: %s\\n" ,  u . Host ) \n\tscreenShotParams  :=   & gcdapi . PageCaptureScreenshotParams { Format :   "png" , \n                                FromSurface :   true } \n\timg ,  errCap  :=  page . CaptureScreenshotWithParams ( screenShotParams ) \n\t if  errCap  !=   nil   { \n\t\tfmt . Printf ( "error getting doc: %s\\n" ,  errCap ) \n\t\t return \n\t } \n\n\timgBytes ,  errDecode  :=  base64 . StdEncoding . DecodeString ( img ) \n\t if  errDecode  !=   nil   { \n\t\tfmt . Printf ( "error decoding image: %s\\n" ,  errDecode ) \n\t\t return \n\t } \n\n\tf ,  errFile  :=  os . Create ( u . Host  +   ".png" ) \n\t defer  f . Close ( ) \n\t if  errFile  !=   nil   { \n\t\tfmt . Printf ( "error creating image file: %s\\n" ,  errFile ) \n\t\t return \n\t } \n\tf . Write ( imgBytes ) \n\tdebugger . CloseTab ( target ) \n } \n \n ',createdTime:1761814324e3},{title:"Go笔记",frontmatter:{description:"go语言中的函数可以有多个返回值",meta:[{name:"image",content:"https://bajins.com/images/go的man和init执行过程.png"},{name:"twitter:title",content:"Go笔记"},{name:"twitter:description",content:"go语言中的函数可以有多个返回值"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/go的man和init执行过程.png"},{name:"twitter:url",content:"https://bajins.com/Go/Go%E7%AC%94%E8%AE%B0.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Go笔记"},{property:"og:description",content:"go语言中的函数可以有多个返回值"},{property:"og:image",content:"https://bajins.com/images/go的man和init执行过程.png"},{property:"og:url",content:"https://bajins.com/Go/Go%E7%AC%94%E8%AE%B0.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Go笔记"},{itemprop:"description",content:"go语言中的函数可以有多个返回值"},{itemprop:"image",content:"https://bajins.com/images/go的man和init执行过程.png"}]},regularPath:"/Go/Go%E7%AC%94%E8%AE%B0.html",relativePath:"Go/Go笔记.md",key:"v-8d52ded2",path:"/Go/Go%E7%AC%94%E8%AE%B0.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"字符串",slug:"字符串"},{level:3,title:"strings包API",slug:"strings包api"},{level:3,title:"字符串拼接",slug:"字符串拼接"},{level:2,title:"IO操作",slug:"io操作"},{level:3,title:"path包",slug:"path包"},{level:3,title:"filepath包",slug:"filepath包"},{level:2,title:"异常和恢复",slug:"异常和恢复"},{level:2,title:"HTTP",slug:"http"},{level:2,title:"作业调度",slug:"作业调度"},{level:2,title:"进程线程协程",slug:"进程线程协程"},{level:3,title:"进程",slug:"进程"},{level:3,title:"协程",slug:"协程"},{level:2,title:"ORM",slug:"orm"},{level:2,title:"Daemon",slug:"daemon"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Go笔记 \n Flag 字符串 strings包API 字符串拼接 IO操作 path包 filepath包 异常和恢复 HTTP 作业调度 进程线程协程 进程 协程 ORM Daemon \n Flag \n \n go语言中的函数可以有多个返回值 \n \n \n go语言是一种函数式编程语言，函数是go语言中的一等公民，函数的参数，返回值以及函数体内都可以存在函数 \n \n \n go中的函数没有默认参数、可选参数也没有函数重载、操作符重载，但有可变参数列表，即（变量　...类型），此时类型钱的变量是一个此类型的数组 \n \n \n strconv包使用 \n runtime包 \n File操作 \n golang的指针类型,unsafe.Pointer类型和uintptr类型的区别 \n CGO封装CPP库的一些最佳实践 \n \n \n 展开查看初始化顺序 \n \n \n 日志 \n func   ( l  * Logger )   Log ( level Level ,  format  string ,  args  ... interface { } )   { \n\tl . mu . Lock ( ) \n\t defer  l . mu . Unlock ( ) \n\t // 设置日志初始化参数 \n\t // log.Lshortfile 简要文件路径，log.Llongfile 完整文件路径 \n\t //log.SetFlags(log.Lshortfile | log.LstdFlags) \n\tdbgLogger  :=  log . New ( l . file ,   "" ,  log . Llongfile | log . LstdFlags ) \n\t // 传入0为获取当前行数,文件名,函数名(方法名) \n\tfuncName ,  file ,  line ,  ok  :=  runtime . Caller ( 2 ) \n\t if   ! ok  { \n\t\tfile  =   "???" \n\t\tline  =   0 \n\t } \n\tinfo  :=   [ ] string { \n\t\t "["   +   string ( level )   +   "]" , \n\t\truntime . FuncForPC ( funcName ) . Name ( ) , \n\t\tformat , \n\t } \n\tdbgLogger . Output ( 3 ,  strings . Join ( info ,   "." ) + "\\n" ) \n } \n \n 判断 \n \n 判断结构体是否为空 \n \n if  reflect . DeepEqual ( a ,  A { } )   { \n    fmt . Println ( "a == A{} empty" ) \n } \n // 括号不能去 \n if  a  ==   ( A { } )   { \n    fmt . Println ( "a == A{} empty" ) \n } \n \n \n 判断数组不能使用 a == nil ，应该使用 len(a) == 0 \n \n 默认值 \n \n 整型和浮点型变量的默认值为 0 。 \n 字符串变量的默认值为 "" 。 \n 布尔型 bool 默认值为 false 。 \n 指针、切片、字典、通道、接口、错误 error 的默认为 nil 。 \n 复数类型如 complex64 、 complex128 默认值为 0+0i 。 \n 数组的默认值要根据其数据类型来确定。 例如： var a [4]int ，其默认值为 [0 0 0 0] \n 字符串 \n \n 高性能 golang 生成指定长度随机字符串 \n https://github.com/gohouse/random \n strings包API \n \n strings.HasPrefix(s string, prefix string) bool ：判断字符串s是否以prefix开头 \n strings.HasSuffix(s string, suffix string) bool ：判断字符串s是否以suffix结尾。 \n strings.Index(s string, str string) int ：判断str在s中首次出现的位置，如果没有出现，则返回-1 \n strings.LastIndex(s string, str string) int ：判断str在s中最后出现的位置，如果没有出现，则返回-1 \n strings.Replace(str string, old string, new string, n int) ：字符串替换 \n strings.Count(str string, substr string)int ：字符串计数 \n strings.Repeat(str string, count int)string ：重复count次str \n strings.ToLower(str string)string ：转为小写 \n strings.ToUpper(str string)string ：转为大写 \n strings.TrimSpace(str string) ：去掉字符串首尾空白字符 \n strings.Trim(str string, cut string) ：去掉字符串首尾cut字符 \n strings.TrimLeft(str string, cut string) ：去掉字符串首cut字符 \n strings.TrimRight(str string, cut string) ：去掉字符串首cut字符 \n strings.Field(str string) ：返回str空格分隔的所有子串的slice \n strings.Split(str string, split string) ：返回str split分隔的所有子串的slice \n strings.Join(s1 []string, sep string) ：用sep把s1中的所有元素链接起来 \n strings.Itoa(i int) ：把一个整数i转成字符串 \n strings.Atoi(str string)(int, error) ：把一个字符串转成整数 \n 字符串拼接 \n \n +  连接适用于短小的、常量字符串（明确的，非变量），因为编译器会给我们优化。 \n Join 是比较统一的拼接，不太灵活 \n fmt 和 buffer 基本上不推荐 \n builder 从性能和灵活性上，都是上佳的选择。 \n \n func   StringPlus ( p  [ ] string )   string { \n\t var  s  string \n\tl := len ( p ) \n\t for  i := 0 ; i < l ; i ++ { \n\t\ts += p [ i ] \n\t } \n\t return  s\n } \n\n func   StringFmt ( p  [ ] interface { } )   string { \n\t return  fmt . Sprint ( p ... ) \n } \n\n func   StringJoin ( p  [ ] string )   string { \n\t return  strings . Join ( p , "" ) \n } \n\n func   StringBuffer ( p  [ ] string )   string   { \n\t var  b bytes . Buffer\n\tl := len ( p ) \n\t for  i := 0 ; i < l ; i ++ { \n\t\tb . WriteString ( p [ i ] ) \n\t } \n\t return  b . String ( ) \n } \n\n func   StringBuilder ( p  [ ] string )   string   { \n\t var  b strings . Builder\n\tl := len ( p ) \n\t for  i := 0 ; i < l ; i ++ { \n\t\tb . WriteString ( p [ i ] ) \n\t } \n\t return  b . String ( ) \n } \n IO操作 \n \n Go标准库中还有 path 和 path/filepath 函数有点重复,大部分情况下建议使用 path/filepath \n \n \n 两者区别是： path 使用 / 作为路径分隔符， path/filepath 判断系统使用不同的路径分隔符 \n \n 从 Go 1.16 开始会废弃 io/ioutil 包，相关的功能会挪到 io 包或 os 包 \n \n https://github.com/golang/go/issues/40025 \n https://github.com/golang/go/issues/42026 \n path包 \n \n \n \n 函数 \n 说明 \n \n \n \n \n IsAbs(path string) bool \n 判断是否是一个绝对路径 \n \n \n Split(path string) (dir, file string) \n 将路径分割为路径和文件名 \n \n \n Join(elem ...string) string \n 将多个字符串合并为一个路径 \n \n \n Ext(path string) string \n 返回路径中扩展部分 \n \n \n Base(path string) string \n 返回路径的最后一个元素 \n \n \n Dir(path string) string \n 返回路径中目录部分 \n \n \n Clean(path string) string \n 返回同目录的最短路径 \n \n \n Match(pattern, name string) (matched bool, err error) \n 正则是否匹配路径（shell 文件名匹配） \n filepath包 \n \n \n \n 函数 \n 说明 \n \n \n \n \n filepath.ListSeparator \n 预定义变量，表示环境变量分隔符 : \n \n \n filepath.Separator \n 预定义变量，表示路径分隔符/ \n \n \n Abs(path string) (string, error) \n 返回path 相对当前路径的绝对路径 \n \n \n Base(path string) string \n 返回路径最后一个元素 \n \n \n Clean(path string) string \n 返回path 的最短路径 \n \n \n Dir(path string) string \n 返回路径最后一个元素的目录 \n \n \n EvalSymlinks(path string) (string, error) \n 返回软链指向的路径 \n \n \n Ext(path string) string \n 返回路径中的扩展名，如果没有点返回空 \n \n \n FromSlash(path string) string \n /替换为路径分隔符 \n \n \n Join(elem ...string) string \n 连接路径，返回已经clean过的路径 \n \n \n Rel(basepath, targpath string) (string, error) \n 返回targpath 相对 basepath路径 \n \n \n Split(path string) (dir, file string) \n 分割路径中的目录与文件 \n \n \n SplitList(path string) []string \n 分隔环境变量里面的路径 \n \n \n ToSlash(path string) string \n 路径分隔符替换为/ \n \n \n VolumeName(path string) string \n 返回路径最前面的卷名 \n \n \n Walk(root string, walkFn WalkFunc) error \n 遍历 root 目录下的文件树，并调用 walkFn \n \n \n Glob(pattern string) (matches []string, err error) \n 返回所有匹配的文件 \n \n \n IsAbs(path string) (b bool) \n 判断路径是不是绝对路径 \n \n \n Match(pattern, name string) (matched bool, err error) \n 匹配文件名，完全匹配则返回true \n 异常和恢复 \n \n Go语言追求简洁优雅，所以，Go语言不支持传统的 try…catch…finally  这种异常，因为Go语言的设计者们认为，\n将异常与控制结构混在一起会很容易使得代码变得混乱。因为开发者很容易滥用异常，甚至一个小小的错误都抛出一个异常。 \n \n \n 在Go语言中，使用多值返回来返回错误。不要用异常代替错误，更不要用来控制流程。在极个别的情况下，\n才使用Go中引入的 Exception 处理： defer 、 panic 、 recover 。 \n \n panic \n \n 函数中书写了 panic 语句，会终止其后要执行的代码，直到 goroutine 整个退出，并报告错误 \n \n \n 如果在 panic 函数之前存在 defer 函数，则执行 defer 函数，这里的 defer 有点类似 try…catch…finally 中的 finally ， \n \n 如果 defer 函数内不包含 recover 会直到 goroutine 整个退出，并报告错误 \n 相反则会捕获这个 panic 类似于其他语言中 try…catch…finally 的 try 角色 \n \n \n defer \n \n 可以将一个方法延迟到包裹该方法的方法返回时执行， defer 类似于其他语言中 try…catch…finally 的 finally 角色，\n它常用于释放资源（如文件句柄、锁等）或确保某些清理逻辑一定会被执行。 \n \n \n 包裹 defer 的函数返回时 \n 包裹 defer 的函数执行到末尾时 \n 所在的 goroutine 发生 panic 时 \n \n \n 当一个方法中有多个 defer 时， defer 会将要延迟执行的方法 压栈 ，当 defer 被触发时，将所有 压栈 的方法 出栈 并执行。\n所以 defer 的执行顺序是 LIFO (后进先出)的。 \n \n recover \n \n 用来控制一个 goroutine 的 panicking 行为，捕获 panic ，从而影响应用的行为 \n \n \n 在 defer 函数中，通过 recever 来终止一个 goroutine 的 panicking 过程，从而恢复正常代码的执行，可以获取通过 panic 传递的 error \n defer 类似于其他语言中 try…catch…finally 的 catch 角色 \n \n 简单来讲：可以抛出一个 panic 的异常，然后在 defer 中通过 recover 捕获这个异常，然后正常处理。 \n 注意：利用 recover 处理 panic 指令， defer 必须在 panic 之前声明，否则 recover 无法捕获到 panic \n 示例 \n func   main ( )   { \n\tfmt . Println ( "++++++++++++++++++++" ) \n\t // 必须要先声明defer，否则不能捕获到panic异常 \n\t defer   func ( )   { \n\t\tfmt . Println ( "=============" ) \n\t\t if  err  :=   recover ( ) ;  err  !=   nil   { \n\t\t\t // 这里的err其实就是panic传入的内容 \n\t\t\tfmt . Println ( err ) \n\t\t } \n\t\tfmt . Println ( "=============" ) \n\t } ( ) \n\t // 开始调用test \n\t test ( ) \n\t // 这里开始下面代码不会再执行 \n\tfmt . Println ( "+++++++++++++++++++" ) \n } \n\n func   test ( )   { \n\tfmt . Println ( "*******************" ) \n\t panic ( "异常信息" ) \n\t //这里开始下面代码不会再执行 \n\tfmt . Println ( "b" ) \n } \n HTTP \n \n 关于golang 的readall清空reader \n multipart/form-data POST上传文件 \n Golang模拟客户端POST表单功能文件上传 \n go语言模拟multipart/form-data提交数据 \n 从 HTTP 角度看 Go 如何实现文件上传 \n Golang net/http包 同时监听多个端口 \n \n var  buffer  [ 512 ] byte \nresult  :=  bytes . NewBuffer ( nil ) \n for   { \n    n ,  err  :=  resp . Body . Read ( buffer [ 0 : ] ) \n    result . Write ( buffer [ 0 : n ] ) \n     if  err  !=   nil   &&  err  ==  io . EOF  { \n         break \n     }   else   if  err  !=   nil   { \n         panic ( err ) \n     } \n } \n //result, _ := ioutil.ReadAll(resp.Body) \n // 必须关闭 \n defer  resp . Body . Close ( ) \n // 使用ioutil.ReadAll 会清空对应Reader，重新赋值对应Reader \n //resp.Body = ioutil.NopCloser(bytes.NewBuffer(result)) \n\n // 解析参数，填充到Form、PostForm，这里也会清空对应Reader \nresp . Request . ParseForm ( ) \n // 解析文件上传表单的post参数 \nresp . Request . ParseMultipartForm ( 1024 ) \n \n // http.Client发送请求，此方式是封装的http.NewRequest方法 \n // \n // method:\t请求方法：POST、GET、PUT、DELETE \n // urlText:\t\t请求地址 \n // contentType: 请求数据类型，首字母简写，如：axwfu \n // params:\t请求参数 \n func   HttpClient ( method ,  urlText ,  contentType  string ,  params  map [ string ] string )   ( * http . Response ,   error )   { \n\t if  urlText  ==   ""   { \n\t\t panic ( errors . New ( "url不能为空" ) ) \n\t } \n\tclient  :=  http . Client { Timeout :   30   *  time . Second } \n\n\t var  resp  * http . Response\n\t var  err  error \n\n\tmethod  =  strings . ToUpper ( method ) \n\t if  method  ==  http . MethodPost  ||  method  ==  http . MethodPatch  ||  method  ==  http . MethodPut  { \n\t\t if  params  !=   nil   { \n\t\t\t switch  contentType  { \n\t\t\t case   "axwfu" :   // application/x-www-form-urlencoded \n\t\t\t\tdata  :=   make ( url . Values ) \n\t\t\t\t //data := url.Values{} \n\t\t\t\t for  k ,  v  :=   range  params  { \n\t\t\t\t\tdata [ k ]   =   [ ] string { v } \n\t\t\t\t\t //data.Set(k, v) \n\t\t\t\t } \n\t\t\t\tresp ,  err  =  client . PostForm ( urlText ,  data ) \n\t\t\t case   "mf" :   // multipart/form-data \n\t\t\t\tbodyBuf  :=   & bytes . Buffer { } \n                writer  :=  multipart . NewWriter ( bodyBuf ) \n                 for  k ,  v  :=   range  params  { \n                     if  err  =  writer . WriteField ( k ,  v ) ;  err  !=   nil   { \n                         return   nil ,  err\n                     } \n                 } \n                 if  err  =  writer . Close ( ) ;  err  !=   nil   { \n                     return   nil ,  err\n                 } \n\t\t\t\tresp ,  err  =  client . Post ( urlText ,  writer . FormDataContentType ( ) ,  bodyBuf ) \n\t\t\t case   "tx" :   // text/xml \n\t\t\t\tjsonStr ,  err  :=  json . Marshal ( params ) \n\t\t\t\t if  err  !=   nil   { \n\t\t\t\t\t return   nil ,  err\n\t\t\t\t } \n\t\t\t\tdata  :=  strings . ReplaceAll ( string ( jsonStr ) ,   " " ,   "+" ) \n\t\t\t\tresp ,  err  =  client . Post ( urlText ,  contentType ,  bytes . NewBuffer ( [ ] byte ( data ) ) ) \n\t\t\t default :   // application/json \n\t\t\t\tjsonStr ,  err  :=  json . Marshal ( params ) \n\t\t\t\t if  err  !=   nil   { \n\t\t\t\t\t return   nil ,  err\n\t\t\t\t } \n\t\t\t\tresp ,  err  =  client . Post ( urlText ,   "application/json" ,  bytes . NewBuffer ( jsonStr ) ) \n\t\t\t } \n\t\t }   else   { \n\t\t\tresp ,  err  =  client . Post ( urlText ,  contentType ,   nil ) \n\t\t } \n\t }   else   { \n\t\t if  params  !=   nil   { \n\t\t\turlText  =  urlText  +   "?" \n\t\t\t for  key ,  value  :=   range  params  { \n\t\t\t\turlText  +=  key  +   "="   +  value  +   "&" \n\t\t\t } \n\t\t } \n\t\t // url编码 \n\t\t //urlText=urlText.QueryEscape(urlText) \n\t\t if  method  ==   "HEAD"   { \n\t\t\tresp ,  err  =  client . Head ( urlText ) \n\t\t }   else   { \n\t\t\tresp ,  err  =  client . Get ( urlText ) \n\t\t } \n\t } \n\t return  resp ,  err\n } \n 作业调度 \n \n ticker 只要定义完成，从此刻开始计时，不需要任何其他的操作，每隔固定时间都会触发。 \n timer 定时器，是到固定时间后会执行一次 \n \n \n 如果timer定时器要每隔间隔的时间执行，实现ticker的效果，使用 func (t *Timer) Reset(d Duration) bool \n \n \n go timer 和 ticker 的区别 \n \n 固定到每天的Duration \n now  :=  time . Now ( ) \n // 计算下一个时间点 \nnext  :=  now . Add ( duration ) \nnext  =  time . Date ( next . Year ( ) ,  next . Month ( ) ,  next . Day ( ) ,   0 ,   0 ,   0 ,   0 ,  next . Location ( ) ) \n if  next . Sub ( now )   <=   0   { \n    next  =  next . Add ( time . Hour  *   24 ) \n } \nticker  :=  time . NewTicker ( next . Sub ( now ) ) \ntimer  :=  time . NewTimer ( next . Sub ( now ) ) \n \n Ticker \n \n ticker只要定义完成，从此刻开始计时，不需要任何其他的操作，每隔固定时间都会触发。 \n \n \n NewTicker返回一个新的 Ticker，该 Ticker 包含一个通道字段，并会每隔时间段 d 就向该通道发送当时的时间。它会调 \n整时间间隔或者丢弃 tick 信息以适应反应慢的接收者。如果d <= 0会触发panic。关闭该 Ticker 可以释放相关资源 \n \n // 启动的时候执行一次，滚动间隔时间执行 \n func   SchedulerIntervalsTicker ( f  func ( ) ,  duration time . Duration )   { \n     // 创建一个 Timer，它会在最少过去时间段 d后到期，向其自身的 C 字段发送当时的时间 \n    ticker  :=  time . NewTicker ( duration ) \n\t for   { \n\t\t go   f ( ) \n\t\t <- ticker . C\n\t } \n } \n\n func   SchedulerIntervalsTicker ( f  func ( ) ,  duration time . Duration )   { \n\t var  ch  chan   int \n\t // 定时任务 \n\tticker  :=  time . NewTicker ( duration ) \n\t go   func ( )   { \n\t\t for   range  ticker . C  { \n\t\t\t f ( ) \n\t\t } \n\t\tch  <-   1 \n\t } ( ) \n\t <- ch\n } \n\n func   SchedulerIntervalsTicker ( f  func ( ) ,  duration time . Duration )   { \n\t // 定时任务 \n\tticker  :=  time . NewTicker ( duration ) \n\t for   range  ticker . C  { \n\t\t go   f ( ) \n\t } \n } \n \n Timer \n \n timer 定时器，是到固定时间后会执行一次，它会在最少过去时间段 d 后到期，向其自身的 C 字段发送当时的时间 \n \n // 启动的时候执行一次 \n func   SchedulerFixedTimer ( f  func ( ) ,  duration time . Duration )   { \n    timer  :=  time . NewTimer ( duration ) \n     for   { \n         go   f ( ) \n         <- timer . C\n         // Reset 使 ticker 重新开始计时，否则会导致通道堵塞，（本方法返回后再）等待时间段 d 过去后到期。 \n         // 如果调用时t还在等待中会返回真；如果 t已经到期或者被停止了会返回假 \n        timer . Reset ( duration ) \n     } \n } \n\n func   SchedulerFixedTimer ( f  func ( ) ,  duration time . Duration )   { \n\ttimer  :=  time . NewTimer ( duration ) \n\t go   func ( )   { \n\t\t for   range  timer . C  { \n\t\t\t f ( ) \n\t\t } \n\t\tch  <-   1 \n\t } ( ) \n\t <- ch\n } \n\n func   SchedulerFixedTimer ( f  func ( ) ,  duration time . Duration )   { \n\ttimer  :=  time . NewTimer ( duration ) \n\t for   range  timer . C  { \n\t\t go   f ( ) \n\t } \n } \n 进程线程协程 \n \n GO程序是单进程的（手动 fork/exec 不算），但是调度器是多线程的。 \n \n \n go 开多个goroutine，是在一个进程中完成，还是可能在多个进程中完成 \n golang多进程并发 \n 进程 \n \n exec 包执行外部命令，它将 os.StartProcess 进行包装使得它更容易映射到 stdin 和 stdout ，并且利用 pipe 连接 i/o \n \n \n 这和 python``下的command 、 os.system 等功能一样。可以调用类 LINUX 系统下的 shell 命令，也可以在 windows 下调用 cmd 命令。 \n \n \n os包中实现了平台无关的接口，设计向Unix风格，但是错误处理是go风格，当os包使用时，如果失败之后返回错误类型而不是错误数量． \n \n \n golang中os包用法 \n \n proc ,  err  =  os . StartProcess ( "test.exe" ,   nil ,   & os . ProcAttr { Files :   [ ] * os . File { os . Stdin ,  os . Stdout ,  os . Stderr } } ) \n 协程 \n \n 多线程 \n Go 并发 、并行、线程池 \n 多线程 并发 \n Go 并发控制 \n 多任务线程池并发 \n 深度剖析 Go 中的 Go 协程 (goroutines) -- Go 的并发 \n \n go  函数\n \n \n 匿名 Go 协程 \n \n go   func ( )   { \n     // 业务逻辑 \n } ( ) \n \n \n 协程的调度 \n \n func   TestGorutine ( t  * testing . T )   { \n     // 指定最大 P 为 1，从而管理协程最多的线程为 1 个     \n    runtime . GOMAXPROCS ( 1 ) \n     // 显式地让出CPU时间给其他goroutine \n     //runtime.Gosched() \n     // 控制等待所有协程都执行完再退出程序     \n    wg  :=  sync . WaitGroup { } \n    wg . Add ( 2 ) \n     // 运行一个协程 \n     go   func ( )   { \n        fmt . Println ( 1 ) \n        fmt . Println ( 2 ) \n        fmt . Println ( 3 ) \n        wg . Done ( ) \n     } ( ) \n\n     // 运行第二个协程 \n     go   func ( )   { \n        fmt . Println ( 65 ) \n        fmt . Println ( 66 ) \n         // 设置个睡眠，让该协程执行超时而被挂起，引起超时调度 \n        time . Sleep ( time . Second ) \n        fmt . Println ( 67 ) \n        wg . Done ( ) \n     } ( ) \n    wg . Wait ( ) \n } \n ORM \n \n Object-Relational Mapping ，把关系数据库的表结构映射到对象上。 \n \n \n orm对比 \n \n \n https://github.com/jmoiron/sqlx \n https://github.com/jinzhu/gorm \n https://github.com/go-xorm/xorm \n https://github.com/gohouse/gorose \n https://github.com/go-gorp/gorp \n Daemon \n \n https://github.com/takama/daemon \n \n Cgo实现 \n package  main\n\n import   ( \n     "fmt" \n     "net" \n     "runtime" \n ) \n\n /*\n#include <unistd.h>\n*/ \n import   "C" \n\n func   main ( )   { \n     // 守护进程 \n    C . daemon ( 1 ,   1 ) \n    runtime . GOMAXPROCS ( runtime . NumCPU ( ) ) \n    fmt . Println ( "Starting the server ..." ) \n    listener ,  err  :=  net . Listen ( "tcp" ,   "localhost:8080" ) \n     if  err  !=   nil   { \n        fmt . Println ( "Error listening" ,  err . Error ( ) ) \n         return \n     } \n\n     for   { \n        conn ,  err  :=  listener . Accept ( ) \n         if  err  !=   nil   { \n            fmt . Println ( "error accepting" ,  err . Error ( ) ) \n             return \n         } \n\n         go   doServerStuff ( conn ) \n     } \n } \n\n func   doServerStuff ( conn net . Conn )   { \n     for   { \n        buf  :=   make ( [ ] byte ,   512 ) \n         _ ,  err  :=  conn . Read ( buf ) \n         if  err  !=   nil   { \n            fmt . Println ( "Error reading" ,  err . Error ( ) ) \n             return \n         } \n        fmt . Printf ( "Received data: %v" ,   string ( buf ) ) \n     } \n } \n \n 支持goroutine和系统信号监听 \n \n go通过syscall调用fork实现(这个和Cgo deamon函数原理一样) \n \n package  main\n \n import   ( \n     "os" \n     "fmt" \n     "os/signal" \n     "syscall" \n     "time" \n     "log" \n     "os/exec" \n ) \n func   init ( )   { \n     if  os . Getppid ( )   !=   1 { \n        cmd  :=  exec . Command ( os . Args [ 0 ] ,  os . Args [ 1 : ] ... ) \n        cmd . Start ( ) \n        os . Exit ( 0 ) \n     } \n \n     // 监听系统信号 \n     go   func ( )   { \n        _c  :=   make ( chan  os . Signal ,   1 ) \n        signal . Notify ( _c ,  os . Interrupt ,  syscall . SIGHUP ,  syscall . SIGINT ,  syscall . SIGTERM ,  syscall . SIGQUIT ,  syscall . SIGKILL ,  syscall . SIGTSTP ) \n        msg  :=   <-  _c\n        log . Println ( msg ) \n        os . Exit ( 0 ) \n     } ( ) \n } \n \n func   main ( )    { \n \n     go   func ( ) { \n        fp ,   _   :=  os . OpenFile ( "log" ,  os . O_WRONLY | os . O_CREATE | os . O_APPEND ,   0644 ) \n        log . SetOutput ( fp ) \n         for { \n            log . Println ( fmt . Sprint ( "hello " ,  os . Getpid ( ) ) ) \n            time . Sleep ( time . Second  *   5 ) \n         } \n     } ( ) \n \n     for { \n        time . Sleep ( time . Second  *   1000 ) \n     } \n \n } \n \n ',createdTime:1761814324e3},{title:"Go编译打包",frontmatter:{description:"下载打包脚本go7zpack.bat或go_pack.sh文件并保存到项目根目录中，\n> 且修改脚本中的files变量保存执行脚本即可",meta:[{name:"twitter:title",content:"Go编译打包"},{name:"twitter:description",content:"下载打包脚本go7zpack.bat或go_pack.sh文件并保存到项目根目录中，\n> 且修改脚本中的files变量保存执行脚本即可"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Go/Go%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Go编译打包"},{property:"og:description",content:"下载打包脚本go7zpack.bat或go_pack.sh文件并保存到项目根目录中，\n> 且修改脚本中的files变量保存执行脚本即可"},{property:"og:url",content:"https://bajins.com/Go/Go%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Go编译打包"},{itemprop:"description",content:"下载打包脚本go7zpack.bat或go_pack.sh文件并保存到项目根目录中，\n> 且修改脚本中的files变量保存执行脚本即可"}]},regularPath:"/Go/Go%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85.html",relativePath:"Go/Go编译打包.md",key:"v-5d77392a",path:"/Go/Go%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"第三方库",slug:"第三方库"},{level:2,title:"embed内嵌文件",slug:"embed内嵌文件"},{level:2,title:"打包命令",slug:"打包命令"},{level:3,title:"设置编译环境",slug:"设置编译环境"},{level:3,title:"windows",slug:"windows"},{level:3,title:"linux",slug:"linux"},{level:3,title:"交叉编译代码",slug:"交叉编译代码"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Go编译打包 \n Flag 第三方库 embed内嵌文件 打包命令 设置编译环境 windows linux 交叉编译代码 \n Flag \n \n Go语言-打包静态文件 \n \n \n 下载打包脚本 go_7z_pack.bat 或 go_pack.sh 文件并保存到项目根目录中，\n且修改脚本中的 files 变量保存执行脚本即可 \n \n cross compile \n \n 交叉编译器（英语：Cross compiler）是指一个在某个系统平台下可以产生另一个系统平台的可执行文件的编译器。\n交叉编译器在目标系统平台（开发出来的应用程序序所运行的平台）难以或不容易编译时非常有用。 \n \n \n 交叉编译是在一个平台上生成另一个平台上的可执行代码。同一个体系结构可以运行不同的操作系统；\n同样，同一个操作系统也可以在不同的体系结构上运行。 \n 第三方库 \n \n https://github.com/mitchellh/gox \n https://github.com/wheelcomplex/goxx \n https://github.com/goreleaser/goreleaser \n https://github.com/laher/goxc \n https://github.com/karalabe/xgo \n https://github.com/techknowlogick/xgo \n https://github.com/storyicon/gos \n https://github.com/docker/golang-cross \n https://github.com/im4x5yn74x/dropper2 \n https://github.com/getporter/porter \n Go编译器  https://github.com/tinygo-org/tinygo \n \n 嵌入静态资源 \n \n https://github.com/go-bindata/go-bindata \n https://github.com/caixw/gobuild \n https://github.com/shuLhan/go-bindata \n https://github.com/elazarl/go-bindata-assetfs \n https://github.com/rakyll/statik \n https://github.com/GeertJohan/go.rice \n https://github.com/mjibson/esc \n https://github.com/UnnoTed/fileb0x \n https://github.com/gobuffalo/packr \n https://github.com/go-playground/statics \n https://github.com/knadh/stuffbin \n https://github.com/omeid/go-resources \n https://github.com/phogolabs/parcello \n https://github.com/pyros2097/go-embed \n https://github.com/shurcooL/vfsgen \n https://github.com/wlbr/templify \n https://perkeep.org/pkg/fileembed \n https://github.com/kevinburke/go-bindata \n https://github.com/markbates/pkger \n embed内嵌文件 \n \n https://github.com/golang/proposal/blob/master/design/draft-embed.md \n go:embed扩展  https://github.com/alimy/embedx \n \n \n 在go1.6版本之前要想把资源文件嵌入到编译的二进制包中必须用第三方包（除非你自己有实现），要么把所有文件压缩在一起 \n \n \n embed一共有三种数据格式 \n \n \n \n \n 数据类型 \n 说明 \n \n \n \n \n []byte \n 表示数据存储为二进制格式，如果只使用[]byte和string需要以import (_ "embed")的形式引入embed标准库 \n \n \n string \n 表示数据被编码成utf8编码的字符串，因此不要用这个格式嵌入二进制文件比如图片，引入embed的规则同[]byte \n \n \n embed.FS \n 表示存储多个文件和目录的结构，[]byte和string只能存储单个文件 \n \n \n \n \n Go1.16 中发布的内嵌静态资源功能 \n golang1.16内嵌静态资源指南 \n 打包命令 \n \n https://golang.google.cn/doc/install/source#environment \n https://gist.github.com/asukakenji/f15ba7e588ac42795f421b48b8aede63 \n 设置编译环境 \n \n https://github.com/golang/go/blob/master/src/cmd/dist/build.go#L1513 \n \n \n go tool dist list  获得所有受支持平台的列表 \n GOOS  目标可执行程序运行操作系统，支持 darwin 、 freebsd 、 linux 、 windows \n GOARCH  目标平台的体系架构，包括 386 、 amd64 、 arm \n CGO_ENABLED  CGO开关 \n -o  参数为指定输出程序文件名 \n go clean -cache  编译完成清理缓存 \n go env -w GOFLAGS=-buildvcs=false  不将版本控制信息（如提交哈希、提交时间）嵌入到二进制文件中 \n \n -ldflags 选项 \n \n 用 ldflags 给go链接器传入参数， go tool link 查看可用值  https://golang.org/cmd/link \n \n \n -ldflags="-w -s"  选项可以减小编译后的程序体积 \n \n \n 注意因为 date 和 go version 的输出有空格，所以 main.BUILD_TIME 和 main.GO_VERSION 必须使用引号括起来 \n \n go build  -ldflags   "-X main.VERSION=1.0.0 -X \'main.BUILD_TIME= ` date ` \' \\\n-X \'main.GO_VERSION= ` go version ` \' -X \'main.commitHash= ` git  rev-parse HEAD ` \'" \n windows \n \n -ldflags="-H windowsgui"  能隐藏黑窗口 \n交叉编译不支持 CGO 所以要禁用它\n SET   CGO_ENABLED = 0 \n打包Linux 执行文件\n SET   GOOS = linux \n打包386执行文件\n SET   GOARCH = amd64 \n\n go  build main.go \n打包文件成其他名字\n go  build  -o  test.exe main.go \n linux \n CGO_ENABLED = 0   GOOS = windows  GOARCH = amd64 go build main.go\n 交叉编译代码 \n package  main\n\n import   ( \n\t "flag" \n\t "fmt" \n\t "os" \n\t "os/exec" \n\t "path" \n ) \n\n type  syslist  struct   { \n\tGOOS    string \n\tGOARCH  string \n } \n\n var  syslists  [ 32 ] syslist\n\n func   init ( )   { \n\tsyslists [ 0 ]   =  syslist { GOOS :   "darwin" ,  GOARCH :   "386" } \n\tsyslists [ 1 ]   =  syslist { GOOS :   "darwin" ,  GOARCH :   "amd64" } \n\tsyslists [ 2 ]   =  syslist { GOOS :   "dragonfly" ,  GOARCH :   "amd64" } \n\tsyslists [ 3 ]   =  syslist { GOOS :   "freebsd" ,  GOARCH :   "386" } \n\tsyslists [ 4 ]   =  syslist { GOOS :   "freebsd" ,  GOARCH :   "amd64" } \n\tsyslists [ 5 ]   =  syslist { GOOS :   "freebsd" ,  GOARCH :   "arm" } \n\tsyslists [ 6 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "386" } \n\tsyslists [ 7 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "amd64" } \n\tsyslists [ 8 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "arm" } \n\tsyslists [ 9 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "arm64" } \n\tsyslists [ 10 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "ppc64" } \n\tsyslists [ 11 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "ppc64le" } \n\tsyslists [ 12 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "mips" } \n\tsyslists [ 13 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "mipsle" } \n\tsyslists [ 14 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "mips64" } \n\tsyslists [ 15 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "mips64le" } \n\tsyslists [ 16 ]   =  syslist { GOOS :   "linux" ,  GOARCH :   "s390x" } \n\tsyslists [ 17 ]   =  syslist { GOOS :   "nacl" ,  GOARCH :   "386" } \n\tsyslists [ 18 ]   =  syslist { GOOS :   "nacl" ,  GOARCH :   "amd64p32" } \n\tsyslists [ 19 ]   =  syslist { GOOS :   "nacl" ,  GOARCH :   "arm" } \n\tsyslists [ 20 ]   =  syslist { GOOS :   "netbsd" ,  GOARCH :   "386" } \n\tsyslists [ 21 ]   =  syslist { GOOS :   "netbsd" ,  GOARCH :   "amd64" } \n\tsyslists [ 22 ]   =  syslist { GOOS :   "netbsd" ,  GOARCH :   "arm" } \n\tsyslists [ 23 ]   =  syslist { GOOS :   "openbsd" ,  GOARCH :   "386" } \n\tsyslists [ 24 ]   =  syslist { GOOS :   "openbsd" ,  GOARCH :   "amd64" } \n\tsyslists [ 25 ]   =  syslist { GOOS :   "openbsd" ,  GOARCH :   "arm" } \n\tsyslists [ 26 ]   =  syslist { GOOS :   "plan9" ,  GOARCH :   "386" } \n\tsyslists [ 27 ]   =  syslist { GOOS :   "plan9" ,  GOARCH :   "amd64" } \n\tsyslists [ 28 ]   =  syslist { GOOS :   "plan9" ,  GOARCH :   "arm" } \n\tsyslists [ 29 ]   =  syslist { GOOS :   "solaris" ,  GOARCH :   "amd64" } \n\tsyslists [ 30 ]   =  syslist { GOOS :   "windows" ,  GOARCH :   "386" } \n\tsyslists [ 31 ]   =  syslist { GOOS :   "windows" ,  GOARCH :   "amd64" } \n } \n\n // 编译 \n func   main ( )   { \n\t // 文件存放目录 \n\t var  parentFolder  string \n\t // 编译输出存放的子目录 \n\t var  subFolder  string \n\t // 文件名前缀 \n\t var  filePrefix  string \n\t // 要编译的源文件列表 \n\t var  files  string \n\t // scanner := bufio.NewScanner(os.Stdin) \n\t // scanner.Scan() \n\t // fmt.Println(scanner.Text()) \n\t //fmt.Println("请输文件存放目录：") \n\t // 当程序到此，会停止执行等待用户输入 \n\t //fmt.Scanln(&parentFolder) \n\n\tflag . StringVar ( & parentFolder ,   "p" ,   "" ,   "文件存放目录，默认：当前目录" ) \n\tflag . StringVar ( & subFolder ,   "s" ,   "" ,   "编译输出存放子目录，默认：空" ) \n\tflag . StringVar ( & filePrefix ,   "fp" ,   "" ,   "创建文件名前缀，默认：空" ) \n\tflag . StringVar ( & files ,   "fs" ,   "" ,   "源文件列表，默认：空" ) \n\tflag . Parse ( ) \n\n\tcmde  :=  path . Join ( parentFolder ,  subFolder ,  filePrefix ) \n\t if  filePrefix  !=   ""   &&   len ( filePrefix )   >   0   { \n\t\tcmde  =  cmde  +   "-" \n\t } \n\t for   _ ,  v  :=   range  syslists  { \n\t\text  :=   "" \n\t\t if  v . GOOS  ==   "windows"   { \n\t\t\text  =   ".exe" \n\t\t } \n\t\tthisCmde  :=  fmt . Sprintf ( "%v%v-%v%v" ,  cmde ,  v . GOOS ,  v . GOARCH ,  ext ) \n\t\tfmt . Println ( thisCmde ) \n\t\tcmd  :=  exec . Command ( "go" ,   "build" ,   "-ldflags=-w" ,   "-i" ,   "-o" ,  thisCmde ,  files ) \n\t\tcmd . Env  =   append ( os . Environ ( ) ,   "GOARCH=" + v . GOARCH ,   "GOOS=" + v . GOOS ) \n\t\toutput ,  err  :=  cmd . CombinedOutput ( ) \n\t\t if  err  !=   nil   { \n\t\t\tfmt . Println ( fmt . Sprint ( err )   +   ": "   +   string ( output ) ) \n\t\t\t return \n\t\t } \n\t\tfmt . Println ( string ( output ) ) \n\t } \n\tfmt . Println ( "编译完成" ) \n } \n \n ',createdTime:1761814324e3},{title:"Go第三方库",frontmatter:{description:"https://github.com/avelino/awesome-go\nhttps://github.com/yinggaozhen/awesome-go-cn\nweb框架基准测试 https://github.com/smallnest/go-web-framework-benchmark\n序列化工具基准测试 https://github.com/smallnest/gosercomp\nhttps://github.com/julienschmidt/go-http-routing-benchmark\n压测工具 https://github.com/link1st/go-stress-testing\n监控运行 https://github.com/thejerf/suture\nhttps://github.com/PagerDuty",meta:[{name:"twitter:title",content:"Go第三方库"},{name:"twitter:description",content:"https://github.com/avelino/awesome-go\nhttps://github.com/yinggaozhen/awesome-go-cn\nweb框架基准测试 https://github.com/smallnest/go-web-framework-benchmark\n序列化工具基准测试 https://github.com/smallnest/gosercomp\nhttps://github.com/julienschmidt/go-http-routing-benchmark\n压测工具 https://github.com/link1st/go-stress-testing\n监控运行 https://github.com/thejerf/suture\nhttps://github.com/PagerDuty"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Go/Go%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Go第三方库"},{property:"og:description",content:"https://github.com/avelino/awesome-go\nhttps://github.com/yinggaozhen/awesome-go-cn\nweb框架基准测试 https://github.com/smallnest/go-web-framework-benchmark\n序列化工具基准测试 https://github.com/smallnest/gosercomp\nhttps://github.com/julienschmidt/go-http-routing-benchmark\n压测工具 https://github.com/link1st/go-stress-testing\n监控运行 https://github.com/thejerf/suture\nhttps://github.com/PagerDuty"},{property:"og:url",content:"https://bajins.com/Go/Go%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Go第三方库"},{itemprop:"description",content:"https://github.com/avelino/awesome-go\nhttps://github.com/yinggaozhen/awesome-go-cn\nweb框架基准测试 https://github.com/smallnest/go-web-framework-benchmark\n序列化工具基准测试 https://github.com/smallnest/gosercomp\nhttps://github.com/julienschmidt/go-http-routing-benchmark\n压测工具 https://github.com/link1st/go-stress-testing\n监控运行 https://github.com/thejerf/suture\nhttps://github.com/PagerDuty"}]},regularPath:"/Go/Go%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",relativePath:"Go/Go第三方库.md",key:"v-cdb7a288",path:"/Go/Go%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"框架",slug:"框架"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Go第三方库 \n Flag 框架 \n Flag \n \n https://github.com/avelino/awesome-go \n https://github.com/yinggaozhen/awesome-go-cn \n web框架基准测试  https://github.com/smallnest/go-web-framework-benchmark \n 序列化工具基准测试  https://github.com/smallnest/gosercomp \n https://github.com/julienschmidt/go-http-routing-benchmark \n 压测工具  https://github.com/link1st/go-stress-testing \n 监控运行  https://github.com/thejerf/suture \n https://github.com/PagerDuty \n \n \n https://github.com/vishvananda/netlink \n https://github.com/go-martini/martini \n https://github.com/xyproto/algernon \n https://github.com/urfave \n https://github.com/cloudquery \n https://github.com/GoAdminGroup \n https://github.com/essentialkaos \n https://github.com/alecthomas \n https://github.com/golangci \n 分布式  https://github.com/asim/go-micro \n https://github.com/gotomicro \n https://github.com/go-playground \n https://github.com/modern-go \n https://github.com/urfave \n \n https://github.com/urfave/negroni \n \n \n https://github.com/spf13 \n https://github.com/nanopack \n https://github.com/go-logr \n https://github.com/apex \n https://github.com/gorilla \n https://github.com/eolinker \n 数据库驱动  https://github.com/go-sql-driver \n https://github.com/hashicorp \n https://github.com/boombuler \n https://github.com/goplus \n https://github.com/gliderlabs \n https://github.com/mailru \n https://github.com/mholt \n https://github.com/moul \n https://github.com/frobware \n https://github.com/juju \n PostgreSQL  https://github.com/jackc/pgx \n \n \n 工具包  https://github.com/dablelv/go-huge-util \n https://github.com/jxskiss/gopkg \n https://github.com/uber-go \n https://github.com/gookit \n https://github.com/VividCortex \n https://github.com/adrg \n https://github.com/xdg-go \n https://github.com/xxjwxc/public \n https://github.com/shenghui0779/yiigo \n https://github.com/elliotchance/orderedmap \n https://github.com/iancoleman/orderedmap \n 进程和系统实用程序  https://github.com/shirou/gopsutil \n https://github.com/liyue201/gostl \n https://github.com/target \n https://github.com/rogpeppe/go-internal \n https://github.com/samber/lo \n HTTP  https://github.com/go-resty/resty \n https://github.com/wangluozhe/requests \n https://github.com/parnurzeal/gorequest \n https://github.com/levigross/grequests \n https://github.com/kirinlabs/HttpRequest \n https://github.com/ghetzel/go-stockutil \n https://github.com/Danny-Dasilva/CycleTLS \n https://github.com/guonaihong/gout \n https://github.com/dghubble/sling \n https://github.com/sethgrid/pester \n https://github.com/ddliu/go-httpclient \n https://github.com/juju/persistent-cookiejar \n https://github.com/h2non/gentleman \n https://github.com/gojek/heimdall \n https://github.com/ddo/rq \n https://github.com/Shinku-Chen/Ja3RoundTripper \n https://github.com/CUCyber/ja3transport \n JWT  https://github.com/kataras/jwt \n https://github.com/dgrijalva/jwt-go \n https://github.com/dexidp/dex \n https://github.com/lestrrat-go/jwx \n JSON  https://github.com/go-json-experiment \n https://github.com/json-iterator \n https://github.com/mailru/easyjson \n https://github.com/minio/simdjson-go \n https://github.com/goccy/go-json \n https://github.com/deckarep/golang-set \n https://github.com/chenhg5/collection \n https://github.com/Andrew-M-C/go.jsonvalue \n https://github.com/tidwall/gjson \n https://github.com/timbray/quamina \n https://github.com/go-json-experiment/json \n JSON转CSV  https://github.com/yukithm/json2csv \n 线程池  https://github.com/xxjwxc/gowp \n https://github.com/panjf2000/ants \n 反射库高级抽象  https://github.com/oleiade/reflections \n 反射库包装  https://github.com/hedzr/ref \n 模板功能  https://github.com/Masterminds/sprig \n https://github.com/jordan-wright/email \n https://github.com/flike/kingshard \n https://github.com/open-falcon \n https://github.com/open-falcon/mail-provider \n https://github.com/Yanjunhui/chat \n https://github.com/ouqiang/delay-queue \n https://github.com/beanstalkd/go-beanstalk \n https://github.com/tal-tech/go-queue \n ORM  https://github.com/go-xorm \n https://github.com/zhihu/norm \n https://gitea.com/xorm/xorm \n \n https://xorm.io \n \n \n https://github.com/xormplus/xorm \n https://github.com/huandu/go-sqlbuilder \n https://github.com/libragen/felix \n https://github.com/eventials/go-tus \n https://github.com/uptrace/bun \n 缓存  https://github.com/patrickmn/go-cache \n https://github.com/bluele/gcache \n https://github.com/golang/groupcache \n https://github.com/muesli/cache2go \n https://github.com/coocood/freecache \n https://github.com/allegro/bigcache \n \n https://pandaychen.github.io/2020/03/03/BIGCACHE-ANALYSIS \n 手撕 Golang 高性能缓存库 bigcache \n \n \n 快速生成ASCII表格  https://github.com/olekukonko/tablewriter \n 获取固定宽度的字符或字符串  https://github.com/mattn/go-runewidth \n 具有历史记录的命令行编辑器  https://github.com/peterh/liner \n 自动控制基于终端或控制台  https://github.com/Netflix/go-expect \n https://github.com/google/goexpect \n https://github.com/google/goterm \n https://github.com/ThomasRooney/gexpect \n https://github.com/mattn/go-sqlite3 \n https://github.com/nakagami/firebirdsql \n https://github.com/lib/pq \n Swagger2  https://github.com/swaggo \n https://github.com/owenliang/go-push \n 图表库  https://github.com/go-echarts \n 生成和管理调色板  https://github.com/muesli/gamut \n 队列  https://github.com/oleiade/lane \n https://github.com/hibiken/asynq \n 任务排队系统  https://git.sr.ht/~sircmpwn/dowork \n k均值聚类算法  https://github.com/muesli/kmeans \n 有向图  https://github.com/autom8ter/dagger \n 程序抖动问题定位  https://github.com/mosn/holmes \n 内容协作  https://github.com/pydio/cells \n 高性能游戏服务器框架  https://github.com/lonng/nano \n 对图像序列（例如延时拍摄）进行闪烁处理  https://github.com/StruffelProductions/simple-deflicker \n 控制台进度条显示  https://github.com/vardius/progress-go \n 文件监听  http://github.com/fsnotify/fsnotify \n \n https://github.com/romanoff/fsmonitor \n \n \n 计算文件的SHA256  https://github.com/benbjohnson/hashfs \n https://github.com/mattn/go-colorable \n 模板引擎  https://github.com/valyala/quicktemplate \n 编解码器  https://github.com/ugorji/go \n 编码  https://github.com/axgle/mahonia \n 字符编码检测  https://github.com/wlynxg/chardet \n https://github.com/richardlehane/characterize \n https://github.com/saintfish/chardet \n 加密  https://github.com/FiloSottile/age \n AES256 GCM  https://github.com/sumup-oss/vaulted \n 密码验证  https://github.com/wagslane/go-password-validator \n Golang注解  https://github.com/MarcGrol/golangAnnotations \n https://github.com/sbinet/go-python \n https://github.com/refraction-networking/utls \n 十进制数  https://github.com/shopspring/decimal \n 布隆过滤器  https://github.com/bits-and-blooms \n https://github.com/tylertreat/BoomFilters \n Quoted-printable  https://github.com/sloonz/go-qprintable \n 测试  https://github.com/sclevine/spec \n https://github.com/onsi/ginkgo \n https://github.com/stretchr/testify \n https://github.com/go-check/check \n https://github.com/uber-go/mock \n WebSocket  https://github.com/gorilla/websocket \n \n 在 Gin 项目中使用 WebSocket \n https://github.com/kone-net/go-chat \n \n \n https://github.com/gobwas/ws \n \n 性能优化实战：百万级WebSockets和Go语言 \n \n \n 微服务  https://github.com/cloudwego/kitex \n \n https://github.com/volo-rs \n https://github.com/hertz-contrib \n https://github.com/kitex-contrib \n \n \n https://github.com/smallnest/rpcx \n https://github.com/lesismal/arpc \n https://github.com/hekmon/transmissionrpc \n https://github.com/go-kratos/kratos \n https://github.com/shanbay/gobay \n https://github.com/polarismesh \n https://github.com/danielgtaylor/huma \n 基于WebRTC的分布式音频/视频室  https://github.com/livekit/livekit-server \n https://github.com/satori/go.uuid \n https://github.com/google/uuid \n 环境变量  https://github.com/subosito/gotenv \n https://github.com/magiconair/properties \n 结构转换  https://github.com/mitchellh/mapstructure \n https://github.com/creasty/defaults \n https://github.com/deckarep/golang-set \n github.com/go-redis/redis \n https://github.com/seccomp/libseccomp-golang \n https://github.com/iancoleman/orderedmap \n https://github.com/orcaman/concurrent-map \n 构建命令行  https://github.com/cli \n https://github.com/urfave/cli \n https://github.com/go-cmd/cmd \n https://github.com/charmbracelet/bubbletea \n https://github.com/ogier/pflag \n https://github.com/gdamore/tcell \n https://github.com/gcla/gowid \n https://github.com/spf13/cobra \n https://github.com/alecthomas/kingpin \n https://github.com/alecthomas/kong \n https://github.com/mitchellh/cli \n https://github.com/jessevdk/go-flags \n https://github.com/ameshkov/gocurl \n https://github.com/mholt/curl-to-go \n CLI  https://github.com/blend/go-sdk \n shell  https://github.com/creack/pty \n 生成x86程序  https://github.com/mmcloughlin/avo \n 内核模糊器  https://github.com/google/syzkaller \n Markdown处理  https://github.com/russross/blackfriday \n markdown转roff  https://github.com/cpuguy83/go-md2man \n 队列任务  https://github.com/gocraft/work \n https://github.com/txn2/rxtx \n https://github.com/RichardKnop/machinery \n https://github.com/robfig/cron \n https://github.com/reugn/go-quartz \n 媒体类型  https://github.com/gabriel-vasile/mimetype \n 图片转换  https://github.com/gographics/imagick \n https://github.com/davidbyttow/govips \n https://github.com/zyxar/image2ascii \n 视频处理  https://github.com/AlexEidt/Vidio \n https://github.com/Eyevinn/mp4ff \n https://github.com/yapingcat/gomedia \n https://github.com/mowshon/moviego \n https://github.com/u2takey/ffmpeg-go \n https://github.com/asticode/go-astiav \n https://github.com/3d0c/gmf \n https://github.com/vladimirvivien/go4vl \n https://github.com/amagimedia/go-m3u8 \n https://github.com/etherlabsio/go-m3u8 \n https://github.com/grafov/m3u8 \n 流媒体  https://github.com/bluenviron/gortsplib \n 媒体播放器  https://github.com/adrg/libvlc-go \n 地图  https://github.com/tidwall/tile38 \n 限速  https://github.com/Narasimha1997/ratelimiter \n 配置文件  https://github.com/go-ini/ini \n https://github.com/jinzhu/configor \n https://github.com/gookit/config \n https://github.com/golobby/config \n https://github.com/hyahm/goconfig \n https://github.com/unknwon/goconfig \n https://github.com/go-yaml/yaml \n https://github.com/UltiRequiem/yamlfmt \n https://github.com/joho/godotenv \n https://github.com/delfanhao/go-conf \n https://github.com/hashicorp/hcl \n https://github.com/koding/multiconfig \n https://github.com/kelseyhightower/envconfig \n https://github.com/kelseyhightower/confd \n 配置热加载  https://github.com/spf13/viper \n 文件监听  https://github.com/fsnotify/fsnotify \n 监视文件或目录更改  https://github.com/radovskyb/watcher \n 通道工具  https://github.com/Ksloveyuan/channelx \n 配置加载 [https://github.com/cristalhq/aconfig](https://github.com/cristalhq/aconfig \n gin panic  https://github.com/xkkhy/agave \n 特性开关  https://github.com/markphelps/flipt \n https://github.com/checkr/flagr \n 分布式唯一ID  https://github.com/yongxinz/id-maker \n https://github.com/bwmarrin/snowflake \n 单元测试  https://github.com/maxbrunsfeld/counterfeiter \n https://github.com/xhd2015/xgo \n https://github.com/onsi/gomega \n https://github.com/onsi/ginkgo \n https://github.com/stretchr/testify \n https://github.com/agiledragon/gomonkey \n https://github.com/go-kiss/monkey \n https://github.com/brahma-adshonor/gohook \n 定时器  https://github.com/antlabs/timer \n 替换DOCX中的文本  https://github.com/nguyenthenguyen/docx \n https://github.com/sajari/docconv \n https://github.com/unidoc \n 二维码  https://github.com/yeqown/go-qrcode \n 日志  https://github.com/go-clog \n https://github.com/rs/zerolog \n https://github.com/sirupsen/logrus \n https://github.com/uber-go/zap \n 国际化  https://github.com/go-i18n \n https://github.com/nicksnyder/go-i18n \n FFI  https://github.com/goplus/llgo \n https://github.com/go-python \n https://github.com/sbinet/go-python \n https://github.com/ihciah/rust2go \n https://github.com/ebitengine/purego \n https://github.com/goplus/llcppg \n GO编译为JS  https://github.com/gopherjs \n JavaScript  https://github.com/rogchap/v8go \n https://github.com/dop251/goja \n https://github.com/robertkrimen/otto \n LUA  https://github.com/Shopify/goluago \n UPnP  https://github.com/huin/goupnp \n \n https://gitlab.com/NebulousLabs/go-upnp \n \n \n 容错  https://github.com/failsafe-go/failsafe-go \n 操作WiFi  https://github.com/mdlayher/wifi \n 工作流  https://github.com/j3ssie/osmedeus \n 堆外哈希表  https://github.com/glycerine/offheap \n 分析编译文件  https://github.com/Zxilly/go-size-analyzer \n \n \n 实时视频流服务器  https://github.com/gwuhaolin/livego \n IP代理池  https://github.com/henson/proxypool \n https://github.com/3xxx/engineercms \n https://github.com/flipped-aurora/gin-vue-admin \n https://github.com/go-admin-team/go-admin \n https://github.com/LyricTian/gin-admin \n https://github.com/hzwy23/hauth \n 天体数据  https://github.com/celestiaorg/celestia-node \n 后台管理模板  https://github.com/bufanyun/hotgo \n 框架 \n \n gin  https://github.com/gin-gonic/gin \n \n https://github.com/gin-contrib \n https://github.com/xinliangnote/go-gin-api \n \n \n echo  https://github.com/labstack/echo \n GoFrame  https://github.com/gogf/gf \n iris  https://github.com/kataras/iris \n grbac  https://github.com/storyicon/grbac \n gin-jwt  https://github.com/appleboy/gin-jwt \n kit  https://github.com/go-kit/kit \n Fiber  https://github.com/gofiber/fiber \n revel  https://github.com/revel/revel \n https://github.com/goravel/goravel \n https://github.com/valyala/fasthttp \n https://github.com/go-macaron \n https://github.com/flamego/flamego \n https://github.com/emicklei/go-restful \n https://github.com/panjf2000/gnet \n \n https://github.com/gnet-io/gnet-examples \n \n \n https://github.com/davyxu/cellnet \n https://github.com/elazarl/goproxy \n https://github.com/julienschmidt/httprouter \n 微服务  https://github.com/micro \n https://github.com/zeromicro/go-zero \n https://github.com/go-micro/go-micro \n \n \n https://github.com/go-session \n \n",createdTime:1761814324e3},{title:"Chromium",frontmatter:{description:"https://github.com/PSPDFKit-labs/browserslist.dev\n    https://browserslist.dev\n    https://github.com/browserslist\nhttps://github.com/WebKit\n    https://github.com/movableink/webkit\n    https://github.com/qtwebkit/qtwebkit\n嵌入式框架（CEF） https://github.com/chromiumembedded\n    https://bitbucket.org/chromiumembedded/cef\n    https://github.com/cefsharp\n    https://github.com/CefView/QCefView\n    https://github.com/ShirasawaSama/CefDetectorX\n    https://github.com/weolar/miniblink49\n    https://github.com/OutSystems/CefGlue\nhttps://github.com/arnoldthebat/chromiumos\n数据同步 https://www.xbrowsersync.org\nhttps://www.grabox.net\nUser-Agent正则 https://github.com/ua-parser/uap-core\n匿名跟踪测试 https://firstpartysimulator.org\nhttps://github.com/libredirect\nAI https://github.com/debugtheworldbot/chromegemini\n自动化浏览器操作 https://github.com/Skyvern-AI/Skyvern\n无头浏览器 https://github.com/lightpanda-io/browser",meta:[{name:"image",content:"https://bajins.com/images/谷歌账号数据迁移.png"},{name:"twitter:title",content:"Chromium"},{name:"twitter:description",content:"https://github.com/PSPDFKit-labs/browserslist.dev\n    https://browserslist.dev\n    https://github.com/browserslist\nhttps://github.com/WebKit\n    https://github.com/movableink/webkit\n    https://github.com/qtwebkit/qtwebkit\n嵌入式框架（CEF） https://github.com/chromiumembedded\n    https://bitbucket.org/chromiumembedded/cef\n    https://github.com/cefsharp\n    https://github.com/CefView/QCefView\n    https://github.com/ShirasawaSama/CefDetectorX\n    https://github.com/weolar/miniblink49\n    https://github.com/OutSystems/CefGlue\nhttps://github.com/arnoldthebat/chromiumos\n数据同步 https://www.xbrowsersync.org\nhttps://www.grabox.net\nUser-Agent正则 https://github.com/ua-parser/uap-core\n匿名跟踪测试 https://firstpartysimulator.org\nhttps://github.com/libredirect\nAI https://github.com/debugtheworldbot/chromegemini\n自动化浏览器操作 https://github.com/Skyvern-AI/Skyvern\n无头浏览器 https://github.com/lightpanda-io/browser"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/谷歌账号数据迁移.png"},{name:"twitter:url",content:"https://bajins.com/IDE/Chromium.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Chromium"},{property:"og:description",content:"https://github.com/PSPDFKit-labs/browserslist.dev\n    https://browserslist.dev\n    https://github.com/browserslist\nhttps://github.com/WebKit\n    https://github.com/movableink/webkit\n    https://github.com/qtwebkit/qtwebkit\n嵌入式框架（CEF） https://github.com/chromiumembedded\n    https://bitbucket.org/chromiumembedded/cef\n    https://github.com/cefsharp\n    https://github.com/CefView/QCefView\n    https://github.com/ShirasawaSama/CefDetectorX\n    https://github.com/weolar/miniblink49\n    https://github.com/OutSystems/CefGlue\nhttps://github.com/arnoldthebat/chromiumos\n数据同步 https://www.xbrowsersync.org\nhttps://www.grabox.net\nUser-Agent正则 https://github.com/ua-parser/uap-core\n匿名跟踪测试 https://firstpartysimulator.org\nhttps://github.com/libredirect\nAI https://github.com/debugtheworldbot/chromegemini\n自动化浏览器操作 https://github.com/Skyvern-AI/Skyvern\n无头浏览器 https://github.com/lightpanda-io/browser"},{property:"og:image",content:"https://bajins.com/images/谷歌账号数据迁移.png"},{property:"og:url",content:"https://bajins.com/IDE/Chromium.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Chromium"},{itemprop:"description",content:"https://github.com/PSPDFKit-labs/browserslist.dev\n    https://browserslist.dev\n    https://github.com/browserslist\nhttps://github.com/WebKit\n    https://github.com/movableink/webkit\n    https://github.com/qtwebkit/qtwebkit\n嵌入式框架（CEF） https://github.com/chromiumembedded\n    https://bitbucket.org/chromiumembedded/cef\n    https://github.com/cefsharp\n    https://github.com/CefView/QCefView\n    https://github.com/ShirasawaSama/CefDetectorX\n    https://github.com/weolar/miniblink49\n    https://github.com/OutSystems/CefGlue\nhttps://github.com/arnoldthebat/chromiumos\n数据同步 https://www.xbrowsersync.org\nhttps://www.grabox.net\nUser-Agent正则 https://github.com/ua-parser/uap-core\n匿名跟踪测试 https://firstpartysimulator.org\nhttps://github.com/libredirect\nAI https://github.com/debugtheworldbot/chromegemini\n自动化浏览器操作 https://github.com/Skyvern-AI/Skyvern\n无头浏览器 https://github.com/lightpanda-io/browser"},{itemprop:"image",content:"https://bajins.com/images/谷歌账号数据迁移.png"}]},regularPath:"/IDE/Chromium.html",relativePath:"IDE/Chromium.md",key:"v-224245ba",path:"/IDE/Chromium.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"浏览器下载",slug:"浏览器下载"},{level:2,title:"设置",slug:"设置"},{level:2,title:"DevTools",slug:"devtools"},{level:2,title:"HeadlessBrowser",slug:"headlessbrowser"},{level:3,title:"ChromeDriver",slug:"chromedriver"},{level:2,title:"插件",slug:"插件"},{level:3,title:"插件下载",slug:"插件下载"},{level:3,title:"GitHub相关",slug:"github相关"},{level:3,title:"开发助手",slug:"开发助手"},{level:3,title:"翻译",slug:"翻译"},{level:3,title:"广告过滤",slug:"广告过滤"},{level:3,title:"视图",slug:"视图"},{level:3,title:"脚本助手",slug:"脚本助手"},{level:3,title:"Other",slug:"other"},{level:2,title:"账号数据迁移",slug:"账号数据迁移"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Chromium \n Flag 浏览器下载 设置 DevTools HeadlessBrowser ChromeDriver 插件 插件下载 GitHub相关 开发助手 翻译 广告过滤 视图 脚本助手 Other 账号数据迁移 \n Flag \n \n Web 浏览器简史 \n https://github.com/topics/browser \n \n \n https://github.com/PSPDFKit-labs/browserslist.dev \n \n https://browserslist.dev \n https://github.com/browserslist \n \n \n https://github.com/WebKit \n \n https://github.com/movableink/webkit \n https://github.com/qtwebkit/qtwebkit \n \n \n 嵌入式框架（CEF）  https://github.com/chromiumembedded \n \n https://bitbucket.org/chromiumembedded/cef \n https://github.com/cefsharp \n https://github.com/CefView/QCefView \n https://github.com/ShirasawaSama/CefDetectorX \n https://github.com/weolar/miniblink49 \n https://github.com/OutSystems/CefGlue \n \n \n https://github.com/arnoldthebat/chromiumos \n 数据同步  https://www.xbrowsersync.org \n https://www.grabox.net \n User-Agent正则  https://github.com/ua-parser/uap-core \n 匿名跟踪测试  https://firstpartysimulator.org \n https://github.com/libredirect \n AI  https://github.com/debugtheworldbot/chromegemini \n 自动化浏览器操作  https://github.com/Skyvern-AI/Skyvern \n 无头浏览器  https://github.com/lightpanda-io/browser \n \n \n ERR_UNSAFE_PORT浏览器安全端口问题无法访问的解决方案 \n Chrome 浏览器运行原理你了解多少？ \n https://github.com/linxiaowu66/doumi-blog \n \n 如何找到Chrome的Crash原因？ \n \n \n \n \n Manifest V2 被限制使用，在Chrome浏览器中输入地址： chrome://flags/#allow-legacy-mv2-extensions ，将  default  改成  enable  即可启用 Manifest V2 兼容性 \n 浏览器下载 \n \n https://github.com/topics/chromium \n https://github.com/topics/chrome \n https://github.com/chromium/chromium \n \n https://chromium.googlesource.com \n https://www.chromium.org \n https://source.chromium.org \n 权限访问示例  https://github.com/chromium/permission.site \n \n \n https://github.com/googlechrome \n \n https://github.com/GoogleChrome/web.dev \n \n \n \n Chrome \n \n https://www.google.cn/intl/zh-CN/chrome \n \n https://chromeenterprise.google/intl/zh_CN/browser/download \n 有更新组件 https://redirector.gvt1.com/edgedl/chrome/install/GoogleChromeStandaloneEnterprise64.msi \n 有更新组件 https://dl.google.com/dl/chrome/install/googlechromestandaloneenterprise64.msi \n 无更新组件 https://redirector.gvt1.com/edgedl/release2/chrome/acv6l7uqv5vm3zjnrialpp3qy3qq_114.0.5735.110/114.0.5735.110_chrome_installer.exe \n 无更新组件 https://edgedl.me.gvt1.com/edgedl/release2/chrome/acv6l7uqv5vm3zjnrialpp3qy3qq_114.0.5735.110/114.0.5735.110_chrome_installer.exe \n \n \n https://www.chromedownloads.net \n https://www.iplaysoft.com/tools/chrome \n https://www.chrome64bit.com \n https://chrome.playes.net/chrome \n https://api.pzhacm.org/iivb/cu.json \n https://github.com/lyonna/ChromeOfflineInstallerDownloadAPI \n \n http://viewver.coolpage.biz/chrome.php \n \n \n 耍下  https://github.com/icy37785/chrome_plus \n \n 其他浏览器 \n \n 无Google Web服务浏览器  https://github.com/Eloston/ungoogled-chromium \n https://github.com/nwjs/chromium.src \n https://github.com/fathyb/carbonyl \n \n \n https://github.com/MicrosoftEdge \n \n https://www.microsoft.com/zh-cn/edge \n 最新官方稳定版离线安装包 x64 \n https://docs.microsoft.com/zh-cn/microsoft-edge \n 不显示新建标签页广告资讯和网址（微软对中国区特供）强制本地NTP，添加快捷方式运行参数： --force-local-ntp \n \n \n https://www.mozilla.org/zh-CN/firefox/all \n \n https://github.com/mozilla-firefox \n https://github.com/mozilla-mobile \n https://ftp.mozilla.org/pub/firefox/releases/ \n https://sourceforge.net/projects/libportable \n \n \n https://github.com/vivaldi \n \n https://vivaldi.com \n \n \n https://github.com/brave \n \n https://brave.com \n https://github.com/brave-experiments \n \n \n https://github.com/kiwibrowser \n https://github.com/minbrowser \n https://github.com/skyjake/lagrange \n https://github.com/makew0rld/amfora \n https://github.com/pinnaculum/galacteek \n https://github.com/ranfdev/Geopard \n https://github.com/Alex313031/Thorium \n https://github.com/face-hh/webx \n https://github.com/LadybirdBrowser/ladybird \n https://github.com/versotile-org/verso \n https://github.com/zen-browser \n https://github.com/imputnet/helium \n \n \n TOR  https://github.com/alecmuffett/real-world-onion-sites \n \n WebView \n \n https://github.com/search?q=webview \n \n \n https://github.com/bromite/bromite \n \n https://github.com/MSe1969/android_external_bromite-webview \n [https://github.com/GrapheneOS/Vanadium]（https://github.com/GrapheneOS/Vanadium \n https://gitlab.com/divested-mobile/mulch \n https://github.com/Magisk-Modules-Alt-Repo/open_webview \n 设置 \n \n 多线程下载 \n \n chrome://flags/#enable-parallel-downloading\n \n Chromium内核浏览器实验室功能特性运行参数： \n --user-data-dir="Data" //数据重定向存储当前目录\n--user-data-dir="..\\Data" //数据重定向存储到上层目录\n--disk-cache-dir="Cache" //缓存重定向存储存当前目录\n--no-first-run //不显示首次运行向导\n--force-local-ntp //强制本地NTP\n--disable-logging //禁用记录日志\n--disable-breakpad //禁用崩溃报告\n--no-report-upload //不发送匿名数据\n--*-*-url="0.0.0.0" //强制指向无效地址\n--bwsi //开启访客模式 (无扩展无登录同步)\n--enable-ftp //允许ftp (88版本后不支持)\n--disable-notifications //禁用网页通知\n--make-default-browser //设置默认浏览器\n--enable-leak-detection //加载网页检测泄露\n--disable-component-update //禁止组件更新\n--disable-background-networking //禁用后台联网检查更新\n--enable-potentially-annoying-security-features //各种安全优化\n DevTools \n \n https://github.com/topics/devtools \n https://github.com/search?q=chrome-dev-tools \n https://github.com/topics/chrome-debugging-protocol \n \n \n https://github.com/v8 \n \n https://github.com/justjavac/v8.js.cn \n \n \n https://github.com/ChromeDevTools \n \n https://github.com/ChromeDevTools/awesome-chrome-devtools \n \n \n https://github.com/RemoteDebug \n https://github.com/HuolalaTech/page-spy-web \n https://github.com/html5rocks/www.html5rocks.com \n https://github.com/GoogleChrome/devtools-docs \n \n https://developer.chrome.com/devtools/index \n https://devtools.chrome.com \n https://developer.chrome.com/docs/devtools/#chrome-remote-interface \n https://developers.google.com/web/tools/chrome-devtools \n https://github.com/leeon/chrome_devtool_book \n \n https://leeon.gitbooks.io/devtools \n \n \n https://github.com/dendoink/FrontendWingman \n \n https://www.frontendwingman.com/Chrome \n https://juejin.im/book/5c526902e51d4543805ef35e \n \n \n https://developer.chrome.com/docs/chromium/headless \n \n \n https://github.com/blittle/chrome-dev-tools \n Chrome开发者工具中文手册  https://github.com/CN-Chrome-DevTools/CN-Chrome-DevTools \n https://github.com/ahangchen/Chromium_doc_zh \n 浏览器不想让你知道的 67 个奇怪的调试技巧 \n Chrome工具-查看dom元素绑定的事件 \n F12找到页面某一元素所绑定的点击事件 \n 如何使用chrome浏览器进行js调试找出元素绑定的点击事件 \n \n \n Firefox 开发者工具  https://developer.mozilla.org/zh-CN/docs/Tools \n Firefox浏览器开发人员版  https://www.mozilla.org/zh-CN/firefox/developer \n https://github.com/mozilla-spidermonkey \n \n 其他设置 \n \n Network测量资源的加载时间隐藏\n \n 老版本，点击 View 后面的多级图（ Show overview ） \n 新版本，点击最右侧⚙️(Settings)去掉  Show overview  勾选 \n \n \n 勾选 Disable cache  禁用缓存 \n --auto-open-devtools-for-tabs  打开新标签页时自动打开DevTools，修改 Chrome 的桌面快捷方式，增加启动参数\n \n 已经打开了Chrome，需要先关闭，或使用参数 –user-data-dir=./ \n \n \n Auto-open DevTools for popups  自动打开DevTools弹出窗口\n \n 新版本， 点击最右侧⚙️(Settings) -> Perference -> DevTools \n 新版本， ┇ -> More tools -> Settings -> Perference -> Global \n \n \n \n \n Source  -> 在JS被调用的方法中打断点 ->  Watch 查看变量， Call Stack  查看调用堆栈（同 console.trace() ） \n \n Source中的JS无法实时修改 \n \n 很有可能是开启了 Pretty Print （JS编辑框左下角的 {} ）导致，最新版本会把美化的代码开启新的窗口 \n \n \n 新版本， 点击最右侧⚙️(Settings) -> Perference -> Restore defaults and reload （重置设置） \n 老版本， ┇ -> More tools -> Settings -> Perference -> Restore defaults and reload \n 关闭Chrome ->  %USERPROFILE%\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\  -> 编辑  Preferences.json  ->  prettyPrintInfobarDisabled: false \n \n \n Source  -> Snippet（Page旁边） ->  + New snippet  -> 右侧编辑器写要执行的代码 -> 左侧文件名上右键选择 Run 运行 \n HeadlessBrowser \n \n Headless Browser (无头的浏览器)是没有图形用户界面(GUI)的web浏览器，通常是通过编程或命令行界面来控制的 \n \n \n https://github.com/topics/webdriver \n \n \n https://w3c.github.io/webdriver \n Headless Browser \n https://github.com/mozilla/geckodriver \n https://github.com/topics/headless-browser \n https://github.com/browserless \n \n \n 绕过五秒盾  https://github.com/FlareSolverr/FlareSolverr \n https://github.com/VeNoMouS/cloudscraper \n https://github.com/RomainMichau/cloudscraper_go \n https://github.com/ultrafunkamsterdam/undetected-chromedriver \n https://github.com/ultrafunkamsterdam/nodriver \n https://github.com/g1879/DrissionPage \n https://github.com/Davincible/chromedp-undetected \n \n 反爬虫 \n \n https://github.com/intoli/intoli-article-materials \n 无头浏览器检测 \n 隐藏Headles-Chrome不被检测出来 \n https://github.com/TecharoHQ/anubis \n ChromeDriver \n \n Selenium 操作 Chrome 浏览器需要有 ChromeDriver 驱动来协助， ChromeDriver 与 Chrome 版本对应关系一定要正确 \n \n \n https://chromedriver.chromium.org \n \n https://googlechromelabs.github.io/chrome-for-testing \n \n \n http://chromedriver.storage.googleapis.com/index.html \n https://registry.npmmirror.com/binary.html?path=chromedriver/ \n https://registry.npmmirror.com/binary.html?path=chromium-browser-snapshots/ \n headless-chrome官方文档 \n 功能和ChromeOptions官方网站参考 \n \n \n 批量杀死 chromedriver 进程 \n \n ps  -efww | grep   LOCAL = chromedriver | grep   -v   grep | cut   -c   9 -15 | xargs   kill   -9 \n \n :: Windows \n taskkill   /f   /im  chromedriver.exe \n \n 参数列表 \n \n https://peter.sh/experiments/chromium-command-line-switches/ \n https://cs.chromium.org/chromium/src/content/public/common/content_switches.cc \n \n \n \n \n 参数 \n 说明 \n \n \n \n \n -blink-settings=imagesEnabled=false \n 不加载图片, 此方式只针对单个标签页 \n \n \n -bookmark-menu \n 在工具 栏增加一个书签按钮 \n \n \n -default-browser-check \n 不检查默认浏览器 \n \n \n -disable-extensions \n 禁用扩展 \n \n \n -disable-gpu \n 关闭gpu,服务器一般没有显卡 \n \n \n -disable-images \n 禁用图像，建议使用"profile.managed_default_content_settings.images":2 \n \n \n -disable-java \n 禁用java \n \n \n -disable-javascript \n 禁用Javascript \n \n \n -disable-plugins \n 禁止加载所有插件。可以通过about:plugins页面查看效果 \n \n \n -disable-popup-blocking \n 禁用弹出拦截 \n \n \n -disable-software-rasterizer \n 禁用浏览器应用 \n \n \n -disk-cache-dir="[PATH]" \n 指定缓存Cache路径 \n \n \n -disk-cache-size= \n 指定Cache大小，单位Byte \n \n \n -enable-sync \n 启用书签同步 \n \n \n -enable-udd-profiles \n 启用账户切换菜单 \n \n \n -first run \n 重置到初始状态，第一次运行 \n \n \n -headless \n 不开启图像界面 \n \n \n -hide-scrollbars \n 隐藏滚动条, 应对一些特殊页面 \n \n \n -ignore-certificate-errors \n 忽略证书错误 \n \n \n -incognito \n 隐身模式启动 \n \n \n -in-process-plugins \n 插件不以独立的进程运行，插件的异常崩溃，可能会导致整个页面挂掉 \n \n \n -lang=zh-CN \n 设置语言为简体中文 \n \n \n -media-cache-size \n 自定义多媒体缓存最大值（单位byte） \n \n \n -no-first-run \n 第一次不运行 \n \n \n -no-sandbox \n 不开启沙盒模式可以减少对服务器的资源消耗,但是服务器安全性降低 \n \n \n -omnibox-popup-count="num" \n 将地址栏弹出的提示菜单数量改为num个。我都改为15个了。 \n \n \n -process-per-site \n 每个站点使用单独进程 \n \n \n -process-per-tab \n 每个标签使用单独进程 \n \n \n -proxy-pac-url \n 指定使用PAC代理时，所需要的脚本url地址 \n \n \n -remote-debugging-address \n 远程调试地址 0.0.0.0 可以外网调用但是安全性低,建议使用默认值 127.0.0.1 \n \n \n -remote-debugging-port \n chrome-debug工具的端口(golang chromepd 默认端口是9222,建议不要修改) \n \n \n -single-process \n 浏览器只能以单进程运行，通常用于调试，定位bug \n \n \n -start-maximized \n 浏览器启动后，窗口默认为最大化 \n \n \n -user-agent="" \n 修改HTTP请求头部的Agent字符串，可以通过about:version页面查看修改效果 \n \n \n -user-data-dir="[PATH]" \n 指定用户文件夹User Data路径。 \n \n \n -window-size="1600x900" \n 窗口尺寸 \n 插件 \n \n https://github.com/chrome-extensions \n https://github.com/topics/crx \n https://github.com/topics/chrome-extension \n 冻结暂时用不到的标签页  https://github.com/deanoemcke/thegreatsuspender \n 防止通过 URL 跟踪用户  https://github.com/ClearURLs \n Marmoset-创建漂亮的代码图片 \n 搜索  https://github.com/hoothin/SearchJumper \n 管理Cookie  https://github.com/Dolov/chrome-best-cookier \n 插件下载 \n \n https://www.crxsoso.com \n http://crxdown.com \n chrome-extension-downloader \n crx4chrome \n https://www.extfans.com \n https://www.gugeapps.net \n https://getman.cn/chrome \n GitHub相关 \n \n 突出显示GitHub源视图中的选定单词：github-highlight-selected \n 点击导包跳转：octolinker \n 统计项目的代码行数：github-gloc \n 显示代码的源代码行：github-sloc \n 显示GitHub的存储库大小：github-repository-size \n 显示GitHub的存储库大小：enhanced-github \n 显示代码树：octotree-pro \n 显示代码树：gitcodetree \n 地址栏输入地址自动填充：omnibox-for-github \n 文件界面添加“Open in Git History”按钮查看历史：github-history-browser-ex \n 显示GitHub仓库或个人信息：github-hovercard \n 修改GitHub页面宽度：wide-github \n 简化GitHub界面并添加有用的功能：refined-github \n 添加右侧工具栏：githubexpandinizr \n 开发助手 \n \n https://github.com/zhaoolee/ChromeAppHeroes \n \n \n swagger-bootstrap-ui \n HTML/CSS/JS编辑展示  https://github.com/chinchang/web-maker \n WEB前端助手  https://github.com/zxlie/FeHelper \n https://github.com/ha0z1/PixOK \n JSON查看  https://github.com/tulios/json-viewer \n 检测浏览器指纹  https://github.com/freethenation/DFPM \n https://fingerprint.goldenowl.ai \n https://microsoftedge.microsoft.com/addons/search/谷歌 \n https://chrome.google.com/webstore/search/谷歌访问?_category=extensions \n http://www.iwikipage.com \n https://github.com/joue-quroi/cookie-editor \n \n https://add0n.com/cookie-editor.html \n \n \n HTTP拦截器  https://github.com/kylepaulsen/ResourceOverride \n https://github.com/cloudbuy/modheader \n https://github.com/modheader \n \n \n 网页保存  https://github.com/gildas-lormeau/SingleFile \n https://github.com/vsDizzy/SaveAsMHT \n https://github.com/brian-girko/save-as-mhtml \n Save Page WE \n https://github.com/danny0838/webscrapbook \n https://github.com/mika-cn/maoxian-web-clipper \n 自动化  https://github.com/Kholid060/automa \n https://github.com/AIPexStudio/AIPex \n 启用复制  https://github.com/FallenMax/chrome-extension-allow-copy \n https://github.com/JohnWong/EnableCopy \n EnableCopy 启用复制 \n \n \n GOOGLE 人机验证(RECAPTCHA)无法显示解决方案(可解决大多数 CSP 问题) \n \n https://github.com/AzureZeng/azurezeng.github.io \n https://github.azurezeng.com/static/HeaderEditor \n https://github.com/FirefoxBar/HeaderEditor \n \n \n https://github.com/jiacai2050/gooreplacer \n 翻译 \n \n https://github.com/AnYi-0/Translator \n https://github.com/lmk123/crx-selection-translate \n https://github.com/magic-FE/translate-man \n https://github.com/EdgeTranslate/EdgeTranslate \n https://github.com/Bistutu/FluentRead \n https://github.com/immersive-translate/immersive-translate \n https://github.com/OwO-Network/DeepLX \n https://github.com/fishjar/kiss-translator \n https://github.com/marmot-z/baicizhan-helper \n https://github.com/openai-translator/openai-translator \n https://github.com/FilipePS/Traduzir-paginas-web \n https://github.com/chengfengfengwang/lingo-link \n 广告过滤 \n \n https://github.com/topics/adblock \n https://github.com/topics/adguard \n \n \n ABP  https://github.com/adblockplus \n ubo  https://github.com/gorhill/uBlock \n \n https://github.com/uBlock-LLC \n https://github.com/uBlockOrigin \n \n \n ADB  https://gitlab.com/adblockinc \n \n https://gitlab.com/eyeo/adblockplus \n \n \n https://github.com/AdguardTeam \n https://github.com/iamadamdev/bypass-paywalls-chrome \n https://github.com/SugarCoatJS \n QuantumultX  https://github.com/ddgksf2013 \n https://github.com/KOP-XIAO/QuantumultX \n https://github.com/Orz-3/QuantumultX \n https://github.com/sve1r/Rules-For-Quantumult-X \n https://github.com/crossutility/Quantumult-X \n https://github.com/yawenchim/QuantumultX-mix \n \n \n AdGuard Android 解锁高级版  https://www.lanzoui.com/b0f19420h \n \n 过滤规则 \n \n https://github.com/topics/filterlist \n https://github.com/topics/easylist \n https://github.com/topics/blocklist \n \n \n https://oisd.nl \n https://github.com/damengzhu \n \n https://raw.kgithub.com/damengzhu/abpmerge/blob/main/abpmerge.txt \n \n \n https://github.com/xinggsf/Adblock-Plus-Rule \n https://github.com/cjx82630/cjxlist \n https://github.com/easylist \n \n https://easylist-downloads.adblockplus.org/easylistchina+easylist.txt \n http://sub.adtchrome.com/adt-chinalist-easylist.txt \n \n \n https://gitlab.com/malware-filter \n \n https://gitlab.com/curben/blog \n https://github.com/curbengh \n \n \n https://pgl.yoyo.org/adservers \n https://github.com/badmojr/1Hosts \n https://github.com/T145/black-mirror \n https://github.com/DandelionSprout \n \n https://gitlab.com/DandelionSprout \n \n \n https://gitlab.com/magnolia1234/bypass-paywalls-clean-filters \n https://github.com/laylavish/uBlockOrigin-HUGE-AI-Blocklist \n https://github.com/mullvad/dns-blocklists \n \n \n https://lemon399-markrender.vercel.app \n 视频跳过广告和VIP视频解析脚本 ot mofiter（秒杀视频网站播放广告） https://greasyfork.org/scripts/373063 \n 视图 \n \n 视频转GIF：视频转gif  https://github.com/ColdDay/mp4ToGif \n 屏幕录制视频和截图工具：nimbus-screenshot-screen \n 屏幕录制视频：video-screen-recorder \n 屏幕录制视频：screen-recorder \n 屏幕录制GIF和截图工具：chrome-capture \n 屏幕录制GIF和截图工具：capture-to-a-gif \n 截取整个窗口添加一个macOS-ish标题栏：standardized-screenshot \n 截取长图  https://gofullpage.com \n https://github.com/Finix15/full-web-capture-extension \n 一键视频下载器 \n Video Downloader for Web \n 终极视频下载器 \n Video Downloader Plus \n Video Downloader Pro \n Video Downloader professional \n https://github.com/684102/HDS-HLS-Video-Downloader \n \n \n 黑暗阅读器  https://github.com/darkreader/darkreader \n 脚本助手 \n \n https://github.com/JasonBarnabe/greasyfork \n \n https://github.com/F9y4ng/GreasyFork-Scripts \n https://github.com/Mottie/GitHub-userscripts \n https://github.com/XIU2/UserScript \n \n \n https://github.com/OpenUserJs/OpenUserJS.org \n https://github.com/scriptscat \n https://www.userscript.zone \n \n \n 篡改猴  https://github.com/Tampermonkey \n \n https://github.com/derjanb \n https://bbs.tampermonkey.net.cn \n https://github.com/hmjz100/Online-disk-direct-link-download-assistant \n 百度云  https://github.com/hmjz100/LinkSwift \n \n https://github.com/syhyz1990 \n https://www.youxiaohou.com/download.html \n \n \n https://greasyfork.org/zh-CN/scripts/546878 \n https://greasyfork.org/zh-CN/scripts/521185 \n https://greasyfork.org/zh-CN/scripts/544796 \n https://greasyfork.org/zh-CN/scripts/512984  有广告 \n https://github.com/dongyubin/Baidu-VIP \n 小说下载  https://github.com/404-novel-project/novel-downloader \n \n \n 暴力猴  https://github.com/violentmonkey/violentmonkey \n 油猴  https://github.com/greasemonkey/greasemonkey \n \n \n https://github.com/lisonge/vite-plugin-monkey \n \n CSDN取消屏蔽 \n const  c  =  document . getElementById ( "article_content" ) ; \nc . style . height = "auto" ; \nc . style . overflow = "auto" ; \ndocument . querySelector ( "#mainBox > main > div.hide-article-box.hide-article-pos.text-center" ) . remove ( ) ; \n // 添加至浏览器标签，解决登陆后复制 \n javascript : document . body . contentEditable = \'true\' ; document . designMode = \'on\' ;   void   0 \n \n \n https://github.com/search?q=CSDN \n https://greasyfork.org/zh-CN/scripts?q=CSDN+vip&sort=updated \n https://github.com/027xiguapi/code-box \n https://github.com/maxzhang666/OneKeyVip \n https://github.com/adlered/CSDNGreener \n \n https://greasyfork.org/zh-CN/scripts/378351 \n \n \n https://github.com/Mrlimuyu/CSDN-VIP \n https://greasyfork.org/zh-CN/scripts/545163 \n https://greasyfork.org/zh-CN/scripts/508787 \n https://github.com/Qalxry/csdn2md \n https://github.com/bigintpro/csdn_downloader \n https://github.com/zq2599/blog_demos \n Other \n \n 解锁加密音乐  https://github.com/unlock-music/unlock-music \n 阅读模式：reader-view \n 阅读模式：just-read \n https://github.com/rNeomy/reader-view \n 保存一个链接列表，以便稍后阅读：reading-list \n 二维码生成器：quick-qr-code-generator \n 二维码生成器：qr-code-generator-and-rea \n 代理助手  https://github.com/FelisCatus/SwitchyOmega \n \n https://github.com/sn-o-w/ZeroOmega \n https://github.com/zero-peak/ZeroOmega \n \n \n https://github.com/salarcode/SmartProxy \n https://github.com/proxy-rock/proxy-rock \n https://github.com/bytevet/proxyverse \n https://github.com/txthinking/socks5-configurator \n https://github.com/Emano-Waldeck/vpn-master \n 清除浏览器历史记录/缓存/Cookie：super-history-cache-clean \n 清除浏览器历史记录/缓存/Cookie：chrome-cleaner \n https://github.com/adam-p/markdown-here \n 名称生成器扩展 \n https://github.com/privacypass/challenge-bypass-extension \n 人机验证码扩展程序  https://github.com/dessant/buster \n google-access-helper \n http://googlehelper.net \n 抠图  https://github.com/kevmo314/magic-copy \n 资源嗅探  https://github.com/xifangczy/cat-catch \n 解除网页限制  https://enablecopy.com \n 截图美化  https://www.photor.fun \n Cookie同步  https://github.com/jackluson/sync-your-cookie \n HTML转PDF  Just One Page PDF(简称 JOPP) \n \n https://colorink.top \n https://soft.xiaoshujiang.com/blog/chrome/just_one_page_pdf_integration \n 账号数据迁移 \n \n Google账号数据迁移指南 \n \n \n',createdTime:1761814324e3},{title:"Eclipse",frontmatter:{description:"单行注释自动靠左\nEclipse的Debug各种视图介绍\nSTS(eclipse)中文注释错位、缩进、被放大BUG解决\nEclipse的设置、调优、使用（解决启动卡顿等问题）\n多模块打包后，扫描不到@controller和@service\n   https://stackoverflow.com/a/47378392\n   spring注解在自定义jar包中无法被扫描问题\n   spring 扫描不到jar中class文件的原因和解决方法",meta:[{name:"twitter:title",content:"Eclipse"},{name:"twitter:description",content:"单行注释自动靠左\nEclipse的Debug各种视图介绍\nSTS(eclipse)中文注释错位、缩进、被放大BUG解决\nEclipse的设置、调优、使用（解决启动卡顿等问题）\n多模块打包后，扫描不到@controller和@service\n   https://stackoverflow.com/a/47378392\n   spring注解在自定义jar包中无法被扫描问题\n   spring 扫描不到jar中class文件的原因和解决方法"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/IDE/Eclipse.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Eclipse"},{property:"og:description",content:"单行注释自动靠左\nEclipse的Debug各种视图介绍\nSTS(eclipse)中文注释错位、缩进、被放大BUG解决\nEclipse的设置、调优、使用（解决启动卡顿等问题）\n多模块打包后，扫描不到@controller和@service\n   https://stackoverflow.com/a/47378392\n   spring注解在自定义jar包中无法被扫描问题\n   spring 扫描不到jar中class文件的原因和解决方法"},{property:"og:url",content:"https://bajins.com/IDE/Eclipse.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Eclipse"},{itemprop:"description",content:"单行注释自动靠左\nEclipse的Debug各种视图介绍\nSTS(eclipse)中文注释错位、缩进、被放大BUG解决\nEclipse的设置、调优、使用（解决启动卡顿等问题）\n多模块打包后，扫描不到@controller和@service\n   https://stackoverflow.com/a/47378392\n   spring注解在自定义jar包中无法被扫描问题\n   spring 扫描不到jar中class文件的原因和解决方法"}]},regularPath:"/IDE/Eclipse.html",relativePath:"IDE/Eclipse.md",key:"v-f7c239a6",path:"/IDE/Eclipse.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"右键菜单",slug:"右键菜单"},{level:2,title:"安装Java EE开发插件",slug:"安装java-ee开发插件"},{level:2,title:"字体大小和背景色",slug:"字体大小和背景色"},{level:2,title:"代码格式化",slug:"代码格式化"},{level:2,title:"设置编码格式",slug:"设置编码格式"},{level:2,title:"设置Tab为空格",slug:"设置tab为空格"},{level:2,title:"自动提示",slug:"自动提示"},{level:2,title:"清除缓存",slug:"清除缓存"},{level:2,title:"自动刷新",slug:"自动刷新"},{level:2,title:"查看类图及继承关系",slug:"查看类图及继承关系"},{level:2,title:"项目显示结构",slug:"项目显示结构"},{level:2,title:"显示内存",slug:"显示内存"},{level:2,title:"解决卡死现象",slug:"解决卡死现象"},{level:2,title:"清除workspace历史记录",slug:"清除workspace历史记录"},{level:2,title:"调整运行内存",slug:"调整运行内存"},{level:2,title:"快捷键设置",slug:"快捷键设置"},{level:2,title:"自动导包",slug:"自动导包"},{level:2,title:"右键new选项",slug:"右键new选项"},{level:3,title:"SUN内部包不存在",slug:"sun内部包不存在"},{level:2,title:"注释模板",slug:"注释模板"},{level:2,title:"命令执行",slug:"命令执行"},{level:2,title:"插件安装使用",slug:"插件安装使用"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Eclipse \n Flag 右键菜单 安装Java EE开发插件 字体大小和背景色 代码格式化 设置编码格式 设置Tab为空格 自动提示 清除缓存 自动刷新 查看类图及继承关系 项目显示结构 显示内存 解决卡死现象 清除workspace历史记录 调整运行内存 快捷键设置 自动导包 右键new选项 SUN内部包不存在 注释模板 命令执行 插件安装使用 \n Flag \n \n https://gitlab.eclipse.org \n https://github.com/eclipse/eclipse \n \n https://github.com/eclipse-platform \n https://github.com/eclipse-jdt \n https://github.com/eclipse-cdt \n https://github.com/eclipse-pde \n https://github.com/eclipse-m2e \n https://github.com/eclipse-tycho \n https://github.com/eclipse-windowbuilder \n https://github.com/eclipse-wildwebdeveloper \n https://github.com/eclipse-linuxtools \n https://github.com/eclipse-oomph \n https://github.com/eclipse-cbi \n https://github.com/eclipse-simrel \n https://www.eclipse.org/ide \n https://eclipseide.org \n https://www.eclipse.org/downloads/packages \n \n \n 可视化  https://www.jgrasp.org \n 设置  https://github.com/vorburger/opendaylight-eclipse-setup \n Spring Tools https://github.com/spring-projects/sts4 \n \n https://spring.io/tools \n \n \n \n \n 单行注释自动靠左 \n Eclipse的Debug各种视图介绍 \n STS(eclipse)中文注释错位、缩进、被放大BUG解决 \n Eclipse的设置、调优、使用（解决启动卡顿等问题） \n 多模块打包后，扫描不到@controller和@service \n \n https://stackoverflow.com/a/47378392 \n spring注解在自定义jar包中无法被扫描问题 \n spring 扫描不到jar中class文件的原因和解决方法 \n \n \n \n \n 创建 Dynamic Web Project 项目结构静态资源目录为： WebContent / WebRoot ，idea创建的为 web \n导入的项目没有正确自动识别：在项目上右键选择 Properties 然后检查 Project Facets 和 Project Natures \n \n 快捷生成调用实例set方法 \n \n 进入实例类，打开 Type Hierarchy 视图并在视图中选中所有set方法复制，快捷键 F4 \n 使用反射获取方法生成 \n \n xml文件头部文件报错 \n \n %USERPROFILE%\\.lemminx\\cache\\头部文件的链接地址路径 \n \n \n 示例：链接地址为 http://mybatis.org/dtd/mybatis-3-config.dtd \n文件路径为 %USERPROFILE%\\.lemminx\\cache\\http\\mybatis.org\\dtd\\mybatis-3-config.dtd \n \n WebStorm保存后跳过Eclipse自动同步到Tomcat \n \n File  ->  Settings  ->  Build, Execution, Deployment  ->  Deployment  （或顶部菜单  Tools  ->  Deployment  ->  Configuration ） \n 配置一个应用：右侧点击 + 号 -> 点击 Local or mounted floder  -> 输入自定义名称\n \n 右侧 Connection 页签\n \n Floder  选择Eclipse配置的Tomcat部署的当前项目路径 \n \n \n 右侧 Mappings 页签\n \n Local path  需要部署的文件路径（相对项目根目录） \n Deployment path  把 Local path 部署到指定路径（相对 Floder 的路径）一般为 \\ \n \n \n \n \n 点击顶部菜单  Tools  ->  Deployment  -> 选择  Automatic Upload(always)  自动构建 \n \n \n 其实原理很简单：就是在保存源码文件的同时，实时编译构建同步的时候跳过Eclipse，直接同步到Tomcat部署的当前项目目录 \n 右键菜单 \n \n Window  ->  Perspective  ->  Customize Perspective \n \n Shortcuts  新建选项 \n 安装Java EE开发插件 \n \n 默认没有  Dynamic Web Project \n \n \n Help  ->  Install New Software  ->  Work with  选择  All available Sites  ->\n勾选  Web,XML,Java EE and OSGi Enterprise Development  ->  Next  ->  I accept the terms of the licence agreement \n 字体大小和背景色 \n \n 调节控制台字体大小  Window  ->  Preferences  ->  General  ->  Appearance  ->  Colors and Fonts  ->  Basic  ->  Text Font  ->  Edit \n 调节主窗口字体大小  Window  ->  Preferences  ->  General  ->  Appearance  ->  Colors and Fonts  ->  Java  ->  Java Editor Text Font  ->  Edit \n 设置眼睛保护色  Window  ->  Prefences  ->  General  ->  Editors  ->  Text Editors  ->  Appearance color optins \n 代码格式化 \n \n General > Editors > Text Editors \n \n \n 顶部菜单 ->  Source  ->  Clean Up  针对代码的内容进行整理，比如去除无用代码或者引用包。 \n 顶部菜单 ->  Source  ->  Format  对代码的格式进行整理，比如设置了 Table 为4个空格，那么将会转换。 \n 顶部菜单 ->  Source  ->  Organize Imports  去除单个类中无用的引用包信息 Ctrl  +  Shift  +  O \n \n 垂直标尺 \n \n Window  ->  Preferences  ->  General  ->  Editors  ->  Text Editors  ->  Show Print Margin \n \n Print margin column  行宽 \n Allow editors to override the margin column \n \n \n \n Java 格式化 \n \n Window  ->  Preferences  ->  Java  ->  Code Style  ->  Formatter  ->  New  ->  Edit \n \n ->  Line Wrapping \n \n Maximum Line width  控制每行的最大字符数 \n Set line width for preview window  设置预览窗口的线宽 \n ->  Wrapping settings  ->  Binary expressions  ->  Line wrapping policy  ->  Wrap all elements,every elements on a new line  将所有元素换行，每个元素都换行 \n ->  Function Calls  ->  Qualified invocations  ->  Wrap all elements,every elements on a new line  连续调用不换行 \n Never join already wrapped lines  不格式化已换行的 \n \n \n ->  Comments  注释\n \n Maximum line width for comments  注释的最大行宽\n \n Count width from comment\'s starting position  从注释的开始位置计算宽度 \n \n \n Enable Javadoc comment formatting  启用Javadoc注释格式 \n Enable block comment formatting  启用块注释格式（每一行以 * 开头） \n Enable line comment formatting  启用行注释格式\n \n Format line comments on first column  格式化代码与注释符之间的间距 \n \n \n Enable header comment formatting  启用标题注释格式 \n Preserve whitespace between code and line comments  保留代码和行注释之间的空格 \n Never indent line comments on first column  切勿在第一列缩进行注释 \n Never indent block comments on first column  切勿在第一列缩进块注释 \n Never join lines  从不连接线 \n \n \n \n \n \n JavaScript 格式化 \n \n Window  ->  Preferences  ->  Web  ->  Client-side JavaScript  ->  Code Style  ->  Formatter  ->  New  ->  Edit \n \n ->  Line Wrapping  行宽\n \n Maximum Line width \n Set line width for preview window  设置预览窗口的线宽 \n \n \n ->  Comments \n \n Maximum line width for comments \n \n \n \n \n \n JSP|HTML|CSS 格式化 \n \n Window  ->  Preferences  ->  Web  ->  HTML Files  /  CSS Files  ->  Editor \n \n Line width  行宽 \n Inline Elements  选中所有 ->  Remove \n Indent using spaces  缩进使用空格 \n Indentation size  缩进使用多少个字符 \n \n \n \n XML \n \n Window  ->  Preferences  ->  Web  ->  XML  ->  XML Files  ->  Editor \n \n Formatting  ->  Line width  行宽 \n 设置编码格式 \n \n 设置工作空间编码  Window  ->  Preferences  ->  General  ->  Workspace  ->  Text file encoding  ->  Other 选择 UTF-8  ->  Apply \n 设置编辑器编码  Window  ->  Preferences  ->  General  ->  Editors  ->  Text Editors  ->  Spelling  ->  Encoding 位置的 Other 选择 UTF-8  ->  Apply \n 设置文档编码  Window  ->  Preferences  ->  General  ->  Content Types \n \n ->  Text  ->  Default encoding 填入 UTF-8 （填入编码后一定要点击 Update ） \n -> 展开 Text \n \n -> 选中 Java Properties File  ->  Default encoding 填入 UTF-8  设置Properties编码 \n -> 选中 Spring Properties File  ->  Default encoding 填入 UTF-8 \n -> 选中 JSP  ->  Default encoding 填入 UTF-8  设置JSP编码 \n -> 展开 JSP \n \n ->  JSP Fragment  ->  Default encoding 填入 UTF-8 \n ->  JSP Tag Definition  ->  Default encoding 填入 UTF-8 \n -> 展开 JSP Tag Definition  ->  XML JSP Tag Definition  ->  Default encoding 填入 UTF-8 \n \n \n \n \n \n \n 设置Web编码  Window  ->  Preferences  ->  Web  ->  CSS Files 、 HTML Files 、 JSP Files  ->  Encoding 选择 ISO 10646/Unicode(UTF-8) \n 设置项目的文档编码：选中项目右键 ->  Properties  ->  Resource  ->  Other 选择 UTF-8 \n 配置全局生效，在Eclipse的启动配置文件 eclipse.ini 中添加 -Dfile.encoding=UTF-8 \n 设置Tomcats的编码   Run  >  Run Configurations...  -> 选择 Java Application 下的应用 ->  Arguments  ->  VM arguments  添加 -Dfile.encoding=UTF-8 \n 设置Tab为空格 \n \n Window  ->  Preferences  ->  General  ->  Editors  ->  Text Editors  -> 勾选  Insert spaces for tabs \n \n Remove multiple spaces on backspace/delete  删除退格键/删除多个空格 \n \n \n Window  ->  Preference  ->  Java  ->  Code Style  ->  Formatter  ->  Edit  ->  Indentation  ->  Tab policy  选择  Spaces only \n Window  ->  Preferences  ->  Web  ->  CSS Files 、 HTML Files 、 JSP Files  ->  Editor \n \n lndent using spaces  选中 \n lndentation size  空格数 \n 自动提示 \n \n Eclipse 开启代码提示与关闭变量命名补全 \n \n \n Window  ->  Preferences  ->  Java  ->  Editor  ->  Content Assist \n \n Auto Activation \n \n Auto activation delay(ms)  提示的延迟时间 \n Auto Activation triggers for java  填入  ._abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ(,\'"@ \n \n \n Advanced \n \n 勾选 Java Proposals (Task-Focused) \n 勾选 Template Proposals \n \n \n 解决输入 = 或 ; 变量自动补全问题：勾选  Disable insertion triggers except \'Enter\'  (按 Enter 键才自动补全) \n \n \n XML自动补全  Windows  ->  preferance  ->  XML  ->  XML Files  ->  Editor  ->  Content Assist \n \n Auto Activation 下面的 Prompt when these characters are inserted  填入  <=:.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ （注意后面有一个空格） \n \n \n 按 @ 不提示注解： Window  ->  Preferences  ->  Java  ->  Editor  ->  Content Assist \n \n Advanced  下把 java Proposals 勾上 \n Enable non-blocking completion(does not affect open editors)  启用非阻塞完成（不影响打开的编辑器） \n \n \n 高亮显示  Window  ->  Preferences  ->  Java  ->  Editor  ->  Mark Occurences \n \n Mark occurrences of the selected element in the current file.  高亮显示选中的相同变量 \n 清除缓存 \n \n 顶部菜单 ->  Project  ->  Clean  根据项目 .classpath 文件，清除编译信息，重新部署到 Java Build Path 下的 Default output folder 中。 \n Servers  ->  Clean  是指原先编译到tomcat服务器上的程序，先清除掉，然后再重新编译。 \n Servers  ->  Clean Tomcat Work Directory...  将已发布项目中存放jsp转译后的class文件的work目录删除 \n 自动刷新 \n \n Windows  ->  Preference  ->  General \n \n Workspace \n \n Build \n \n Save automatically before manual build  在手动构建之前自动保存 \n Build automatically （同 Project 菜单下的按钮） 自动编译 \n \n \n Refresh using native hooks or polling  自动刷新文件 \n Refresh on access  访问时刷新 \n Always close unrelated projects without prompt  总是在不提示的情况下关闭不相关项目 \n Workspace save interval (in minutes)  工作区保存时间间隔(分钟) \n \n \n Startup and Shutdown \n \n Refresh workspace on startup  启动时刷新工作空间 \n 查看类图及继承关系 \n \n 选中类，右键然后有以下选项\n \n Open Declaration   F3 \n Open Type Hierarchy   F4  打开类层次结构查看窗口，显示包括它的父类和子类\n \n Show the Subtype Hierarchy  只查看子类 \n Show the Supertype Hierarchy  只查看父类 \n \n \n Open Call Hierarchy   Ctrl + Alt + H \n Show in Breadcrumb   Alt + Shift + B  面包屑导航 \n Quick Outline   Ctrl + O \n Quick Type Hierarchy   Ctrl + T   打开类层次结构查看弹窗，显示包括它的父类和子类 \n 项目显示结构 \n \n Windows  ->  Show View  ->  Other  -> 搜索  Package Exploer \n Windows  ->  Show View  ->  Other  -> 搜索  Tasks  查看待办任务 \n \n \n Window  ->  Preferences  ->  Java  ->  Compiler  ->  Task tags  定义任务标签\n \n // TODO  表示尚未完成的待办事项。 \n // XXX  表示被注释的代码虽然实现了功能，但是实现方案有待商榷，希望将来能改进。 \n // FIXME  表示被注释的代码需要被修正。 \n 显示内存 \n \n 在eclipse中打开heap状态  Windows  ->  Preference  ->  General  –> 勾选 show heap status \n 解决卡死现象 \n \n Eclipse中jsp、js文件编辑时，卡死现象解决 \n \n \n 取消验证  Windows  ->  Preference  –>  validation  -> 点击 Disable All 然后勾选 classpath dependency Validator \n \n Allow projects to override these preference settings  允许项目覆盖这些首选项设置 \n Suspend all validators  暂停所有验证器 \n Save all modified resources automatically prior to validating  验证之前自动保存所有修改的资源 \n Show a confirmation dialog when performing manual validations  执行手动验证时显示确认对话框 \n \n \n 关闭拼写检查  Windows  ->  Preference  ->  General  –>  editors  ->  Text Editors  ->  spelling \n 选中项目点击右键 ->  Properties  ->  Builders  在右边取消勾选除 Java Builder 以外的其他选项 \n 清除workspace历史记录 \n \n Windows  ->  Preference  ->  General  –>  Startup and Shuodown  ->  Prompt for workspace on startup / Workspaces \n 编辑eclipse下的 /configuration/.settings/org.eclipse.ui.ide.prefs  ->  RECENT_WORKSPACES  删除不需要的目录，以 \\n 分隔 \n 调整运行内存 \n \n 在eclipse的安装目录下编辑 eclipse.ini 文件 \n \n JVM参数设置 \nJDK8以下\n-Xms128M -Xmx512M -XX:PermSize=64M -XX:MaxPermSize=128M\nJDK8\n-Xms128M -Xmx512M -XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=1024m\n \n \n -Xms128m  JVM初始分配的堆内存 \n -Xmx512m  JVM最大允许分配的堆内存，按需分配 \n -XX:PermSize=64M  JVM初始分配的非堆内存，JDK8之前 \n -XX:MaxPermSize=128M  JVM最大允许分配的非堆内存，按需分配，JDK8之前 \n -XX:MetaspaceSize=512m  元数据，JDK8 \n -XX:MaxMetaspaceSize=1024m  最大元数据，JDK8 \n \n 设置JDK参数 \n \n Windows  ->  Preference  ->  Java  –>  Installed JREs  -> 选中使用的JDK ->  Edit  ->  Default VM arguments \n \n 设置Tomcat参数 \n \n Run  ->  Run Configurations  -> 选中已添加的Tomcat ->  Arguments  -> 在 VM arguments 中换行添加 \n 快捷键设置 \n \n Window  ->  Preference  ->  General  ->  Keys \n 设置复制一行 搜索 Ctrl+Alt+Down 或者 Copy Lines 即可修改 \n 自动导包 \n \n Window  ->  Preferences  ->  Java  ->  Editor  ->  Save Actions  -> 勾选  Preform the selected actions on save \n \n Format edited lines  自动格式化修改的行 \n Organize impots  自动优化管理导入的包 \n 右键new选项 \n \n Window  ->  Perspective  ->  Customize Perspective...  ->  Shortcuts 界面 ->  Submenus 列中选中 Java \n SUN内部包不存在 \n \n sun.misc （sun公司的内部方法，不属于JDK标准库范畴）包下的 BASE64Encoder 及 BASE64Decoder 来进行的 \n \n \n 项目右键 ->  Build Path  ->  Configure Build Path  ->  Java Build Path  ->  Libraries  -> 展开 JRE System Libraries \n-> 选中 Access rules  -> 点击 Edit  -> 弹窗点击 Add  ->  Resolution 选择 Accessible  ->  Rule Pattern 输入 **  -> 点击 OK \n 注释模板 \n \n Help  ->  Help Contents  -> 搜索 Java Editor Template Variables \n Window  ->  Preference  ->  Java  ->  Code Style  ->  Code Templates \n \n 展开 Comments  -> 点击选中子项（ files 、 Types ） ->  Pattern 填入注释模板 \n 勾选  Automatically add comments for new methods and types  自动为新方法和类型添加注释 \n \n \n 注释的使用：输入 /** 然后回车自动出来 \n \n \n 创建新文件(New Java files)注释标签（在文件第一行） \n 类型(Types)注释标签（在主体声明上） \n \n /**\n * @Title ${file_name}\n * @Package ${package_name}\n * @Description \n * @author bajins.com\n * @date ${date} ${time}\n * @version V1.0\n * @Copyright ${year} bajins.com Inc. All rights reserved.\n */ \n \n \n 字段(Fields)注释标签 \n \n   /** ${field} */ \n \n \n 构造函数(Constructors)标签 \n \n /**\n * @Title ${enclosing_type}\n * ${tags}\n * @author bajins.com\n * @date ${date} ${time}\n */ \n \n \n 方法(Methods)标签 \n \n /**\n * \n * ${tags} ${return_type}\n * @author bajins.com\n * @date ${date} ${time}\n */ \n \n \n 覆盖方法(Overriding Methods)标签 \n \n /**\n * @Title ${enclosing_method}\n * @Description\n * ${tags}\n * ${see_to_overridden}\n * @author bajins.com\n * @date ${date} ${time}\n */ \n \n \n 代表方法(Delegate Methods)标签 \n \n /**\n * ${tags}\n * ${see_to_target}\n * @author bajins.com\n * @date ${date} ${time}\n */ \n \n \n getter方法标签 \n \n /**\n * @Title ${enclosing_method}\n * @Description 获取字段“${bare_field_name}”的值\n * @return ${field_type}\n * @author bajins.com\n * @date ${date} ${time}\n */ \n \n \n setter方法标签 \n \n /**\n * @Title ${enclosing_method}\n * @Description 设置字段“${bare_field_name}”的值\n * @param ${param}\n * @author bajins.com\n * @date ${date} ${time}\n */ \n 命令执行 \n eclipsec应用程序 \n \n org.eclipse.jdt.core.JavaCodeFormatter  格式化 Java 代码\n \n -config \n \n \n org.eclipse.jdt.core.JavaCompiler  编译 Java 代码\n \n -sourcepath \n -classpath \n \n \n org.eclipse.equinox.p2.director  安装、更新或卸载 Eclipse 插件\n \n -repository \n -installIU \n - \n - \n \n \n org.eclipse.ant.core.antRunner  运行 Apache Ant 构建脚本\n \n -buildfile \n \n \n org.eclipse.ui.ide.workbench  启动 Eclipse IDE 工作台 \n org.eclipse.jdt.apt.core.aptBuild  运行 Java 注解处理器（Annotation Processing Tool）\n \n -sourcepath \n -classpath \n \n \n org.eclipse.jdt.core.JavaIndexer  索引 Java 项目\n \n -sourcepath \n \n \n org.eclipse.jdt.core.JavaModelManager  管理 Java 模型\n \n -sourcepath \n \n \n org.eclipse.update.core.standaloneUpdate  更新 Eclipse 安装\n \n -command install \n -featureId org.eclipse.platform \n \n \n org.eclipse.core.launcher.Main  启动 Eclipse 主应用程序 \n \n 启动 \n \n eclipse -consoleLog -nosplash -data <workspace> \n \n 格式化代码 \n \n eclipsec -data <workspace> -application org.eclipse.jdt.core.JavaCodeFormatter [ OPTIONS: -help、-quiet、-verbose ] -config <configFile> <files> \n Window  ->  Preferences  ->  Java  ->  Code Style  ->  Formatter  ->  Export All  导出格式化代码的配置XML文件 \n \n 编译构建 \n \n eclipsec -nosplash -data <workspace> -application org.eclipse.ant.core.antRunner -buildfile <buildFile> \n \n \x3c!-- build xml 格式化代码，使用ant format命令 --\x3e \n < project   name = " FormatCode "   default = " format "   basedir = " . " > \n     < property   name = " eclipse.home "   value = " eclipse文件夹 "   /> \n     < property   name = " src.dir "   value = " src "   /> \n\n     < target   name = " format " > \n         < java   classname = " org.eclipse.jdt.core.formatter.CodeFormatter "   fork = " true " > \n             < classpath > \n                 < pathelement   location = " ${eclipse.home}/plugins/org.eclipse.jdt.core_*.jar " /> \n             </ classpath > \n             < arg   value = " -process " /> \n             < arg   value = " ${src.dir} " /> \n         </ java > \n     </ target > \n </ project > \n 插件安装使用 \n \n 一般插件都有 plugins 和 features 两个文件夹，复制到eclipse安装目录即可 \n \n \n Eclipse插件开发 \n https://github.com/open-archetypes \n \n \n -vmargs -DproxySet=true -DproxyHost=aProxyAddress -DproxyPort=aProxyPort  启动代理参数 \n Eclipse Web Developer Tools \n \n \n https://marketplace.eclipse.org/metrics/successful_installs/last30days \n https://github.com/de-jcup \n https://github.com/eclipse-mylyn \n SVN  https://www.eclipse.org/subversive \n \n https://polarion.plm.automation.siemens.com/products/svn \n \n \n https://github.com/subclipse \n \n https://subclipse.github.io/snapshots \n http://subversion.apache.org/packages.html \n Subversion for Java  https://svnkit.com \n \n \n 代码覆盖率  https://github.com/eclipse/eclemma \n \n https://sourceforge.net/projects/eclemma \n \n \n 数据库  https://dbeaver.io/download \n 折叠代码块  https://github.com/stefaneidelloth/EclipseFolding \n \n https://sourceforge.net/projects/coffeeby1 \n user-defined-code-folding-regions-in-eclipse \n https://github.com/sky1983/EclipseFolding \n \n \n 将插件放在 eclipse\\dropins ，重启eclipse， Window  ->  Preferences  ->  Java  ->  Editor  ->  Folding \n在 Select folding to use 项选择： Coffee Bytes Java Folding \n \n \n https://github.com/GrowThinky/AnnotationSupportEclipsePlugin \n https://github.com/qiangitchen/tlv8ide \n https://github.com/gildur/SimplePropertiesEditor \n https://github.com/FeatureIDE/FeatureIDE \n https://github.com/nodj/AutoDeriv \n https://www.esito.no/en/promo-g9 \n 文本编辑器  https://github.com/fabioz/LiClipseText \n GUI设计  https://github.com/eclipse/windowbuilder \n 开发风格  https://www.genuitec.com/products/devstyle \n http://kurucz-grafika.de/fatjar \n \n eclipse中将项目打包成jar的两种方法，及其问题与解决方法 \n \n \n https://sourceforge.net/projects/eclipsetidy \n https://sourceforge.net/projects/eclipse-tools \n https://github.com/sebthom/findview-eclipse-plugin \n Prettier  https://github.com/TheGreatGooo/EclipsePrettierPlugin \n https://github.com/AObuchow/Eclipse-Spectrum-Theme \n \n 反编译Decompiler \n \n Window  ->  Preferences  ->  General  ->  Editors  ->  File Associations \n \n 在 File types 选中 *.class  或  *.class without source \n 在 Associated editors 选中 Class Decompiler Viewer 点击 Default \n \n \n Window  ->  Preferences  ->  Java  ->  Decompiler \n \n Escape unicode characters  转义unicode字符 \n Realign line numbers  重新对齐行号 \n Show original line numbers  显示原始行号 \n Show metadata  显示元数据 \n \n \n \n \n https://github.com/ecd-plugin/ecd \n \n https://ecd-plugin.github.io/update \n \n \n https://github.com/iloveeclipse/plugins/wiki \n https://github.com/java-decompiler/jd-eclipse \n https://github.com/cnfree/Eclipse-Class-Decompiler \n https://github.com/helospark/import-jar-as-project \n https://sourceforge.net/projects/drgarbagetools \n https://github.com/helospark/import-jar-as-project \n 测试  https://github.com/ot4i/perf-harness \n \n Cloud Toolkit \n \n 帮助开发者更高效地开发、测试、诊断并部署应用。通过插件，可以将本地应用一键部署到任意服务器 \n \n \n http://toolkit.aliyun.com/eclipse \n https://github.com/HPCToolkit/hpcviewer.e4 \n \n',createdTime:1761814324e3},{title:"Go",frontmatter:{description:"【Golang】实现文件服务器断点续传\nGo实现HTTP断点续传多线程下载\nhttps://github.com/hwholiday/file_storage\nGolang信号处理和优雅退出守护进程",meta:[{name:"twitter:title",content:"Go"},{name:"twitter:description",content:"【Golang】实现文件服务器断点续传\nGo实现HTTP断点续传多线程下载\nhttps://github.com/hwholiday/file_storage\nGolang信号处理和优雅退出守护进程"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Go/"},{property:"og:type",content:"article"},{property:"og:title",content:"Go"},{property:"og:description",content:"【Golang】实现文件服务器断点续传\nGo实现HTTP断点续传多线程下载\nhttps://github.com/hwholiday/file_storage\nGolang信号处理和优雅退出守护进程"},{property:"og:url",content:"https://bajins.com/Go/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Go"},{itemprop:"description",content:"【Golang】实现文件服务器断点续传\nGo实现HTTP断点续传多线程下载\nhttps://github.com/hwholiday/file_storage\nGolang信号处理和优雅退出守护进程"}]},regularPath:"/Go/",relativePath:"Go/README.md",key:"v-95af8644",path:"/Go/",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"学习",slug:"学习"},{level:2,title:"工具链",slug:"工具链"},{level:2,title:"Modules",slug:"modules"},{level:3,title:"Modules代理",slug:"modules代理"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Go \n Flag 学习 工具链 Modules Modules代理 \n Flag \n \n https://github.com/golang \n https://github.com/pkg \n \n 官方的辅助包  golang.org/x \n https://golang.com.cn \n \n \n https://go.dev \n \n https://golang.google.cn/dl \n https://gomirrors.org \n https://www.godoc.org \n https://studygolang.com/dl \n https://pkg.go.dev \n \n \n https://go.googlesource.com/mobile \n https://cs.opensource.google/go/x/mobile \n https://github.com/artifacthub \n https://github.com/golangclub/golangcn.org \n 缩短GO包导入URL  https://github.com/niemeyer/gopkg \n \n \n https://github.com/studygolang \n 在JVM中运行  https://github.com/zxh0/jvm.go \n 监视和配置网络设备的工具  https://github.com/inexio/thola \n https://github.com/dominikh/go-tools \n json生成go数据结构  https://github.com/misakafs/json-to-go \n \n \n 【Golang】实现文件服务器断点续传 \n Go实现HTTP断点续传多线程下载 \n https://github.com/hwholiday/file_storage \n Golang信号处理和优雅退出守护进程 \n \n Windows下可以安装MinGW-w64、MSYS2、Cygwin 以调用GCC，Windows10下推荐使用WSL \n 插件化开发 \n \n GoLang 插件化开发 \n 学习 \n \n go文档中文翻译  https://github.com/polaris1119/pkgdoc \n Go 语言文档中文翻译 \n Go 标准库中文文档 \n https://github.com/taigacute/GoDoc-CN \n https://github.com/golang-china/gopl-zh \n Go 语言中文开源图书、资料或文档 \n Go 开发者路线图 \n Go 学习之路 \n Go基本类型说明 \n Go语言小册 \n 模板语法指南 \n golang 学习笔记 \n https://doc.xuwenliang.com/docs/go \n Go 语言编程  - Golang电子书介绍如何使用Golang建立网络 \n 《The Way to Go》中文译本，中文正式名《 Go 入门指南 》 \n 《 Go 编程基础 》是一套针对Go语言的视频语音教程，主要面向新手级别的学习者。 \n 第三方类库 \n Go 官方文档翻译 \n Go 指南 \n Go 简易教程 \n \n 中文版  https://github.com/karlseguin/the-little-go-book \n \n \n Go 语言实战笔记 \n Go 语言标准库 \n Go 语言高级编程（Advanced Go Programming） \n https://github.com/geektutu/high-performance-go \n Go命令教程 \n Go实战开发 \n Go语言博客实践 \n Java程序员的Golang入门指南 \n Network programming with Go 中文翻译版本 \n Revel 框架手册 \n 学习Go语言 \n https://github.com/miguelmota/ethereum-development-with-go-book \n 神奇的 Go 语言 \n https://github.com/TiantianUpup/go-study \n Go 语言 Web 应用开发系列教程 \n https://github.com/rubyhan1314/Golang-100-Days \n Go 编程实例 Go by Example \n https://github.com/lexkong/apiserver_demos \n https://github.com/jiujuan/go-collection \n https://github.com/hwholiday/learning_tools \n 中文学习资料  https://github.com/gwuhaolin/golang-book \n https://github.com/jincheng9/go-tutorial \n https://github.com/unknwon/go-study-index \n https://github.com/mao888/golang-guide \n 设计模式  https://github.com/tmrts/go-patterns \n https://github.com/0voice/Introduction-to-Golang \n https://github.com/golang-design \n https://github.com/cch123/golang-notes \n https://github.com/shgopher/GOFamily \n https://github.com/pibigstar/go-demo \n https://www.topgoer.com \n https://github.com/iswbm \n \n https://golang.iswbm.com \n https://magic.iswbm.com \n \n \n https://github.com/yangwenmai/learning-golang \n https://github.com/duanbiaowu/go-examples-for-beginners \n \n https://dbwu.tech/posts/network/what-is-tcp-fast-open \n \n \n Go语法树入门  https://github.com/chai2010/go-ast-book \n https://github.com/halfrost/LeetCode-Go \n Go泛型入门  https://github.com/akutz/go-generics-the-hard-way \n Golang开发手记  https://github.com/kevinyan815/gocookbook \n 周刊  https://github.com/polaris1119/golangweekly \n https://gobyexample.com \n https://golang3.eddycjy.com \n https://draveness.me/golang \n https://talkgo.org \n https://github.com/golang101/golang101 \n https://github.com/yongxinz/gopher \n https://github.com/gocn \n https://github.com/astaxie/build-web-application-with-golang \n 日报  https://github.com/bigwhite/gopherdaily \n \n \n Go子语言  https://github.com/chai2010/ugo-compiler-book \n https://github.com/wa-lang/wa \n \n \n Go_想变厉害的大白菜的博客-CSDN博客 \n Go的隐秘世界：Goroutine调度机制概览 \n golang调度学习-调度流程 \n 系统调用，ptrace，go语言syscall \n 工具链 \n \n 安装最新go  https://github.com/golang/tools/tree/master/cmd/getgo \n go版本管理  https://github.com/stefanmaric/g \n https://github.com/voidint/g \n https://github.com/moovweb/gvm \n https://github.com/syndbg/goenv \n 调试器  https://github.com/go-delve/delve \n 实时重新加载  https://github.com/cosmtrek/air \n \n Go 每日一库之 air \n \n \n https://github.com/gravityblast/fresh \n https://github.com/beego/bee \n https://github.com/silenceper/gowatch \n https://github.com/codegangsta/gin \n https://github.com/oxequa/realize \n 深入理解Go之generate \n https://github.com/gohouse/converter \n https://github.com/Zhwt/yaml-to-go \n 正则在线测试  http://regoio.herokuapp.com \n 接口和结构体UML  https://www.dumels.com \n \n \n 测试文件中单个函数 \n \n go  test   -v  文件名_test.go  -test.run  函数名\n直接指定函数不指定文件运行 \ngo  test   -v   -test.run  函数名\n \n \n \n \n 关键点 \n 说明 \n \n \n \n \n 导入需要的包 \n import testing (如果你是goland,那么可以忽略，因为ide就自动帮你加上) \n \n \n 执行命令 \n go test file_test.go \n \n \n 测试文件命名 \n 必须以_test.go结尾 \n \n \n 功能测试的用力函数 \n 必须以Test开头&&后头跟着的函数名不能以小写字母开头，比如：Testcbs 就是不行的，TestCbs就是ok的 \n \n \n 功能测试参数 \n testing.T \n \n \n 压力测试用例函数 \n 必须以Benchmark开头&&其后的函数名不能以小写字母开头(例子同上) \n \n \n 压力测试参数 \n testing.B \n \n \n 测试信息 \n .Log方法，默认情况下是不会显示的，只有在go test -v的时候显示 \n \n \n 测试控制 \n 通过Error/Errorf/FailNow/Fatal等来进行测试是否是失败，或者在失败的情况下的控制 \n \n \n 压力测试命令 \n go test -test.bench file_test.go \n \n \n 压力测试的循环体 \n 使用test.B.N \n \n \n \n 关闭GC（垃圾回收器） \n \n 变量设置 \n \n go  env   -w   GOGC = off\n \n \n 代码中调用  debug.SetGCPercent(-1) \n Modules \n \n Go Modules 终极入门 \n \n \n \n \n 命令 \n 说明 \n \n \n \n \n go mod init \n initialize new module in current directory（在当前目录初始化mod） \n \n \n go mod download \n download modules to local cache(下载依赖包) \n \n \n go mod edit \n edit go.mod from tools or scripts（编辑go.mod \n \n \n go mod graph \n print module requirement graph (打印模块依赖图) \n \n \n go mod tidy \n add missing and remove unused modules(拉取缺少的模块，移除不用的模块) \n \n \n go mod vendor \n make vendored copy of dependencies(将依赖复制到vendor下) \n \n \n go mod verify \n verify dependencies have expected content (验证依赖是否正确） \n \n \n go mod why \n explain why packages or modules are needed(解释为什么需要依赖) \n \n \n \n \n 查看所有可升级依赖版本  go list -u -m all \n \n 添加依赖 \n \n 添加依赖:  go get github.com/xxx/xxx \n 添加指定版本:  go get github.com/xxx/xxx@v1.6.2 \n 添加指定版本范围:  go get github.com/xxxx/xxx@'<v1.6.2' \n 添加指定 commit 的版本： go get github.com/xxxx/xxx@q2516faf3 \n \n 升级依赖 \n \n 升级 Major :  go get -u github.com/xxx/xxx \n 升级全部依赖的 Minor 或 PATCH 版本:  go get -u \n 升级全部依赖的 PATCH 版本:  go get -u=patch \n Modules代理 \n \n 查看Go的环境信息 go env \n \n GOPROXY \n \n GO 1.13 版本开始 GOPROXY 支持多代理设置，通过 , 隔开 \n \n \n 通用 \n \n go  env   -w   GOPROXY = https://goproxy.io,https://goproxy.cn,direct\n \n \n Linux \n \n export   GOPROXY = https://goproxy.io,https://goproxy.cn,direct\n \n \n Windows \n \n setx   /m  GOPROXY  \"https://goproxy.io,https://goproxy.cn,direct\" \n \n \n 当第一个 proxy 在处理 ge get 所发出的 HTTP 请求时，返回 HTTP 状态码为 404 或 410 时，就会查找下一个 proxy \n \n GOPRIVATE \n \n 设置 GOPRIVATE 来跳过私有库，比如常用的 Github 、 Gitlab 、 Gitee ，中间使用 , 分隔 \n \n go  env   -w   GOPRIVATE = *.github.com,*.gitlab.com,*.gitee.com\n \n GOSUMDB \n \n 如果在运行 go mod vendor 时，提示 Get https://sum.golang.org/lookup/xxxxxx: dial tcp 216.58.200.49:443: i/o timeout ，\n则是因为 Go 1.13 设置了默认的 GOSUMDB=sum.golang.org ，这个网站是被墙了的，用于验证包的有效性，可以通过如下命令关闭 \n \n go  env   -w   GOSUMDB = off\n \n \n Go Modules Proxy \n \n 更多镜像源 \n \n https://mirrors.aliyun.com/goproxy \n https://mirrors.cloud.tencent.com/help/go.html \n https://github.com/goproxy \n \n https://goproxy.cn \n https://proxy.golang.com.cn \n \n \n https://github.com/goproxyio \n \n https://goproxy.io \n \n \n https://github.com/gomods/athens \n \n https://athens.azurefd.net \n \n \n https://github.com/jfrog/gocenter \n \n https://gocenter.io \n \n \n \n",createdTime:1761814324e3},{title:"Git使用",frontmatter:{description:"https://github.com/progit\n  http://git-scm.com/book\n  https://github.com/progit-cn\n    Pro Git 中文版（第二版） https://progit.bootcss.com\n    https://codechina_dev.gitcode.host/progit2\nhttps://github.com/apachecn/git-doc-zh\n  https://git.apachecn.org\nhttps://github.com/xirong/my-git\n常用命令 · git笔记 · 看云\nGit 常用命令及使用详解 - 喵斯基部落\nGit速查手册 https://github.com/arslanbilal/git-cheat-sheet\n    https://www.rumosky.wiki/docs/learngit\n命令行提示 https://github.com/o2sh/onefetch\nhttps://github.com/nvie/git-toolbelt\nGit的奇技淫巧 https://github.com/521xueweihan/git-tips\n猴子都能懂的GIT入门 https://backlog.com/git-tutorial/cn/contents\nGit与Subversion的命令对比表\n在线学 Git https://codechina_dev.gitcode.host/learn-git-branching\nhttps://github.com/pcottle/learnGitBranching\nGit大全 https://gitee.com/all-about-git\nGit 团队协作中常用术语 WIP PTAL CC LGTM 等解释\n自己动手写Git https://github.com/hanyujie2002/wyag-zh",meta:[{name:"twitter:title",content:"Git使用"},{name:"twitter:description",content:"https://github.com/progit\n  http://git-scm.com/book\n  https://github.com/progit-cn\n    Pro Git 中文版（第二版） https://progit.bootcss.com\n    https://codechina_dev.gitcode.host/progit2\nhttps://github.com/apachecn/git-doc-zh\n  https://git.apachecn.org\nhttps://github.com/xirong/my-git\n常用命令 · git笔记 · 看云\nGit 常用命令及使用详解 - 喵斯基部落\nGit速查手册 https://github.com/arslanbilal/git-cheat-sheet\n    https://www.rumosky.wiki/docs/learngit\n命令行提示 https://github.com/o2sh/onefetch\nhttps://github.com/nvie/git-toolbelt\nGit的奇技淫巧 https://github.com/521xueweihan/git-tips\n猴子都能懂的GIT入门 https://backlog.com/git-tutorial/cn/contents\nGit与Subversion的命令对比表\n在线学 Git https://codechina_dev.gitcode.host/learn-git-branching\nhttps://github.com/pcottle/learnGitBranching\nGit大全 https://gitee.com/all-about-git\nGit 团队协作中常用术语 WIP PTAL CC LGTM 等解释\n自己动手写Git https://github.com/hanyujie2002/wyag-zh"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/IDE/Git%E4%BD%BF%E7%94%A8.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Git使用"},{property:"og:description",content:"https://github.com/progit\n  http://git-scm.com/book\n  https://github.com/progit-cn\n    Pro Git 中文版（第二版） https://progit.bootcss.com\n    https://codechina_dev.gitcode.host/progit2\nhttps://github.com/apachecn/git-doc-zh\n  https://git.apachecn.org\nhttps://github.com/xirong/my-git\n常用命令 · git笔记 · 看云\nGit 常用命令及使用详解 - 喵斯基部落\nGit速查手册 https://github.com/arslanbilal/git-cheat-sheet\n    https://www.rumosky.wiki/docs/learngit\n命令行提示 https://github.com/o2sh/onefetch\nhttps://github.com/nvie/git-toolbelt\nGit的奇技淫巧 https://github.com/521xueweihan/git-tips\n猴子都能懂的GIT入门 https://backlog.com/git-tutorial/cn/contents\nGit与Subversion的命令对比表\n在线学 Git https://codechina_dev.gitcode.host/learn-git-branching\nhttps://github.com/pcottle/learnGitBranching\nGit大全 https://gitee.com/all-about-git\nGit 团队协作中常用术语 WIP PTAL CC LGTM 等解释\n自己动手写Git https://github.com/hanyujie2002/wyag-zh"},{property:"og:url",content:"https://bajins.com/IDE/Git%E4%BD%BF%E7%94%A8.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Git使用"},{itemprop:"description",content:"https://github.com/progit\n  http://git-scm.com/book\n  https://github.com/progit-cn\n    Pro Git 中文版（第二版） https://progit.bootcss.com\n    https://codechina_dev.gitcode.host/progit2\nhttps://github.com/apachecn/git-doc-zh\n  https://git.apachecn.org\nhttps://github.com/xirong/my-git\n常用命令 · git笔记 · 看云\nGit 常用命令及使用详解 - 喵斯基部落\nGit速查手册 https://github.com/arslanbilal/git-cheat-sheet\n    https://www.rumosky.wiki/docs/learngit\n命令行提示 https://github.com/o2sh/onefetch\nhttps://github.com/nvie/git-toolbelt\nGit的奇技淫巧 https://github.com/521xueweihan/git-tips\n猴子都能懂的GIT入门 https://backlog.com/git-tutorial/cn/contents\nGit与Subversion的命令对比表\n在线学 Git https://codechina_dev.gitcode.host/learn-git-branching\nhttps://github.com/pcottle/learnGitBranching\nGit大全 https://gitee.com/all-about-git\nGit 团队协作中常用术语 WIP PTAL CC LGTM 等解释\n自己动手写Git https://github.com/hanyujie2002/wyag-zh"}]},regularPath:"/IDE/Git%E4%BD%BF%E7%94%A8.html",relativePath:"IDE/Git使用.md",key:"v-3d6e59d9",path:"/IDE/Git%E4%BD%BF%E7%94%A8.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"GIT工具",slug:"git工具"},{level:3,title:"Git LFS",slug:"git-lfs"},{level:2,title:"安装最新版",slug:"安装最新版"},{level:2,title:"保存用户密码",slug:"保存用户密码"},{level:2,title:"代理",slug:"代理"},{level:2,title:"把空文件夹提交到仓库",slug:"把空文件夹提交到仓库"},{level:2,title:"项目远程地址管理",slug:"项目远程地址管理"},{level:2,title:"更改提交",slug:"更改提交"},{level:2,title:"强制push本地仓库到远程",slug:"强制push本地仓库到远程"},{level:2,title:"重置本地修改文件",slug:"重置本地修改文件"},{level:2,title:"清除用户名密码",slug:"清除用户名密码"},{level:2,title:"git恢复指定文件到指定版本",slug:"git恢复指定文件到指定版本"},{level:2,title:"统计",slug:"统计"},{level:2,title:"分支",slug:"分支"},{level:2,title:"SubModule与SubTree",slug:"submodule与subtree"},{level:2,title:"换行符与大文件处理",slug:"换行符与大文件处理"},{level:2,title:"常见问题处理",slug:"常见问题处理"},{level:3,title:"项目过大clone报错",slug:"项目过大clone报错"},{level:3,title:"提交本地文件失败",slug:"提交本地文件失败"},{level:3,title:"远端与本地代码冲突",slug:"远端与本地代码冲突"},{level:3,title:"SSL验证错误",slug:"ssl验证错误"},{level:3,title:"push错误",slug:"push错误"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Git使用 \n Flag GIT工具 Git LFS 安装最新版 保存用户密码 代理 把空文件夹提交到仓库 项目远程地址管理 更改提交 强制push本地仓库到远程 重置本地修改文件 清除用户名密码 git恢复指定文件到指定版本 统计 分支 SubModule与SubTree 换行符与大文件处理 常见问题处理 项目过大clone报错 提交本地文件失败 远端与本地代码冲突 SSL验证错误 push错误 \n Flag \n \n https://github.com/topics/git \n https://github.com/git \n \n https://github.com/gitgitgadget \n https://github.com/git-for-windows \n https://git-scm.com \n https://gitforwindows.org \n https://github.com/GitCredentialManager \n https://github.com/git-ecosystem/git-credential-manager \n https://github.com/microsoft/Git-Credential-Manager-for-Windows \n https://github.com/microsoft/Git-Credential-Manager-for-Mac-and-Linux \n https://github.com/microsoft/scalar \n https://github.com/microsoft/vfsforgit \n https://github.com/microsoft/git \n https://github.com/jonas/tig \n \n \n https://github.com/PJK/libcbor \n https://github.com/Yubico/libfido2 \n Git实现  https://github.com/libgit2/libgit2 \n https://github.com/go-git \n Java实现  https://github.com/eclipse-jgit/jgit \n \n https://github.com/centic9/jgit-cookbook \n https://github.com/clj-jgit/clj-jgit \n https://github.com/jgitver/jgitver \n https://github.com/ajoberstar/grgit \n https://github.com/jcjones/jgit \n https://github.com/seart-group \n https://github.com/tackleza/ApidechJavaGit \n https://github.com/quarkiverse/quarkus-jgit \n https://github.com/Unity-Billal-mesloub/git \n https://github.com/chirontt/jgit.http.server.native \n \n \n https://github.com/gitblit/gitblit \n \n \n https://github.com/progit \n \n http://git-scm.com/book \n https://github.com/progit-cn \n \n Pro Git 中文版（第二版）  https://progit.bootcss.com \n https://codechina_dev.gitcode.host/progit2 \n \n \n \n \n https://github.com/apachecn/git-doc-zh \n \n https://git.apachecn.org \n \n \n https://github.com/xirong/my-git \n 常用命令 · git笔记 · 看云 \n Git 常用命令及使用详解 - 喵斯基部落 \n Git速查手册  https://github.com/arslanbilal/git-cheat-sheet \n \n https://www.rumosky.wiki/docs/learngit \n \n \n 命令行提示  https://github.com/o2sh/onefetch \n https://github.com/nvie/git-toolbelt \n Git的奇技淫巧  https://github.com/521xueweihan/git-tips \n 猴子都能懂的GIT入门  https://backlog.com/git-tutorial/cn/contents \n Git与Subversion的命令对比表 \n 在线学 Git  https://codechina_dev.gitcode.host/learn-git-branching \n https://github.com/pcottle/learnGitBranching \n Git大全  https://gitee.com/all-about-git \n Git 团队协作中常用术语 WIP PTAL CC LGTM 等解释 \n 自己动手写Git  https://github.com/hanyujie2002/wyag-zh \n \n \n git-pull.bat \n git-pull.sh \n \n \n 脚本没有写的权限：在 git-bash.exe 文件或快捷方式上鼠标 右键  ->  属性  ->  兼容性  -> 勾选 以管理员身份运行此程序  ->  确定 \n \n Commit提交规范 \n \n --global 代表全局，保存的配置在用户目录中，Windows在cmd中输入命令查看： type %USERPROFILE%\\.gitconfig \n \n \n git clone url --depth 1  克隆最新一条提交记录 \n git clone url --recursive  递归克隆 \n git fetch --unshallow  完整克隆 \n \n Git与SVN区别 \n \n git是分布式，svn是集中式； \n svn只有一个中央版本库，而git有无限个； \n svn有全局的版本号，git没有； \n git不必联网就可以看到所有的log，svn必须联网； \n git保存的是元数据，svn是复制整个文档； \n git强调分支，svn只是不同的文件目录，就是copy \n GIT工具 \n \n 忽略提交  https://github.com/github/gitignore \n \n https://wizardzines.com/comics/inside-git \n \n \n https://github.com/toptal/gitignore.io \n 编辑版本控制存储库历史  http://www.catb.org/esr/reposurgeon \n GUI  https://github.com/git-cola/git-cola \n https://github.com/prati0100/git-gui \n https://github.com/extrawurst/gitui \n https://github.com/gitbutlerapp/gitbutler \n https://github.com/gitextensions/gitextensions \n https://github.com/TortoiseGit \n \n https://gitlab.com/tortoisegit/tortoisegit \n https://tortoisegit.org/download \n \n \n https://www.syntevo.com \n https://www.git-tower.com \n https://git-fork.com \n https://github.com/jesseduffield/lazygit \n SmartGit 是一款优秀的图形化Git仓库管理工具 \n SmartSVN 是一款优秀的图形化SVN仓库管理工具 \n diff  https://github.com/MrWangJustToDo/git-diff-view \n https://github.com/dandavison/delta \n 代码语法突出  https://github.com/sharkdp/bat \n git加密  https://github.com/AGWA/git-crypt \n 自动补全  https://github.com/dahlbyk/posh-git \n https://github.com/JanDeDobbeleer/oh-my-posh \n Git工具  https://github.com/GitTools \n https://github.com/sosedoff/gitkit \n https://github.com/ewanmellor/git-diff-image \n 根据日志生成Changelog  https://github.com/orhun/git-cliff \n https://github.com/conventional-changelog \n 提交统计  https://github.com/sinclairtarget/git-who \n https://github.com/yinzhenyu-su/weekly-git-summary \n 删除大型blob  https://github.com/rtyley/bfg-repo-cleaner \n Git LFS \n \n 大文件版本控制  https://github.com/git-lfs \n \n https://git-lfs.github.com \n \n \n https://github.com/alebedev/git-media \n https://git-annex.branchable.com \n \n \n Git LFS（Large File Storage, 大文件存储）可以把指定的任意文件存在 Git 仓库之外，\n而在 Git 仓库中用一个占用空间 1KB 不到的文本指针，可以减小 Git 仓库本身的体积来代替的小工具。 \n \n \n git每次保存diff，一些大文件发生变化时，整个仓库就会增加很大的体积，导致clone和pull的数据量大增。\ngit push的时候，git lfs会截取要管理的大文件，并将其传至git lfs的服务器中，从而减小仓库的体积。 \n \n \n git lfs track \"*.gz\"  添加文件到 .gitattributes 追踪记录文件中 \n git lfs ls-files  显示当前提交后跟踪的文件列表 \n git lfs clone  克隆追踪的文件 \n 安装最新版 \n \n https://git-scm.com/download \n https://registry.npmmirror.com/binary.html?path=git-for-windows/ \n https://packages.endpoint.com/rhel/7/os/x86_64/git-2.24.1-1.ep7.x86_64.rpm \n https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \n \n \n 方式一 \n \n yum  install   -y  http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm\n或者 \n wget  http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm\n rpm   -ivh  wandisco-git-release-7-2.noarch.rpm\n \n \n https://github.com/iusrepo \n \n curl  https://setup.ius.io  |   sh \n或者 \nyum  install   -y  epel-release  \n rpm   -ivh  https://centos7.iuscommunity.org/ius-release.rpm\n查看git包版本 \nyum list git2u\n安装 \nyum  -y   install  git2u\n 保存用户密码 \n git  config  --global   --edit \n设置项目个人邮箱 \n git  config  --global  user.email  \"your email\" \n设置项目个人用户名 \n git  config  --global  user.name   \"your username\" \n永久保存凭证 \n git  config  --global  credential.helper store\n \n \n 在 ~/.gitconfig 中会自动在 [credential] 节点下添加 helper = store \n \n \n 保存的账户密码在 ~/.git-credentials 中 \n 代理 \n \n git config --global https.sslverify false  不验证SSL \n \n 设置代理 \n \n 使用命令设置 \n--global全局（会在.gitconfig文件中添加相关配置，所以可手动编辑文件），去掉或者使用--local为当前仓库（局部） \n使用 --unset 参数可取消设置 \nsocks5代理，如果是http则把socks5替换为http，https同理 \n git  config  --global  http.proxy  'socks5://127.0.0.1:10808' \n git  config  --global  https.proxy  'socks5://127.0.0.1:10808' \n只针对某个域名代理 \n git  config  --global  https. \"github.com\" .proxy  \"socks5://127.0.0.1:10808\" \n最优方式，--add参数会添加多个 \n git  config remote.origin.proxy  \"socks5://127.0.0.1:10808\" \n替换为镜像URL \n git  config  --global  url. \"github.com\" .insteadOf  \"hub.fastgit.org\" \n 把空文件夹提交到仓库 \n \n 这个只能说是技巧不能说是方法，原理是在每个空文件夹新建一个.gitignore文件 \n \n find   .   -type  d  -empty   -exec   touch   { } /.gitignore  \\ ; \n 项目远程地址管理 \n \n 见 项目目录/.git/config 中的 remote 节点， origin 为默认远程节点名，可以自定义 \n \n \n 查看当前的远程地址 \n \n git  remote  -v \n \n \n 删除 origin 节点的远程地址 \n \n git  remote  rm  origin\n或者 \n git  remote remove origin\n \n \n 为 origin 节点添加远程地址 \n \n git  remote  add  origin 远程地址\n \n \n 修改 origin 节点远程地址 \n \n git  remote set-url origin 远程地址\n \n \n 为 origin 节点增加一个远程地址 \n \n \n 可同时拉取或推送到多个远程地址 \n \n git  remote set-url  --add  origin 远程地址\n \n \n 把当前分支与 origin 节点远程分支进行关联 \n \n git  push --set-upstream origin 分支名称\n 更改提交 \n \n 如果commit注释写错了，只是想改一下注释 \n查看提交文件，里面包含注释和变更内容 \n git  commit  --amend \n按v进入编辑模式，更改完成后按esc然后输入:qw! 保存 \n \n \n 撤销提交 \n--mixed 默认参数，不删除工作空间改动代码，撤销commit，并且撤销git add . 操作 \n--soft 不删除工作空间改动代码，撤销commit，不撤销git add .  \n--hard 删除工作空间改动代码，撤销commit，撤销git add .  \nHEAD^的代表上一个版本，同HEAD~1(或HEAD@{1})，撤销2次commit，使用HEAD~2(或HEAD@{2})，以此类推 \n git  reset HEAD^\n 强制push本地仓库到远程 \n \n 这种情况不会进行merge, 强制push后远程文件可能会丢失,不建议使用此方法 \n将本地仓库文件push到远程仓库（-f代表强制 --force） \n--allow-unrelated-histories 允许合并不相关的历史 \n git  push  -u   -f  origin master\n 重置本地修改文件 \n \n 如果有任何本地更改，将会丢失。无论是否有--hard选项，任何未被推送的本地提交都将丢失。\n如果您有任何未被Git跟踪的文件(例如上传的用户内容)，这些文件将不会受到影响。 \n \n \n 在重置之前可以通过从master创建一个分支来维护当前的本地提交 \n \n \n 在此之后，所有旧的提交都将保存在新的分支中。然而，没有提交的更改(即使staged)将会丢失。确保存储和提交任何你需要的东西。 \n \n \n 执行重置 \n从远程下载最新的，而不尝试合并或rebase任何东西 \n git  fetch  --all \nreset将主分支重置为本地commit的最新版本 \n--hard选项更改工作树中的所有文件以匹配origin/<branch_name>中的文件 \n git  reset  --hard  origin/ < branch_name > \n拉取远端最新代码 \n git  pull\n暂时忽略对文件做的修改 \n git  update-index --assume-unchanged 路径\n重新标识对文件做的修改 \n git  update-index --no-assume-unchanged 路径\n 清除用户名密码 \n git  config  --system   --unset  credential.helper\n git恢复指定文件到指定版本 \n \n 查看commit历史，并复制需要回退版本的hash \n或者git reflog show \n git  log 文件名\n \n \n 恢复 \n \n git  checkout 复制的hash值 文件名\n \n \n 删除包括历史 \n \n git  filter-branch  --force  --index-filter  \"git rm --cached --ignore-unmatch src/main/java/com/bajins/demo/xxx.java\"   \\ \n  --prune-empty --tag-name-filter  cat  --  --all \n 统计 \n \n 查看git上的个人代码量 \n \n git  log  --author = \"用户名\"   --pretty = tformat:  --numstat   |   awk   '{ add += $1; subs += $2; loc += $1 - $2 } END \\\n  { printf \"added lines: %s, removed lines: %s, total lines: %s\\n\", add, subs, loc }'  -\n \n \n 统计每个人增删行数 \n \n git  log  --format = '%aN'   |   sort   -u   |   while   read  name ;   do   echo   -en   \" $name \\t \" ;   git  log  --author = \" $name \"   \\ \n   --pretty = tformat:  --numstat   |   awk   '{ add += $1; subs += $2; loc += $1 - $2 } END { printf \"added lines: %s, \\\n  removed lines: %s, total lines: %s\\n\", add, subs, loc }'  - ;   done \n查看仓库提交者排名前五 \n git  log  --pretty = '%aN'   |   sort   |   uniq   -c   |   sort   -k1   -n   -r   |   head   -n   5 \n贡献值统计 \n git  log  --pretty = '%aN'   |   sort   -u   |   wc   -l \n提交数统计 \n git  log  --oneline   |   wc   -l \n添加或修改的代码行数 \n git  log --stat | perl  -ne   'END { print $c } $c += $1 if /(\\d+) insertions/' \n比较远端和本地分支 \n git   diff  master origin/master\n \n \n 统计文件的改动 \n \n git   diff   --stat  master origin/master\n执行一次git fetch origin xxx，那当下最新版本的commit会存在FETCH_HEAD中 \n git   diff  HEAD FETCH_HEAD\n\n git  pull --dry-run  |   grep   -q   -v   'Already up-to-date.'   &&   changed = 1 \n git  log HEAD .. .origin/master  --oneline \n git  log  -p  master .. origin/master\n \n \n 本地与远程的差集 \n \n \n 显示远程有而本地没有的 commit 信息 \n \n git  log master .. origin/master\n 分支 \n \n 查看本地分支 git branch \n 查看远程分支 git branch -r \n 查看所有分支 git branch -a \n 本地创建新的分支 git branch [branch name] \n 切换到新的分支 git checkout [branch name] \n 创建+切换分支 git checkout -b [branch name] \n 推送到指定分支 git push origin [branch name] \n 删除本地分支 git branch -d [branch name] \n 删除远程分支,分支名前的冒号代表删除 git push origin :[branch name] \n for b in git branch -r | grep -v -- '->'; do git branch --track ${b##origin/} $b; done   一次性拉取仓库的所有分支 \n SubModule与SubTree \n \n Git - 子模块 \n \n \n submodule只存在引用，代码Pull和Push都只能和 被依赖的项目关联。类似于引用 \n subtree直接克隆被依赖项目，代码Pull和Push根据需要和主项目或被依赖项目关联。类似于拷贝 \n \n \n \n \n / \n submodule \n subtree \n 结果 \n \n \n \n \n 远程仓库空间占用 \n submodule只是引用，基本不占用额外空间 \n 子模块copy，会占用较大的额外空间 \n submodule占用空间较小，略优 \n \n \n 本地空间占用 \n 可根据需要下载 \n 会下载整个项目 \n 所有模块基本都要下载，二者差异不大 \n \n \n 仓库克隆 \n 克降后所有子模块为空，需要注册及更新，同时更新后还需切换分支 \n 克隆之后即可使用 \n submodule步骤略多，subtree占优 \n \n \n 更新本地仓库 \n 更新后所有子模块后指向最后一次提交，更新后需要重新切回分支，所有子模块只需一条更新语句即可 \n 所有子模块需要单独更新 \n 各有优劣，相对subtree更好用一些 \n \n \n 提交本地修改 \n 只需关心子模块即可，子模块的所有操作与普通git项目相同 \n 提交执行命令相对复杂一些 \n submodule操作更简单，submodule占优 \n \n \n \n \n git submodule add 链接 路径  添加子模块，路径建议使用 _ \n git submodule init  初始化子模块 \n git submodule update  下载子模块源码 \n git submodule update --init --recursive  递归下载子模块的源码，并初始化 \n git submodule foreach 'git checkout -f'  git强制更新所有submodule \n git pull  把子模块看作单独的仓库，进入到子模块目录下，更新submodule，拉取后项目有需要提交的更新 \n git clone url --recurse-submodules  递归地将项目中所有子模块的代码拉取 \n \n \n 子模块有修改未提交，报错fatal: remote error: upload-pack: not our ref \n \n 删除子模块 \n \n vim .gitmodules  移除子模块的索引信息 \n git submodule deinit  删除 .git/config 中的模块信息，加上参数 --force 子模块工作区内即使有本地的修改，也会被移除 \n rm -rf 模块文件夹  删除子模块目录文件 \n rm -rf .git/modules/模块名  移除子模块的其他信息 \n git rm --cached 模块名  删除缓存，提示 fatal: pathspec 'xxxxx' did not match any files  说明删除干净了 \n 换行符与大文件处理 \n \n 行尾序列（换行符） \n Git处理换行符问题 \n 为单个仓库或全局配置 Git 处理行结束符 \n \n \n 当你在签出文件时，将 UNIX 换行符（LF）替换为 Windows 的换行符（CRLF）； \n 当你在提交文件时，将 CRLF 替换为 LF。 \n \n \n 如果提交的文件是一个 包含中文字符的UTF-8文件，那么这个“换行符自动转换”功能在提交时不是每次都生效，\n尤其是文件中出现中文字符后有换行符时（但签出时的转换处理没有问题） \n \n gitattributes \n \n 为单个仓库设置  https://git-scm.com/docs/gitattributes \n 8.2 自定义 Git - Git 属性 \n gitattributes \n \n \n https://github.com/topics/gitattributes \n \n https://github.com/gitattributes \n https://github.com/alexkaratarakis/gitattributes \n \n \n \n \n text \n \n linguist-language  设置语言 \n working-tree-encoding  设置字符集编码 \n eol  设置换行符（ crlf 、 lf ） \n \n \n -text \n text=string \n text=auto  让git自行处理左边匹配的文件使用何种换行符格式，这是默认选项。 \n 未声明，通常不出现该属性即可 \n !text  为了覆盖其他文件中的声明，效果同上 \n binary  指定为二进制文件，不应该对其中的换行符进行改变。和 -text -diff 等价 \n \n \n .gitattributes示例文件 \n生成.gitattributes文件 \n echo   \"* text=auto\"   > .gitattributes\n重新规范化所有被git管理的文件 \n git   add   --renormalize   . \n显示将被规范化的文件 \n git  status\n提交 \n git  commit  -m   \"Introduce end-of-line normalization\" \n \n \n https://github.com/editorconfig   .editorconfig 中设置 end_of_line = lf \n https://github.com/axvr/ascribe.vim \n \n 全局为所有仓库设置 \nwindows 下是 autocrlf \n提交时转换为LF，检出时转换为CRLF \n git  config  --global  core.autocrlf  true \n提交时转换为LF，检出时不转换 \n git  config  --global  core.autocrlf input\n推荐，项目中指定了换行，则在任何平台都只用一种换行 \\n \n提交检出均不转换 \n git  config  --global  core.autocrlf  false \nSafeCRLF \n推荐，拒绝提交包含混合换行符的文件 \n git  config  --global  core.safecrlf  true \n允许提交包含混合换行符的文件 \n git  config  --global  core.safecrlf  false \n提交包含混合换行符的文件时给出警告 \n git  config  --global  core.safecrlf warn\n\n #设置行结束符的类型为lf \n git  config  --global  core.eol lf\n\n #设置行结束符的类型为crlf \n git  config  --global  core.eol crlf\n\n #设置行结束符的类型为native, native是指平台默认的行结束符。默认的类型是native \n git  config  --global  core.eol native\n该命令表示提交命令的时候使用utf-8编码集提交 \n git  config  --global  i18n.commitencoding utf-8\n该命令表示日志输出时使用utf-8编码集显示 \n git  config  --global  i18n.logoutputencoding utf-8\n设置LESS字符集为utf-8 \n export   LESSCHARSET = utf-8\n 常见问题处理 \n \n git中fatal: Authentication failed的问题 \n 项目过大clone报错 \n \n Git index-pack failed 问题解决 \n \n \n 由于提交了比较大的文件，在服务端一直无法拉下来，错误如下 \n \n Cloning into 'E:\\soft'...\nPOST git-upload-pack (175 bytes)\nremote: Enumerating objects: 6, done.\nremote: Counting objects: 100% (6/6), done.\nremote: Compressing objects: 100% (6/6), done.\nfatal: early EOF\nfatal: the remote end hung up unexpectedly\nfatal: index-pack failed\n \n \n 执行命令 \n修改压缩的程度 \n git  config  --global  core.compression  0 \n解决内存不够问题 \n git  config  --global  pack.deltaCacheSize 2047m\n git  config  --global  pack.packSizeLimit 2047m\n git  config  --global  pack.windowMemory 2047m\n git  config  --global  core.packedGitWindowSize 512m\n git  config  --global  core.packedGitLimit 512m\n调整缓存大小（单位为字节）为1G \n git  config  --global  http.postBuffer  1073741824 \n最低速度限制 \n git  config  --global  http.lowSpeedLimit  0 \n最低速度时间 \n git  config  --global  http.lowSpeedTime  999999 \n \n \n compression 是压缩的意思，从 clone 的终端输出就知道，服务器会压缩目标文件，然后传输到客户端，客户端再解压。\n取值为 [-1, 9]，-1 以 zlib 为默认压缩库，0 表示不进行压缩，1..9 是压缩速度与最终获得文件大小的不同程度的权衡，\n数字越大，压缩越慢，当然得到的文件会越小。 \n 提交本地文件失败 \n \n 在github远程创建仓库后, 利用gitbash进行提交本地文件的时候出现如下错误 \n \n [root@foundation38 demo]# git push -u origin master\nUsername for 'https://github.com': bajins\nPassword for 'https://bajins@github.com': \nTo https://github.com/bajins/test.git\n   ! [rejected]        master -> master (non-fast-forward)\n error: failed to push some refs to 'https://github.com/bajins/test.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Merge the remote changes (e.g. 'git pull')\nhint: before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n \n \n 第一种：进行push前先将远程仓库pull到本地仓库 \ngit pull --rebase origin master \n git  pull origin master\n git  push  -u  origin master\n\n \n \n 第二种：强制push本地仓库到远程 \n \n git  push  -u  origin master  -f \n \n \n 第三种：避开解决冲突, 将本地文件暂时提交到远程新建的分支中 \n \n git  branch  [ name ] \n创建完branch后, 再进行push \n git  push  -u  origin  [ name ]  \n 远端与本地代码冲突 \n \n 先将本地修改存储起来 \n暂存修改,这样本地的所有修改就都被暂时存储起来 \n git  stash\n看到保存的信息,其中stash@{0}就是刚才保存的标记。 \n git  stash list\n \n \n \n 暂存了本地修改之后，pull内容 \n \n \n 还原暂存的内容 \n \n \n git  stash popstash@ { 0 } \n \n \n 系统提示如下类似的信息 \n \n Auto-mergingc/environ.c\nCONFLICT(content): Merge conflict in c/environ.c\n \n \n 意思就是系统自动合并修改的内容，但是其中有冲突，需要解决其中的冲突。 \n \n \n 解决文件中冲突的的部分 \n \n \n 打开冲突的文件，其中 Updatedupstream  和 ===== 之间的内容就是pull下来的内容， ==== 和 stashed changes 之间的\n内容就是本地修改的内容。碰到这种情况，git也不知道哪行内容是需要的，所以要自行确定需要的内容。 \n SSL验证错误 \n \n 报错  unable to access 'https://github.com/': OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443 \n \n \n 关闭SSL验证 \n \n env   GIT_SSL_NO_VERIFY = true\n或者 \n git  config  --global  http.sslVerify  false \n \n \n 去掉代理 \n \n git  config  --global   --unset  http.proxy\n push错误 \n The following untracked working tree files would be overwritten by merge/checkout \n \n git clean -d -fx \n \n -n  显示将要删除的文件和目录； \n -x  删除忽略文件已经对git来说不识别的文件 \n -d  删除未被添加到git的路径中的文件 \n -f  强制运行 \n \n \n \n fatal: refusing to merge unrelated histories \n \n git pull origin master --allow-unrelated-histories  可以允许不相关历史提，强制合并 \n \n",createdTime:1761814324e3},{title:"Git服务",frontmatter:{description:"https://github.com/scm-manager/scm-manager\nhttps://github.com/projectkudu/kudu\n提取错误上传内容 https://github.com/liamg/gitjacker",meta:[{name:"image",content:"https://bajins.com/images/宝塔WebHook设置.png"},{name:"twitter:title",content:"Git服务"},{name:"twitter:description",content:"https://github.com/scm-manager/scm-manager\nhttps://github.com/projectkudu/kudu\n提取错误上传内容 https://github.com/liamg/gitjacker"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/宝塔WebHook设置.png"},{name:"twitter:url",content:"https://bajins.com/IDE/Git%E6%9C%8D%E5%8A%A1.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Git服务"},{property:"og:description",content:"https://github.com/scm-manager/scm-manager\nhttps://github.com/projectkudu/kudu\n提取错误上传内容 https://github.com/liamg/gitjacker"},{property:"og:image",content:"https://bajins.com/images/宝塔WebHook设置.png"},{property:"og:url",content:"https://bajins.com/IDE/Git%E6%9C%8D%E5%8A%A1.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Git服务"},{itemprop:"description",content:"https://github.com/scm-manager/scm-manager\nhttps://github.com/projectkudu/kudu\n提取错误上传内容 https://github.com/liamg/gitjacker"},{itemprop:"image",content:"https://bajins.com/images/宝塔WebHook设置.png"}]},regularPath:"/IDE/Git%E6%9C%8D%E5%8A%A1.html",relativePath:"IDE/Git服务.md",key:"v-6edf7b7d",path:"/IDE/Git%E6%9C%8D%E5%8A%A1.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"GitLab",slug:"gitlab"},{level:2,title:"GitHub",slug:"github"},{level:3,title:"访问速度过慢",slug:"访问速度过慢"},{level:3,title:"Actions",slug:"actions"},{level:2,title:"GitWebHook",slug:"gitwebhook"},{level:3,title:"配置接收通知",slug:"配置接收通知"},{level:3,title:"配置WebHook",slug:"配置webhook"},{level:2,title:"其他GIT服务",slug:"其他git服务"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Git服务 \n Flag GitLab GitHub 访问速度过慢 Actions GitWebHook 配置接收通知 配置WebHook 其他GIT服务 \n Flag \n \n https://github.com/harness/gitness \n https://github.com/semantic-release \n https://github.com/GerritCodeReview/git-repo \n https://github.com/gitonomy/gitlib \n https://github.com/gitbucket/gitbucket \n \n \n https://github.com/scm-manager/scm-manager \n https://github.com/projectkudu/kudu \n 提取错误上传内容  https://github.com/liamg/gitjacker \n \n Gogs \n \n https://github.com/gogs/gogs \n \n https://gogs.io \n \n \n https://hub.docker.com/r/gogs/gogs \n 安装教程 \n \n Gitea \n \n https://github.com/go-gitea/gitea \n \n https://gitea.io \n \n \n https://hub.docker.com/r/gitea/gitea \n GitLab \n \n root用户登录，右上角头像，Settings -> Preferences -> Localization -> Language，选择“简体中文”即可。\n高版本的GitLab自带了中文语言包，可以通过上述方式直接切换。如果找不到该选项，表示你的版本还不支持。只能通过安装中文插件进行汉化。 \n \n \n https://gitlab.com/gitlab-org/gitlab \n \n https://gitlab.cn/install/ce-or-ee \n \n \n https://gitlab.com/gitlab-org/gitlab-runner \n \n \n https://gitlab.com/xhang/gitlab/wikis/home \n https://github.com/twang2218/gitlab-ce-zh \n \n 汉化的 GitLab 社区版 Docker Image \n \n \n https://hub.docker.com/r/bensonfx/gitlab-ce-zh \n https://github.com/bensonfx/codeserver \n https://hub.docker.com/r/benyoo/gitlab \n https://hub.docker.com/r/imleafz/gitlab-ce-zh \n https://crowdin.com/project/gitlab-ee \n clone所有项目  https://github.com/huchao1009/gitlab-projects-clone \n https://git.openldap.org \n https://bitnami.com/stack/gitlab \n \n version :   '2' \n services : \n     gitlab : \n       image :   'twang2218/gitlab-ce-zh:11.1.4' \n       restart :  unless - stopped\n       hostname :   'git.woetu.com' \n       environment : \n         TZ :   'Asia/Shanghai' \n         GITLAB_OMNIBUS_CONFIG :   | \n          external_url 'http://git.woetu.com'\n          gitlab_rails['time_zone'] = 'Asia/Shanghai'\n需要配置到 gitlab.rb 中的配置可以在这里配置，每个配置一行，注意缩进。\n比如下面的电子邮件的配置：\ngitlab_rails['smtp_enable'] = true\ngitlab_rails['smtp_address'] = \"smtp.exmail.qq.com\"\ngitlab_rails['smtp_port'] = 465\ngitlab_rails['smtp_user_name'] = \"xxxx@xx.com\"\ngitlab_rails['smtp_password'] = \"password\"\ngitlab_rails['smtp_authentication'] = \"login\"\ngitlab_rails['smtp_enable_starttls_auto'] = true\ngitlab_rails['smtp_tls'] = true\ngitlab_rails['gitlab_email_from'] = 'xxxx@xx.com' \n       ports : \n         -   '8099:80' \n         -   '442:443' \n         -   '22:22' \n       volumes : \n- /home/gitlab/config:/home/gitlab/config \n- /home/gitlab/data:/home/gitlab/data \n- /home/gitlab/logs:/home/gitlab/logs \n         -  config : /etc/gitlab\n         -  data : /var/opt/gitlab\n         -  logs : /var/log/gitlab\n volumes : \n     config : \n     data : \n     logs : \n GitHub \n \n https://github.com/github \n 预览项目HTML  https://github.com/htmlpreview/htmlpreview.github.com \n 嵌入到HTML  https://github.com/yusanshi/emgithub \n 生成更新日志  https://github.com/shipkit/shipkit-changelog \n https://github.com/lowlighter/metrics \n https://github.com/ryo-ma/github-profile-trophy \n https://github.com/wuuashen/gitlab-to-github \n \n \n GitHub漫游指南  https://github.com/phodal/github \n 首次贡献  https://github.com/firstcontributions/first-contributions \n https://github.com/all-contributors/all-contributors \n https://github.com/probot/probot \n https://help.github.com/cn \n 发布成功之后 github pages 的 Custom domain 配置项就被清空： github-pages-basics \n https://codecov.io \n 目录 - P3TERX ZONE \n https://github.com/tiimgreen/github-cheat-sheet \n 发现造假stars  https://github.com/dagster-io/fake-star-detector \n 2FA身份验证  https://github.com/Dolov/chrome-github-2fa \n \n \n https://github.com/zenodo/zenodo \n 手动同步fork  https://blog.blueskyclouds.com/jsfx/58.html \n https://github.com/wei/git-sync \n https://github.com/repo-sync \n 自动同步fork  https://github.com/wei/pull \n \n https://github.com/apps/pull \n https://github.com/BlueskyClouds/My-Actions/blob/master/backUp/gitSync.md \n \n \n GitHub的Java API  https://github.com/hub4j/github-api \n 自动拉取请求  https://github.com/dependabot/dependabot-core \n 项目管理  https://www.zenhub.com \n \n 统计 \n \n https://github.com/search?o=desc&q=stars%3A%3E100000&s=stars \n https://github.com/trending \n GitHub存档  https://www.gharchive.org \n https://github.com/kon9chunkit/GitHub-Chinese-Top-Charts \n https://github.com/cfour-hi/gitstars \n 开源项目刊栏  https://github.com/521xueweihan/HelloGitHub \n https://github.com/LeslieLeung/cat-fish-weekly \n GitHub趋势  https://github.com/SolaTyolo/gold_github_trending \n https://github.com/yangwenmai/github-trending-backup \n https://github.com/HelloGitHub-Team/Article \n https://github.com/tophubs \n https://www.tkcnn.com \n https://github.com/VulnTotal-Team/yarb \n https://github.com/chainreactors/picker \n https://github.com/hellokaton/china-ranking \n https://github.com/oliyh/stardev-feedback \n 记录GitHub趋势  https://github.com/xiaobaiha/github-trending-history \n \n https://github.oldjpg.com \n \n \n https://github.com/GitHubDaily \n https://github.com/techgaun/active-forks \n https://giters.com \n https://github.com/knownsec/404StarLink \n https://www.github-zh.com \n 技术周刊  https://github.com/tw93/weekly \n https://github.com/ruanyf/weekly \n \n https://www.ruanyifeng.com/blog/archives.html \n \n \n 获取统计信息  https://github.com/shroudedcode/devstats \n https://github.com/dahezhiquan/Github-personal-homepage \n 获取动态生成的GitHub统计信息  https://github.com/anuraghazra/github-readme-stats \n https://github.com/muety/wakapi \n 获取访问统计 http://profile-counter.glitch.me/用户名/count.svg \n 历史Star数 https://starchart.cc/用户名/My-Actions.svg \n https://github.com/star-history/star-history \n 你在 GitHub 上看到过的最有意思的项目是什么？ - 知乎 \n 访问速度过慢 \n \n 可以使用 git config --global url.\"github.com\".insteadOf hub.fastgit.org 来替换url \n \n \n https://github.com/ilanyu \n https://gitee.com/docmirror/dev-sidecar \n \n https://github.com/docmirror/dev-sidecar \n \n \n https://github.com/FastGitORG \n \n https://toolwa.com/github \n https://github.ur1.fun \n \n \n https://github.com/dotnetcore/FastGithub \n https://github.com/hunshcn/gh-proxy \n \n https://gh.api.99988866.xyz \n https://gh.ddlc.top \n https://ghps.cc \n https://ghproxy.link \n https://ghfast.top \n https://ghproxy.net \n https://wget.la \n \n \n https://github.com/sky22333/hub-proxy \n \n https://gh.catmak.name \n \n \n https://github.com/git-cloner \n \n https://gitclone.com  中国浙江 \n \n \n https://github.com/BaseMax/GitHubMirror \n https://github.com/RC1844/FastGithub \n https://githubfast.com \n https://github.com/7ednet/yard \n \n https://www.7ed.net/gitmirror/hub.html \n https://gitmirror.com \n https://gh.con.sh \n \n \n https://github.com/521xueweihan/GitHub520 \n \n \n https://greasyfork.org/zh-CN/scripts/412245 \n https://github.com/chisaato/xt \n https://github.com/fhefh2015/Fast-GitHub \n https://github.com/maxiaof/github-hosts \n https://github.com/Potterli20/hosts \n https://gitee.com/if-the-wind/github-hosts \n https://codechina.csdn.net/mirrors \n https://fcp7.com/github-mirror-daily-updates.html \n https://github.com/jvxiao/speed-github \n \n Raw 文件加速 \n \n https://cdn.jsdelivr.net  中国国内\n \n https://cdn.jsdelivr.net/gh \n \n \n https://cdn.staticaly.com  日本东京 \n \n 刷新DNS缓存 \nmacOS \n killall   -HUP  mDNSResponder\ndscacheutil  -flushcache \nWindows \nipconfig /flushdns\nLinux \n service  nscd restart\nUbuntu \n sudo  /etc/init.d/dns-clean start\n Actions \n \n GitHub Actions 入门教程 \n Github Actions 尝鲜 \n 持续集成 \n \n \n 生成公钥和私钥 ssh-keygen -t rsa -b 4096 -C \"yourname@example.com\" -f 文件名称 -N \"\" （ACTION_DEPLOY_KEY），\n或者生成新的个人访问令牌（PERSONAL_TOKEN） https://github.com/settings/tokens/new \n \n \n https://github.com/actions \n \n 检出项目  https://github.com/actions/checkout \n https://github.com/aws-actions \n \n \n https://github.com/topics/github-pages \n https://github.com/topics/gh-pages \n https://github.com/topics/deploy \n https://github.com/topics/deployment \n https://github.com/topics/github-actions \n https://github.com/topics/github-action \n https://github.com/sdras/awesome-actions \n https://github.com/topics/workflow \n \n \n deploy-to-github-pages 、 pages 、 deploy \n https://github.com/peaceiris/actions-gh-pages \n https://github.com/JamesIves/github-pages-deploy-action \n upload release \n https://github.com/wangyoucao577/go-release-action \n https://github.com/elgohr/Publish-Docker-Github-Action \n https://github.com/release-drafter/release-drafter \n https://github.com/xresloader/upload-to-github-release \n https://github.com/svenstaro/upload-release-action \n 签名  https://github.com/signpath/github-action-submit-signing-request \n GitWebHook \n \n 手动部署: Vue项目完成后,执行 npm run build ,然后将生成的dist目录下的文件放到web目录下 \n \n WebHooks自动化部署,流程如下: \n \n 配置 Gitea 的 WebHook 通知(也可以用 码云 、 Github 、 GitLab 、 gogs ,带 WebHook 功能就行) \n 当我们 push 到仓库时, Gitea 会主动发送一个通知到我们的服务器,然后服务器接到通知执行我们部署的脚本,开始自动化构建。 \n \n \n https://github.com/bajins/webhook-go \n https://github.com/adnanh/webhook \n https://github.com/pre-commit \n 配置接收通知 \n \n 编译项目部署到指定目录.sh \n 编译项目部署到GitHub.sh \n \n 必备环境 \n \n 以下命令视自己的环境而执行 \ngit \nyum  install   -y   git \nnode 由于nodejs自带npm所以就不需要手动安装了 \nyum  install   -y  nodejs\nvue-cli \n npm   install   -g  @vue/cli\n 宝塔面板 \n \n 设置宝塔WebHook插件 \n \n \n \n \n 宝塔WebHook获取url \n \n \n param参数需要和脚本里对应起来,我这里写的是pull \n \n \n \n http://服务器ip:8888/hook?access_key=5C84B7A5UeXYalfNL6WEpi3jdmmxhFlk3jpvEw02BMo84Ak3&param=pull \n netcat命令 \n \n https://segmentfault.com/a/1190000016626298 \n \n \n \n 实现监听端口->响应请求->执行脚本部署 \n \n \n 一直监听 9999 端口，有请求就响应 echo 的内容，并执行指定脚本 \n \n \n echo   -e   \"HTTP/1.1 200 ok,glass \\r \\n Connection: close \\r \\n \\r \"   |    nc   -l   0.0 .0.0  9999   ;   sh  /home/update.sh  >>  /home/logs/webhook.log  2 > &1 \n \n \n 通过 systemd，可以将这个脚本管理起来，让它永远重启，这样一次部署之后，马上就可以重新监听，等待下一次部署命令。注意要添加 StartLimitInterval ，限制一下执行的频率。 \n \n \n 最终的 systemd service 如下 \n \n [Unit]\nDescription=Autopull through webhook\nAfter=network.target\n \n[Service]\nUser=admin\nType=simple\nExecStart=/bin/bash -xc 'echo -e \"HTTP/1.1 200 ok,glass\\r\\nConnection: close\\r\\n\\r\" |  nc -l 0.0.0.0 9999 ; sh /home/deploy/update.sh >> /home/logs/webhook.log 2>&1'\nRestart=always\nStartLimitInterval=1min\nStartLimitBurst=60\n \n[Install]\nWantedBy=multi-user.target\n \n \n 这样就可以实现每次向 master push 代码，自动测试成功并且马上推送到测试环境中。 update.sh 脚本的最后可以加一个 Curl 命令向钉钉或者 slack 发送提醒。 \n 配置WebHook \n 添加接收通知url \n 测试推送 \n 其他GIT服务 \n \n https://forgejo.org \n \n https://codeberg.org \n https://disroot.org/en/services/git \n https://git.pub.solar \n https://git.kaki87.net \n https://sij.ai \n 静态站点  https://git.gay/gitgay/pages-server \n \n \n https://git.pleroma.social \n https://code.aliyun.com \n https://coding.net \n https://git.code.tencent.com \n https://framagit.org \n https://git.hit.edu.cn \n https://www.gitlink.org.cn \n https://sourceforge.net \n https://bitbucket.org \n https://www.gitkraken.com \n https://launchpad.net \n https://kolaente.dev \n https://git.resf.org \n 软件相似度比较  https://copycat.gitee.com \n \n",createdTime:1761814324e3},{title:"IDEA插件",frontmatter:{description:"如何批量挖掘Jetbrains系列产品激活服务器\n    https://fofa.info\n如何找Jetbrains激活服务器\n    https://search.censys.io\n记录 Rainbow Brackets 插件破解\nhttps://blog.novitechie.com\nhttps://intxzt.github.io\nhttps://github.com/lianshufeng/Jrebel\n    https://jrebel.idoudou.me\n    https://jrebel.com.cn\nhttps://github.com/JAgentSphere/bytebuddy-agent-demo",meta:[{name:"image",content:"https://upload-images.jianshu.io/upload_images/11962894-09e7a540af46231f.png"},{name:"twitter:title",content:"IDEA插件"},{name:"twitter:description",content:"如何批量挖掘Jetbrains系列产品激活服务器\n    https://fofa.info\n如何找Jetbrains激活服务器\n    https://search.censys.io\n记录 Rainbow Brackets 插件破解\nhttps://blog.novitechie.com\nhttps://intxzt.github.io\nhttps://github.com/lianshufeng/Jrebel\n    https://jrebel.idoudou.me\n    https://jrebel.com.cn\nhttps://github.com/JAgentSphere/bytebuddy-agent-demo"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://upload-images.jianshu.io/upload_images/11962894-09e7a540af46231f.png"},{name:"twitter:url",content:"https://bajins.com/IDE/IDEA%E6%8F%92%E4%BB%B6.html"},{property:"og:type",content:"article"},{property:"og:title",content:"IDEA插件"},{property:"og:description",content:"如何批量挖掘Jetbrains系列产品激活服务器\n    https://fofa.info\n如何找Jetbrains激活服务器\n    https://search.censys.io\n记录 Rainbow Brackets 插件破解\nhttps://blog.novitechie.com\nhttps://intxzt.github.io\nhttps://github.com/lianshufeng/Jrebel\n    https://jrebel.idoudou.me\n    https://jrebel.com.cn\nhttps://github.com/JAgentSphere/bytebuddy-agent-demo"},{property:"og:image",content:"https://upload-images.jianshu.io/upload_images/11962894-09e7a540af46231f.png"},{property:"og:url",content:"https://bajins.com/IDE/IDEA%E6%8F%92%E4%BB%B6.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"IDEA插件"},{itemprop:"description",content:"如何批量挖掘Jetbrains系列产品激活服务器\n    https://fofa.info\n如何找Jetbrains激活服务器\n    https://search.censys.io\n记录 Rainbow Brackets 插件破解\nhttps://blog.novitechie.com\nhttps://intxzt.github.io\nhttps://github.com/lianshufeng/Jrebel\n    https://jrebel.idoudou.me\n    https://jrebel.com.cn\nhttps://github.com/JAgentSphere/bytebuddy-agent-demo"},{itemprop:"image",content:"https://upload-images.jianshu.io/upload_images/11962894-09e7a540af46231f.png"}]},regularPath:"/IDE/IDEA%E6%8F%92%E4%BB%B6.html",relativePath:"IDE/IDEA插件.md",key:"v-1961f596",path:"/IDE/IDEA%E6%8F%92%E4%BB%B6.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"AI辅助编码",slug:"ai辅助编码"},{level:2,title:"代码生成与辅助",slug:"代码生成与辅助"},{level:2,title:"数据库与ORM",slug:"数据库与orm"},{level:2,title:"代码质量与统计",slug:"代码质量与统计"},{level:2,title:"版本控制",slug:"版本控制"},{level:2,title:"翻译与文档",slug:"翻译与文档"},{level:2,title:"调试与测试",slug:"调试与测试"},{level:2,title:"UI与编辑体验增强",slug:"ui与编辑体验增强"},{level:2,title:"快捷键与学习辅助",slug:"快捷键与学习辅助"},{level:2,title:"其他工具集",slug:"其他工具集"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" IDEA插件 \n Flag AI辅助编码 代码生成与辅助 数据库与ORM 代码质量与统计 版本控制 翻译与文档 调试与测试 UI与编辑体验增强 快捷键与学习辅助 其他工具集 \n Flag \n \n https://www.jetbrains.com/legal/docs/terms/jetbrains-ai/service-providers \n https://licheng1013.github.io/util/idea.html \n Eclipse代码格式化风格  https://github.com/krasa/EclipseCodeFormatter \n 主题  http://soft-hub.cn \n \n \n https://www.jetbrains.com/idea/download/other.html \n https://github.com/search?q=jetbra \n https://zhile.io/archives \n \n jetbrains-agent (v3.2.0为2020.1.4及以下版本)/ FineAgent / plugin-fineagent / BetterIntelliJ \n jetbrains-eval-reset （ IDE Eval Reset ）v2.3.5为2021.2.4(2021.2.3起需要登录)及以下版本重置试用插件\n \n https://repo.idechajian.com \n https://plugins.zhile.io \n \n \n https://github.com/ja-netfilter  2021.3(2022.1起弃用 mymap 插件)-2023.1.4可用\n \n https://gitee.com/ja-netfilter \n https://jetbra.in/s \n \n https://github.com/jonssonyan/3.jetbra.in \n https://jetbra.github.do \n \n \n https://jetbrains.zhang-wt.com \n https://github.com/sinlmao/plugin-fineagent \n https://github.com/googleweb/power-rule-plugin \n https://github.com/MoonWX/RainbowBracketsCrack \n https://github.com/Nasller/LicenseServer \n https://notabug.org/Nasller/LicenseServer \n https://github.com/H1d3r/Ja-LicenseServer \n https://github.com/starxg/MyBatisCodeHelperProCrack \n https://github.com/zrongdong/ja-netfilter  2021.3-最新版本可用 \n https://github.com/noviceli/jetbra \n \n https://github.com/novitechie/jetbra \n https://github.com/iot/jetbra \n https://github.com/novice88 \n \n https://linux.do/u/novice.li/activity/topics \n https://jetbra.novitechie.com \n https://jbls.ide-soft.com \n https://greasyfork.org/zh-CN/scripts/480799-jetbra \n \n \n https://gitea.998043.xyz \n https://github.com/iofeqkurrc42/jetbra-server-go \n \n \n https://github.com/NotoChen/Jetbrains-Help \n \n https://gitee.com/guoyifanA/qiu-mo-jetbrains-help \n https://ide.mihuyo.cc \n \n \n https://github.com/LemonZuo/license \n https://github.com/nannanStrawberry314/license \n \n https://github.com/AnkioTomas/license \n https://jetbrains.ankio.net/license \n \n \n https://notabug.org/wmymz/jls \n https://github.com/mqj0712/plugin-sg-valid \n https://github.com/Luxcis/Jetbrains-Helper-Go \n https://github.com/saxpjexck/lsix \n https://github.com/LovesAsuna/jetbrains_hacker \n \n https://jetbrains.ankio.net/license \n \n \n https://jetbrain.tech/?free \n https://ckey.run \n \n https://github.com/neKamita/ToolBox-Activator \n https://github.com/Unexpectedlyc/ckey.run--offline-activation-jetbrains \n \n \n https://gitea.998043.xyz/yelochick/plugin-activation \n \n https://github.com/cblueo/smart-input-pro \n \n \n https://linux.do/u/bajins/activity/likes-given \n \n \n https://intxzt.github.io/2022/07/25/ja-netfilter/ja-netfilter-plugins-power \n https://greasyfork.org/zh-CN/scripts/by-site/linux.do \n https://github.com/anghunk/linuxdo-scripts \n \n \n https://github.com/tikkid/JetbrainKiller  最新免登录试用插件\n \n https://github.com/eltociear/JetbrainKiller \n https://github.com/KoolieAid/JetbrainKiller \n \n \n https://github.com/ilanyu/ReverseProxy \n 利用授权服务器(License Server)激活Jetbrains全家桶 \n \n https://www.shodan.io/search?query=Location%3A+https%3A%2F%2Faccount.jetbrains.com%2Ffls-auth \n \n \n 如何批量挖掘Jetbrains系列产品激活服务器 \n \n https://fofa.info \n \n \n 如何找Jetbrains激活服务器 \n \n https://search.censys.io \n \n \n 记录 Rainbow Brackets 插件破解 \n https://blog.novitechie.com \n https://intxzt.github.io \n https://github.com/lianshufeng/Jrebel \n \n https://jrebel.idoudou.me \n https://jrebel.com.cn \n \n \n https://github.com/JAgentSphere/bytebuddy-agent-demo \n \n \n 计算机\\HKEY_CURRENT_USER\\SOFTWARE\\JavaSoft\\Prefs \n AI辅助编码 \n \n AI Coding Assistant  https://plugins.jetbrains.com/search?orderBy=downloads&pricingModels=FREE&search=AI%20Coding%20Assistant \n ChatGPT  https://gitlab.com/wangsen_job/idea-plugin-iframe \n https://plugins.jetbrains.com/plugin/17809-lingma--alibaba-cloud-ai-coding-assistant \n https://plugins.jetbrains.com/plugin/23475-baidu-comate \n https://github.com/big-mouth-cn/talkx-idea-plugin \n 代码生成与辅助 \n GsonFormat \n \n https://github.com/zzz40500/GsonFormat \n \n \n google出的一键根据json文本生成java类，非常方便 \n \n \n RoboPOJOGenerator \n \n 从JSON生成Java和Kotlin POJO文件：GSON，FastJSON，AutoValue（GSON），Logan Square，Jackson，空注释模板。 \n \n \n https://github.com/robohorse/RoboPOJOGenerator \n \n \n Json2Pojo \n \n 允许使用GSON注释和访问器从JSON轻松创建Java POJO。 \n \n \n https://plugins.jetbrains.com/plugin/8533-json2pojo \n \n JSON-P to JSON generator \n \n 在Java文件中自动创建 toJson() 方法 \n \n \n https://plugins.jetbrains.com/plugin/13724-json-p-to-json-generator \n \n Toolkit \n \n JavaBean复制为Json字符串，Json字符串格式化，Json字符串转换为JavaBean，Json压缩 \n \n \n https://github.com/liuzhihangs/toolkit \n \n JsonToKotlinClass \n \n 从JSON字符串生成Kotlin \n \n \n https://github.com/wuseal/JsonToKotlinClass \n \n bean2json \n \n 把bean对象转json \n \n \n https://github.com/dakuohao/bean2json \n \n Java Bean To Json Tool \n \n 一个简单的Json工具将Java Bean转换为Json或Json-Schema \n \n \n https://plugins.jetbrains.com/plugin/12019-java-bean-to-json-tool \n \n BoB Beans Builder \n \n 使用标准的getter，hashcode和equals以及生成器生成模式化的类。它非常适合生成的JSON序列化类或数据传输对象。 \n \n \n https://plugins.jetbrains.com/plugin/12032-bob-the-builder-of-beans \n \n \n Code generator \n \n 提供操作以从自定义模板生成代码 \n \n \n https://plugins.jetbrains.com/plugin/13595-code-generator \n \n EasyCode \n \n https://github.com/makejavas/EasyCode \n \n codehelper.generator \n \n 生成器，可以更轻松，更高效地生成代码。 \n \n \n https://github.com/zhengjunbase/codehelper.generator \n \n \n GenerateAllSetter \n \n 一键调用一个对象的所有set方法并且赋予默认值 在对象字段多的时候非常方便 \n \n \n https://github.com/gejun123456/intellij-generateAllSetMethod \n https://github.com/Adrninistrator/GenSetterCalls \n \n \n POJO Generator \n \n 从数据库表生成JPA实体POJO \n \n \n https://github.com/Jukien/POJO-Generator \n \n Protobuf Support \n \n Google Protobuf对JetBrains产品的支持，Java序列化库，原型编译器，代码生成器 \n \n \n https://github.com/protostuff/protobuf-jetbrains-plugin \n \n GoogleProtobufTool \n \n protobuf生成java文件的IDEA插件.支持生成一个或者多个文件. \n \n \n https://plugins.jetbrains.com/plugin/13562-googleprotobuftool \n \n CodeMaker \n \n 一个用于Java / Scala生成代码的插件，支持自定义代码模板 \n \n \n https://github.com/x-hansong/CodeMaker \n \n Jackson Generator Plugin \n \n 快速在 class 和 json 间相互生成 \n \n \n https://plugins.jetbrains.com/plugin/7678-jackson-generator-plugin \n https://github.com/klamborowski/JacksonGenerator \n \n Lombok plugin \n \n https://github.com/mplushnikov/lombok-intellij-plugin \n \n \n 支持lombok的各种注解，从此不用写getter setter这些 可以把注解还原为原本的java代码,除此之外还有其他更多注解以减少代码 \n 数据库与ORM \n Free Mybatis plugin \n \n https://gitee.com/wuzhizhan/free-idea-mybatis \n \n mybatis-lite \n \n https://github.com/mustfun/mybatis-plus \n \n mybatis-plus \n \n https://github.com/kana112233/mybatis-plus-plugin \n \n MyBatisCodeHelper \n \n https://plugins.jetbrains.com/plugin/14522-mybatiscodehelperpro-marketplace-edition- \n https://github.com/gejun123456/MyBatisCodeHelper-Pro \n https://github.com/mbtsp/mybatisSmartCodeHelp \n MybatisCodeHelperPro试用key获取 \n \n \n MyBatis Log Plugin \n \n 直接将Mybatis执行的sql脚本显示出来，无需处理，可以直接复制出来执行 \n \n \n https://github.com/kookob/mybatis-log-plugin \n https://github.com/PerccyKing/batslog \n \n mongo4idea \n \n mongo客户端 \n \n \n https://github.com/dboissier/mongo4idea \n \n iedis \n \n redis客户端 \n \n \n https://plugins.jetbrains.com/plugin/9228-iedis \n 代码质量与统计 \n \n https://github.com/XenoAmess/p3c \n https://github.com/godfather1103/p3c \n https://github.com/amitdev/PMD-Intellij \n https://qaplug.com \n 保存时自动执行操作  https://github.com/dubreuia/intellij-plugin-save-actions \n \n FindBugs-IDEA \n \n https://github.com/JetBrains/spotbugs-intellij-plugin \n \n https://plugins.jetbrains.com/plugin/14014-spotbugs \n \n \n https://github.com/andrepdo/findbugs-idea \n \n https://andrepdo.github.io/findbugs-idea \n \n \n \n \n 检测代码中可能的bug及不规范的位置，检测的模式相比p3c更多，写完代码后检测下 避免低级bug，强烈建议用一下，一不小心就发现很多老代码的bug \n \n \n CheckStyle-IDEA \n \n 代码规范检查 \n \n \n https://github.com/jshiell/checkstyle-idea \n https://plugins.jetbrains.com/plugin/1065 \n \n MetricsReloaded \n \n 代码复杂度检查 \n \n \n https://plugins.jetbrains.com/plugin/93 \n \n Statistic \n \n 代码统计 \n \n \n https://plugins.jetbrains.com/plugin/4509 \n 版本控制 \n \n https://github.com/zielu/GitToolBox \n \n .ignore \n \n https://github.com/JetBrains/idea-gitignore \n \n \n 生成各种ignore文件，一键创建git ignore文件的模板，免得自己去写 \n \n \n Add to gitignore \n \n https://github.com/fallenprogrammr/addtogitignore \n \n \n 在项目视图中右键单击文件/目录并将其添加到 .gitignore \n \n Git Commit Template \n \n Git格式化模版，你可以按照实际情况格式化你的提交信息 \n \n Git Flow Integration \n \n Git Flow 的图形界面操作 \n \n \n https://plugins.jetbrains.com/plugin/7315-git-flow-integration \n 翻译与文档 \n \n 翻译  https://github.com/starcwang/easy_javadoc \n https://github.com/tuchg/ChinesePinyin-CodeCompletionHelper \n https://github.com/a18792721831/studyplugin \n https://github.com/AntonShuvaev/intellij-datagraph \n https://github.com/YiiGuxing/TranslationPlugin \n 接口文档生成  https://github.com/liuzhihang/doc-view \n https://github.com/starcwang/easy_javadoc \n \n JavaDoc \n \n 快速生成 java 注释的插件有很多，评分比较高的就是 JavaDoc ，注意作者为 Sergey Timofiychuk 。通过快捷 就可以生成注释。mac 的快捷键需要自己去设置， windows 快捷键如下： \n \n \n 要为活动元素生成 javadocs，请按 shift + alt + G。 \n 要为当前 java 文件中的所有元素生成 javadocs，请按 shift + ctrl + alt + G。 \n 删除当前/选定元素上的 javadocs 请按 shift + alt + Z。 \n 删除当前类所有元素上的 javadocs：请按 shift + ctrl + alt + Z。 \n \n Translation \n \n https://plugins.jetbrains.com/plugin/8579-translation \n \n \n 最好用的翻译插件，功能很强大，界面很漂亮 \n \n \n probie \n \n https://plugins.jetbrains.com/plugin/13397-probie \n \n \n 这款插件可以让英语没那么好的开发者在定义类、方法、参数的时候更为合理，增加代码可读性。同时，也可以帮助我们快速的翻译英文注释来理解源码内容！ \n \n IDEA Mind Map \n \n https://github.com/raydac/netbeans-mmd-plugin \n \n \n 思维导图支持多种格式文件的导入和导出，同步更新时便于合并「以文本格式保存，支持 markdown 的语法，方便解决冲突」 \n 调试与测试 \n \n 调试辅助  https://github.com/igoriakovlev/JumpToLine \n 测试  https://github.com/dromara/fast-request \n \n Arthas \n \n https://github.com/WangJi92/arthas-idea-plugin \n \n \n 支持热更新 mybatis mapper.xml \n \n HotSecondsIDEA \n \n 热部署 \n \n \n https://github.com/thanple/HotSecondsIDEA \n \n VisualVM Launcher \n \n 运行java程序的时候启动visualvm，方便查看jvm的情况 比如堆内存大小的分配，某个对象占用了多大的内存，jvm调优必备工具 \n \n \n https://github.com/krasa/VisualVMLauncher \n \n \n Grep Console \n \n 让 Console 日志有颜色，可以对 trace，debug，info，warn，error 配置不同的颜色 \n \n \n https://github.com/krasa/GrepConsole \n \n RestfulToolkit \n \n 一套RESTful服务开发辅助工具集 \n \n \n https://plugins.jetbrains.com/plugin/10292-restfultoolkit \n \n RESTMan \n \n RESTful接口调试工具, 支持json和xml格式报文，借助原生编辑器实现语法高亮和语法检查。 \n \n \n https://plugins.jetbrains.com/plugin/13466-restman \n UI与编辑体验增强 \n \n 反编译  https://github.com/selfancy/codespy \n 缩略图  https://github.com/Nasller/CodeGlancePro \n 序列图  https://github.com/Vanco/SequencePlugin \n Compose颜色预览  https://github.com/zTrap/compose-color-preview-plugin \n 可折叠项目视图  https://github.com/hsz/intellij-foldable-projectview \n \n Rainbow Brackets \n \n 彩虹括号  https://github.com/izhangzhihao/intellij-rainbow-brackets \n \n \n 彩虹颜色的括号，看着很舒服 敲代码效率变高 \n \n \n CodeGlance \n \n 代码编辑区迷你缩放插件，可以进行代码的全局预览。 \n \n Markdown Navigator \n \n https://github.com/vsch/idea-multimarkdown \n \n \n 带有GFM 的Markdown插件和匹配的预览样式。 \n \n ASM Bytecode Outline \n \n 查看 Class 类的字节码 \n \n \n https://github.com/melix/asm-bytecode-intellij \n \n stackoverflow \n \n 这个插件对于查找问题特别方便，定位异常，点击右键快速跳转到 stackoverflow 网站，每次至少为你节约了 10 秒。 \n \n \n https://github.com/gejun123456/IntellijGoToStackOverFlow \n \n AceJump \n \n 快速将光标导航到编辑器中可见的任何位置，快速定位突出显示代码中所有指定的字符 \n \n \n https://github.com/acejump/AceJump \n \n CamelCase \n \n 命名风格转换插件，可以在 kebab-case，SNAKE_CASE，PascalCase，camelCase，snake_case 和 空格风格之间切换。\n快捷键苹果为 ⇧  +  ⌥  +  U ，windows下为 Shift  +  Alt  +  U 。 \n \n \n https://github.com/netnexus/camelcaseplugin \n \n String Manipulation \n \n 强大的字符串转换工具，驼峰、大小写、连接符等 \n \n \n https://plugins.jetbrains.com/plugin/2162 \n 快捷键与学习辅助 \n \n 快捷键助手  https://github.com/halirutan/IntelliJ-Key-Promoter-X \n \n Presentation Assistant \n \n 快捷键展示 \n \n \n https://plugins.jetbrains.com/plugin/7345-presentation-assistant \n \n Presentation Assistant \n \n 显示调用的操作的名称和键盘快捷键。 \n \n \n https://plugins.jetbrains.com/plugin/11631-presentation-assistant \n \n Key promoter X \n \n 很多人不愿意切换 IDE 就是因为快捷键的习惯问题。刚好这个插件可以提醒快捷键，有代入感，提醒的多了你就会了。\n对于新手建议安装熟悉一下快捷键。 \n \n Key promoter \n \n 快捷键提示插件，会统计你鼠标点击某个功能的次数，提示你应该用什么快捷键，帮助记忆快捷键，等熟悉了之后可以关闭掉这个插件。 \n \n \n https://plugins.jetbrains.com/plugin/4455 \n \n IDE Features Trainer \n \n 可以在IDE内部以交互方式学习基本快捷方式和基本功能。 \n \n \n https://plugins.jetbrains.com/plugin/8554-ide-features-trainer \n 其他工具集 \n \n https://github.com/LinWanCen \n https://github.com/kookob/toolset \n https://github.com/findtheflow/Feedback \n \n Maven Helper \n \n https://github.com/krasa/MavenHelper \n \n \n 一键查看maven依赖，查看冲突的依赖，一键进行exclude依赖 \n \n \n 使用Maven Helper解决Maven依赖冲突 \n \n \n Eclipse Code Formatter \n \n 使用 Eclipse 的代码格式化风格，在一个团队中如果公司有规定格式化风格，这个可以使用。 \n \n \n https://plugins.jetbrains.com/plugin/6546 \n \n Jindent-Source Code Formatter \n \n 自定义类、方法、doc、变量注释模板 \n \n \n http://plugins.jetbrains.com/plugin/2170 \n \n Properties to YAML Converter \n \n 把 Properties 的配置格式改为 YAML 格式 \n \n \n https://plugins.jetbrains.com/plugin/8000-properties-to-yaml-converter \n \n Cloud Toolkit \n \n 帮助开发者更高效地开发、测试、诊断并部署应用。通过插件，可以将本地应用一键部署到任意服务器 \n \n \n https://plugins.jetbrains.com/plugin/11386-alibaba-cloud-toolkit \n \n BurpBountyPro \n \n https://github.com/googleweb/loader \n \n",createdTime:1761814324e3},{title:"IDEA使用",frontmatter:{description:"IntelliJ IDEA神器使用技巧\nIDEA的基本使用：让你的IDEA有飞一般的感觉\n挑战idea社区版Javaweb开发\n无需破解，使用IDEA社区版开发Web项目\n已经足够好用的IDEA社区版",meta:[{name:"image",content:"https://bajins.com/images/IDEA远程debug调试.png"},{name:"twitter:title",content:"IDEA使用"},{name:"twitter:description",content:"IntelliJ IDEA神器使用技巧\nIDEA的基本使用：让你的IDEA有飞一般的感觉\n挑战idea社区版Javaweb开发\n无需破解，使用IDEA社区版开发Web项目\n已经足够好用的IDEA社区版"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/IDEA远程debug调试.png"},{name:"twitter:url",content:"https://bajins.com/IDE/IDEA%E4%BD%BF%E7%94%A8.html"},{property:"og:type",content:"article"},{property:"og:title",content:"IDEA使用"},{property:"og:description",content:"IntelliJ IDEA神器使用技巧\nIDEA的基本使用：让你的IDEA有飞一般的感觉\n挑战idea社区版Javaweb开发\n无需破解，使用IDEA社区版开发Web项目\n已经足够好用的IDEA社区版"},{property:"og:image",content:"https://bajins.com/images/IDEA远程debug调试.png"},{property:"og:url",content:"https://bajins.com/IDE/IDEA%E4%BD%BF%E7%94%A8.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"IDEA使用"},{itemprop:"description",content:"IntelliJ IDEA神器使用技巧\nIDEA的基本使用：让你的IDEA有飞一般的感觉\n挑战idea社区版Javaweb开发\n无需破解，使用IDEA社区版开发Web项目\n已经足够好用的IDEA社区版"},{itemprop:"image",content:"https://bajins.com/images/IDEA远程debug调试.png"}]},regularPath:"/IDE/IDEA%E4%BD%BF%E7%94%A8.html",relativePath:"IDE/IDEA使用.md",key:"v-4106017b",path:"/IDE/IDEA%E4%BD%BF%E7%94%A8.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"建立多级项目",slug:"建立多级项目"},{level:3,title:"远程Debug",slug:"远程debug"},{level:2,title:"错误解决",slug:"错误解决"},{level:3,title:"idea无限indexing解决方法",slug:"idea无限indexing解决方法"},{level:3,title:"OutOfMemoryError",slug:"outofmemoryerror"},{level:2,title:"启动进入欢迎界面",slug:"启动进入欢迎界面"},{level:2,title:"格式化代码",slug:"格式化代码"},{level:2,title:"去掉提示重复代码",slug:"去掉提示重复代码"},{level:2,title:"去掉大小写敏感提示",slug:"去掉大小写敏感提示"},{level:2,title:"设置编码",slug:"设置编码"},{level:2,title:"设置代码补全",slug:"设置代码补全"},{level:2,title:"设置序列化ID",slug:"设置序列化id"},{level:2,title:"自定义头部注释",slug:"自定义头部注释"},{level:2,title:"自定义模板",slug:"自定义模板"},{level:3,title:"预定义模板变量",slug:"预定义模板变量"},{level:2,title:"自定义方法注释",slug:"自定义方法注释"},{level:2,title:"鼠标悬停查看注释",slug:"鼠标悬停查看注释"},{level:2,title:"注释自动缩进",slug:"注释自动缩进"},{level:2,title:"自动优化导包",slug:"自动优化导包"},{level:2,title:"热部署策略",slug:"热部署策略"},{level:2,title:"自动编译",slug:"自动编译"},{level:2,title:"去掉局部背景色",slug:"去掉局部背景色"},{level:2,title:"项目目录设置",slug:"项目目录设置"},{level:2,title:"PyCharm",slug:"pycharm"},{level:3,title:"自动导包",slug:"自动导包"},{level:3,title:"函数注释",slug:"函数注释"},{level:2,title:"GoLand",slug:"goland"},{level:2,title:"WebStorm",slug:"webstorm"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" IDEA使用 \n Flag 建立多级项目 远程Debug 错误解决 idea无限indexing解决方法 OutOfMemoryError 启动进入欢迎界面 格式化代码 去掉提示重复代码 去掉大小写敏感提示 设置编码 设置代码补全 设置序列化ID 自定义头部注释 自定义模板 预定义模板变量 自定义方法注释 鼠标悬停查看注释 注释自动缩进 自动优化导包 热部署策略 自动编译 去掉局部背景色 项目目录设置 PyCharm 自动导包 函数注释 GoLand WebStorm \n Flag \n \n https://github.com/JetBrains \n \n https://www.jetbrains.com/products.html#type=ide \n https://www.jetbrains.com/idea/download/other.html \n \n \n 简体中文专题教程  https://github.com/judasn/IntelliJ-IDEA-Tutorial \n \n \n 教育邮箱免费申请JetBrains教育许可证 \n JetBrains全系列软件激活教程激活码以及JetBrains系列软件汉化包 \n JetBrains 2019.3系列软件汉化包 \n \n \n IntelliJ IDEA神器使用技巧 \n IDEA的基本使用：让你的IDEA有飞一般的感觉 \n 挑战idea社区版Javaweb开发 \n 无需破解，使用IDEA社区版开发Web项目 \n 已经足够好用的IDEA社区版 \n \n 查看类类图及继承关系 \n \n 选中类右键 ->  Diagram  ->  Show Diagram   Ctrl + Alt + Shift + U \n \n 选中关系图中的名称，点击右键查看实现类  Show Implementations   Ctrl + Alt + B \n 选中关系图中的名称，点击右键查看父类  Show Parents   Ctrl + Alt + P \n \n \n \n \n 蓝色实线箭头是指继承关系 \n 绿色虚线箭头是指接口实现关系 \n \n \n 展开查看思维导图 \n \n \n 设置 \n \n IDEA设置.zip \n \n Export Settings \n \n 导出设置时一定取消以下选项 \n \n \n File templates \n File templates(schemes) \n Live templates \n Live templates(schemes) \n MavenVersion \n SDK Table \n \n \n File  ->  Power Save Mode (节电模式) 勾选后将会导致提示、自动加载等都不生效 \n 建立多级项目 \n \n 特别说明：每个模块中的顶级包名（java目录下的包名）一定不能一样，否则编译器会把多个模块中的代码编译相互串连。\n如： src/main/java/com/bajins/demo 这里的 com/bajins/demo 就是顶级包名，\n应该加上当前项目名 src/main/java/com/bajins/demo/admin \n \n 创建顶级项目（根项目） \n \n 点击顶部菜单栏  File  ->  New  ->  Project （或在欢迎页面点击 Create New Project ） ->  Maven （不要勾选 Create from archetype ） ->  Next \n 填写  Name （项目名）、 GroupId （包名）、 Artifact （项目名），点击  Next \n 打开  pom.xml  ，添加  <packaging>pom</packaging> （聚合工程或传递依赖用），如果有了就不用添加 \n 删除除了  pom.xml  以外的其他文件和目录（包括 src ） \n \n 创建子项目（二级项目） \n \n 在顶级项目名上点击 右键 弹出菜单（或点击顶部菜单 File ） ->  New  ->  Module  ->  Maven （不要勾选 Create from archetype ） ->  Next \n 填写  Name （项目名）、 GroupId （包名）、 Artifact （项目名） -> 点击  Next  -> 选择  Parent （上级项目）放在最后操作是因为修改  Name  时会自动变化 \n 打开  pom.xml  ，添加  <packaging>pom</packaging> （聚合工程或传递依赖用） \n 删除除了  pom.xml  以外的其他文件和目录（包括 src ） \n \n 创建子模块（最后一级项目） \n \n 如果还需要创建下级项目，重复创建子项目的操作即可 \n \n \n 创建子模块只需要重复创建子项目，但是不要删除任何其他文件和目录，也不要添加 <packaging>pom</packaging> \n \n \n 展开查看示例结构 \n demo                        # 顶级项目（根项目）\n│  pom.xml\n│  \n├─admin                     # 二级项目\n│  │  pom.xml\n│  │  \n│  ├─admin-api              # 二级项目模块\n│  │  │  pom.xml\n│  │  │  \n│  │  └─src\n│  │      ├─main\n│  │      │  ├─java\n│  │      │  └─resources\n│  │      └─test\n│  │          └─java\n│  └─admin-web              # 二级项目模块\n│      │  pom.xml\n│      │  \n│      └─src\n│          ├─main\n│          │  ├─java\n│          │  └─resources\n│          └─test\n│              └─java\n└─buyer                     # 二级项目\n    │  pom.xml\n    │  \n    ├─shop                  # 三级项目\n    │  │  pom.xml\n    │  │  \n    │  ├─shop-api           # 三级项目模块\n    │  │  │  pom.xml\n    │  │  │  \n    │  │  └─src\n    │  │      ├─main\n    │  │      │  ├─java\n    │  │      │  └─resources\n    │  │      └─test\n    │  │          └─java\n    │  └─shop-client        # 三级项目模块\n    │      │  pom.xml\n    │      │  \n    │      └─src\n    │          ├─main\n    │          │  ├─java\n    │          │  └─resources\n    │          └─test\n    │              └─java\n    └─user                  # 三级项目\n        │  pom.xml\n        │  \n        ├─user-api          # 三级项目模块\n        │  │  pom.xml\n        │  │  \n        │  └─src\n        │      ├─main\n        │      │  ├─java\n        │      │  └─resources\n        │      └─test\n        │          └─java\n        └─user-client       # 三级项目模块\n            │  pom.xml\n            │  \n            └─src\n                ├─main\n                │  ├─java\n                │  └─resources\n                └─test\n                    └─java\n 远程Debug \n 首先要设置 启动JVM远程Debug参数 \n \n 点击顶部菜单 Run 点击 Edit Configuration 按钮 -> 出现弹窗，点击 + 按钮，找到 Remote 选项。 \n 在 Name 中填入Remote项目名称，在 Host 中填IP地址，在 Port 中填端口号，在 Use Module classpath 选择远程调试的项目module，配置完成后点击OK即可 \n \n \n 启动项目时选择刚刚填的Remote项目名称 \n 错误解决 \n idea无限indexing解决方法 \n \n IntelliJ IDEA 缓存和索引介绍和清理方法 \n OutOfMemoryError \n \n idea Exception in thread \"http-apr-8080-exec-2\" java.lang.OutOfMemoryError: PermGen space \n \n \n \n 打开顶部菜单 Run  ->  Edit Configurations  -> 应用名称如 SpringBoot  ->  目标项目  ->  Configuration \n \n \n 在 Vm options 中输入 \n \n \n -Xms2048m\n-Xmx2048m\n-XX:MaxPermSize=4096m\n-Drebel.spring_plugin=true\n-Drebel.spring_mvc_plugin=true\n-Drebel.hibernate_plugin=true\n 启动进入欢迎界面 \n \n 打开 File  ->  Settings  ->  Appearance & Behavior  ->  System Settings \n \n 勾选 Startup/Shutdown 下的 Reopen last project on startup 选项 \n 格式化代码 \n \n 打开 File  ->  Settings  ->  Editor  ->  Code Style \n \n ->  General \n \n Hard wrap at  设置行宽，会在格式化的时候强制插入换行符，形成显示效果上的换行 \n Wrap on typing  在编码时，超出最大行宽，则自动换行 \n Appearance  ->  Show whitespaces  设置显示空白字符 \n \n \n Java  在右侧的  Use tab character  不勾选，设置tab为4个空格 \n ->  Java  ->  Wrapping and Braces \n \n 勾选 Keep when reformatting 下的 Line breaks  去除每次格式化时自动添加 + 符号 \n 勾选 Keep when reformatting 下的 Ensure right margin is not exceeded  自动换行 \n Comment at first column false  代码格式化的时候保证 commet 符号在代码块附近 \n \n \n ->  Java  -> 右边选择 JavaDoc \n \n Enable JavaDoc Formatting  启用JavaDoc格式化 \n Wrap at right margin  右边缘换行，当最后一个单词会超出边界时，自动换行 \n Do not wrap one line comments  同一行注释不要换行 \n Preserve line feeds  保留换行 \n \n \n \n \n \n \n File  ->  Settings  ->  Editor  ->  General  -> 右边 Soft wrap  （只会在 IDEA 的显示效果上有换行的效果，实际上并没有换行符） \n \n 设置注释不在首列（即不顶格） \n \n File  ->  Settings  ->  Editor  ->  Code Style  ->  选择语言 \n \n Code Generation  ->  Comment Code | Comment | Comments  ->  Line comment at first column  取消勾选（行注释在第一列） \n Code Generation  ->  Comment Code | Comment | Comments  ->  Block comment at first column  取消勾选（块注释在第一列） \n Wrapping and Braces  ->  Keep when reformatting  ->  Comment at first column  取消勾选（注释在第一列） \n \n \n \n \n 英文语言搜索 Comment ，中文语言搜索 注释 \n \n 缩进参考线 \n \n File  ->  Settings  ->  Appearance & Behavior  ->  Appearance  -> 右边勾选  Show indent guides \n File  ->  Settings  ->  Editor  ->  General  ->  Appearance  -> 右边勾选  Show indent guides \n \n 垂直标尺 \n \n File  ->  Settings  ->  Editor  ->  General  ->  Appearance \n \n 2018之前版本，右边勾选  Show right margin \n 2018之后版本，右边勾选  Show hard wrap guide  或  Show hard wrap and visual guides (configured in Code Style options) \n 去掉提示重复代码 \n \n 打开 File  ->  Settings  ->  Editor  ->  Inspections  ->  General \n 取消勾选 Duplincated File Template Usage 选项 \n 去掉大小写敏感提示 \n \n 打开 File  ->  Settings  ->  Editor  ->  General  ->  Code Completion \n 取消勾选 Match case ，或者 Case sensitive completion 选择 None \n 设置编码 \n \n 打开  File  ->  Settings  ->  Editor  ->  File Encodings \n \n \n Global Encoding  全局编码 \n Project Encoding  项目编码 \n Default encoding for properties files  属性文件的默认编码 \n 勾选 Transparent native-to-ascii conversion  从本地转换ASCII \n 设置代码补全 \n \n \n 快捷键： Ctrl  +  Space （可能被输入法占用） \n \n \n 修改快捷键  File  ->  Settings  ->  KeyMap  -> 搜索 Completion  ->  Code Completion \n \n 移除 Cycle Expand Word 的 Alt+/ 快捷键。 \n 在 Basic 上点击右键，去除 Ctrl+空格 绑定，然后添加 Alt+/ 快捷键。 \n \n \n \n 打开  File  ->  Settings  ->  Editor  ->  General  ->  Code Completion \n \n Autopopup code completion \n Delay \n 设置序列化ID \n \n 打开  File  ->  Settings  ->  Editor  ->  Inspections  ->  Java  ->  Serialization issues \n \n 勾选 Serializable class without 'serialVersionUID' \n 勾选 'serialVersionUID' field not declared 'private static final long' \n 自定义头部注释 \n \n 打开 File  ->  Settings  ->  Editor  ->  File and Code Templates  ->  Includes  -> 在 File Header 中添加 \n \n /**\n * \n * @Description: \n * @Author: ${USER}\n * @File: ${NAME}.java\n * @Version: 1.0.0\n * @Time: ${DATE} ${TIME}\n * @Project: ${PROJECT_NAME}\n * @Package: ${PACKAGE_NAME}\n * @Software: ${PRODUCT_NAME}\n */ \n \n \n 引用：打开 File  ->  Settings  ->  Editor  ->  File and Code Templates  ->  Files \n \n 在 Class 、 Interface 、 Enum 三个模板中的 public class ${NAME} { 上一行添加 \nparse ( \"File Header.java\" ) \n \n \n JavaScript头部注释 \n 自定义模板 \n \n 打开 File  ->  Settings  ->  Editor  ->  File and Code Templates  ->  Files  -> 在 Class 模板中粘贴 \nif   ( $ { PACKAGE_NAME }   &&   $ { PACKAGE_NAME }   !=   \"\" ) package   $ { PACKAGE_NAME } ; #end\n\n\n import  org . slf4j . Logger ; \n import  org . slf4j . LoggerFactory ; \nparse ( \"File Header.java\" ) \n\n public   class   $ { NAME }   { \n\n      //private static final Logger logger = LoggerFactory.getLogger(${NAME}.class); \n      private  Logger log  =  LoggerFactory . getLogger ( this . getClass ( ) ) ; \n     \n } \n 预定义模板变量 \n \n https://www.jetbrains.com/help/idea/file-template-variables.html \n https://www.jetbrains.com/help/idea/template-variables.html \n \n \n \n \n 变量 \n 说明 \n \n \n \n \n ${DATE} \n 当前系统日期 \n \n \n ${DAY} \n 当前月的日期 \n \n \n ${HOUR} \n 当前时刻 \n \n \n ${MINUTE} \n 当前分钟 \n \n \n ${MONTH_NAME_FULL} \n 月份全称，例如: January, February, etc. \n \n \n ${MONTH_NAME_SHORT} \n 月份名称的前3个字母，例如: Jan, Feb, etc. \n \n \n ${MONTH} \n 当前月份 \n \n \n ${NAME} \n 在创建文件期间在新建文件对话框中指定的文件名称 \n \n \n ${PACKAGE_NAME} \n 当前所在包名 \n \n \n ${PRODUCT_NAME} \n 将被创建文件所在的IDE名称 \n \n \n ${PROJECT_NAME} \n 当前项目的名称 \n \n \n ${TIME} \n 当前系统时间 \n \n \n ${USER} \n 系统的当前用户登录名称 \n \n \n ${YEAR} \n 当前年份 \n 自定义方法注释 \n \n 默认方法注释快捷键： /**  +  Enter \n Template text \n \n ** \n  *  \n  *  \n $ params $ \n  *  @ return   $ ruturns $ \n  *   @Description  \n  *   @author  claer bajins . com\n  *   @date   $ date $   $ time $ \n  * / \n \n \n @param 参数获取代码Groovy脚本 \n \n // 使用tab作为参数后缀间隔符 \n groovyScript ( \"def result=''; def params=\\\" ${ _1 } \\\".replaceAll('[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]', '').split(',').toList(); for(i = 0; i < params.size(); i++) {result+=' * @param ' + params[i]+'\\\\b'+ ((i < params.size() - 1) ? '\\\\n    ' : '')}; return result\" ,   methodParameters ( ) ) \n // 使用一个空格作为参数后缀间隔符，格式化时可以自动把所有参数对齐（推荐） \n groovyScript ( \"def result=''; def params=\\\" ${ _1 } \\\".replaceAll('[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]', '').split(',').toList(); for(i = 0; i < params.size(); i++) {result+=' * @param ' + params[i]+' '+ ((i < params.size() - 1) ? '\\\\n    ' : '')}; return result\" ,   methodParameters ( ) ) \n \n \n @return 参数获取代码Groovy脚本 \n \n // 如果有返回参数使用一个空格作为参数后缀间隔符 \n groovyScript ( \"def result=\\\" ${ _1 } \\\"; if(result == 'void'){return '';}else{return result+' ';}\" ,   methodReturnType ( ) ) \n \n \n 使用时，直接在方法上输入 / 加上你的 Abbreviation 名字，再按 Tab 键即可获取方法上的参数 \n \n \n \n 示例 \n 鼠标悬停查看注释 \n \n 打开 File  ->  Settings  ->  Editor  ->  General \n 勾选 Other 下的 Show quick documentation on mouse move 选项 \n 在 Other 下的 Tooltip delay 输入鼠标悬停时间单位 milliseconds(毫秒) \n 注释自动缩进 \n \n 注释默认靠左，可能代码前会有很大一段空格 \n \n \n 打开 File  ->  Settings  ->  Editor  ->  Code Style  ->  JAVA 、 HTML 、 JavaScript 、 XML 、 TypeScript 、 Groovy 、 Kotlin \n 右边选择 Code Generation  -> 取消勾选 Comment Code 下的 Line comment at first column 和 Block comment at first column \n 自动优化导包 \n \n 打开 File  ->  Settings  ->  Editor  ->  General  ->  Auto Import \n 勾选 Add unambiguous imports on the fly 和 Optimize imports on the fly(for current project) 两个选项 \n \n \n Add unambiguous imports on the fly  自动帮我们优化导入的包，比如自动去掉一些没有用到的包。 \n \n \n Optimize imports on the fly(for current project)  自动帮我们导入需要用到的包。\n但是对于同名的包，需要手动 Alt  +  Enter 进行导入。 \n 热部署策略 \n \n Updating Applications on Application Servers \n 如何在 IntelliJ IDEA 中为 Spring Boot 应用实现热部署 \n \n \n 打开顶部菜单 Run  ->  Edit Configurations  -> 应用名称如 SpringBoot  ->  目标项目  ->  Configuration \n 选择 Spring Boot  ->  Update classes and resources 下的 On 'Update' action 和 On frame deactivation 两个选项 \n \n \n On 'Update' action 当代码改变的时候做什么 \n \n \n On frame deactivation 当失去焦点，比如最小化IDEA窗口的时候做什么 \n 自动编译 \n 动态 \n \n 同时按住 Ctrl  +  Shift  +  A 或者 Ctrl  +  Shift  +  Alt  +  / ，然后点击 Registry ，勾选自动编译并调整延时参数。 \n \n \n compiler.automake.allow.when.app.running 自动编译（动态） \n compiler.automake.trigger.delay 触发自动生成以响应文件系统事件之前的延迟（单位毫秒），默认300 \n compiler.automake.build.while.idle.timeout 应用不活跃期，在此期间，如需自动触发，将自动构建，默认60000 \n compiler.automake.postpone.when.idle.less.than IDE处于空闲状态且少于指定毫秒数，则自动构建将被推迟，默认3000 \n compiler.document.save.trigger.delay 触发保存以响应文档更改之前的延迟（单位毫秒），默认1500 \n compiler.build.report.statistics 显示构建器的执行时间 \n compiler.document.save.enabled 是否启用项目保存以响应文档更改 \n compiler.external.javac.keep.alive.timeout 如果在指定的时间段或更长时间内未使用，则IDE将关闭缓存的javac编译过程 \n \n \n 修改完成后直接敲回车即保存 \n \n 静态 \n \n 打开 File  ->  Settings  ->  Build, Execution, Deployment  ->  Compiler \n 勾选 Build project automatically 自动构建项目，仅在未运行/调试时有效，静态 \n 勾选 Complie independent modules in parallel 并行编译独立模块，可能需要更大的堆大小 \n 去掉局部背景色 \n 去掉SQL检测 \n \n 打开 File  ->  Settings  ->  Editor  ->  Inspections  ->  SQL \n 取消勾选 No data sources configured 如果没有，则提示创建一个数据源。 \n 取消勾选 SQL dialect detection 为 <Generic> 方言中的文件检测最匹配的SQL方言。 \n \n 去掉背景 \n \n 打开 File  ->  Settings  ->  Editor  ->  Color Scheme  ->  General  ->  Code \n 点击 Injected language fragment ，去掉最右边的 Background 选项。 \n 项目目录设置 \n PyCharm \n Python Script自定义头注释 \n \n 预定义模板变量 \n \n \n 在 File  ->  Settings  ->  Editor  ->  File and Code Templates  ->  Includes  ->  File Header 中添加 \n \n #!/usr/bin/env python \n-*- encoding: utf-8 -*- \n\n@Description:  \n@PreInstall:  \n@Author : ${USER} \n@File : ${NAME}.py \n@Version: 1.0.0 \n@Time : ${DATE} ${TIME} \n@Project: ${PROJECT_NAME} \n@Package: ${PACKAGE_NAME} \n@Software: ${PRODUCT_NAME} \n \n \n 引用：打开 File  ->  Settings  ->  Editor  ->  File and Code Templates  ->  Files \n \n 在 Python Script 模板中第一行引用： #parse(\"File Header\") \n 自动导包 \n \n 打开 File  ->  Settings  ->  Editor  ->  General  ->  Auto Import \n \n 勾选 Python  ->  Show import popup \n 函数注释 \n \n 打开  File  ->  Settings  ->  Tools  ->  Python Integrated Tools \n \n \n Docstring format  选择格式：默认 Plain （空的）、 Epytext （Python2）、 reStructuredText 、 NumPy 、 Google \n Docstrings  ->  Analyze Python code in docstrings  分析文档字符串中的python代码 \n Render external documentation for stdlib  渲染stdlib的外部文档 \n \n \n 默认函数注释快捷键： \"\"\"  +  Enter \n \n \n 注意：如果使用函数注释时无法映射函数参数，在函数名中键入数遍光标，左上角亮起小灯泡，\n点击小灯泡（或者使用快捷键 Alt  +  Enter ），再点击 Insert documentation string stub 选择注释格式 \n GoLand \n Go File自定义头注释 \n \n 预定义模板变量 \n \n \n 在 File  ->  Settings  ->  Editor  ->  File and Code Templates  ->  Includes  ->  File Header 中添加 \n \n /**\n * \n * @Description: \n * @Author: ${USER}\n * @File: ${NAME}.go\n * @Version: 1.0.0\n * @Time: ${DATE} ${TIME}\n * @Project: ${PROJECT_NAME}\n * @Package: ${PACKAGE_NAME}\n * @Software: ${PRODUCT_NAME}\n */ \n \n \n 引用：打开 File  ->  Settings  ->  Editor  ->  File and Code Templates  ->  Files \n 在 Go File 模板中第一行引用： #parse(\"File Header\") \n WebStorm \n JavaScript File自定义头注释 \n \n 预定义模板变量 \n \n \n 在 File  ->  Settings  ->  Editor  ->  File and Code Templates  ->  Includes  ->  File Header 中添加 \n \n /**\n * \n * @Description: \n * @Author: ${USER}\n * @File: ${NAME}.js\n * @Version: 1.0.0\n * @Time: ${DATE} ${TIME}\n * @Project: ${PROJECT_NAME}\n * @Package: ${PACKAGE_NAME}\n * @Software: ${PRODUCT_NAME}\n */ \n \n \n 引用：打开 File  ->  Settings  ->  Editor  ->  File and Code Templates  ->  Files \n \n 在 JavaScript File 模板中第一行引用： #parse(\"File Header.js\") \n \n \n 默认函数注释快捷键： /**  +  Enter \n \n",createdTime:1761814324e3},{title:"IDE",frontmatter:{description:"https://github.com/apache/netbeans\nhttps://github.com/atom\nhttps://github.com/eclipse-theia/theia\n    https://theia-ide.org\nhttps://github.com/VSCodium/vscodium\nhttps://github.com/pulsar-edit\nhttps://github.com/Moonshine-IDE/Moonshine-IDE\nhttps://github.com/lapce(https://kate-editor.org)\nhttps://github.com/zed-industries\nhttps://github.com/face-hh/griddycode\nhttps://github.com/capistrano/sshkit\nIDE的仪表盘 https://github.com/wakatime\n图形转代码 https://www.paintcodeapp.com\nGoIDE https://github.com/visualfc/liteide\nhttps://sourceforge.net/projects/liteide\n网络分析 https://github.com/gephi\nAndroid代码编辑器 https://github.com/massivemadness/Squircle-CE\n十六进制编辑器 https://github.com/WerWolv/ImHex\n同步协作编辑 https://github.com/ethersync/ethersync",meta:[{name:"twitter:title",content:"IDE"},{name:"twitter:description",content:"https://github.com/apache/netbeans\nhttps://github.com/atom\nhttps://github.com/eclipse-theia/theia\n    https://theia-ide.org\nhttps://github.com/VSCodium/vscodium\nhttps://github.com/pulsar-edit\nhttps://github.com/Moonshine-IDE/Moonshine-IDE\nhttps://github.com/lapce(https://kate-editor.org)\nhttps://github.com/zed-industries\nhttps://github.com/face-hh/griddycode\nhttps://github.com/capistrano/sshkit\nIDE的仪表盘 https://github.com/wakatime\n图形转代码 https://www.paintcodeapp.com\nGoIDE https://github.com/visualfc/liteide\nhttps://sourceforge.net/projects/liteide\n网络分析 https://github.com/gephi\nAndroid代码编辑器 https://github.com/massivemadness/Squircle-CE\n十六进制编辑器 https://github.com/WerWolv/ImHex\n同步协作编辑 https://github.com/ethersync/ethersync"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/IDE/"},{property:"og:type",content:"article"},{property:"og:title",content:"IDE"},{property:"og:description",content:"https://github.com/apache/netbeans\nhttps://github.com/atom\nhttps://github.com/eclipse-theia/theia\n    https://theia-ide.org\nhttps://github.com/VSCodium/vscodium\nhttps://github.com/pulsar-edit\nhttps://github.com/Moonshine-IDE/Moonshine-IDE\nhttps://github.com/lapce(https://kate-editor.org)\nhttps://github.com/zed-industries\nhttps://github.com/face-hh/griddycode\nhttps://github.com/capistrano/sshkit\nIDE的仪表盘 https://github.com/wakatime\n图形转代码 https://www.paintcodeapp.com\nGoIDE https://github.com/visualfc/liteide\nhttps://sourceforge.net/projects/liteide\n网络分析 https://github.com/gephi\nAndroid代码编辑器 https://github.com/massivemadness/Squircle-CE\n十六进制编辑器 https://github.com/WerWolv/ImHex\n同步协作编辑 https://github.com/ethersync/ethersync"},{property:"og:url",content:"https://bajins.com/IDE/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"IDE"},{itemprop:"description",content:"https://github.com/apache/netbeans\nhttps://github.com/atom\nhttps://github.com/eclipse-theia/theia\n    https://theia-ide.org\nhttps://github.com/VSCodium/vscodium\nhttps://github.com/pulsar-edit\nhttps://github.com/Moonshine-IDE/Moonshine-IDE\nhttps://github.com/lapce(https://kate-editor.org)\nhttps://github.com/zed-industries\nhttps://github.com/face-hh/griddycode\nhttps://github.com/capistrano/sshkit\nIDE的仪表盘 https://github.com/wakatime\n图形转代码 https://www.paintcodeapp.com\nGoIDE https://github.com/visualfc/liteide\nhttps://sourceforge.net/projects/liteide\n网络分析 https://github.com/gephi\nAndroid代码编辑器 https://github.com/massivemadness/Squircle-CE\n十六进制编辑器 https://github.com/WerWolv/ImHex\n同步协作编辑 https://github.com/ethersync/ethersync"}]},regularPath:"/IDE/",relativePath:"IDE/README.md",key:"v-cae23b10",path:"/IDE/",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"代码跟踪分析/静态分析",slug:"代码跟踪分析-静态分析"},{level:2,title:"版本控制",slug:"版本控制"},{level:2,title:"Online IDE",slug:"online-ide"},{level:2,title:"测试",slug:"测试"},{level:2,title:"数据库",slug:"数据库"},{level:3,title:"数据库建模",slug:"数据库建模"},{level:2,title:"原型设计",slug:"原型设计"},{level:2,title:"思维导图",slug:"思维导图"},{level:2,title:"抓包工具",slug:"抓包工具"},{level:2,title:"语言服务器协议",slug:"语言服务器协议"},{level:2,title:"项目管理",slug:"项目管理"},{level:2,title:"IDEA与Eclipse对应快捷键",slug:"idea与eclipse对应快捷键"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" IDE \n Flag 代码跟踪分析/静态分析 版本控制 Online IDE 测试 数据库 数据库建模 原型设计 思维导图 抓包工具 语言服务器协议 项目管理 IDEA与Eclipse对应快捷键 \n Flag \n \n https://github.com/topics/ide \n https://github.com/topics/devops \n \n \n https://github.com/apache/netbeans \n https://github.com/atom \n https://github.com/eclipse-theia/theia \n \n https://theia-ide.org \n \n \n https://github.com/VSCodium/vscodium \n https://github.com/pulsar-edit \n https://github.com/Moonshine-IDE/Moonshine-IDE \n https://github.com/lapce (https://kate-editor.org) \n https://github.com/zed-industries \n https://github.com/face-hh/griddycode \n https://github.com/capistrano/sshkit \n IDE的仪表盘  https://github.com/wakatime \n 图形转代码  https://www.paintcodeapp.com \n GoIDE  https://github.com/visualfc/liteide \n https://sourceforge.net/projects/liteide \n 网络分析  https://github.com/gephi \n Android代码编辑器  https://github.com/massivemadness/Squircle-CE \n 十六进制编辑器  https://github.com/WerWolv/ImHex \n 同步协作编辑  https://github.com/ethersync/ethersync \n \n Dev Tools/DevOps/CI/CD/Developer Experience (DX) \n \n https://github.com/topics/developer-tools \n https://github.com/seifrajhi/awesome-platform-engineering-tools \n 转编译  https://github.com/topics/transpiler \n \n \n https://whats.new/shortcuts \n https://github.com/xlabs-club \n 代码搜索和替换  https://github.com/comby-tools/comby \n https://github.com/dsznajder/vscode-es7-javascript-react-snippets \n 工具  https://github.com/864381832/xJavaFxTool \n https://github.com/baiy/Ctool \n https://github.com/homeinfra-org/infra \n Microsoft Store开发人员工具 \n WakaTime  https://github.com/muety/wakapi \n 代码助手AI  https://github.com/codota/tabnine \n \n https://www.tabnine.com \n \n \n https://github.com/ravenscroftj/turbopilot \n https://github.com/new-ai-company/ide \n https://github.com/e2b-dev/e2b \n https://github.com/veler/DevToys \n https://github.com/DevToys-app/DevToys \n https://github.com/microsoft/PowerToys \n https://github.com/VUEngine \n https://github.com/kiteco \n https://github.com/atlassian \n https://github.com/salesforce/CodeTF \n https://github.com/THUDM/CodeGeeX2 \n https://github.com/bigcode-project \n https://github.com/kuafuai/DevOpsGPT \n https://github.com/sweepai/sweep \n https://github.com/nlpxucan/WizardLM \n https://github.com/Pythagora-io/gpt-pilot \n https://github.com/OpenBMB/ChatDev \n https://github.com/KillianLucas/open-interpreter \n https://github.com/deepseek-ai/DeepSeek-Coder \n https://github.com/Codium-ai \n https://cursor.sh \n \n https://github.com/getcursor/cursor \n https://github.com/yeongpin/cursor-free-vip \n https://github.com/onlook-dev/onlook \n \n \n https://github.com/KillianLucas/open-interpreter \n https://github.com/DoubleTechnologies \n https://github.com/OpenInterpreter/open-interpreter \n https://github.com/OpenDevin/OpenDevin \n https://github.com/stitionai/devika \n https://github.com/aixcoder-plugin/aiXcoder-7B \n https://github.com/ibm-granite \n https://github.com/triton-lang/triton \n https://github.com/bravekingzhang/gpt-frontend-code-gen \n https://github.com/nutlope/llamacoder \n https://github.com/clinebot/cline \n https://github.com/we0-dev/we0 \n https://www.augmentcode.com \n https://github.com/voideditor/void \n https://github.com/All-Hands-AI/OpenHands \n https://github.com/mendableai/open-lovable \n 代码搜索  https://github.com/sourcebot-dev/sourcebot \n https://github.com/oldjs/web-code-agent \n Git提交助手  https://github.com/Undertone0809/gcop \n 突出显示重要代码  https://github.com/novoselrok/glance \n 代码转换  https://github.com/JustAIGithub/AI-Code-Convert \n https://github.com/ritz078/transform \n DevOps指南  https://github.com/Tikam02/DevOps-Guide \n https://github.com/annfelix/DEVOPS-WORLD \n 需求生成文档  https://github.com/geekan/MetaGPT \n SQL助手AI  https://github.com/chat2db/Chat2DB \n https://github.com/defog-ai/sqlcoder \n https://github.com/SuperDuperDB/superduperdb \n https://github.com/vanna-ai/vanna \n https://github.com/zhangchenchen/query_gpt \n 代码搜索  https://github.com/ast-grep/ast-grep \n 可视化前端设计  https://github.com/webstudio-is/webstudio \n https://github.com/SawyerHood/draw-a-ui \n 前端远程调试  https://github.com/HuolalaTech/page-spy-web \n 项目答疑  https://github.com/petercat-ai/petercat \n 提示生成APP  https://github.com/sing1ee/deepseekCoder \n 代码审查  https://github.com/mimo-x/Code-Review-GPT-Gitlab \n https://github.com/apps/gemini-code-assist \n \n https://codeassist.google \n \n \n https://github.com/lintsinghua/XCodeReviewer \n \n \n 技术|什么是 CI/CD？ \n \n \n CI(Continuous Integration) 持续集成概念 \n CD(Continuous Deployment) 是持续部署 \n CD(Continuous delivery) 交持续交付 \n \n \n CI/CD优点是，重复的工作用自动化来代替、减少时间成本、版本发布时间减短了。\n当开发每天会提交多次代码到主干上，会做一些重复性的动作时，就可以用持续集成环境来操作。 \n \n \n CI services \n https://github.com/milanm/DevOps-Roadmap \n https://github.com/opencpu \n https://github.com/circleci \n https://github.com/codeship \n https://github.com/gocd \n https://github.com/travis-ci \n https://github.com/wercker \n https://github.com/codemagic-ci-cd \n https://www.acme.com/software \n https://gitee.com/jianmu-dev \n https://github.com/earthly/earthly \n https://github.com/nucleuscloud/neosync \n https://github.com/HariSekhon/DevOps-Bash-tools \n 代码跟踪分析/静态分析 \n \n https://github.com/topics/static-analysis \n https://github.com/analysis-tools-dev/static-analysis \n \n \n https://github.com/super-linter/super-linter \n https://github.com/checkstyle/checkstyle \n https://github.com/walkmod \n https://github.com/SonarSource \n \n https://sonarcloud.io \n \n \n https://github.com/returntocorp/semgrep \n https://github.com/CoderDream/refactoring-improving-the-design-of-existing-code \n https://github.com/pmd/pmd \n https://github.com/snyk/cli \n https://semmle.com \n \n https://lgtm.com \n \n \n https://www.openhub.net \n https://github.com/Checkmarx \n https://github.com/codacy \n https://github.com/veracode \n https://bestpractices.coreinfrastructure.org \n https://github.com/htmlhint/HTMLHint \n https://github.com/deepscan \n Gerrit  https://github.com/GerritCodeReview/gerrit \n \n https://www.gerritcodereview.com \n https://gerrit.asterisk.org/Documentation/index.html \n \n \n C/C++  https://dwheeler.com/flawfinder \n .NET  https://github.com/security-code-scan/security-code-scan \n 计算代码行数  https://github.com/AlDanial/cloc \n 代码覆盖率  https://github.com/codedx/codepulse \n https://github.com/jacoco/jacoco \n 代码审查  https://github.com/phacility/phabricator \n Fortify、Checkmarx、Coverity、Klocwork、CoBOT、CodeSonar、Polyspace \n https://www.jarchitect.com \n https://sourceforge.net/projects/hammurapi \n 性能跟踪分析  https://github.com/topics/trace \n https://github.com/brendangregg \n \n https://github.com/opendtrace \n https://sourceware.org \n https://valgrind.org \n 动态追踪技术漫谈 \n \n \n https://github.com/jemalloc \n https://github.com/datafuselabs \n https://github.com/bpftrace/bpftrace \n https://github.com/iovisor/bcc \n https://github.com/phodal/coca \n https://github.com/cilium/cilium \n https://github.com/parca-dev/parca \n https://github.com/coroot/coroot \n https://github.com/hengyoush/kyanos \n https://github.com/aquasecurity/tracee \n https://github.com/keyval-dev/odigos \n https://github.com/cilium/pwru \n https://github.com/deepflowys/deepflow \n https://github.com/Netflix/bpftop \n https://github.com/Sysinternals/SysmonForLinux \n https://github.com/tarsal-oss/kflowd \n https://github.com/netobserv/netobserv-ebpf-agent \n https://github.com/apache/skywalking-rover \n https://github.com/rubrikinc/wachy \n https://github.com/iovisor/ply \n https://github.com/kindlingproject/kindling \n https://github.com/Exein-io/pulsar \n 版本控制 \n \n https://www.perforce.com \n https://www.mercurial-scm.org \n https://www.nongnu.org/cvs \n https://bazaar.canonical.com \n https://nest.pijul.com/pijul/pijul \n \n https://pijul.org \n \n \n https://www.plasticscm.com \n https://sourcehut.org \n \n https://sr.ht/~sircmpwn/sourcehut \n \n \n https://pagure.io \n https://github.com/bitkeeper-scm/bitkeeper \n https://github.com/jj-vcs/jj \n \n https://steveklabnik.github.io/jujutsu-tutorial \n https://github.com/jj-for-everyone/jj-for-everyone.github.io \n Online IDE \n \n Web(Cloud)IDE \n \n \n https://github.com/topics/cloud-ide \n https://github.com/styfle/awesome-online-ide \n https://github.com/cdr/code-server \n https://github.com/Microsoft/monaco-editor \n https://github.com/DTStack/molecule \n \n \n https://github.com/WebIDEorg/WebIDE-OS \n https://github.com/os-js \n \n 在线运行代码 \n \n https://github.com/codemirror/codemirror \n \n \n https://www.onlinegdb.com \n https://wandbox.org \n https://github.com/mattgodbolt/compiler-explorer \n http://pythontutor.com \n https://codepen.io \n https://github.com/wanglin2/code-run \n https://github.com/jsfiddle \n https://jsrun.net \n https://www.sololearn.com \n https://www.figma.com \n https://www.browserstack.com \n https://responsivedesignchecker.com \n http://ami.responsivedesign.is \n https://css-grid-layout-generator.pw \n https://webcode.tools/css-generator \n https://css3generator.com \n https://petercollingridge.appspot.com/svg-optimiser \n https://jakearchibald.github.io/svgomg \n https://github.com/Mohamed99ayman/Online-Compiler \n https://code.xueersi.com/ide/code/1 \n https://github.com/ajaxorg/ace \n https://github.com/asciinema \n https://github.com/judge0/ide \n \n \n 数学计算器  https://www.desmos.com \n 测试 \n \n https://github.com/topics/testing \n https://github.com/topics/test-automation \n https://github.com/jumper2014/awesome-test-tool \n \n \n https://github.com/mountain-loop/yaak \n https://github.com/usebruno/bruno \n https://github.com/hoppscotch/hoppscotch \n \n https://hoppscotch.io \n https://github.com/ling7334/hoppscotch-backend-go \n \n \n https://github.com/apache/jmeter \n \n https://github.com/Blazemeter \n Apache Benchmark  apt-get install apache2-utils  /  yum install httpd-tools \n https://www.apachehaus.com \n https://www.apachelounge.com \n BitNami WAMP Stack \n WampServer \n XAMPP \n \n \n https://github.com/postmanlabs \n \n https://www.getpostman.com/apps \n \n https://dl.pstmn.io/download/latest/win64 \n \n \n https://github.com/topics/postman \n https://github.com/hlmd/Postman-cn \n https://github.com/apigee \n 使用Postman调试SpringBoot程序发现返回值格式是xml \n postman 可以做接口并发测试么？ \n \n \n https://github.com/Kong/insomnia \n https://github.com/Julien-cpsn/ATAC \n https://github.com/httpie/httpie \n Paw  https://github.com/luckymarmot \n https://github.com/SmartBear/soapui \n \n https://www.soapui.org \n SoapUI 入门指南 \n SoapUI接口测试工具最全实用教程 \n \n \n https://github.com/metersphere \n https://github.com/katalon-studio \n \n https://github.com/katalon-studio-samples \n \n \n https://github.com/wisdom-projects/rest-client \n https://gitee.com/itestwork/itest \n https://github.com/seagull1985/LuckyFrameClient \n https://github.com/zyanycall/stressTestPlatform \n https://github.com/postwoman-team/postwoman \n \n https://github.com/logoove/postwoman \n \n \n https://github.com/Postcatlab/postcat \n https://github.com/Apipost-Team \n \n https://www.apipost.cn \n \n \n https://github.com/apifox \n \n https://gitee.com/apifox \n https://www.apifox.cn \n \n \n https://github.com/yapi-pro/yapi \n https://github.com/sosoapi/sosoapi-web \n https://www.apizza.net \n https://github.com/eolinker \n \n https://www.eolink.com \n https://github.com/APIParkLab/APIPark \n https://github.com/airplayx/eoLinker \n \n \n https://github.com/feisuanyz/SoFlu-adp \n https://github.com/httprunner \n https://github.com/arextest \n https://github.com/codes-1/icodes \n \n https://gitee.com/xiaoming1q/icodes \n \n \n https://github.com/karatelabs/karate \n https://www.httpmaster.net \n https://github.com/Inflectra \n https://github.com/assertible \n https://github.com/grafana/k6 \n 命令行  https://github.com/darrenburns/posting \n vREST  https://github.com/Optimizory \n LoadRunner  https://www.microfocus.com/zh-cn/products#all-L \n \n https://liushilive.github.io/github_exercise_performance_testing \n 性能测试入门——LoadRunner使用初探 \n \n \n QTP  https://www.microfocus.com/zh-cn/products#all-U \n IDEA 的 Tools 菜单下有 HTTP Client 可替代postman \n 压测  https://github.com/EZLippi/WebBench \n https://github.com/perusio/httpload \n https://github.com/JoeDog/siege \n 模拟API服务  https://github.com/mockoon/mockoon \n https://github.com/wiremock \n https://github.com/ray-d-song/faker-server \n https://github.com/dreamhead/moco \n https://github.com/typicode/json-server \n https://github.com/miragejs/miragejs \n https://github.com/easy-mock \n https://github.com/spectolabs/hoverfly \n https://github.com/requestly \n https://github.com/couriourc/mock_server \n https://github.com/stoplightio \n https://github.com/bbyars/mountebank \n https://github.com/mock-server \n https://apisimulator.io \n https://beeceptor.com \n \n \n mac paw  https://github.com/luckymarmot \n https://github.com/f0ng/poc2jar \n https://github.com/ffffffff0x/BerylEnigma \n \n ChaosTesting混沌测试/线性测试 \n \n https://github.com/chaosblade-io/chaosblade \n https://github.com/chaos-mesh/chaos-mesh \n https://github.com/pingcap/chaos \n https://github.com/jepsen-io \n https://github.com/anishathalye/porcupine \n 数据库 \n \n https://github.com/search?q=database+tool \n https://github.com/search?q=SQL+client \n https://github.com/topics/database-gui \n https://gitee.com/explore/dbmanager \n https://github.com/mgramin/awesome-db-tools \n \n \n https://github.com/slashbaseide/slashbase \n https://github.com/dbeaver/dbeaver \n \n https://dbeaver.io \n https://dbeaver.com/download/enterprise \n https://github.com/moshowgame/dbeaver-driver-all \n https://github.com/yuyan-sec/DBeaver-decrypter \n https://bugdays.com/dbeaver-password-decrypter \n https://github.com/Tatsh/dbeaver-creds \n https://github.com/geekyouth/crack-dbeaver-password \n DBeaver Enterprise 21.0 企业版激活方法 \n https://github.com/ww-xb/dbeaver-crack \n \n https://www.52pojie.cn/thread-1668629-1-1.html \n \n \n https://gitee.com/callisto_x/de-ag \n \n https://juejin.cn/post/7182192463157657656 \n \n \n https://github.com/zufari4/dbeaver-license \n https://github.com/wgzhao/dbeaver-agent \n https://github.com/oiltea/dbeaver-license \n删除jre目录，安装jdk11或以上版本，把以下两行添加到`-vmargs`之前 \n-vm\nC:\\Program Files\\Java\\jdk-17.0.2\\bin\n解压dbeaver-agent-latest.zip到dbeaver目录，添以下行到最后 \n-javaagent:./dbeaver-agent.jar\n -Dlm.debug.mode = true \n \n \n https://github.com/dbgate/dbgate \n https://github.com/bytebase/bytebase \n https://github.com/chartbrew/chartbrew \n https://github.com/lightdash/lightdash \n https://www.jetbrains.com/zh-cn/datagrip \n https://www.navicat.com \n \n https://github.com/search?q=navicat \n https://github.com/HyperSine \n https://github.com/Abeautifulsnow/navicat-premium-crack \n https://github.com/LiJunYi2/navicat-keygen-16V \n https://gitlab.com/ajiajishu/navicat-keygen-16V \n \n \n https://github.com/team-ide/teamide \n https://fishcodelib.com/Database.htm \n https://codeberg.org/sql-workbench/workbench \n \n https://www.sql-workbench.eu \n \n \n https://www.heidisql.com \n SQL分析工具  https://github.com/timeseries/qstudio \n 关系数据浏览  https://github.com/Wisser/Jailer \n https://sourceforge.net/projects/squirrel-sql \n \n http://www.squirrelsql.org \n \n \n https://www.activedbsoft.com \n https://www.razorsql.com \n https://www.aquafold.com \n https://github.com/TablePlus \n https://github.com/ocelot-inc/ocelotgui \n https://github.com/beekeeper-studio/beekeeper-studio \n Python 自动提示 https://github.com/dbcli \n \n https://github.com/okbob/pspg \n \n \n https://github.com/sqlectron/sqlectron-gui \n https://github.com/dbkangaroo/kangaroo \n https://github.com/Fabio286/antares \n https://www.devart.com/products.html#ide \n Web的SQL编辑器  https://github.com/sqlpad/sqlpad \n https://github.com/OmniDB/OmniDB \n https://github.com/webyog/sqlyog-community \n https://github.com/directus/directus \n https://github.com/drawdb-io/drawdb \n https://github.com/clidey/whodb \n 命令行  https://github.com/danvergara/dblab \n https://github.com/xo/usql \n \n \n 构建数据库文档  https://github.com/schemaspy/schemaspy \n 数据库转excel  https://github.com/nocodb/nocodb \n \n Redis \n \n https://github.com/topics/redis-client \n https://github.com/search?q=redis-manager \n \n \n https://github.com/uglide/RedisDesktopManager \n \n https://github.com/kanyways/rdm \n https://github.com/lework/RedisDesktopManager-Windows \n https://github.com/FuckDoctors/rdm-builder \n https://github.com/nitzzzu/RedisDesktopManager \n \n \n https://github.com/qishibo/AnotherRedisDesktopManager \n https://github.com/fastogt/fastonosql \n https://github.com/fuyoo/bs-redis-desktop-client \n https://github.com/patrikx3/redis-ui \n https://github.com/ekvedaras/redis-gui \n https://github.com/tiny-craft/tiny-rdm \n https://github.com/taskforcesh/bullmq \n 数据库建模 \n \n https://github.com/topics/diagram-editor \n \n \n https://www.heidisql.com \n https://gitee.com/robergroup/pdmaner \n PowerDesigner  https://www.sap.com/products/powerdesigner-data-modeling-tools.html \n http://www.borland.com/together \n https://www.toadworld.com/products/toad-data-modeler \n https://dbschema.com \n https://www.vertabelo.com \n https://www.dbdesigner.net \n https://modelright.com \n https://sourceforge.net/projects/mogwai \n https://editor.ponyorm.com \n https://github.com/pgmodeler/pgmodeler \n 原型设计 \n \n https://github.com/topics/prototyping \n https://github.com/topics/ux \n https://github.com/topics/ui \n https://github.com/topics/design \n https://github.com/topics/ux-design \n https://uxtools.co/survey/2023 \n \n \n https://github.com/penpot/penpot \n http://chuangzaoshi.com/designtool \n https://icons8.com/lunacy \n https://www.invisionapp.com \n https://proto.io \n http://www.protopie.cn \n https://github.com/framer \n https://mastergo.com \n https://github.com/figma \n https://dribbble.com \n https://www.uimaker.com \n \n \n 调色板  https://github.com/eigenmiao/Rickrack \n \n 本地客户端 \n \n https://www.axure.com \n https://balsamiq.com/wireframes/desktop \n https://www.adobe.com/products/xd.html \n https://www.justinmind.com \n https://www.carettasoftware.com/guidesignstudio \n https://modao.cc \n https://lanhuapp.com \n https://www.mockplus.cn/rp-event \n https://origami.design \n \n https://github.com/facebookarchive/origami \n \n \n https://github.com/evolus/pencil \n https://kiteapp.co \n 思维导图 \n \n Unified Modeling Language (UML) 又称统一建模语言或标准建模语言，是始于1997年一个OMG标准，\n它是一个支持模型化和软件系统开发的图形化语言，为软件开发的所有阶段提供模 型化和可视化支持，包括由需求分析到规格，到构造和配置。\n面向对象的分析与设计(OOA&D，OOAD)方法的发展在 80 年代末 至 90 年代中出现了一个高潮，UML 是这个高潮的产物。\n它不仅统一了Booch、Rumbaugh和Jacobson的表示方法，而且对其作了进一步的发展，并最终统一为大众所接受的标准建模语言。 \n \n \n 软件开发的时候，系统设计师/系统架构师给出 UML 设计图， 程序员将来要根据 UML 设计图进行编码/开发。 \n \n \n https://github.com/systems-modeling \n https://github.com/simonbrowndotje/c4model \n https://www.omg.org/spec/RAAML \n \n \n https://github.com/jgraph/drawio \n \n https://github.com/jgraph/drawio-desktop \n https://app.diagrams.net \n \n \n https://github.com/umlet/umlet \n https://github.com/staruml \n https://www.processon.com \n https://gitmind.cn \n https://www.omnigroup.com/omnigraffle \n https://github.com/terrastruct/d2 \n https://github.com/wanglin2/mind-map \n https://github.com/plantuml/plantuml \n https://github.com/mermaid-js/mermaid \n https://github.com/archimatetool/archi \n https://github.com/ModelioOpenSource/Modelio \n \n 本地客户端 \n \n Mind Mapper官方安装包 \n https://github.com/xmindltd \n \n XMind 8官方下载 \n https://github.com/qy527145/crack \n \n \n MindManager 2019 \n Mindjet MindManager官方安装包x64 \n MindMaster \n Ximd ZEN \n iMindMap \n MindGenius \n iMindQ \n SimpleMind \n https://www.microsoft.com/zh-cn/microsoft-365/visio \n 抓包工具 \n \n https://github.com/topics/packets \n https://github.com/topics/proxy-server \n https://github.com/topics/web-scraping \n https://github.com/lorien/awesome-web-scraping \n \n \n https://github.com/telerik \n \n Fiddler  https://www.telerik.com/download/fiddler \n https://www.telerik.com/fiddlercore \n https://github.com/gabrielxvx/zh-fiddler \n Fiddler抓包工具总结 \n Windows抓包指南①：Proxifier+Fiddler对第三方程序强制抓包 \n \n \n https://github.com/zobor/bproxy \n https://github.com/wanghongenpin/proxypin \n https://github.com/mitmproxy/mitmproxy \n https://github.com/forensant/pakiki-core \n https://github.com/justcoding121/Titanium-Web-Proxy \n https://github.com/BornToBeRoot/NETworkManager \n https://github.com/microsoft/ethr \n https://www.proxycap.com \n https://www.tcpdump.org \n https://gitlab.com/wireshark/wireshark \n \n https://www.wireshark.org \n https://tcpviz.com \n \n \n https://github.com/packetd/packetd \n https://github.com/gcla/termshark \n https://github.com/evanrolfe/trayce_gui \n BurpSuite  https://portswigger.net/burp/releases \n \n BurpSuiteV2.1.06破解版 \n BurpSuite_Pro v2020.4 Loader_Keygen \n \n \n https://github.com/dstotijn/hetty \n Charles  https://www.charlesproxy.com \n \n https://github.com/malaohu/CharlesLicense \n https://gitee.com/thom/charles-keygen \n https://github.com/inused/pages/tree/master/file/tool \n \n https://inused.github.io/pages/file/tool/CharlesKeygen.html \n \n \n \n \n https://github.com/youzan/zan-proxy \n https://github.com/alibaba/lightproxy \n https://github.com/ProxymanApp/Proxyman \n https://www.httpwatch.com \n http://www.httpdebugger.com \n https://github.com/avwo/whistle \n \n https://github.com/avwo/whistle-client \n \n \n QPA  https://github.com/l7dpi/openQPA \n Microsoft Network Monitor \n https://github.com/cle-b/httpdbg \n \n \n https://github.com/suxin2017/lynx-server \n Windows抓包与网络分析工具总结 \n 语言服务器协议 \n \n https://github.com/Microsoft/language-server-protocol \n \n Standalone Server (tsserver) \n https://github.com/typescript-language-server \n \n \n https://docs.microsoft.com/zh-cn/visualstudio/extensibility/language-server-protocol \n https://microsoft.github.io/language-server-protocol \n \n https://github.com/lsif/lsif.github.io \n https://github.com/langserver/langserver.github.io \n \n \n https://github.com/Microsoft/debug-adapter-protocol \n https://github.com/Microsoft/vscode-debugadapter-node \n https://github.com/sublimelsp/LSP \n https://github.com/redhat-developer/quarkus-ls \n https://github.com/TypeFox \n https://github.com/xtext \n https://github.com/kieler \n https://github.com/langium/langium \n https://github.com/emacs-lsp \n https://github.com/kristoff-it/superhtml \n Java  https://github.com/eclipse-jdtls \n \n https://github.com/eclipse-lsp4j/lsp4j \n https://github.com/eclipse/lsp4e \n \n \n https://github.com/ycm-core/ycmd \n https://github.com/Genuitec \n PostgreSQL  https://github.com/supabase-community/postgres-language-server \n \n \n https://imbant.github.io/blog/archives \n 项目管理 \n \n https://github.com/topics/bug \n https://github.com/topics/project \n https://github.com/topics/task \n https://github.com/topics/project-management \n https://github.com/topics/collaboration \n \n \n 禅道  https://github.com/easysoft/zentaopms \n \n https://gitee.com/wwccss/zentaopms \n \n \n https://github.com/mantisbt/mantisbt \n https://www.atlassian.com/zh/software/jira \n \n https://github.com/integrations/jira \n \n \n https://github.com/redmine/redmine \n https://gitee.com/itestwork/itest \n https://github.com/hyahm/ITflow \n https://www.tapd.cn \n https://github.com/devstream-io/devstream \n \n https://github.com/merico-dev/stream \n \n \n https://github.com/TestLinkOpenSourceTRMS/testlink-code \n \n https://sourceforge.net/projects/testlink \n \n \n https://github.com/edavis10/redmine \n https://github.com/makeplane/plane \n https://github.com/plankanban/planka \n https://github.com/bugzilla \n https://github.com/Worklenz/worklenz \n https://github.com/opf/openproject \n \n \n 视频会议  https://github.com/topics/conferencing \n https://github.com/topics/video-conferencing \n https://github.com/jitsi \n https://git.jami.net/savoirfairelinux/jami-project \n https://github.com/OpenVidu \n https://github.com/bigbluebutton/bigbluebutton \n IDEA与Eclipse对应快捷键 \n \n https://github.com/AJLoveChina/idea-shortcuts-guide \n https://www.jetbrains.com/help/idea/mastering-keyboard-shortcuts.html \n \n intellij 快捷键 \n IDEA快捷键 \n \n \n https://help.eclipse.org/latest/topic/org.eclipse.papyrus.infra.gmfdiag.common.doc/target/generated-eclipse-help/keyBindings.html \n \n \n \n \n 功能 \n IDEA \n Eclipse \n \n \n \n \n 查找（一样） \n Ctrl + F \n Ctrl + F \n \n \n 光标处往下添加空行（一样） \n Shift + Enter \n Shift + Enter \n \n \n 撤销（一样） \n Ctrl + Z \n Ctrl + Z \n \n \n 选中区域添加注释 （—样） \n Ctrl + Shift + / \n Ctrl - Shift + / \n \n \n 往上滑屏（一样） \n Ctrl + ↑ \n Ctrl + ↑ \n \n \n 往下滑屏（一样） \n Ctrl + ↓ \n Ctrl + ↓ \n \n \n 删除下一个单词（一样） \n Ctrl + Delete \n Ctrl + Delete \n \n \n 删除上一个单词（一样） \n Ctrl + Backspace \n Ctrl + Backspace \n \n \n 跳到单词首处（一样） \n Ctrl + ← \n Ctrl + ← \n \n \n 跳到单词尾处（一样） \n Ctrl + → \n Ctrl + → \n \n \n 递进式向右选择代码（一样） \n Shift + Alt + → \n Shift + Alt + → \n \n \n 递进式向左选择代码（一样） \n Shift + Alt + ← \n Shift + Alt + ← \n \n \n 跳到指定行 \n Ctrl + G \n Ctrl + L \n \n \n 光标处往上添加空行 \n Ctrl + Alt + Enter \n Ctrl + Shift + Enter \n \n \n 代码提示(Basic) \n Ctrl + 空格（可能被输入法占用） \n Alt + / \n \n \n 取消撤销 \n Ctrl + Shift + Z \n Ctrl + Y \n \n \n 选中区域取消注释 \n Ctrl + Shift + / \n Ctrl + Shift + \\ \n \n \n 添加或取消注释 \n Ctrl + / \n Ctrl + /     Ctrl + Shift + C \n \n \n 格式化全局代码 \n Ctrl + Alt + L \n Ctrl + Shift + F \n \n \n 格式化选中代码 \n Ctrl + Alt + L \n Ctrl + I \n \n \n 打开文件结构图 \n Ctrl + F12   Alt + 7 \n Ctrl + F3    Ctrl + O \n \n \n 编译项目 \n Ctrl + F9 \n Ctrl + B（编译所有项目） \n \n \n 全局查找class \n Ctrl + N \n Project-BuiId Project      Ctrl + Shift + T \n \n \n 全局搜索 \n Ctrl + Shift + F \n Ctrl + H \n \n \n 根据文件名当前工作空间查找文件 \n Ctrl + Shift + N \n Ctrl + Shift + R \n \n \n 删除整行 \n Shift + Delete    Ctrl + Y \n Ctrl + D \n \n \n 向下复制一行 \n Ctrl + D \n Ctrl + Alt + ↓ \n \n \n 向上移动整行 \n Shift + Alt + ↑ \n Alt + ↑ \n \n \n 向下移动整行 \n Shift + Alt + ↓ \n Alt + ↓ \n \n \n 快速定位下一个错误代码处 \n F2 \n Ctrl + . \n \n \n 快速定位上一个错误代码处 \n Shift + F2 \n Ctrl + , \n \n \n 快速修正错误 \n Alt + Enter \n Ctrl + 1 \n \n \n 查找下一个选中的字符串 \n F3 \n Ctrl + K \n \n \n 查找上一个选中的字符串 \n Shift + F3 \n Ctrl + Shift + K \n \n \n 优化导入的类和包 \n Ctrl + Alt + O \n Ctrl + Shift + O \n \n \n 重命名文件 \n Shift + F6 \n F2 \n \n \n 批量重命名变量 \n Shift + F6 \n Shift + Alt + R \n \n \n 快速定位到上一方法或属性 \n Alt + ↑ \n Ctrl + Shift + ↑ \n \n \n 快速定位到下一方法或属性 \n Alt + ↓ \n Ctrl + Shift + ↓ \n \n \n 关闭当前窗口 \n Ctrl + F4 \n Ctrl + W \n \n \n 查看类的继承关系 \n Ctrl + H \n Ctrl + T \n \n \n 查看引用的方法或类 \n Ctrl + B    Ctrl + 鼠标左键 \n F3    Ctrl + 鼠标左键 \n \n \n 递进式选择代码块 \n Ctrl + W \n Shift + Alt + ↑ \n \n \n 递进式取消选择代码块 \n Ctrl + Shift + W \n Shift + Alt + ↓ \n \n \n 在某个调用的方法名上使用会跳到具体的实现处 \n Ctrl + Alt + B \n 按住Ctrl,选择open implementation \n \n \n 移动上一个光标所在处 \n Ctrl + Alt + ← \n Alt + ← \n \n \n 移动下一个光标所在处 \n Ctrl + Alt + → \n Alt + → \n \n \n 展开所有代码 \n Ctrl + Shift + + \n Ctrl + Shift + * （小键盘） \n \n \n 折叠所有代码 \n Ctrl + Shift + - \n Ctrl + Shift + / （小键盘） \n \n \n 选择常用代码块 \n Ctrl + Alt + T \n Shift + Alt + Z \n \n \n 可以生成构造器/Getter/Setter等 \n Alt + Insert \n Shift + Alt + S \n \n \n 将选中字符串的字母转为大写 \n Ctrl + Shift + U \n Ctrl + Shift + X \n \n \n 将选中字符串的字母转为小写 \n Ctrl + Shift + U \n Ctrl + Shift + Y \n \n \n 多行同时编辑 \n Ctrl + Shift + Alt  Alt + 鼠标左键 \n Shift + Alt + A \n \n \n 编辑源 \n F4 \n \n \n \n 移动 \n F6 \n \n \n \n 复制 \n F5 \n \n \n \n 查找类中的方法或变量 \n Ctrl + Alt + Shift + N \n \n \n \n 向左切换窗口 \n Alt + ← \n \n \n \n 向右切换窗口 \n Alt + → \n \n \n \n 复制上一个单词 \n Alt + / \n \n \n \n 还原默认布局 \n Shift + F12 \n \n \n \n 将当前窗口独立 \n Shift + F4 \n \n \n \n 运行（Run）当前项目 \n Shift + F10 \n \n \n \n 调试（Debug）当前项目 \n Shift + F9 \n \n \n \n 向光标处插入当前行 \n Shift + Insert \n \n \n \n 显示所有使用处 \n Ctrl + Alt + F7 \n \n \n \n 快速抽取方法 \n Ctrl + Alt + M \n \n \n \n 对选中的代码弹出环绕选确出层 \n Ctrl + Alt + T \n \n \n \n 快速引进变量 \n Ctrl + Alt + V \n \n \n \n 寻找类或是变量被调用的地方，以弹出框的方式显示 \n Ctrl + Alt + F7 \n \n \n \n 动态模板环绕 \n Ctrl + Alt + J \n \n \n \n 内联 \n Ctrl + Alt + N \n \n \n \n 安去删除字段或方法 \n Alt + Delete \n \n \n \n 快速打开或隐藏工程面板 \n Alt+ 1 \n \n \n \n 收藏 \n Alt + 2 \n \n \n \n TODO \n Alt + 6 \n \n \n \n 查找一属性或方法被谁调用 \n Alt + F7    Ctrl + F7 \n \n \n \n 定位到对应数值的书签位置 \n Ctrl + 1,2,3... 9 \n \n \n \n 替换文本 \n Ctrl + R \n \n \n \n 复制整行（不选中字符串） \n Ctrl + C \n \n \n \n 剪切整行（不选中字符串） \n Ctrl + X \n \n \n \n 停止项目 \n Ctrl + F2 \n \n \n \n 快速查找文档 \n Ctrl + Q \n \n \n \n 跳到父类 \n Ctrl + U \n \n \n \n 重写父类方法 \n Ctrl + 0 \n \n \n \n 方法参数提示 \n Ctrl + P \n \n \n \n 在光标所在的错误代码处显示错误信息 \n Ctrl + F1 \n \n \n \n 插入代码模板 \n Ctrl + J \n \n \n \n 最近的文件 \n Ctrl + E \n \n \n \n 转到下一个拆分器 \n Ctrl + Tab \n \n \n \n 转到上一个拆分器 \n Ctrl + Shift + Tab \n \n \n \n 可以将最近使用的剪贴板内容选择插入到文本 \n Ctrl + Shift + V    Ctrl + Shift + Insert \n \n \n \n 向上移动整个代码块 \n Ctrl + Shift + ↑ \n \n \n \n 向下移动整个代码块 \n Ctrl + Shift + ↓ \n \n \n \n 最近更改的文件 \n Ctrl + Shift + E \n \n \n \n 自动结束代码，行末自动添加分号 \n Ctrl + Shift + Enter \n \n \n \n 高亮显示所有该选中文本，按Esc高亮消失 \n Ctrl + Shift + F7 \n \n \n \n 翻译选中的字符串 \n Ctrl + Shift + X \n \n \n \n 根据输入内容查找整个项目或指定目录内文件 \n Ctrl + Shift + F \n \n \n \n 自动将下一行合并到当前行末尾 \n Ctrl + Shift + J \n \n \n \n 批量替换 \n Ctrl + Shift + R \n \n \n \n translation插件翻译选中的字符串 \n Ctrl + Shift + Y \n \n \n \n 智能代码提示 \n Ctrl + Shift + Space \n \n \n \n 删除到行末 \n Ctrl + Shift + Delete \n \n \n \n 标记标签 \n Ctrl + Shift + 1,2,3...9 \n \n \n \n 隐藏恢复所有窗口 \n Ctrl + Shift + F12 \n \n \n \n 重新编译 \n Ctrl + Shift + F9 \n \n \n \n 关闭活动窗口 \n Ctrl + Shift + F4 \n \n \n \n 复制路径 \n Ctrl + Shift + C \n \n \n \n 复制引用，必须选择类名 \n Ctrl + Shift + Alt + C \n \n \n \n 简期贴 弹出重构菜单 \n Ctrl + Shift + Alt + V \n \n \n \n 弹出重构菜单 \n Ctrl + Shift + Alt + T \n \n \n \n 运行（Run）选择的项目 \n Shift + Alt + F10 \n \n \n \n 调试（Debug）选择的项目 \n Shift + Alt + F9 \n \n \n \n 最近修改记录 \n Shift + Alt + C \n \n \n \n 把焦点从编辑器移到最近使用的工具窗口 \n F12 \n \n \n \n 实现方法 \n Ctrl + I \n \n \n \n 查找整个工程中使用的某一个类、方法或者变量的位置 \n Alt + F7 \n \n \n \n 跳转到导航栏 \n Alt + Home \n \n \n \n 快速修正 \n \n Ctrl + 1 \n \n \n 打开外部Java文档 \n \n Shift + F2 \n \n \n 显示重构菜单 \n \n Shift + Alt + T \n \n \n 在workspace中捜索选中元素的声明 \n \n Ctrl + G \n \n \n 在workspace中捜索选中的文本 \n \n Ctrl + Alt + G \n \n \n 在workspace中搜索选中元素的引用 \n \n Ctrl + Shift + G \n \n \n 关闭所有窗口 \n \n Ctrl + Shift + F4    Ctrl + Shift + W \n \n \n 快速搜索选中字符串 \n \n Ctrl + Shift + L \n \n \n 下一个视图 \n \n Ctrl + F7 \n \n \n 上一个视图 \n \n Ctrl + Shift + F7 \n \n \n 下一个编辑器 \n \n Ctrl + F6 \n \n \n 上一个编辑器 \n \n Ctrl + Shift + F6 \n \n \n 下一个透视图 \n \n Ctrl + F8 \n \n \n 上一个透视图 \n \n Ctrl + Shift + F8 \n \n \n 最大化/最小化当前视图或编辑器 \n \n Ctrl + M \n \n \n debug最后一个方法或应用 \n \n F11 \n \n \n 运行最后一个方法或应用 \n \n Ctrl + F11 \n \n \n debug跳入方法 \n \n F5 \n \n \n debug向下逐行调试 \n \n F6 \n \n \n debug跳出方法 \n \n F7 \n \n \n debug直接跳转到下一个断点 \n \n F8 \n \n \n 显示提示 \n \n F2 \n \n \n 打开选中元素的类型继矛结构 \n \n F4 \n \n \n 刷新 \n \n F5 \n \n \n 更新maven项目 \n \n Alt + F5 \n \n \n 根据光标所在问题，提供快速修复选择 \n \n Alt + Enter \n \n \n 显示最近打开的文件记录列表 \n \n Ctrl + E \n \n \n 折叠当前类中的所有代码 \n \n Ctrl + /（小键盘） \n \n \n 展开当前类中的所有代码 \n \n Ctrl + *（小键盘） \n \n \n 放大字体 \n \n Ctrl + + \n \n \n 缩小字体 \n \n Ctrl + - \n \n \n 编译选中的文件/包/Module \n \n Ctrl + Shift + F9 \n \n \n 抽取方法（这是重构里面最常用的方法之一） \n \n Shift + Alt + M \n \n \n 查看最近操作项目的变化情况列表 \n \n Shift + Alt + C \n \n \n 查看项目当前文件 \n \n Shift + Alt + L \n \n \n 显示添加到收藏夹弹出层 \n \n Shift + Alt + F \n \n \n 合并变量（可能这样说有点不妥Inline） \n \n Shift + Alt + I \n \n \n 移动函数和变量（不怎么常用） \n \n Shift + Alt + V \n \n \n 重构的后悔药（Undo） \n \n Shift + Alt + Z \n \n \n 全局上下文信息 \n \n Alt + ? \n \n \n 全局显示视图菜单 \n \n Ctrl + F10 \n \n \n 全局显示系统菜单 \n \n Alt + - \n \n \n 在当前文件中显示选中的字符串 \n \n Ctrl + Shift + U \n \n \n 保存所有 \n \n Ctrl + Shift + S \n \n \n 向上复制一行 \n \n Ctrl + Alt + ↑ \n \n \n 回到最后一次编辑的地方 \n \n Ctrl + Q \n \n \n 选择文件打开方式 \n \n Shift + Alt + W \n \n \n 分屏显示当前文件 \n \n Ctrl + Shift + - \n \n \n \n",createdTime:1761814324e3},{title:"Subversion",frontmatter:{description:"按装VisualSVN后客户端使用报错：执行上下文错误: 由于目标计算机积极拒绝，无法连接。，需要在服务列表中找到相关服务 ->\n> 右键打开属性 -> 点击登录页签修改登录身份为本地系统账户 -> 点击常规页签修改启动类型为自启动，再点击启动",meta:[{name:"twitter:title",content:"Subversion"},{name:"twitter:description",content:"按装VisualSVN后客户端使用报错：执行上下文错误: 由于目标计算机积极拒绝，无法连接。，需要在服务列表中找到相关服务 ->\n> 右键打开属性 -> 点击登录页签修改登录身份为本地系统账户 -> 点击常规页签修改启动类型为自启动，再点击启动"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/IDE/Subversion.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Subversion"},{property:"og:description",content:"按装VisualSVN后客户端使用报错：执行上下文错误: 由于目标计算机积极拒绝，无法连接。，需要在服务列表中找到相关服务 ->\n> 右键打开属性 -> 点击登录页签修改登录身份为本地系统账户 -> 点击常规页签修改启动类型为自启动，再点击启动"},{property:"og:url",content:"https://bajins.com/IDE/Subversion.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Subversion"},{itemprop:"description",content:"按装VisualSVN后客户端使用报错：执行上下文错误: 由于目标计算机积极拒绝，无法连接。，需要在服务列表中找到相关服务 ->\n> 右键打开属性 -> 点击登录页签修改登录身份为本地系统账户 -> 点击常规页签修改启动类型为自启动，再点击启动"}]},regularPath:"/IDE/Subversion.html",relativePath:"IDE/Subversion.md",key:"v-d9f77642",path:"/IDE/Subversion.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"Linux安装",slug:"linux安装"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Subversion \n Flag Linux安装 \n Flag \n \n https://github.com/topics/subversion \n \n \n https://github.com/apache/subversion \n \n https://subversion.apache.org \n windows服务端  https://www.visualsvn.com \n https://sourceforge.net/projects/tortoisesvn \n \n https://github.com/TortoiseGit/tortoisesvn \n https://svn.code.sf.net/p/tortoisesvn/code \n https://github.com/stefankueng/TortoiseSVN \n https://tortoisesvn.net/downloads.html \n 安装时一定要选择 command line cient tools 下的 Entire feature will be installed on local hard drive 把svn.exe等文件安装 \n 从SVN1.14.3开始自签的CA不再支持，只支持TLS1.1，如果需要支持只能安装TortoiseSVN1.14.5及以下版本 \n \n \n \n \n https://www.collab.net/downloads/subversion \n \n http://sharpsvn.open.collab.net \n https://community.cirata.com/s/article/Downloading-WANdisco-Software \n https://opensource.wandisco.com/subversion \n https://www.wandisco.com/source-code-management/subversion \n https://docs.wandisco.com/svn/ms-plus \n 如何在windows系统下搭建SVN服务器 \n \n \n 命令行  https://sliksvn.com/pub \n \n https://sliksvn.com/download \n \n \n https://github.com/jenkinsci/subversion-plugin \n https://bitnami.com/stack/subversion \n https://www.smartsvn.com \n https://rapidsvn.org \n https://github.com/mhagger/cvs2svn \n \n \n 按装 VisualSVN 后客户端使用报错： 执行上下文错误: 由于目标计算机积极拒绝，无法连接。 ，需要在 服务 列表中找到相关服务 ->\n右键打开属性 -> 点击登录页签修改 登录身份 为 本地系统账户  -> 点击常规页签修改 启动类型 为 自启动 ，再点击启动 \n \n \n https://sourceforge.net/projects/svnbook \n \n https://svnbook.red-bean.com \n https://svnbook.subversion.org.cn \n \n \n SVN教程  https://svnbucket.com/posts \n TortoiseSVN打分支、合并分支、切换分支 \nSVN不同分支，进行比对 \nsvn  diff   -r   1100 :1323\n获取所有SVN提交作者用户名的列表 \nhttps://stackoverflow.com/questions/2494984/how-to-get-a-list-of-all-subversion-commit-author-usernames \nsvn log  --quiet   |   awk   '/^r/ {print $3}'   |   sort   |   uniq \nsvn log  --quiet   |   grep   \"^r\"   |   awk   '{print $3}'   |   sort   |   uniq \n \n \n 选中要比对的一个分支， Shift +右键+选中 TorsoiseSVN  ->  diff with url ，然后填入另外一个要比对的分支url即可 \n Linux安装 \n检查已安装 \n rpm   -qa  subversion\n安装 \nyum  -y   install  subversion\n查看已安装版本 \nsvnserve  --version \n \n 创建代码库 \n建立SVN版本库目录 \n mkdir   -p  /home/svn/svnrepos/test\n创建SVN版本库 \nsvnadmin create /home/svn/svnrepos/test\n \n \n 执行上面的命令后，自动建立 svndata 库，\n /home/svn/svnrepos/test 文件夹包含了 conf 、 db 、 format 、 hooks 、 locks 、 README.txt 等文件，说明一个SVN库已经建立。 \n \n 配置代码库 \n进入`conf`文件夹 \n cd  /home/svn/svnrepos/test/conf\n配置用户密码`passwd` \n vi   passwd \n \n \n 在 [users] 节点下添加以下内容(账户=密码) \n账户=密码\nbajins.com=bajins.com\n \n \n 配置权限控制 authz \n \n vi  authz\n \n \n 目的是设置哪些用户可以访问哪些目录，向 authz 文件末尾追加以下内容： \n \n 设置 [/] 代表根目录下所有的资源, rw 为读和写， * 代表所有用户,先按 shift+g 跳到末尾，然后添加 \n \n \n [/]\nbajins.com=rw\n*=r\n \n \n 配置服务 svnserve.conf \n \n vi  svnserve.conf\n \n \n 在 [general] 节点下追加以下内容 \n匿名访问的权限，可以是read,write,none,默认为read\nanon-access=none\n使授权用户有写权限\nauth-access=write\n密码数据库的路径\npassword-db=passwd\n访问控制文件\nauthz-db=authz\n认证命名空间，subversion会在认证提示里显示，并且作为凭证缓存的关键字\nrealm = This Is A Repository\n \n \n 如果需要创建多个库就需要重复做上面2、3步，并且最后一个目录名是不一样的 \n \n \n 建立第2个SVN版本库目录 \n \n mkdir   -p  /home/svn/svnrepos/test2\n \n \n 创建第2个SVN版本库 \n \n svnadmin create /home/svn/svnrepos/test2\n \n 启动 \n svnserve  -d   -r  /home/svn/svnrepos/\n查看SVN进程 \n ps  -ef | grep  svn\n检测SVN端口 \n netstat  -antlp | grep  svnserve\n放开端口 \nfirewall-cmd  --zone = public --add-port = 3690 /tcp  --permanent \nfirewall-cmd  --reload \n \n 连接地址： svn://host:port/仓库名 \n 停止SVN \n查找svnserve进程（PID） \n ps   -aux   |   grep  svnserve\n结束进程 \n kill   -9  PID\n #或者 \n killall  svnserve\n \n ",createdTime:1761814324e3},{title:"TextEditor",frontmatter:{description:"https://github.com/GNOME/gedit\nhttps://github.com/emacs-tw/awesome-emacs\n    http://www.gnu.org/software/emacs\n    https://github.com/mhayashi1120/Emacs-wgrep\nhttps://github.com/geany/geany\nhttps://www.nano-editor.org\nhttps://github.com/zyedidia/micro\nhttps://vim.org\n    https://github.com/neoclide/coc.nvim\n    https://github.com/thaerkh/vim-workspace\n    https://github.com/neovim/neovim\n    https://github.com/NvChad/NvChad\n    https://github.com/ms-jpq/coq_nvim\n    https://github.com/nvim-treesitter\n    https://github.com/KillTheMule/nvim-rs\n    https://github.com/neovide/neovide\n    https://github.com/nshen/learn-neovim-lua\n    https://github.com/LazyVim/LazyVim\n    https://github.com/ervandew/eclim\n    https://github.com/pit-ray/win-vind\n    https://github.com/AstroNvim/AstroNvim\nhttps://github.com/helix-editor/helix\nhttps://github.com/file-acomplaint/kyun\nhttps://github.com/rizonesoft/Notepad3\nhttps://github.com/zufuliu/notepad2\nhttps://github.com/dail8859/NotepadNext\nhttps://github.com/0x7c13/Notepads\n源代码编辑控件 https://sourceforge.net/projects/scintilla\n    https://www.scintilla.org\n    https://github.com/ScintillaOrg/lexilla\nhttp://www.pnotepad.org\nhttps://github.com/brackets-cont/brackets\n    https://github.com/adobe/brackets\nhttps://github.com/bobbylight\nhttps://github.com/textmate\nhttps://github.com/Komodo/KomodoEdit\n    https://github.com/ActiveState/OpenKomodoIDE\nhttps://github.com/lite-xl/lite-xl\nhttps://github.com/Alexey-T/CudaText\nhttps://sourceforge.net/projects/bluefish\nhttps://github.com/steven-tey/novel\n巨型日志查看 https://github.com/sunny-chung/giant-log-viewer",meta:[{name:"image",content:"https://i.rexdf.org/images/sublime_chinese.gif"},{name:"twitter:title",content:"TextEditor"},{name:"twitter:description",content:"https://github.com/GNOME/gedit\nhttps://github.com/emacs-tw/awesome-emacs\n    http://www.gnu.org/software/emacs\n    https://github.com/mhayashi1120/Emacs-wgrep\nhttps://github.com/geany/geany\nhttps://www.nano-editor.org\nhttps://github.com/zyedidia/micro\nhttps://vim.org\n    https://github.com/neoclide/coc.nvim\n    https://github.com/thaerkh/vim-workspace\n    https://github.com/neovim/neovim\n    https://github.com/NvChad/NvChad\n    https://github.com/ms-jpq/coq_nvim\n    https://github.com/nvim-treesitter\n    https://github.com/KillTheMule/nvim-rs\n    https://github.com/neovide/neovide\n    https://github.com/nshen/learn-neovim-lua\n    https://github.com/LazyVim/LazyVim\n    https://github.com/ervandew/eclim\n    https://github.com/pit-ray/win-vind\n    https://github.com/AstroNvim/AstroNvim\nhttps://github.com/helix-editor/helix\nhttps://github.com/file-acomplaint/kyun\nhttps://github.com/rizonesoft/Notepad3\nhttps://github.com/zufuliu/notepad2\nhttps://github.com/dail8859/NotepadNext\nhttps://github.com/0x7c13/Notepads\n源代码编辑控件 https://sourceforge.net/projects/scintilla\n    https://www.scintilla.org\n    https://github.com/ScintillaOrg/lexilla\nhttp://www.pnotepad.org\nhttps://github.com/brackets-cont/brackets\n    https://github.com/adobe/brackets\nhttps://github.com/bobbylight\nhttps://github.com/textmate\nhttps://github.com/Komodo/KomodoEdit\n    https://github.com/ActiveState/OpenKomodoIDE\nhttps://github.com/lite-xl/lite-xl\nhttps://github.com/Alexey-T/CudaText\nhttps://sourceforge.net/projects/bluefish\nhttps://github.com/steven-tey/novel\n巨型日志查看 https://github.com/sunny-chung/giant-log-viewer"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://i.rexdf.org/images/sublime_chinese.gif"},{name:"twitter:url",content:"https://bajins.com/IDE/TextEditor.html"},{property:"og:type",content:"article"},{property:"og:title",content:"TextEditor"},{property:"og:description",content:"https://github.com/GNOME/gedit\nhttps://github.com/emacs-tw/awesome-emacs\n    http://www.gnu.org/software/emacs\n    https://github.com/mhayashi1120/Emacs-wgrep\nhttps://github.com/geany/geany\nhttps://www.nano-editor.org\nhttps://github.com/zyedidia/micro\nhttps://vim.org\n    https://github.com/neoclide/coc.nvim\n    https://github.com/thaerkh/vim-workspace\n    https://github.com/neovim/neovim\n    https://github.com/NvChad/NvChad\n    https://github.com/ms-jpq/coq_nvim\n    https://github.com/nvim-treesitter\n    https://github.com/KillTheMule/nvim-rs\n    https://github.com/neovide/neovide\n    https://github.com/nshen/learn-neovim-lua\n    https://github.com/LazyVim/LazyVim\n    https://github.com/ervandew/eclim\n    https://github.com/pit-ray/win-vind\n    https://github.com/AstroNvim/AstroNvim\nhttps://github.com/helix-editor/helix\nhttps://github.com/file-acomplaint/kyun\nhttps://github.com/rizonesoft/Notepad3\nhttps://github.com/zufuliu/notepad2\nhttps://github.com/dail8859/NotepadNext\nhttps://github.com/0x7c13/Notepads\n源代码编辑控件 https://sourceforge.net/projects/scintilla\n    https://www.scintilla.org\n    https://github.com/ScintillaOrg/lexilla\nhttp://www.pnotepad.org\nhttps://github.com/brackets-cont/brackets\n    https://github.com/adobe/brackets\nhttps://github.com/bobbylight\nhttps://github.com/textmate\nhttps://github.com/Komodo/KomodoEdit\n    https://github.com/ActiveState/OpenKomodoIDE\nhttps://github.com/lite-xl/lite-xl\nhttps://github.com/Alexey-T/CudaText\nhttps://sourceforge.net/projects/bluefish\nhttps://github.com/steven-tey/novel\n巨型日志查看 https://github.com/sunny-chung/giant-log-viewer"},{property:"og:image",content:"https://i.rexdf.org/images/sublime_chinese.gif"},{property:"og:url",content:"https://bajins.com/IDE/TextEditor.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"TextEditor"},{itemprop:"description",content:"https://github.com/GNOME/gedit\nhttps://github.com/emacs-tw/awesome-emacs\n    http://www.gnu.org/software/emacs\n    https://github.com/mhayashi1120/Emacs-wgrep\nhttps://github.com/geany/geany\nhttps://www.nano-editor.org\nhttps://github.com/zyedidia/micro\nhttps://vim.org\n    https://github.com/neoclide/coc.nvim\n    https://github.com/thaerkh/vim-workspace\n    https://github.com/neovim/neovim\n    https://github.com/NvChad/NvChad\n    https://github.com/ms-jpq/coq_nvim\n    https://github.com/nvim-treesitter\n    https://github.com/KillTheMule/nvim-rs\n    https://github.com/neovide/neovide\n    https://github.com/nshen/learn-neovim-lua\n    https://github.com/LazyVim/LazyVim\n    https://github.com/ervandew/eclim\n    https://github.com/pit-ray/win-vind\n    https://github.com/AstroNvim/AstroNvim\nhttps://github.com/helix-editor/helix\nhttps://github.com/file-acomplaint/kyun\nhttps://github.com/rizonesoft/Notepad3\nhttps://github.com/zufuliu/notepad2\nhttps://github.com/dail8859/NotepadNext\nhttps://github.com/0x7c13/Notepads\n源代码编辑控件 https://sourceforge.net/projects/scintilla\n    https://www.scintilla.org\n    https://github.com/ScintillaOrg/lexilla\nhttp://www.pnotepad.org\nhttps://github.com/brackets-cont/brackets\n    https://github.com/adobe/brackets\nhttps://github.com/bobbylight\nhttps://github.com/textmate\nhttps://github.com/Komodo/KomodoEdit\n    https://github.com/ActiveState/OpenKomodoIDE\nhttps://github.com/lite-xl/lite-xl\nhttps://github.com/Alexey-T/CudaText\nhttps://sourceforge.net/projects/bluefish\nhttps://github.com/steven-tey/novel\n巨型日志查看 https://github.com/sunny-chung/giant-log-viewer"},{itemprop:"image",content:"https://i.rexdf.org/images/sublime_chinese.gif"}]},regularPath:"/IDE/TextEditor.html",relativePath:"IDE/TextEditor.md",key:"v-305e971b",path:"/IDE/TextEditor.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"Notepad++",slug:"notepad"},{level:2,title:"SublimeText",slug:"sublimetext"},{level:3,title:"插件",slug:"插件"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' TextEditor \n Flag Notepad++ SublimeText 插件 \n Flag \n \n https://github.com/topics/notepad \n \n \n https://github.com/GNOME/gedit \n https://github.com/emacs-tw/awesome-emacs \n \n http://www.gnu.org/software/emacs \n https://github.com/mhayashi1120/Emacs-wgrep \n \n \n https://github.com/geany/geany \n https://www.nano-editor.org \n https://github.com/zyedidia/micro \n https://vim.org \n \n https://github.com/neoclide/coc.nvim \n https://github.com/thaerkh/vim-workspace \n https://github.com/neovim/neovim \n https://github.com/NvChad/NvChad \n https://github.com/ms-jpq/coq_nvim \n https://github.com/nvim-treesitter \n https://github.com/KillTheMule/nvim-rs \n https://github.com/neovide/neovide \n https://github.com/nshen/learn-neovim-lua \n https://github.com/LazyVim/LazyVim \n https://github.com/ervandew/eclim \n https://github.com/pit-ray/win-vind \n https://github.com/AstroNvim/AstroNvim \n \n \n https://github.com/helix-editor/helix \n https://github.com/file-acomplaint/kyun \n https://github.com/rizonesoft/Notepad3 \n https://github.com/zufuliu/notepad2 \n https://github.com/dail8859/NotepadNext \n https://github.com/0x7c13/Notepads \n 源代码编辑控件  https://sourceforge.net/projects/scintilla \n \n https://www.scintilla.org \n https://github.com/ScintillaOrg/lexilla \n \n \n http://www.pnotepad.org \n https://github.com/brackets-cont/brackets \n \n https://github.com/adobe/brackets \n \n \n https://github.com/bobbylight \n https://github.com/textmate \n https://github.com/Komodo/KomodoEdit \n \n https://github.com/ActiveState/OpenKomodoIDE \n \n \n https://github.com/lite-xl/lite-xl \n https://github.com/Alexey-T/CudaText \n https://sourceforge.net/projects/bluefish \n https://github.com/steven-tey/novel \n 巨型日志查看  https://github.com/sunny-chung/giant-log-viewer \n \n \n https://www.texmacs.org \n https://github.com/XmacsLabs/Xmacs \n \n 替换默认记事本 \n REG  ADD  "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe"   ^ \n  /v   "Debugger"   /t  REG_SZ  /d   "\\"记事本程序路径\\" -z"   /f \n \n \n 恢复系统默认记事本 \n \n REG  DELETE  "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe"   /f \n REG  DELETE  "HKLM\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe"   /f \n REG  DELETE  "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe"   /v   "Debugger"   /f \n Notepad++ \n \n https://github.com/notepad-plus-plus/notepad-plus-plus \n https://github.com/cxasm/notepad-- \n 替换默认记事本 \n 插件  https://github.com/notepad-plus-plus/nppPluginList \n https://github.com/npp-plugins \n https://github.com/JetNpp \n https://github.com/chcg \n https://github.com/pnedev/comparePlus \n https://github.com/chcg/NPP_HexEdit \n 比较  https://github.com/pnedev/compare-plugin \n JSON  https://github.com/kapilratnani/JSON-Viewer \n https://github.com/molsonkiko/JsonToolsNppPlugin \n \n \n \n 查看快捷键： 设置  –>  管理快捷键  ->  Scintilla命令 \n \n SCI_SELECTIONDUPLICATE  复制当前行 \n SCI_LINEDELETE  删除当前行 \n \n \n \n Tab 替换为空格：设置->首选项->语言->制表符设置->(勾选上)替换为空格 \n \n \n 显示特殊字符 \n \n 显示回车符，换行符，TAB键，行首，行尾等特殊字符 \n 视图(V) -> 显示符号 -> 显示空格与制表符 \n \n \n \n 删除未包含内容的行：  Ctrl  +  F  -> 选择 标记 标签页（或者 Alt  +  S  然后按\n K ） -> 查找目标输入正则表达式 -> 勾选 正则表达式 、 标记所在行 、 清除上次标记  -> 点击 全部标记  ->\n点击菜单栏  搜索  ->  书签  ->  删除未标记行 \n \n \n 下划线转驼峰：查找目标: ([a-z])_([a-z])  查找“小写_小写”，括号用来分组 \n \n 替换为： \\1\\u\\2 替换为第一组和第二组的大写 \n \n \n \n 驼峰转下划线：查找目标： ([a-z])([A-Z])  查找“小写大写”的组合，括号用来分组，需勾选 配匹大小写 和 循环查找 \n \n 替换为： \\1_\\l\\2 替换为第一组加下滑线加第二组，第二组小写 \\l 是小写的 L \n \n \n \n \n \\U  将匹配项转为大写(Upper) \n \\L  将匹配项转为小写(Lower) \n \\E  终止转换(End) \n \n \n 在UTF-8下使用 [\\x{4e00}-\\x{9fa5}] 匹配中文  http://www.crifan.com/files/doc/docbook/rec_soft_npp/release/htmls/npp_func_regex_replace.html \n \n \n notepad++未保存的文件的缓存文件地址： %AppData%\\Notepad++\\backup \n \n 匹配多个相同字符中的某一个 \n \n 利用 非贪婪 限定符 ? ,分组限定符 () ,分组保留用法 \\1 / $1 \n \n \n 查找第一个逗号： (^.*?), 或 (,)(.*?$) \n 查找第二个逗号： (^.*?,.*?), \n 查找最后一个（包含不在行末的）逗号： (,)([^,]*$) \n SublimeText \n \n https://github.com/SublimeText \n https://www.sublimetext.com \n \n http://www.sublimetext.cn \n \n \n https://github.com/tonsky/sublime-scheme-alabaster \n sublimetext破解 \n sublime-text-3-license-key \n Sublime Text3 注册码激活码 \n \n \n 解决 Sublime Text 3 拓展包源无法访问问题 \n 插件 \n \n 按 Ctrl  +  Shift  +  p 输入 install 选择 Package Control: Install Package 再输入插件名称 \n \n \n https://github.com/facelessuser/MarkdownPreview \n 本地化菜单  https://github.com/zam1024t/LocalizedMenu \n 侧边栏右键增强  https://github.com/52fisher/SideBarEnhancements \n 插件管理器  https://github.com/wbond/package_control \n https://github.com/bathos/Ecmascript-Sublime \n \n \n ChineseLocalizations \n \n \n 很简单的一个插件，现在支持汉化Sublime Text2，Sublime Text3。 \n \n \n \n SublimeAStyleFormatter \n EclipseJavaFormatter \n uroboroSQLFormatter \n MarkdownTableFormatter \n AllAutocomplete \n \n \n Sublime Text 默认的 Autocomplete 功能只考虑当前的文件，而 AllAutocomplete 插件会搜索所有打开的文件来寻找匹配的提示词。 \n \n \n \n BracketHighlighter \n \n \n 配置文件的高亮设置，让你的代码有不同的颜色区分该插件提供配对标签，或大括号或字符引号的配对高亮显示，算是对系统高亮的加强吧。 \n \n \n \n BufferScroll \n \n \n 你可以轻松书写一个文件多个位置了 \n \n \n \n ColorHighlighter \n \n \n 颜色功能还是很爽的，找了好久 \n \n \n \n \n CSSComments \n \n \n \n CSSFormat \n DocBlockr \n \n \n DocBlocker 是在Sublime平台上开发一款自动补全注释插件，支持JavaScript (including ES6), PHP, ActionScript,\nHaxe, CoffeeScript, TypeScript, Java, Apex, Groovy, Objective C, C, C++ and Rust.等众多语言 \n \n \n \n \n \n \n Emmet \n \n \n Emmet的前身是大名鼎鼎的Zen coding，如果你从事Web前端开发的话，对该插件一定不会陌生。\n它使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度 \n \n \n \n \n \n SublimeCodeIntel \n \n \n 一个全功能的 Sublime Text 代码自动完成引擎 ，本人做过对比，但是如果和webstorm的自动寻找还是稍逊一筹，\n不过对于大部分人来说够用了，能很方便跳到你想要的方法,支持的语言挺多的（JavaScript, Mason, XBL, XUL,\nRHTML, SCSS, Python, HTML, Ruby, Python3, XML, Sass, XSLT, Django, HTML5, Perl, CSS, Twig,\nLess, Smarty, Node.js, Tcl, TemplateToolkit, PHP.） \n \n \n JavaScript Completions \n \n \n js最基本的api快查片段 \n \n \n \n Keymaps \n \n \n 快速查找所有插件的快捷键 \n \n \n \n PrettyJSON \n \n \n JSON，一個輕量級的資料交換語言，目前許多網站AJAX request的回應結果都是JSON格式 \n \n \n \n SideBarEnhancements \n \n \n 增强右键菜单文件操作功能 \n \n \n \n SublimeLinter \n \n \n 代码校验插件，支持多种语言，这个是主插件，如果想检测特定的文件需要单独下载 \n \n \n SublimeLinterJshint \n \n \n 这个就是单独的插件，SublimeLinter的一个分支 \n \n \n SublimeTmpl \n \n \n 创建常用文件初始模板，必须html,css,js模板 \n \n \n Tag \n \n \n HTML/XML标签缩进、补全和校验 \n \n \n Alignment \n \n \n 代码对齐 \n \n \n PackageResourceViewer \n \n \n 通过这个特殊的插件，会给你查看和编辑SublimeText附带的不同的包带来很多方便。您也可以提取任何给定的包。\n这一行动将其复制到用户文件夹，以便您可以安全地对其进行编辑。很多人苦恼不能修改左侧导航面板字体大小，用这个可以轻松办到 \n \n \n \n Themr \n \n \n sublime可以下载很多风格样式，用这个插件可以管理所有的风格 \n \n \n GBKToUTF8 \n SublimeREPL \n jQuery \n Anoconda \n AutoPep8 \n \n',createdTime:1761814324e3},{title:"VisualStudioCode",frontmatter:{description:"https://github.com/microsoft/vscode\n    https://code.visualstudio.com/Download\n    https://marketplace.visualstudio.com\n    https://github.com/microsoft/vscode-anycode\nhttps://github.com/microsoft/vscode-docs\n    默认键盘快捷键\n    Keyboard shortcuts forWindows\n    Keyboard shortcuts for macOS\n    Keyboard shortcuts for Linux\nVSCode教程\nhttps://github.com/gr2m/app-stats-action\nhttps://github.com/coder\nhttps://github.com/flathub/com.vscodium.codium\n    https://vscodium.com\n元素定位源代码 https://github.com/zh-lx/code-inspector",meta:[{name:"image",content:"https://github.com/SvenZhao/var-translation/raw/master/images/vscode1.gif"},{name:"twitter:title",content:"VisualStudioCode"},{name:"twitter:description",content:"https://github.com/microsoft/vscode\n    https://code.visualstudio.com/Download\n    https://marketplace.visualstudio.com\n    https://github.com/microsoft/vscode-anycode\nhttps://github.com/microsoft/vscode-docs\n    默认键盘快捷键\n    Keyboard shortcuts forWindows\n    Keyboard shortcuts for macOS\n    Keyboard shortcuts for Linux\nVSCode教程\nhttps://github.com/gr2m/app-stats-action\nhttps://github.com/coder\nhttps://github.com/flathub/com.vscodium.codium\n    https://vscodium.com\n元素定位源代码 https://github.com/zh-lx/code-inspector"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://github.com/SvenZhao/var-translation/raw/master/images/vscode1.gif"},{name:"twitter:url",content:"https://bajins.com/IDE/VisualStudioCode.html"},{property:"og:type",content:"article"},{property:"og:title",content:"VisualStudioCode"},{property:"og:description",content:"https://github.com/microsoft/vscode\n    https://code.visualstudio.com/Download\n    https://marketplace.visualstudio.com\n    https://github.com/microsoft/vscode-anycode\nhttps://github.com/microsoft/vscode-docs\n    默认键盘快捷键\n    Keyboard shortcuts forWindows\n    Keyboard shortcuts for macOS\n    Keyboard shortcuts for Linux\nVSCode教程\nhttps://github.com/gr2m/app-stats-action\nhttps://github.com/coder\nhttps://github.com/flathub/com.vscodium.codium\n    https://vscodium.com\n元素定位源代码 https://github.com/zh-lx/code-inspector"},{property:"og:image",content:"https://github.com/SvenZhao/var-translation/raw/master/images/vscode1.gif"},{property:"og:url",content:"https://bajins.com/IDE/VisualStudioCode.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"VisualStudioCode"},{itemprop:"description",content:"https://github.com/microsoft/vscode\n    https://code.visualstudio.com/Download\n    https://marketplace.visualstudio.com\n    https://github.com/microsoft/vscode-anycode\nhttps://github.com/microsoft/vscode-docs\n    默认键盘快捷键\n    Keyboard shortcuts forWindows\n    Keyboard shortcuts for macOS\n    Keyboard shortcuts for Linux\nVSCode教程\nhttps://github.com/gr2m/app-stats-action\nhttps://github.com/coder\nhttps://github.com/flathub/com.vscodium.codium\n    https://vscodium.com\n元素定位源代码 https://github.com/zh-lx/code-inspector"},{itemprop:"image",content:"https://github.com/SvenZhao/var-translation/raw/master/images/vscode1.gif"}]},regularPath:"/IDE/VisualStudioCode.html",relativePath:"IDE/VisualStudioCode.md",key:"v-3f9edbee",path:"/IDE/VisualStudioCode.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"设置",slug:"设置"},{level:2,title:"VSCode快捷键",slug:"vscode快捷键"},{level:3,title:"常用General",slug:"常用general"},{level:3,title:"基础编辑Basic editing",slug:"基础编辑basic-editing"},{level:3,title:"导航Navigation",slug:"导航navigation"},{level:3,title:"搜索和替换Search and replace",slug:"搜索和替换search-and-replace"},{level:3,title:"多光标和选 Multi-cursor and selection",slug:"多光标和选-multi-cursor-and-selection"},{level:3,title:"丰富的语言编辑Rich languages editing",slug:"丰富的语言编辑rich-languages-editing"},{level:3,title:"编辑器管理Editor management",slug:"编辑器管理editor-management"},{level:3,title:"文件管理File management",slug:"文件管理file-management"},{level:3,title:"显示Display",slug:"显示display"},{level:3,title:"调试Debug",slug:"调试debug"},{level:3,title:"集成终端Integrated terminal",slug:"集成终端integrated-terminal"},{level:2,title:"VSCode插件",slug:"vscode插件"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' VisualStudioCode \n Flag 设置 VSCode快捷键 常用General 基础编辑Basic editing 导航Navigation 搜索和替换Search and replace 多光标和选 Multi-cursor and selection 丰富的语言编辑Rich languages editing 编辑器管理Editor management 文件管理File management 显示Display 调试Debug 集成终端Integrated terminal VSCode插件 \n Flag \n \n https://github.com/topics/vscode \n \n \n https://github.com/microsoft/vscode \n \n https://code.visualstudio.com/Download \n https://marketplace.visualstudio.com \n https://github.com/microsoft/vscode-anycode \n \n \n https://github.com/microsoft/vscode-docs \n \n 默认键盘快捷键 \n Keyboard shortcuts forWindows \n Keyboard shortcuts for macOS \n Keyboard shortcuts for Linux \n \n \n VSCode教程 \n https://github.com/gr2m/app-stats-action \n https://github.com/coder \n https://github.com/flathub/com.vscodium.codium \n \n https://vscodium.com \n \n \n 元素定位源代码  https://github.com/zh-lx/code-inspector \n 设置 \n \n 缩进参考线： 首选项 -> 设置 -> 搜索  renderIntentGuides  将此选项改为true \n 垂直标尺： 文件 -> 首选项 -> 设置 -> 搜索  editor.rulers \n \n { \n     "workbench.activityBar.visible" :   true , \n     "workbench.statusBar.visible" :   true , \n     "editor.minimap.enabled" :   false , \n     "breadcrumbs.enabled" :   true , \n     "editor.wordWrapColumn" :   120 , \n     "editor.wordWrap" :   "wordWrapColumn" , \n     "editor.fontSize" :   16 , \n     "editor.renderIndentGuides" : true , \n     "editor.rulers" :   [ 80 , 120 ] , \n     "editor.rulers" :   [ \n         120 \n     ] , \n     "python.formatting.autopep8Args" :   [ \n         "--max-line-length" , \n         "120" , \n         "--experimental" \n     ] , \n     "python.formatting.yapfArgs" :   [ \n         "--style" , \n         "{based_on_style: chromium, indent_width: 20}" \n     ] , \n     "python.formatting.blackArgs" :   [ \n         "--line-length" , \n         "120" \n     ] \n } \n \n 开启智能提示 \n \n 进入设置，搜索 prevent ，取消此选项的勾选 \n VSCode快捷键 \n \n https://github.com/EdisonLeeeee/VSCode-keybord-shortcuts \n 常用General \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n Ctrl + Shift + P，F1 \n 显示命令面板 Show Command Palette \n \n \n Ctrl + P \n 快速打开 Quick Open \n \n \n Ctrl + Shift + N \n 新窗口/实例 New window/instance \n \n \n Ctrl + Shift + W \n 关闭窗口/实例 Close window/instance \n \n \n Ctrl + , \n 用户设置 User Settings \n \n \n Ctrl + K Ctrl + S \n 设置键盘快捷方式 Keyboard Shortcuts \n 基础编辑Basic editing \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n Ctrl + X \n 剪切行（空选定） Cut line (empty selection) \n \n \n Ctrl + C \n 复制行（空选定）Copy line (empty selection) \n \n \n Alt + ↑ / ↓ \n 向上/向下移动行 Move line up/down \n \n \n Shift + Alt + ↓ / ↑ \n 向上/向下复制行 Copy line up/down \n \n \n Ctrl + Shift + K \n 删除行 Delete line \n \n \n Ctrl + Enter \n 在下面插入行 Insert line below \n \n \n Ctrl + Shift + Enter \n 在上面插入行 Insert line above \n \n \n Ctrl + Shift + \\ \n 跳到匹配的括号 Jump to matching bracket \n \n \n Ctrl + ] / [ \n 缩进/缩进行 Indent/outdent line \n \n \n Home \n 转到行首 Go to beginning of line \n \n \n End \n 转到行尾 Go to end of line \n \n \n Ctrl + Home \n 转到文件开头 Go to beginning of file \n \n \n Ctrl + End \n 转到文件末尾 Go to end of file \n \n \n Ctrl + ↑ / ↓ \n 向上/向下滚动行 Scroll line up/down \n \n \n Alt + PgUp / PgDown \n 向上/向下滚动页面 Scroll page up/down \n \n \n Ctrl + Shift + [ \n 折叠（折叠）区域 Fold (collapse) region \n \n \n Ctrl + Shift + ] \n 展开（未折叠）区域 Unfold (uncollapse) region \n \n \n Ctrl + K Ctrl + [ \n 折叠（未折叠）所有子区域 Fold (collapse) all subregions \n \n \n Ctrl + K Ctrl + ] \n 展开（未折叠）所有子区域 Unfold (uncollapse) all subregions \n \n \n Ctrl + K Ctrl + 0 \n 折叠（折叠）所有区域 Fold (collapse) all regions \n \n \n Ctrl + K Ctrl + J \n 展开（未折叠）所有区域 Unfold (uncollapse) all regions \n \n \n Ctrl + K Ctrl + C \n 添加行注释 Add line comment \n \n \n Ctrl + K Ctrl + U \n 删除行注释 Remove line comment \n \n \n Ctrl + / \n 切换行注释 Toggle line comment \n \n \n Shift + Alt + A \n 切换块注释 Toggle block comment \n \n \n Alt + Z \n 切换换行 Toggle word wrap \n \n \n CTRL + ALT + X \n 转换为大写 transform To Uppercase \n \n \n CTRL + ALT + Y \n 转换为小写 transform To Lowercase \n 导航Navigation \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n Ctrl + T \n 显示所有符号 Show all Symbols \n \n \n Ctrl + G \n 转到行... Go to Line... \n \n \n Ctrl + P \n 转到文件... Go to File... \n \n \n Ctrl + Shift + O \n 转到符号... Go to Symbol... \n \n \n Ctrl + Shift + M \n 显示问题面板 Show Problems panel \n \n \n F8 \n 转到下一个错误或警告 Go to next error or warning \n \n \n Shift + F8 \n 转到上一个错误或警告 Go to previous error or warning \n \n \n Ctrl + Shift + Tab \n 导航编辑器组历史记录 Navigate editor group history \n \n \n Alt + ← / → \n 返回/前进 Go back / forward \n \n \n Ctrl + M \n 切换选项卡移动焦点 Toggle Tab moves focus \n 搜索和替换Search and replace \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n Ctrl + F \n 查找 Find \n \n \n Ctrl + H \n 替换 Replace \n \n \n F3 / Shift + F3 \n 查找下一个/上一个 Find next/previous \n \n \n Alt + Enter \n 选择查找匹配的所有出现 Select all occurences of Find match \n \n \n Ctrl + D \n 将选择添加到下一个查找匹配 Add selection to next Find match \n \n \n Ctrl + K Ctrl + D \n 将最后一个选择移至下一个查找匹配项 Move last selection to next Find match \n \n \n Alt + C / R / W \n 切换区分大小写/正则表达式/整个词 Toggle case-sensitive / regex / whole word \n 多光标和选 Multi-cursor and selection \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n Alt +单击 \n 插入光标 Insert cursor \n \n \n Ctrl + Alt +↑/↓ \n 在上/下插入光标 Insert cursor above / below \n \n \n Ctrl + U \n 撤消上一个光标操作 Undo last cursor operation \n \n \n Shift + Alt + I \n 在选定的每一行的末尾插入光标 Insert cursor at end of each line selected \n \n \n Ctrl + L \n 选择当前行 Select current line \n \n \n Ctrl + Shift + L \n 选择当前选择的所有出现 Select all occurrences of current selection \n \n \n Ctrl + F2 \n 选择当前字的所有出现 Select all occurrences of current word \n \n \n Shift + Alt + → \n 展开选择 Expand selection \n \n \n Shift + Alt + ← \n 缩小选择 Shrink selection \n \n \n Shift + Alt + （拖动鼠标） \n 列（框）选择 Column (box) selection \n \n \n Ctrl + Shift + Alt +（箭头键） \n 列（框）选择 Column (box) selection \n \n \n Ctrl + Shift + Alt + PgUp / PgDown \n 列（框）选择页上/下 Column (box) selection page up/down \n 丰富的语言编辑Rich languages editing \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n Ctrl + 空格 \n 触发建议 Trigger suggestion \n \n \n Ctrl + Shift + Space \n 触发器参数提示 Trigger parameter hints \n \n \n Shift + Alt + F \n 格式化文档 Format document \n \n \n Ctrl + K Ctrl + F \n 格式选定区域 Format selection \n \n \n F12 \n 转到定义 Go to Definition \n \n \n Alt + F12 \n Peek定义 Peek Definition \n \n \n Ctrl + K F12 \n 打开定义到边 Open Definition to the side \n \n \n Ctrl + . \n 快速解决 Quick Fix \n \n \n Shift + F12 \n 显示引用 Show References \n \n \n F2 \n 重命名符号 Rename Symbol \n \n \n Ctrl + K Ctrl + X \n 修剪尾随空格 Trim trailing whitespace \n \n \n Ctrl + K M \n 更改文件语言 Change file language \n 编辑器管理Editor management \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n Ctrl + F4, Ctrl + W \n 关闭编辑器 Close editor \n \n \n Ctrl + K F \n 关闭文件夹 Close folder \n \n \n Ctrl + \\ \n 拆分编辑器 Split editor \n \n \n Ctrl + 1 / 2 / 3 \n 聚焦到第 1，第 2 或第 3 编辑器组 Focus into 1st, 2nd or 3rd editor group \n \n \n Ctrl + K Ctrl + ← / → \n 聚焦到上一个/下一个编辑器组 Focus into previous/next editor group \n \n \n Ctrl + Shift + PgUp / PgDown \n 向左/向右移动编辑器 Move editor left/right \n \n \n Ctrl + K ← / → \n 移动活动编辑器组 Move active editor group \n 文件管理File management \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n Ctrl + N \n 新文件 New File \n \n \n Ctrl + O \n 打开文件... Open File... \n \n \n Ctrl + S \n 保存 Save \n \n \n Ctrl + Shift + S \n 另存为... Save As... \n \n \n Ctrl + K S \n 全部保存 Save All \n \n \n Ctrl + F4 \n 关闭 Close \n \n \n Ctrl + K Ctrl + W \n 关闭所有 Close All \n \n \n Ctrl + Shift + T \n 重新打开关闭的编辑器 Reopen closed editor \n \n \n Ctrl + K Enter \n 输入保持打开 Enter Keep Open \n \n \n Ctrl + Tab \n 打开下一个 Open next \n \n \n Ctrl + Shift + Tab \n 打开上一个 Open previous \n \n \n Ctrl + K P \n 复制活动文件的路径 Copy path of active file \n \n \n Ctrl + K R \n 显示资源管理器中的活动文件 Reveal active file in Explorer \n \n \n Ctrl + K O \n 显示新窗口/实例中的活动文件 Show active file in new window/instance \n 显示Display \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n F11 \n 切换全屏 Toggle full screen \n \n \n Shift + Alt + 0 \n 切换编辑器布局 Toggle editor layout \n \n \n Ctrl + = / - \n 放大/缩小 Zoom in/out \n \n \n Ctrl + B \n 切换侧栏可见性 Toggle Sidebar visibility \n \n \n Ctrl + Shift + E \n 显示浏览器/切换焦点 Show Explorer / Toggle focus \n \n \n Ctrl + Shift + F \n 显示搜索 Show Search \n \n \n Ctrl + Shift + G \n 显示 Git Show Git \n \n \n Ctrl + Shift + D \n 显示调试 Show Debug \n \n \n Ctrl + Shift + X \n 显示扩展 Show Extensions \n \n \n Ctrl + Shift + H \n 替换文件 Replace in files \n \n \n Ctrl + Shift + J \n 切换搜索详细信息 Toggle Search details \n \n \n Ctrl + Shift + C \n 打开新命令提示符/终端 Open new command prompt/terminal \n \n \n Ctrl + Shift +U \n 显示输出面板 Show Output panel \n \n \n Ctrl + Shift + V \n 切换 Markdown 预览 Toggle Markdown preview \n \n \n Ctrl + K V \n 从旁边打开 Markdown 预览 Open Markdown preview to the side \n \n \n Ctrl + K Z \n 打开禅模式（ Esc 键退出） Zen Mode (Esc Esc to ecit) \n 调试Debug \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n F9 \n 切换断点 Toggle breakpoint \n \n \n F5 \n 开始/继续 Start/Continue \n \n \n Shift + F5 \n 停止 Stop \n \n \n F11 / Shift + F11 \n 下一步/上一步 Step into/out \n \n \n F10 \n 跳过 Step over \n \n \n Ctrl + K Ctrl + I \n 显示悬停 Show hover \n 集成终端Integrated terminal \n \n \n \n 按 Press \n 功能 Function \n \n \n \n \n Ctrl + ` \n 显示集成终端 Show integrated terminal \n \n \n Ctrl + Shift + ` \n 创建新终端 Create new terminal \n \n \n Ctrl + C \n 复制选定 Copy selection \n \n \n Ctrl + V \n 粘贴到活动端子 Paste into active terminal \n \n \n Ctrl + ↑ / ↓ \n 向上/向下滚动 Scroll up/down \n \n \n Shift + PgUp / PgDown \n 向上/向下滚动页面 Scroll page up/down \n \n \n Ctrl + Home / End \n 滚动到顶部/底部 Scroll to top/bottom \n VSCode插件 \n \n https://github.com/eclipse/openvsx \n https://github.com/EclipseFdn/open-vsx.org \n \n \n LiveServer  https://github.com/ritwickdey/vscode-live-server-plus-plus \n \n https://github.com/ritwickdey/vscode-live-server \n \n \n https://github.com/redhat-developer \n https://github.com/vscode-icons/vscode-icons \n 比较  https://github.com/moshfeu/vscode-compare-folders \n https://github.com/Axosoft/vscode-gitlens \n 协作  https://github.com/MicrosoftDocs/live-share \n https://github.com/njpanderson/push  类似于jet brains的 Deployment Automatic Upload \n AI  https://github.com/timkmecl/chatgpt-vscode \n https://github.com/mpociot/chatgpt-vscode \n https://github.com/tzmartin/stablecode-vscode \n https://github.com/continuedev/continue \n https://github.com/cline/cline \n 配色  https://github.com/nealmckee/penumbra \n 禁用规则  https://github.com/lvjiaxuan/vscode-eslint-disable \n 前端提示  https://github.com/Simon-He95/vscode-common-intellisense \n https://github.com/Simon-He95/common-intellisense \n CSS Flex与Grid布局  https://github.com/xutao-o/css-flex-code \n \n \n https://github.com/Serpen/VBS-VSCode \n https://github.com/karb0f0s/vscode-vbscript \n https://github.com/Luncher91/VBScript-vscode \n \n translate-var \n \n https://marketplace.visualstudio.com/items?itemName=svenzhao.var-translation \n \n \n 使用翻译api将其他语言到英文,转换成常见的变量命名形式 \n \n \n PHP插件 \n \n php Intelephense \n \n HTML插件 \n \n JS-CSS-HTML Formatter \n ESLint \n \n XML格式化 \n \n https://marketplace.visualstudio.com/items?itemName=mikeburgh.xml-format \n \n Python插件 \n \n autopep8 \n \n \n 格式化代码 \n \n \n 用pip安装 \n \n pip  install  autopep8\n \n \n 在设置中加入 \n \n "python.formatting.provider": "autopep8"\n \n \n pep8 \n \n \n 检查代码错误 \n \n \n 用pip安装 \n \n pip  install  pep8\n \n \n 在设置中加入 \n \n "python.linting.pep8Enabled": true\n \n \n pylint \n \n \n 用pip安装 \n \n pip  install  pylint\n \n \n 在设置中加入 \n \n "python.linting.pylintEnabled": true\n \n \n flake8 \n \n \n 用pip安装 \n \n pip  install  flake8\n \n \n 在设置中加入 \n \n "python.linting.flake8Enabled": true\n \n markdown \n \n markdown-toc \n \n Cloud Toolkit \n \n 帮助开发者更高效地开发、测试、诊断并部署应用。通过插件，可以将本地应用一键部署到任意服务器 \n \n \n https://marketplace.visualstudio.com/items?itemName=alibabacloud-cloudtoolkit.toolkit-vscode \n \n File Header \n \n 生成注释  https://github.com/OBKoro1/koro1FileHeader \n https://github.com/caizhengxin/vscodefileheader \n https://github.com/bookwormdevelopment/file-header \n https://github.com/Raymondhsm/fileHeader \n https://github.com/arjunkomath/js-file-header-vscode \n https://github.com/DMXL/js-file-header-vscode \n https://github.com/zhaopengme/vscode-fileheader \n \n',createdTime:1761814324e3},{title:"软件安全",frontmatter:{description:"https://github.com/yeahhub/Hacking-Security-Ebooks\nhttps://github.com/ossf/wg-best-practices-os-developers\nhttps://github.com/farhanashrafdev/90DaysOfCyberSecurity\nhttps://github.com/EvilAnne/lzCloudSecurity\nhttps://github.com/carlospolop/hacktricks\nhttps://github.com/SafeBreach-Labs\nhttps://github.com/Threekiii/Awesome-Redteam\nhttps://github.com/knownsec\nLinux服务器加固指南 https://github.com/imthenachoman/How-To-Secure-A-Linux-Server\n漏洞提交协议 https://github.com/ossf/osv-schema\n    https://github.com/google/osv-scanner\n    https://github.com/google/osv.dev\n    https://github.com/google/osv\n    https://github.com/CloudSecurityAlliance\n    https://github.com/RustSec/advisory-db\n    https://github.com/pypa/advisory-database\n查找漏洞 https://github.com/aquasecurity/trivy\nhttps://github.com/trufflesecurity/trufflehog\nhttps://github.com/socfortress/Wazuh-Rules\n检测防止泄密 https://github.com/gitleaks/gitleaks\n加密工具 https://github.com/guyoung/CaptfEncoder\n黑客工具 https://github.com/Z4nzu/hackingtool\nhttps://github.com/OWASP\n    预防CSRF和XSRF攻击\nhttps://github.com/kargisimos/offensive-bookmarks\nhttps://github.com/ZeroMemoryEx/Amsi-Killer\nhttps://github.com/makoto56/penetration-suite-toolkit\nhttps://github.com/swisskyrepo/PayloadsAllTheThings\n内网渗透 https://github.com/BloodHoundAD/BloodHound\nhttps://github.com/Orange-Cyberdefense\nhttps://github.com/zan8in/afrog\nhttps://github.com/OJ/gobuster\n    https://sourceforge.net/projects/gobuster.mirror\nhttps://github.com/laramies/theHarvester\n    https://sourceforge.net/projects/theharvester.mirror\n分析网站 https://github.com/Lissy93/web-check\nhttps://github.com/teler-sh\nhttps://github.com/Lookyloo/lookyloo\nhttps://github.com/dgtlmoon/changedetection.io\nhttps://github.com/yoshi-pi/echoserver\nhttps://github.com/danielmiessler/SecLists\nhttps://github.com/projectdiscovery/nuclei-templates\nhttps://github.com/ysrc\nhttps://github.com/rbsec/sslscan\n    网络安全的第一道防线：深入探索sslscan在SSL/TLS证书安全检测中的原理与实践\n子域扫描 https://github.com/ARPSyndicate/puncia\nhttps://github.com/shadow1ng/fscan\nhttps://github.com/jaeles-project/jaeles\n风险控制 https://github.com/WalterInSH/risk-management-note\nhttps://github.com/Contrast-Security-OSS\nhttps://github.com/Qihoo360/WatchAD2.0\n收集Windows日志 https://github.com/cisagov/LME\nhttps://github.com/nsacyber\n安全测试平台 https://github.com/yaklang/yakit\n漏洞POC知识库 https://github.com/Threekiii/Awesome-POC\nJava安全 https://github.com/HackJava/HackJava\nhttps://github.com/Y4Sec-Team\n安全扫描 https://github.com/CISOfy/lynis\nhttps://github.com/lcvvvv/kscan\nhttps://github.com/jeremylong/DependencyCheck\n规避深度包检测 https://github.com/xvzc/SpoofDPI\n教育目的网络钓鱼工具 https://github.com/htr-tech/zphisher",meta:[{name:"twitter:title",content:"软件安全"},{name:"twitter:description",content:"https://github.com/yeahhub/Hacking-Security-Ebooks\nhttps://github.com/ossf/wg-best-practices-os-developers\nhttps://github.com/farhanashrafdev/90DaysOfCyberSecurity\nhttps://github.com/EvilAnne/lzCloudSecurity\nhttps://github.com/carlospolop/hacktricks\nhttps://github.com/SafeBreach-Labs\nhttps://github.com/Threekiii/Awesome-Redteam\nhttps://github.com/knownsec\nLinux服务器加固指南 https://github.com/imthenachoman/How-To-Secure-A-Linux-Server\n漏洞提交协议 https://github.com/ossf/osv-schema\n    https://github.com/google/osv-scanner\n    https://github.com/google/osv.dev\n    https://github.com/google/osv\n    https://github.com/CloudSecurityAlliance\n    https://github.com/RustSec/advisory-db\n    https://github.com/pypa/advisory-database\n查找漏洞 https://github.com/aquasecurity/trivy\nhttps://github.com/trufflesecurity/trufflehog\nhttps://github.com/socfortress/Wazuh-Rules\n检测防止泄密 https://github.com/gitleaks/gitleaks\n加密工具 https://github.com/guyoung/CaptfEncoder\n黑客工具 https://github.com/Z4nzu/hackingtool\nhttps://github.com/OWASP\n    预防CSRF和XSRF攻击\nhttps://github.com/kargisimos/offensive-bookmarks\nhttps://github.com/ZeroMemoryEx/Amsi-Killer\nhttps://github.com/makoto56/penetration-suite-toolkit\nhttps://github.com/swisskyrepo/PayloadsAllTheThings\n内网渗透 https://github.com/BloodHoundAD/BloodHound\nhttps://github.com/Orange-Cyberdefense\nhttps://github.com/zan8in/afrog\nhttps://github.com/OJ/gobuster\n    https://sourceforge.net/projects/gobuster.mirror\nhttps://github.com/laramies/theHarvester\n    https://sourceforge.net/projects/theharvester.mirror\n分析网站 https://github.com/Lissy93/web-check\nhttps://github.com/teler-sh\nhttps://github.com/Lookyloo/lookyloo\nhttps://github.com/dgtlmoon/changedetection.io\nhttps://github.com/yoshi-pi/echoserver\nhttps://github.com/danielmiessler/SecLists\nhttps://github.com/projectdiscovery/nuclei-templates\nhttps://github.com/ysrc\nhttps://github.com/rbsec/sslscan\n    网络安全的第一道防线：深入探索sslscan在SSL/TLS证书安全检测中的原理与实践\n子域扫描 https://github.com/ARPSyndicate/puncia\nhttps://github.com/shadow1ng/fscan\nhttps://github.com/jaeles-project/jaeles\n风险控制 https://github.com/WalterInSH/risk-management-note\nhttps://github.com/Contrast-Security-OSS\nhttps://github.com/Qihoo360/WatchAD2.0\n收集Windows日志 https://github.com/cisagov/LME\nhttps://github.com/nsacyber\n安全测试平台 https://github.com/yaklang/yakit\n漏洞POC知识库 https://github.com/Threekiii/Awesome-POC\nJava安全 https://github.com/HackJava/HackJava\nhttps://github.com/Y4Sec-Team\n安全扫描 https://github.com/CISOfy/lynis\nhttps://github.com/lcvvvv/kscan\nhttps://github.com/jeremylong/DependencyCheck\n规避深度包检测 https://github.com/xvzc/SpoofDPI\n教育目的网络钓鱼工具 https://github.com/htr-tech/zphisher"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/IDE/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8.html"},{property:"og:type",content:"article"},{property:"og:title",content:"软件安全"},{property:"og:description",content:"https://github.com/yeahhub/Hacking-Security-Ebooks\nhttps://github.com/ossf/wg-best-practices-os-developers\nhttps://github.com/farhanashrafdev/90DaysOfCyberSecurity\nhttps://github.com/EvilAnne/lzCloudSecurity\nhttps://github.com/carlospolop/hacktricks\nhttps://github.com/SafeBreach-Labs\nhttps://github.com/Threekiii/Awesome-Redteam\nhttps://github.com/knownsec\nLinux服务器加固指南 https://github.com/imthenachoman/How-To-Secure-A-Linux-Server\n漏洞提交协议 https://github.com/ossf/osv-schema\n    https://github.com/google/osv-scanner\n    https://github.com/google/osv.dev\n    https://github.com/google/osv\n    https://github.com/CloudSecurityAlliance\n    https://github.com/RustSec/advisory-db\n    https://github.com/pypa/advisory-database\n查找漏洞 https://github.com/aquasecurity/trivy\nhttps://github.com/trufflesecurity/trufflehog\nhttps://github.com/socfortress/Wazuh-Rules\n检测防止泄密 https://github.com/gitleaks/gitleaks\n加密工具 https://github.com/guyoung/CaptfEncoder\n黑客工具 https://github.com/Z4nzu/hackingtool\nhttps://github.com/OWASP\n    预防CSRF和XSRF攻击\nhttps://github.com/kargisimos/offensive-bookmarks\nhttps://github.com/ZeroMemoryEx/Amsi-Killer\nhttps://github.com/makoto56/penetration-suite-toolkit\nhttps://github.com/swisskyrepo/PayloadsAllTheThings\n内网渗透 https://github.com/BloodHoundAD/BloodHound\nhttps://github.com/Orange-Cyberdefense\nhttps://github.com/zan8in/afrog\nhttps://github.com/OJ/gobuster\n    https://sourceforge.net/projects/gobuster.mirror\nhttps://github.com/laramies/theHarvester\n    https://sourceforge.net/projects/theharvester.mirror\n分析网站 https://github.com/Lissy93/web-check\nhttps://github.com/teler-sh\nhttps://github.com/Lookyloo/lookyloo\nhttps://github.com/dgtlmoon/changedetection.io\nhttps://github.com/yoshi-pi/echoserver\nhttps://github.com/danielmiessler/SecLists\nhttps://github.com/projectdiscovery/nuclei-templates\nhttps://github.com/ysrc\nhttps://github.com/rbsec/sslscan\n    网络安全的第一道防线：深入探索sslscan在SSL/TLS证书安全检测中的原理与实践\n子域扫描 https://github.com/ARPSyndicate/puncia\nhttps://github.com/shadow1ng/fscan\nhttps://github.com/jaeles-project/jaeles\n风险控制 https://github.com/WalterInSH/risk-management-note\nhttps://github.com/Contrast-Security-OSS\nhttps://github.com/Qihoo360/WatchAD2.0\n收集Windows日志 https://github.com/cisagov/LME\nhttps://github.com/nsacyber\n安全测试平台 https://github.com/yaklang/yakit\n漏洞POC知识库 https://github.com/Threekiii/Awesome-POC\nJava安全 https://github.com/HackJava/HackJava\nhttps://github.com/Y4Sec-Team\n安全扫描 https://github.com/CISOfy/lynis\nhttps://github.com/lcvvvv/kscan\nhttps://github.com/jeremylong/DependencyCheck\n规避深度包检测 https://github.com/xvzc/SpoofDPI\n教育目的网络钓鱼工具 https://github.com/htr-tech/zphisher"},{property:"og:url",content:"https://bajins.com/IDE/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"软件安全"},{itemprop:"description",content:"https://github.com/yeahhub/Hacking-Security-Ebooks\nhttps://github.com/ossf/wg-best-practices-os-developers\nhttps://github.com/farhanashrafdev/90DaysOfCyberSecurity\nhttps://github.com/EvilAnne/lzCloudSecurity\nhttps://github.com/carlospolop/hacktricks\nhttps://github.com/SafeBreach-Labs\nhttps://github.com/Threekiii/Awesome-Redteam\nhttps://github.com/knownsec\nLinux服务器加固指南 https://github.com/imthenachoman/How-To-Secure-A-Linux-Server\n漏洞提交协议 https://github.com/ossf/osv-schema\n    https://github.com/google/osv-scanner\n    https://github.com/google/osv.dev\n    https://github.com/google/osv\n    https://github.com/CloudSecurityAlliance\n    https://github.com/RustSec/advisory-db\n    https://github.com/pypa/advisory-database\n查找漏洞 https://github.com/aquasecurity/trivy\nhttps://github.com/trufflesecurity/trufflehog\nhttps://github.com/socfortress/Wazuh-Rules\n检测防止泄密 https://github.com/gitleaks/gitleaks\n加密工具 https://github.com/guyoung/CaptfEncoder\n黑客工具 https://github.com/Z4nzu/hackingtool\nhttps://github.com/OWASP\n    预防CSRF和XSRF攻击\nhttps://github.com/kargisimos/offensive-bookmarks\nhttps://github.com/ZeroMemoryEx/Amsi-Killer\nhttps://github.com/makoto56/penetration-suite-toolkit\nhttps://github.com/swisskyrepo/PayloadsAllTheThings\n内网渗透 https://github.com/BloodHoundAD/BloodHound\nhttps://github.com/Orange-Cyberdefense\nhttps://github.com/zan8in/afrog\nhttps://github.com/OJ/gobuster\n    https://sourceforge.net/projects/gobuster.mirror\nhttps://github.com/laramies/theHarvester\n    https://sourceforge.net/projects/theharvester.mirror\n分析网站 https://github.com/Lissy93/web-check\nhttps://github.com/teler-sh\nhttps://github.com/Lookyloo/lookyloo\nhttps://github.com/dgtlmoon/changedetection.io\nhttps://github.com/yoshi-pi/echoserver\nhttps://github.com/danielmiessler/SecLists\nhttps://github.com/projectdiscovery/nuclei-templates\nhttps://github.com/ysrc\nhttps://github.com/rbsec/sslscan\n    网络安全的第一道防线：深入探索sslscan在SSL/TLS证书安全检测中的原理与实践\n子域扫描 https://github.com/ARPSyndicate/puncia\nhttps://github.com/shadow1ng/fscan\nhttps://github.com/jaeles-project/jaeles\n风险控制 https://github.com/WalterInSH/risk-management-note\nhttps://github.com/Contrast-Security-OSS\nhttps://github.com/Qihoo360/WatchAD2.0\n收集Windows日志 https://github.com/cisagov/LME\nhttps://github.com/nsacyber\n安全测试平台 https://github.com/yaklang/yakit\n漏洞POC知识库 https://github.com/Threekiii/Awesome-POC\nJava安全 https://github.com/HackJava/HackJava\nhttps://github.com/Y4Sec-Team\n安全扫描 https://github.com/CISOfy/lynis\nhttps://github.com/lcvvvv/kscan\nhttps://github.com/jeremylong/DependencyCheck\n规避深度包检测 https://github.com/xvzc/SpoofDPI\n教育目的网络钓鱼工具 https://github.com/htr-tech/zphisher"}]},regularPath:"/IDE/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8.html",relativePath:"IDE/软件安全.md",key:"v-5d43a8c2",path:"/IDE/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"漏洞练习平台",slug:"漏洞练习平台"},{level:2,title:"花式扫描器",slug:"花式扫描器"},{level:2,title:"信息搜集工具",slug:"信息搜集工具"},{level:2,title:"Windows域渗透工具",slug:"windows域渗透工具"},{level:2,title:"Fuzz",slug:"fuzz"},{level:2,title:"漏洞利用及攻击框架",slug:"漏洞利用及攻击框架"},{level:2,title:"中间人攻击及钓鱼",slug:"中间人攻击及钓鱼"},{level:2,title:"密码破解",slug:"密码破解"},{level:2,title:"二进制及代码分析工具",slug:"二进制及代码分析工具"},{level:2,title:"EXP编写框架及工具",slug:"exp编写框架及工具"},{level:2,title:"隐写",slug:"隐写"},{level:2,title:"各类安全资料",slug:"各类安全资料"},{level:2,title:"各类CTF资源",slug:"各类ctf资源"},{level:2,title:"各类编程资源",slug:"各类编程资源"},{level:2,title:"福利",slug:"福利"},{level:2,title:"甲方安全工程师生存指南",slug:"甲方安全工程师生存指南"},{level:2,title:"蜜罐",slug:"蜜罐"},{level:2,title:"远控",slug:"远控"},{level:2,title:"工具合集",slug:"工具合集"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 软件安全 \n Flag 漏洞练习平台 花式扫描器 信息搜集工具 Windows域渗透工具 Fuzz 漏洞利用及攻击框架 中间人攻击及钓鱼 密码破解 二进制及代码分析工具 EXP编写框架及工具 隐写 各类安全资料 各类CTF资源 各类编程资源 福利 甲方安全工程师生存指南 蜜罐 远控 工具合集 \n Flag \n \n 系统及软件方面的漏洞渗透测试 \n \n \n https://github.com/yeahhub/Hacking-Security-Ebooks \n https://github.com/ossf/wg-best-practices-os-developers \n https://github.com/farhanashrafdev/90DaysOfCyberSecurity \n https://github.com/EvilAnne/lzCloudSecurity \n https://github.com/carlospolop/hacktricks \n https://github.com/SafeBreach-Labs \n https://github.com/Threekiii/Awesome-Redteam \n https://github.com/knownsec \n Linux服务器加固指南  https://github.com/imthenachoman/How-To-Secure-A-Linux-Server \n 漏洞提交协议  https://github.com/ossf/osv-schema \n \n https://github.com/google/osv-scanner \n https://github.com/google/osv.dev \n https://github.com/google/osv \n https://github.com/CloudSecurityAlliance \n https://github.com/RustSec/advisory-db \n https://github.com/pypa/advisory-database \n \n \n 查找漏洞  https://github.com/aquasecurity/trivy \n https://github.com/trufflesecurity/trufflehog \n https://github.com/socfortress/Wazuh-Rules \n 检测防止泄密  https://github.com/gitleaks/gitleaks \n 加密工具  https://github.com/guyoung/CaptfEncoder \n 黑客工具  https://github.com/Z4nzu/hackingtool \n https://github.com/OWASP \n \n 预防CSRF和XSRF攻击 \n \n \n https://github.com/kargisimos/offensive-bookmarks \n https://github.com/ZeroMemoryEx/Amsi-Killer \n https://github.com/makoto56/penetration-suite-toolkit \n https://github.com/swisskyrepo/PayloadsAllTheThings \n 内网渗透  https://github.com/BloodHoundAD/BloodHound \n https://github.com/Orange-Cyberdefense \n https://github.com/zan8in/afrog \n https://github.com/OJ/gobuster \n \n https://sourceforge.net/projects/gobuster.mirror \n \n \n https://github.com/laramies/theHarvester \n \n https://sourceforge.net/projects/theharvester.mirror \n \n \n 分析网站  https://github.com/Lissy93/web-check \n https://github.com/teler-sh \n https://github.com/Lookyloo/lookyloo \n https://github.com/dgtlmoon/changedetection.io \n https://github.com/yoshi-pi/echoserver \n https://github.com/danielmiessler/SecLists \n https://github.com/projectdiscovery/nuclei-templates \n https://github.com/ysrc \n https://github.com/rbsec/sslscan \n \n 网络安全的第一道防线：深入探索sslscan在SSL/TLS证书安全检测中的原理与实践 \n \n \n 子域扫描  https://github.com/ARPSyndicate/puncia \n https://github.com/shadow1ng/fscan \n https://github.com/jaeles-project/jaeles \n 风险控制  https://github.com/WalterInSH/risk-management-note \n https://github.com/Contrast-Security-OSS \n https://github.com/Qihoo360/WatchAD2.0 \n 收集Windows日志  https://github.com/cisagov/LME \n https://github.com/nsacyber \n 安全测试平台  https://github.com/yaklang/yakit \n 漏洞POC知识库  https://github.com/Threekiii/Awesome-POC \n Java安全  https://github.com/HackJava/HackJava \n https://github.com/Y4Sec-Team \n 安全扫描  https://github.com/CISOfy/lynis \n https://github.com/lcvvvv/kscan \n https://github.com/jeremylong/DependencyCheck \n 规避深度包检测  https://github.com/xvzc/SpoofDPI \n 教育目的网络钓鱼工具  https://github.com/htr-tech/zphisher \n \n \n https://github.com/Avienma/DumpHash \n https://github.com/Binject/exec2shell \n 漏洞练习平台 \n WebGoat漏洞练习平台 \n \n https://github.com/WebGoat/WebGoat \n \n webgoat-legacy漏洞练习平台 \n \n https://github.com/WebGoat/WebGoat-Legacy \n \n zvuldirll漏洞练习平台 \n \n https://github.com/710leo/ZVulDrill \n \n vulapps漏洞练习平台 \n \n https://github.com/Medicean/VulApps \n \n dvwa漏洞练习平台 \n \n https://github.com/RandomStorm/DVWA \n \n **数据库注入练习平台 ** \n \n https://github.com/Audi-1/sqli-labs \n \n 用node编写的漏洞练习平台，like OWASP NodeGoat \n \n https://github.com/cr0hn/vulnerable-node \n \n Ruby编写的一款工具，生成含漏洞的虚拟机 \n \n https://github.com/cliffe/secgen \n 花式扫描器 \n \n 检测感染Fractureiser  https://github.com/MCRcortex/nekodetector \n https://github.com/fractureiser-investigation/fractureiser \n \n 子域名扫描器 \n \n https://github.com/lijiejie/subDomainsBrute \n https://github.com/aboul3la/Sublist3r \n https://github.com/TheRook/subbrute \n https://github.com/infosec-au/altdns \n \n Linux漏洞扫描 \n \n https://github.com/future-architect/vuls \n \n 基于端口扫描以及关联CVE \n \n https://github.com/m0nad/HellRaiser \n https://github.com/bee-san/RustScan \n \n 漏洞路由扫描器 \n \n https://github.com/jh00nbr/Routerhunter-2.0 \n \n 迷你批量信息泄漏扫描脚本 \n \n https://github.com/lijiejie/BBScan \n \n Waf类型检测工具 \n \n https://github.com/EnableSecurity/wafw00f \n \n 服务器端口弱口令扫描器 \n \n https://github.com/wilson9x1/fenghuangscanner_v3 \n \n Fox-scan扫描器 \n \n https://github.com/fengxuangit/Fox-scan/ \n 信息搜集工具 \n 社工收集器 \n \n https://github.com/n0tr00t/Sreg \n \n Github信息搜集 \n \n https://github.com/sea-god/gitscan \n \n github Repo信息搜集工具 \n \n https://github.com/metac0rtex/GitHarvester \n \n 信息探测及扫描工具 \n \n https://github.com/darryllane/Bluto \n \n 内部网络信息扫描器 \n \n https://github.com/sowish/LNScan \n \n 远程桌面登录扫描器 \n \n https://github.com/linuz/Sticky-Keys-Slayer \n \n 网络基础设施渗透工具 \n \n https://github.com/SECFORCE/sparta \n \n SNMAP密码破解 \n \n \n https://github.com/SECFORCE/SNMP-Brute \n \n \n 5.WEB \n \n \n webshell大合集 \n \n https://github.com/tennc/webshell \n \n 渗透以及web攻击脚本 \n \n https://github.com/brianwrf/hackUtils \n \n web渗透小工具大合集 \n \n https://github.com/rootphantomer/hacktoolsfor_me \n \n XSS数据接收平台 \n \n https://github.com/firesunCN/BlueLotus_XSSReceiver \n \n XSS与CSRF工具 \n \n https://github.com/evilcos/xssor \n \n xss多功能扫描器 \n \n https://github.com/shawarkhanethicalhacker/BruteXSS \n \n web漏洞扫描器 \n \n https://github.com/andresriancho/w3af \n \n WEB漏洞扫描器 \n \n https://github.com/sullo/nikto \n \n 渗透常用小工具包 \n \n https://github.com/leonteale/pentestpackage \n \n web目录扫描器 \n \n https://github.com/maurosoria/dirsearch \n \n web向命令注入检测工具 \n \n https://github.com/stasinopoulos/commix \n \n 自动化SQL注入检查工具 \n \n https://github.com/epinna/tplmap \n \n SSL扫描器 \n \n https://github.com/rbsec/sslscan \n \n 安全工具集合 \n \n https://github.com/codejanus/ToolSuite \n \n apache日志分析器 \n \n https://github.com/mthbernardes/ARTLAS \n \n php代码审计工具 \n \n https://github.com/pwnsdx/BadCode \n \n web指纹识别扫描 \n \n https://github.com/urbanadventurer/whatweb \n \n 检查网站恶意攻击 \n \n https://github.com/ciscocsirt/malspider \n \n wordprees漏洞扫描器 \n \n https://github.com/wpscanteam/wpscan \n \n 固件漏洞扫描器 \n \n https://github.com/misterch0c/firminator_backend \n \n 数据库注入工具 \n \n https://github.com/sqlmapproject/sqlmap \n \n Web代理 \n \n https://github.com/zt2/sqli-hunter \n \n 新版中国菜刀 \n \n https://github.com/Chora10/Cknife \n \n git泄露利用EXP \n \n https://github.com/lijiejie/GitHack \n \n 浏览器攻击框架 \n \n https://github.com/beefproject/beef \n \n 自动化绕过WAF脚本 \n \n https://github.com/khalilbijjou/WAFNinja \n https://github.com/owtf/wafbypasser \n \n http命令行客户端 \n \n https://github.com/jkbrzt/httpie \n \n 浏览器调试利器 \n \n https://github.com/firebug/firebug \n \n DISCUZ漏洞扫描器 \n \n https://github.com/code-scan/dzscan \n \n 自动化代码审计工具 \n \n https://github.com/wufeifei/cobra \n \n 浏览器攻击框架 \n \n https://github.com/julienbedard/browsersploit \n \n tomcat自动后门部署 \n \n https://github.com/mgeeky/tomcatWarDeployer \n \n 网络空间指纹扫描器 \n \n https://github.com/nanshihui/Scan-T \n \n burpsuit之J2EE扫描插件 \n \n https://github.com/ilmila/J2EEScan \n Windows域渗透工具 \n mimikatz明文注入 \n \n https://github.com/gentilkiwi/mimikatz \n \n Powershell渗透库合集 \n \n https://github.com/PowerShellMafia/PowerSploit \n https://github.com/trustedsec/unicorn \n \n Powershell tools合集 \n \n https://github.com/clymb3r/PowerShell \n \n powershell的mimikittenz \n \n https://github.com/putterpanda/mimikittenz \n \n 域渗透教程 \n \n https://github.com/l3m0n/pentest_study \n Fuzz \n Web向Fuzz工具 \n \n https://github.com/xmendez/wfuzz \n \n HTTP暴力破解，撞库攻击脚本 \n \n https://github.com/lijiejie/htpwdScan \n 漏洞利用及攻击框架 \n msf框架 \n \n https://github.com/rapid7/metasploit-framework \n \n pocsscan攻击框架 \n \n https://github.com/erevus-cn/pocscan \n \n Beebeeto攻击框架 \n \n https://github.com/n0tr00t/Beebeeto-framework \n \n 漏洞POC&EXP:ExploitDB官方git版本 \n \n https://github.com/offensive-security/exploit-database \n \n php漏洞代码分析 \n \n https://github.com/80vul/phpcodz \n \n CVE-2016-2107 \n \n https://github.com/FiloSottile/CVE-2016-2107 \n \n CVE-2015-7547 POC \n \n https://github.com/fjserna/CVE-2015-7547 \n \n JAVA反序列化EXP \n \n https://github.com/foxglovesec/JavaUnserializeExploits \n \n Jenkins CommonCollections EXP \n \n https://github.com/CaledoniaProject/jenkins-cli-exploit \n \n CVE-2015-2426 EXP windows内核提权 \n \n https://github.com/vlad902/hacking-team-windows-kernel-lpe \n \n use docker to show web attackphp本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示 \n \n https://github.com/hxer/vulnapp \n \n php7缓存覆写漏洞Demo及相关工具 \n \n https://github.com/GoSecure/php7-opcache-override \n \n XcodeGhost木马样本 \n \n https://github.com/XcodeGhostSource/XcodeGhost \n 中间人攻击及钓鱼 \n 中间人攻击框架 \n \n https://github.com/secretsquirrel/the-backdoor-factory \n https://github.com/secretsquirrel/BDFProxy \n \n https://github.com/byt3bl33d3r/MITMf \n \n \n [Inject code, jam wifi, and spy on wifi users:](Inject code, jam wifi, and spy on wifi users:) \n \n \n https://github.com/DanMcInerney/LANs.py \n \n \n 中间人代理工具 \n \n https://github.com/intrepidusgroup/mallory \n \n wifi钓鱼 \n \n https://github.com/sophron/wifiphisher \n 密码破解 \n 密码破解工具 \n \n https://github.com/shinnok/johnny \n \n 本地存储的各类密码提取利器 \n \n https://github.com/AlessandroZ/LaZagne \n 二进制及代码分析工具 \n 二进制分析工具 \n \n https://github.com/devttys0/binwalk \n https://github.com/ReFirmLabs \n \n 系统扫描器 \n \n https://github.com/quarkslab/binmap \n \n rp \n \n https://github.com/0vercl0k/rp \n \n Windows Exploit Development工具 \n \n https://github.com/lillypad/badger \n \n 二进制静态分析工具（python） \n \n https://github.com/bdcht/amoco \n \n Python Exploit Development Assistance for GDB \n \n https://github.com/longld/peda \n \n 对BillGates Linux Botnet系木马活动的监控工具 \n \n https://github.com/ValdikSS/billgates-botnet-tracker \n \n 木马配置参数提取工具 \n \n https://github.com/kevthehermit/RATDecoders \n \n Shellphish编写的二进制分析工具（CTF向） \n \n https://github.com/angr/angr \n \n 针对python的静态代码分析工具 \n \n https://github.com/yinwang0/pysonar2 \n \n 基于AST变换的简易Javascript反混淆辅助工具 \n \n https://github.com/ChiChou/etacsufbo \n EXP编写框架及工具 \n 二进制EXP编写工具 \n \n https://github.com/t00sh/rop-tool \n \n CTF Pwn 类题目脚本编写框架 \n \n https://github.com/Gallopsled/pwntools \n \n an easy-to-use io library for pwning development \n \n https://github.com/zTrix/zio \n \n 跨平台注入工具 \n \n https://github.com/frida/frida \n 字节码反汇编器/反编译器  https://github.com/zrax/pycdc \n \n 哈希长度扩展攻击EXP \n \n https://github.com/citronneur/rdpy \n 隐写 \n 隐写检测工具 \n \n https://github.com/abeluck/stegdetect \n 各类安全资料 \n data_hacking合集 \n \n https://github.com/ClickSecurity/data_hacking \n \n mobile-security-wiki \n \n https://github.com/exploitprotocol/mobile-security-wiki \n \n 书籍《reverse-engineering-for-beginners》 \n \n https://github.com/veficos/reverse-engineering-for-beginners \n \n 一些信息安全标准及设备配置 \n \n https://github.com/luyg24/IT_security \n \n APT相关笔记 \n \n https://github.com/kbandla/APTnotes \n \n 《DO NOT FUCK WITH A HACKER》 \n \n https://github.com/citypw/DNFWAH \n \n 各类安全脑洞图 \n \n https://github.com/phith0n/Mind-Map \n \n 信息安全流程图 \n \n https://github.com/SecWiki/sec-chart \n 各类CTF资源 \n 近年ctf writeup大全 \n \n https://github.com/ctfs/write-ups-2016 \n https://github.com/ctfs/write-ups-2015 \n https://github.com/ctfs/write-ups-2014 \n \n fbctf竞赛平台Demo \n \n https://github.com/facebook/fbctf \n \n ctf Resources \n \n https://github.com/ctfs/resources \n \n ctf及黑客资源合集 \n \n https://github.com/bt3gl/My-Gray-Hacker-Resources \n \n ctf和安全工具大合集 \n \n https://github.com/zardus/ctf-tools \n \n ctf向 python工具包 \n \n https://github.com/P1kachu/v0lt \n 各类编程资源 \n 大礼包（什么都有） \n \n https://github.com/bayandin/awesome-awesomeness \n \n python资源大全 \n \n https://github.com/jobbole/awesome-python-cn \n \n python任务管理以及命令执行库 \n \n https://github.com/pyinvoke/invoke \n \n python exe打包库 \n \n https://github.com/pyinstaller/pyinstaller \n \n Veil-Evasion免杀项目 \n \n https://github.com/Veil-Framework/Veil-Evasion \n \n py3 爬虫框架 \n \n https://github.com/orf/cyborg \n \n 一个提供底层接口数据包编程和网络协议支持的python库 \n \n https://github.com/CoreSecurity/impacket \n \n python requests 库 \n \n https://github.com/kennethreitz/requests \n \n python 实用工具合集 \n \n https://github.com/mahmoud/boltons \n \n python爬虫系统 \n \n https://github.com/binux/pyspider \n 福利 \n hardsed神器 \n \n https://github.com/yangyangwithgnu/hardseed \n 甲方安全工程师生存指南 \n web索引及日志搜索工具 \n \n https://github.com/thomaspatzke/WASE \n \n 开源日志采集器 \n \n https://github.com/wgliang/logcool \n \n 扫描CS结构的web debuger \n \n https://github.com/Kozea/wdb \n \n 恢复sqlite数据库删除注册信息 \n \n https://github.com/aramosf/recoversqlite/ \n \n gps欺骗检测工具 \n \n https://github.com/zxsecurity/gpsnitch \n \n 应急处置响应框架 \n \n https://github.com/biggiesmallsAG/nightHawkResponse \n \n web安全开发指南 \n \n https://github.com/FallibleInc/security-guide-for-developers \n \n 各个知名厂商漏洞测试报告模板 \n \n https://github.com/juliocesarfort/public-pentesting-reports \n \n linux下恶意代码检测包 \n \n https://github.com/rfxn/linux-malware-detect \n \n 操作系统运行指标可视化框架 \n \n https://github.com/facebook/osquery \n \n 恶意代码分析系统 \n \n https://github.com/cuckoosandbox/cuckoo \n \n 定期搜索及存储web应用 \n \n https://github.com/Netflix/Scumblr \n \n 事件响应框架 \n \n https://github.com/google/grr \n \n 综合主机监控检测平台 \n \n https://github.com/ossec/ossec-hids \n \n 分布式实时数字取证系统 \n \n https://github.com/mozilla/mig \n \n Microsoft & Unix 文件系统及硬盘取证工具 \n \n https://github.com/sleuthkit/sleuthkit \n 蜜罐 \n SSH蜜罐 \n \n https://github.com/desaster/kippo \n \n 蜜罐集合资源 \n \n https://github.com/paralax/awesome-honeypots \n \n kippo进阶版蜜罐 \n \n https://github.com/micheloosterhof/cowrie \n \n SMTP 蜜罐 \n \n https://github.com/awhitehatter/mailoney \n \n web应用程序蜜罐 \n \n https://github.com/mushorg/glastopf \n \n 数据库蜜罐 \n \n https://github.com/jordan-wright/elastichoney \n \n web蜜罐 \n \n https://github.com/atiger77/Dionaea \n 远控 \n 用gmail充当C&C服务器的后门 \n \n https://github.com/byt3bl33d3r/gcat \n \n 开源的远控 \n \n https://github.com/UbbeLoL/uRAT \n \n c#远控 \n \n https://github.com/hussein-aitlahcen/BlackHole \n 工具合集 \n NoSQL扫描/爆破工具 \n \n https://github.com/torque59/Nosql-Exploitation-Framework \n \n MySQL盲注爆破工具 \n \n https://github.com/missDronio/blindy \n \n 基于SQLMAP的主动和被动资源发现的漏洞扫描工具 \n \n https://github.com/fengxuangit/Fox-scan \n \n 用于SQL Server审计的powershell脚本 \n \n https://github.com/NetSPI/PowerUpSQL \n \n 用于http header中的时间盲注爆破工具，仅针对MySQL / MariaDB \n \n https://github.com/JohnTroony/Blisqy \n \n Java编写的SQL注入工具 \n \n https://github.com/ron190/jsql-injection \n \n 基于搜索引擎的批量SQL注入漏洞扫描器 \n \n https://github.com/Hadesy2k/sqliv \n \n 在sqlmap基础上增加了目录扫描，hash爆破等功能 \n \n https://github.com/s0md3v/sqlmate \n \n Mysys以及MSSQL爆破脱裤工具 \n \n https://github.com/m8r0wn/enumdb \n \n 批量查询网站在乌云是否存在忽略的sql注入漏洞并自动调用sqlmap测试 \n \n https://github.com/9tail123/wooscan \n \n 一个简单的HTTP暴力破解，撞库攻击脚本 \n \n https://github.com/lijiejie/htpwdScan \n \n 根据用户习惯生成弱口令探测字典脚本 \n \n https://github.com/Mebus/cupp \n \n Go写的协程版的ssh \\redis \\ mongodb弱口令破解工具 \n \n https://github.com/netxfly/crack_ssh \n \n 暴力破解字典建立工具 \n \n https://github.com/LandGrey/pydictor \n \n 多线程探测弱口令 \n \n https://github.com/shengqi158/weak_password_detect \n \n 支持测试CSRF，Clickjacking，Cloudflare和WAF的弱口令探测器 \n \n https://github.com/s0md3v/Blazy \n \n 对CiscoVPN，Citrix Gateway等各类服务进行弱口令检测的脚本 \n \n https://github.com/MooseDojo/myBFF \n \n 物联网设备默认密码扫描检测工具 \n \n https://github.com/rapid7/IoTSeeker \n \n 使用nmap扫描IoT设备 \n \n https://github.com/shodan-labs/iotdb \n \n 路由器设备漏洞扫描利用 \n \n https://github.com/googleinurl/RouterHunterBR \n \n Telnet服务密码撞库 \n \n https://github.com/scu-igroup/telnet-scanner \n \n 自动化信息搜集及渗透测试工具，比较适用于IoT扫描 \n \n https://github.com/viraintel/OWASP-Nettacker \n \n 嵌入式设备漏洞扫描及利用工具 \n \n https://github.com/threat9/routersploit \n \n 一款XSS扫描器，可暴力注入参数 \n \n https://github.com/shawarkhanethicalhacker/BruteXSS \n \n 小型XSS扫描器，也可检测CRLF，XSS，点击劫持的 \n \n https://github.com/1N3/XSSTracer \n \n PHP版本的反射型xss扫描 \n \n https://github.com/0x584A/fuzzXssPHP \n \n 批量扫描XSS的python脚本 \n \n https://github.com/chuhades/xss_scan \n \n 自动化检测页面是否存在XSS和跨站请求伪造漏洞的浏览器插件 \n \n https://github.com/BlackHole1/autoFindXssAndCsrf \n \n 使用命令行进行XSS批量检测 \n \n https://github.com/shogunlab/shuriken \n \n 可识别和绕过WAF的XSS扫描工具 \n \n https://github.com/s0md3v/XSStrike \n \n 支持GET，POST方式的高效XSS扫描器 \n \n https://github.com/stamparm/DSXS \n \n 企业被搜索引擎收录敏感资产信息监控脚本员工邮箱，子域名，主持人 \n \n https://github.com/laramies/theHarvester \n \n Bing，google，360，zoomeye 等搜索引擎聚合搜索，可用于发现企业被搜索引擎收录的敏感资产信息 \n \n https://github.com/x0day/Multisearch-v2 \n \n 能成抓取搜索引擎隐藏的url，并交由sqlmap，nmap扫描 \n \n https://github.com/Ekultek/Zeus-Scanner \n \n 企业内网基础服务安全扫描框架 \n \n https://github.com/0xbug/Biu-framework \n \n github Repo信息搜集工具 \n \n https://github.com/metac0rtex/GitHarvester \n \n .svn文件夹泄漏利用工具 \n \n https://github.com/shengqi158/svnhack \n \n GitHub敏感信息扫描工具 \n \n https://github.com/repoog/GitPrey \n \n 企业资产，敏感信息GitHub泄露监控系统 \n \n https://github.com/0xbug/Hawkeye \n \n 根据企业关键词进行项目检索以及相应敏感文件和文件内容扫描的工具 \n \n https://github.com/lianfeng30/githubscan \n \n github敏感信息搜索工具 \n \n https://github.com/UnkL4b/GitMiner \n \n ** .git文件夹泄漏利用工具** \n \n https://github.com/lijiejie/GitHack \n \n GitHub敏感信息扫描工具，包括检测提交等 \n \n https://github.com/dxa4481/truffleHog \n \n 自动化对指定域名进行Google hacking搜索并收集信息 \n \n https://github.com/1N3/Goohak \n \n 用于搜索git的承诺中的敏感信息，例如密码，私钥等的客户端工具 \n \n https://github.com/UKHomeOffice/repo-security-scanner \n \n Github敏感信息泄露扫描 \n \n https://github.com/FeeiCN/GSIL \n \n Github泄露巡航工具 \n \n https://github.com/MiSecurity/x-patrol \n \n Web站点信息搜集工具，包括邮箱，电话等信息 \n \n https://github.com/1N3/BlackWidow \n \n 集合多个开源GitHub敏感信息扫描的企业信息泄露巡航工具 \n \n https://github.com/anshumanbh/git-all-secrets \n \n 可以提取网址，电子邮件，文件，网站帐户等的高速爬虫 \n \n https://github.com/s0md3v/Photon \n \n 一款简单的webshell检测工具 \n \n https://github.com/he1m4n6a/findWebshell \n \n 哈勃分析系统，LINUX系统病毒分析及安全检测 \n \n https://github.com/Tencent/HaboMalHunter \n \n 使用python实现的集成ClamAV，ESET，Bitdefender的反病毒引擎 \n \n https://github.com/PlagueScanner/PlagueScanner \n \n 一款高效率PHP-webshell扫描工具 \n \n https://github.com/nbs-system/php-malware-finder \n \n 测试效率高达99%的webshell检测工具 \n \n https://github.com/emposha/PHP-Shell-Detector/ \n \n 一款简洁的的Webshell扫描工具 \n \n https://github.com/erevus-cn/scan_webshell \n \n Webshell扫描工具，支持php / perl / asp / aspx webshell扫描 \n \n https://github.com/emposha/Shell-Detector \n \n 一款木马，僵尸网络分析框架 \n \n https://github.com/m4rco-/dorothy2 \n \n 高级安卓木马病毒分析框架 \n \n https://github.com/droidefense/engine \n \n 基于网络流量的内网探测框架 \n \n https://github.com/lcatro/network_backdoor_scanner \n \n 调用Windows API枚举用户登录信息 \n \n https://github.com/fdiskyou/hunter \n \n 自动化利用XSS入侵内网 \n \n https://github.com/BlackHole1/WebRtcXSS \n \n 目标端口扫描+系统服务指纹识别 \n \n https://github.com/ring04h/wyportmap \n \n 动态多线程敏感信息泄露检测工具 \n \n https://github.com/ring04h/weakfilescan \n \n WAF产品指纹识别 \n \n https://github.com/EnableSecurity/wafw00f \n \n SSL类型识别 \n \n https://github.com/rbsec/sslscan \n \n Web指纹识别 \n \n https://github.com/urbanadventurer/whatweb \n \n Web应用指纹识别 \n \n https://github.com/tanjiti/FingerPrint \n \n 网络爬虫式指纹识别 \n \n https://github.com/nanshihui/Scan-T \n \n 基于Masscan和Zmap的网络扫描器 \n \n https://github.com/OffensivePython/Nscan \n \n 网络资产信息扫描，ICMP存活探测，端口扫描，端口指纹服务识别 \n \n https://github.com/ywolf/F-NAScan \n \n 中间件扫描 \n \n https://github.com/ywolf/F-MiddlewareScan \n \n web路径收集与扫描 \n \n https://github.com/maurosoria/dirsearch \n \n C段横幅与路径扫描 \n \n https://github.com/x0day/bannerscan \n \n 端口服务扫描 \n \n https://github.com/RASSec/RASscan \n \n waf自动暴破 \n \n https://github.com/3xp10it/bypass_waf \n \n 尝试找出cdn背后的真实ip \n \n https://github.com/3xp10it/xcdn \n \n 基于Bing搜索引擎的C段/旁站查询，多线程，支持API \n \n https://github.com/Xyntax/BingC \n \n 多线程WEB目录爆破工具 \n \n https://github.com/Xyntax/DirBrute \n \n 一个爬虫式的网段Web主机发现小工具 \n \n https://github.com/zer0h/httpscan \n \n Thorn上实现的分布式任务分发的ip端口漏洞扫描器 \n \n https://github.com/lietdai/doom \n \n 类似zgrab的快速TCP指纹抓取解析工具，支持更多协议 \n \n https://github.com/chichou/grab.js \n \n CDN识别，检测 \n \n https://github.com/Nitr4x/whichCDN \n \n 基于爬虫的web路径扫描器 \n \n https://github.com/secfree/bcrpscan \n \n 服务器ssh配置信息扫描 \n \n https://github.com/mozilla/ssh_scan \n \n 针对域名及其子域名的资产数据检测/扫描，包括http / https检测等 \n \n https://github.com/18F/domain-scan \n \n 域名资产收集及指纹识别工具 \n \n https://github.com/ggusoft/inforfinder \n \n CMS识别python gevent实现 \n \n https://github.com/boy-hack/gwhatweb \n \n 敏感文件扫描/二次判断降低误报率/扫描内容规则化/多目录扫描 \n \n https://github.com/Mosuan/FileScan \n \n 基于爬虫的动态敏感文件探测工具 \n \n https://github.com/Xyntax/FileSensor \n \n web路径扫描工具 \n \n https://github.com/deibit/cansina \n \n 网络设备web服务指纹扫描与检索 \n \n https://github.com/0xbug/Howl \n \n 目标主机服务ssl类型识别 \n \n https://github.com/mozilla/cipherscan \n \n Web应用fuzz工具，框架，同时可用于web路径/服务扫描 \n \n https://github.com/xmendez/wfuzz \n \n 多线程的后台路径扫描器，也可用于发现重定向漏洞后执行 \n \n https://github.com/s0md3v/Breacher \n \n 弱口令扫描器，不仅支持普通登录页，也支持ssh，mongodb等组件 \n \n https://github.com/ztgrace/changeme \n \n 渗透测试辅助工具，支持分析数据包，解码，端口扫描，IP地址分析等 \n \n https://github.com/medbenali/CyberScan \n \n 基于nmap的扫描器，与cve漏洞关联 \n \n https://github.com/m0nad/HellRaiser \n \n 基于nmap的高级漏洞扫描器，命令行环境使用 \n \n https://github.com/scipag/vulscan \n \n web应用信息搜集工具 \n \n https://github.com/jekyc/wig \n \n 围绕web服务的域名进行信息收集和“域传送”等漏洞扫描，也支持针对背后的服务器端口扫描等 \n \n https://github.com/eldraco/domain_analyzer \n \n 基于Nikto扫描规则的被动式路径扫描以及信息爬虫 \n \n https://github.com/cloudtracer/paskto \n \n 快速识别WEB服务器类型，CMS类型，WAF类型，WHOIS信息，以及语言框架 \n \n https://github.com/zerokeeper/WebEye \n \n 用于检查web服务的http header的安全性 \n \n https://github.com/m3liot/shcheck \n \n 一款高效快捷的敏感文件扫描工具 \n \n https://github.com/aipengjie/sensitivefilescan \n \n 通过字典穷举，google，robots.txt等途径的跨平台后台管理路径扫描器 \n \n https://github.com/fnk0c/cangibrina \n \n 常规CMS指纹识别 \n \n https://github.com/n4xh4ck5/CMSsc4n \n \n WAF指纹识别及自动化绕过工具 \n \n https://github.com/Ekultek/WhatWaf \n \n 网络应用模糊工具，框架，同时可用于网络路径/服务扫描 \n \n https://github.com/dzonerzy/goWAPT \n \n web敏感目录/信息泄漏扫描脚本 \n \n https://github.com/blackye/webdirdig \n \n 用于网站或IP地址的信息收集工具 \n \n https://github.com/GitHackTools/BillCipher \n \n 通过扫描全网获得真实IP的自动化程序 \n \n https://github.com/boy-hack/w8fuckcdn \n \n 分布式WEB指纹识别平台 \n \n https://github.com/boy-hack/w11scan \n \n 爬虫式web目录扫描工具 \n \n https://github.com/Nekmo/dirhunt \n \n Jenkins漏洞探测，用户抓取爆破 \n \n https://github.com/blackye/Jenkins \n \n 首款集成化的Discuz扫描工具 \n \n https://github.com/code-scan/dzscan \n \n 一款简洁优雅的CMS扫描利用框架 \n \n https://github.com/chuhades/CMS-Exploit-Framework \n \n IIS短文件名暴力枚举漏洞利用工具 \n \n https://github.com/lijiejie/IIS_shortname_Scanner \n \n flashxss扫描 \n \n https://github.com/riusksk/FlashScanner \n \n 一个起毛服务器端模板注入漏洞的半自动化工具 \n \n https://github.com/coffeehb/SSTIF \n \n 服务器端模板注入漏洞检测与利用工具 \n \n https://github.com/epinna/tplmap \n \n Docker扫描工具 \n \n https://github.com/cr0hn/dockerscan \n \n 一款精简的wordpress扫描工具 \n \n https://github.com/m4ll0k/WPSeku \n \n 集成化wordpress漏洞利用框架 \n \n https://github.com/rastating/wordpress-exploit-framework \n \n 用于扫描J2EE应用的一款burpsuite插件 \n \n https://github.com/ilmila/J2EEScan \n \n 一款基于perl的strut2的历史漏洞扫描器 \n \n https://github.com/riusksk/StrutScan \n \n 本地文件包含漏洞利用及扫描工具，支持反弹shell \n \n https://github.com/D35m0nd142/LFISuite \n \n 基于Salt Open以及Vulners Linux Audit API的linux漏洞扫描器，支持与JIRA，slack平台结合使用 \n \n https://github.com/0x4D31/salt-scanner \n \n 自动化探测客户端AngularJS模板注入漏洞工具 \n \n https://github.com/tijme/angularjs-csti-scanner \n \n Java编写的IIS短文件名暴力枚举漏洞利用工具 \n \n https://github.com/irsdl/IIS-ShortName-Scanner \n \n 基于WPScan以及WPSeku的优化版wordpress扫描器 \n \n https://github.com/swisskyrepo/Wordpresscan \n \n CMS渗透测试框架 \n \n https://github.com/CHYbeta/cmsPoc \n \n CRLF注入漏洞批量扫描 \n \n https://github.com/rudSarkar/crlf-injector \n \n 自动化扫描内网中存在的由影子经纪人泄露的ETERNAL系列漏洞 \n \n https://github.com/3gstudent/Smbtouch-Scanner \n \n 通过定制化的谷歌搜索引擎进行漏洞页面搜寻及扫描 \n \n https://github.com/utiso/dorkbot \n \n 本地文件包含漏洞利用及扫描工具，支持反弹shell \n \n https://github.com/OsandaMalith/LFiFreak \n \n 用于枚举脚本的GET / POST未知参数字段 \n \n https://github.com/mak-/parameth \n \n struts2的漏洞全版本检测和利用工具 \n \n https://github.com/Lucifer1993/struts-scan \n \n SSL漏洞扫描，例如心脏滴血漏洞等 \n \n https://github.com/hahwul/a2sv \n \n 基于搜索引擎的漏洞网页搜寻 \n \n https://github.com/NullArray/DorkNet \n \n 用于攻击爆破Java RemoteMethod Invocation服务的工具 \n \n https://github.com/NickstaDB/BaRMIe \n \n 扫描js扩展库的常见漏洞 \n \n https://github.com/RetireJS/grunt-retire \n \n 针对的hadoop /火花等大数据平台的的漏洞探测工具 \n \n https://github.com/kotobukki/BDA \n \n RegEx拒绝服务扫描器 \n \n https://github.com/jagracey/Regex-DoS \n \n 使用NMAP扫描的Tor网络上隐藏的“洋葱”服务 \n \n https://github.com/milesrichardson/docker-onion-nmap \n \n Web CMS Exploit工具，包含针对主流CMS的66个不同的漏洞利用 \n \n https://github.com/Moham3dRiahi/XAttacker \n \n 一个迷你的信息泄漏批量扫描脚本 \n \n https://github.com/lijiejie/BBScan \n \n 文件上传漏洞扫描器及利用工具 \n \n https://github.com/almandin/fuxploider \n \n 子域名接管漏洞检测工具，支持30+云服务托管检测 \n \n https://github.com/Ice3man543/SubOver \n \n WordPress的漏洞扫描器，同时也支持敏感文件泄露扫描 \n \n https://github.com/Jamalc0m/wphunter \n \n 检测网站依赖的JavaScript库中存在的已知通用漏洞 \n \n https://github.com/retirejs/retire.js \n \n 自动检测上传功能是否可上传webshell \n \n https://github.com/3xp10it/xupload \n \n CMS指纹识别及自动化渗透测试框架 \n \n https://github.com/mobrine-mob/M0B-tool \n \n 论坛框架vBulletin黑盒漏洞扫描器 \n \n https://github.com/rezasp/vbscan \n \n CMS指纹识别及自动化渗透测试框架 \n \n https://github.com/MrSqar-Ye/BadMod \n \n CMS漏洞检测和利用套件 \n \n https://github.com/Tuhinshubhra/CMSeeK \n \n AWS安全审计工具 \n \n https://github.com/cloudsploit/scans \n \n 针对wp，magento，joomla等CMS的漏洞扫描器及自动利用工具 \n \n https://github.com/radenvodka/SVScanner \n \n OWASP旗下joomla漏洞扫描项目 \n \n https://github.com/rezasp/joomscan \n \n 用于检测因错误配置导致敏感信息暴露的Django应用程序 \n \n https://github.com/6IX7ine/djangohunter \n \n 无线安全审计工具 \n \n https://github.com/savio-code/fern-wifi-cracker/ \n \n Python网络/渗透测试工具 \n \n https://github.com/m4n3dw0lf/PytheM \n \n 无线安全渗透测试套件 \n \n https://github.com/P0cL4bs/WiFi-Pumpkin \n \n 无线网络审计工具，支持2-5GHZ频段 \n \n https://github.com/MisterBianco/BoopSuite \n \n ARP欺骗，无线网络劫持 \n \n https://github.com/DanMcInerney/LANs.py \n \n 检查wifi是否是“大菠萝”所开放的热点，并给予网络评分 \n \n https://github.com/besimaltnok/PiFinger \n \n 自动化无线网络攻击工具wifite的重构版本 \n \n https://github.com/derv82/wifite2 \n \n 基于BBScan via.lijiejie的本地网络扫描 \n \n https://github.com/sowish/LNScan \n \n 基于JavaScript的的本地网络扫描 \n \n https://github.com/SkyLined/LocalNetworkScanner \n \n 白盒代码安全审计系统 \n \n https://github.com/wufeifei/cobra \n \n 静态PHP代码审计 \n \n https://github.com/OneSourceCat/phpvulhunter \n \n 跟踪，分析PHP运行情况的工具 \n \n https://github.com/Qihoo360/phptrace \n \n NodeJS应用代码审计 \n \n https://github.com/ajinabraham/NodeJsScan \n \n Python应用审计 \n \n https://github.com/shengqi158/pyvulhunter \n \n Ruby on Rails应用静态代码分析 \n \n https://github.com/presidentbeef/brakeman \n \n Python应用静态代码审计 \n \n https://github.com/python-security/pyt \n \n WordPress插件代码安全审计 \n \n https://github.com/m4ll0k/WPSploit \n \n 用于扫描PHP应用程序中可能存在SQL漏洞的ADOdb代码 \n \n https://github.com/emanuil/php-reaper \n \n https://github.com/lowjoel/phortress \n 用于检测潜在安全漏洞的PHP静态代码分析工具 \n \n https://github.com/az0ne/AZScanner \n \n 自动漏洞扫描器，子域名爆破，端口扫描，目录爆破，常用框架漏洞检测 ** \n \n https://github.com/blackye/lalascan \n \n 集合owasp top10漏洞扫描和边界资产发现能力的分布式web漏洞扫描框架 \n \n https://github.com/blackye/BkScanner \n \n ysrc出品的被动式漏洞扫描工具 \n \n https://github.com/netxfly/passive_scan \n \n 基于http代理的web漏洞扫描器 \n \n https://github.com/1N3/Sn1per \n \n 自动化扫描器，包括中间件扫描以及设备指纹识别 \n \n https://github.com/RASSec/pentestEr_Fully-automatic-scanner \n \n 定向全自动化渗透测试工具 \n \n https://github.com/3xp10it/3xp10it \n \n 自动化渗透测试框架，支持cdn真实ip查找，指纹识别等 \n \n https://github.com/Lcys/lcyscan \n \n 蟒插件化漏洞扫描器，支持生成扫描报表 \n \n https://github.com/Xyntax/POC-T \n \n 渗透测试插件化并发框架 \n \n https://github.com/v3n0m-Scanner/V3n0M-Scanner \n \n 支持检测SQLI/ XSS / LFI / RFI等漏洞的扫描器 \n \n https://github.com/Skycrab/leakScan \n \n Web图形化的漏洞扫描框架 \n \n https://github.com/zhangzhenfeng/AnyScan \n \n 一款网络化的自动化渗透测试框架 \n \n https://github.com/Tuhinshubhra/RED_HAWK \n \n 一款集成信息收集，漏洞扫描，指纹识别等的多合一扫描工具 \n \n https://github.com/Arachni/arachni \n \n 高度集成化的Web应用漏洞扫描框架，支持REST，RPC等api调用 \n \n https://github.com/infobyte/faraday \n \n 集成化渗透测试辅助平台及漏洞管理平台 \n \n https://github.com/juansacco/exploitpack \n \n 渗透测试集成框架，包含超过38,000+攻击 \n \n https://github.com/swisskyrepo/DamnWebScanner \n \n 基于铬/歌剧插件的被动式漏洞扫描 \n \n https://github.com/anilbaranyelken/tulpar \n \n 支持多种网络漏洞扫描，命令行环境使用 \n \n https://github.com/m4ll0k/Spaghetti \n \n web应用扫描器，支持指纹识别，文件目录爆破，SQL / XSS / RFI等漏洞扫描，也可直接用于struts，ShellShock等扫描 \n \n https://github.com/Yukinoshita47/Yuki-Chan-The-Auto-Pentest \n \n 集成子域名枚举，nmap，waf指纹识别等模块的web应用扫描器 \n \n https://github.com/0xsauby/yasuo \n \n 使用ruby开发的扫描网络中主机存在的第三方web应用服务漏洞 \n \n https://github.com/hatRiot/clusterd \n \n Web应用自动化扫描框架，支持自动化上传webshell \n \n https://github.com/erevus-cn/pocscan \n \n 一款开源Poc调用框架，可轻松调用Pocsuite，Tangscan，Beebeeto，Knowsec老版本POC，可使用docker部署 \n \n https://github.com/TophantTechnology/osprey \n \n 斗象能力中心出品并长期维护的开源漏洞检测框架 \n \n https://github.com/yangbh/Hammer \n \n Web应用漏洞扫描框架 \n \n https://github.com/Lucifer1993/AngelSword \n \n Web应用漏洞扫描框架，基于python3 \n \n https://github.com/secrary/EllaScanner \n \n 被动式漏洞扫描，支持历史cve编号漏洞识别 \n \n https://github.com/zaproxy/zaproxy \n \n OWASP ZAP核心项目出品的综合性渗透测试工具 \n \n https://github.com/sullo/nikto \n \n Web服务综合型扫描器，用于指定目标的资产收集，安全配置缺陷或者安全漏洞扫描 \n \n https://github.com/s0md3v/Striker \n \n 一款多方位信息收集，指纹识别及漏洞扫描工具 \n \n https://github.com/dermotblair/webvulscan \n \n 一款web应用漏洞扫描器，支持扫描反射型以及存储型xss，sql injection等漏洞，支持输出pdf报告 \n \n https://github.com/alienwithin/OWASP-mth3l3m3nt-framework \n \n 渗透测试辅助工具，综合利用框架 \n 基于被动式扫描框架的自动化web漏洞扫描工具 \n \n https://github.com/toyakula/luna \n \n 渗透测试辅助框架，包含信息搜集，无线渗透，网络应用扫描等功能 \n \n https://github.com/Manisso/fsociety \n \n 内置1200+插件的web漏洞扫描框架 \n \n https://github.com/boy-hack/w9scan \n \n Web服务安全评估工具，提供基于windows操作系统的简单.exe应用 \n \n https://github.com/YalcinYolalan/WSSAT \n \n 使用go开发的可扩展以及高并发渗透测试框架 \n \n https://github.com/AmyangXYZ/AssassinGo \n \n 基于Flask应用框架的漏洞扫描系统 \n \n https://github.com/jeffzh3ng/InsectsAwake \n \n 一个操作上类似metasploit的web应用安全审计框架 \n \n https://github.com/m4ll0k/Galileo \n \n 一款web应用漏洞扫描器，支持扫描反射型以及存储型xss，sql injection等漏洞 \n \n https://github.com/joker25000/Optiva-Framework \n \n 集成104个模块的Web应用程序渗透测试框架 \n \n https://github.com/theInfectedDrake/TIDoS-Framework \n \n 一款APT入侵痕迹扫描器 \n \n https://github.com/Neo23x0/Loki \n \n ICS设备nmap扫描脚本 \n \n https://github.com/w3h/icsmaster/tree/master/nse \n \n SDN安全评估框架 \n \n https://github.com/OpenNetworkingFoundation/DELTA \n \n",createdTime:1761814324e3},{title:"CAS和Shiro内外网访问",frontmatter:{description:"物理方式：可以通过另外搭建搭建两台机器做iptables转发，需要有一个公网IP和一个内网IP，通过iptables把外网请求全部转发到VIP上面\n> ，一台做一个VIP转发，这样就可以实现跨网段的通讯了",meta:[{name:"twitter:title",content:"CAS和Shiro内外网访问"},{name:"twitter:description",content:"物理方式：可以通过另外搭建搭建两台机器做iptables转发，需要有一个公网IP和一个内网IP，通过iptables把外网请求全部转发到VIP上面\n> ，一台做一个VIP转发，这样就可以实现跨网段的通讯了"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Java/CAS-Shiro.html"},{property:"og:type",content:"article"},{property:"og:title",content:"CAS和Shiro内外网访问"},{property:"og:description",content:"物理方式：可以通过另外搭建搭建两台机器做iptables转发，需要有一个公网IP和一个内网IP，通过iptables把外网请求全部转发到VIP上面\n> ，一台做一个VIP转发，这样就可以实现跨网段的通讯了"},{property:"og:url",content:"https://bajins.com/Java/CAS-Shiro.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"CAS和Shiro内外网访问"},{itemprop:"description",content:"物理方式：可以通过另外搭建搭建两台机器做iptables转发，需要有一个公网IP和一个内网IP，通过iptables把外网请求全部转发到VIP上面\n> ，一台做一个VIP转发，这样就可以实现跨网段的通讯了"}]},regularPath:"/Java/CAS-Shiro.html",relativePath:"Java/CAS-Shiro.md",key:"v-5ad62fc1",path:"/Java/CAS-Shiro.html",headers:[{level:2,title:"方案一",slug:"方案一"},{level:2,title:"方案二",slug:"方案二"},{level:2,title:"方案三",slug:"方案三"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' CAS和Shiro内外网访问 \n \n 由于有需求要实现内外网双IP访问同一个应用，但是当前已部署的应用使用的cas+shiro的跳转url在spring的配置xml中写死的，所以需要实现判断来源HOST动态单点登录和跳转 \n \n \n 物理方式：可以通过另外搭建搭建两台机器做iptables转发，需要有一个公网IP和一个内网IP，通过iptables把外网请求全部转发到VIP上面\n，一台做一个VIP转发，这样就可以实现跨网段的通讯了 \n \n 部分响应体中写死了IP需要替换 \n \n 使用Nginx+Lua脚本， body_filter_by_lua* 替换响应体中的IP，也可以使用Nginx内置模块 ngx_http_sub_filter_module  ，或第三方模块 replace-filter-nginx-module \n \n \n 因为替换内容后长度不一致了，需要在 header_filter_by_lua* 中加入 ngx.header.content_length = nil 置空内容长度 \n \n -- body_filter_by_lua_file: \n -- 获取当前响应数据 \n local  chunk ,  eof  =  ngx . arg [ 1 ] ,  ngx . arg [ 2 ] \n local  cjson  =   require ( "cjson" ) ; \n\n local  req_headers  =  ngx . req . get_headers ( )   -- 请求头 \n local  resp_headers  =  ngx . resp . get_headers ( )   -- 响应头 \n\n -- 定义全局变量，收集全部响应 \n if  ngx . ctx . buffered  ==   nil   then \n    ngx . ctx . buffered  =   { } \n end \n\n -- 如果非最后一次响应，将当前响应赋值 \n if  chunk  ~=   ""   and   not  ngx . is_subrequest  then \n    table . insert ( ngx . ctx . buffered ,  chunk ) \n     -- 将当前响应赋值为空，以修改后的内容作为最终响应 \n    ngx . arg [ 1 ]   =   nil \n end \n\n -- 如果为最后一次响应，对所有响应数据进行处理 \n if  eof  then \n     -- 获取所有响应数据 \n     local  whole  =  table . concat ( ngx . ctx . buffered ) \n    ngx . ctx . buffered  =   nil \n    \n     -- 内容有指定IP \n     if  whole\n         -- 判断响应Host是否为客户端访问Host \n         and   not  string . match ( whole ,  ngx . var . http_host ) \n     then \n         -- ngx.log(ngx.ERR, "body_filter_by_lua::::响应内容：》》》\\n", whole, "\\n《《《") \n         -- 替换外网IP，需在server或location中设置以下两个变量 \n         -- set $outerIP "100%.100%.100%.100"; # 外网IP \n         -- set $insideIP  "172%.16%.0%.91"; # 内网IP \n        whole  =  string . gsub ( whole ,  ngx . var . insideIP ,  ngx . var . outerIP ) \n         -- 重新赋值响应数据，以修改后的内容作为最终响应 \n     end \n    ngx . arg [ 1 ]   =  whole\n end \n 方案一 \n \n 使用Nginx反向代理 \n \n \n 缺点很明显：登录CAS的URL中的 service 参数不能替换，而且无法做判断，可自定义程度不高 \n \n location  /test   { \n     proxy_headers_hash_max_size   51200 ; \n     proxy_headers_hash_bucket_size   6400 ; \n     proxy_connect_timeout   500s ; \n     proxy_read_timeout   500s ; \n     proxy_send_timeout   500s ; \n     proxy_pass  http://server/test ; \n    \n     proxy_set_header  Host  $host : $server_port ; \n     #proxy_set_header Host $http_host; \n     #proxy_set_header Host $server_addr:$server_port; \n     proxy_set_header  X-Real-IP  $remote_addr ; \n     proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for ; \n修改响应头中的"Location"和"Refresh"字段，只能替换host部分，参数部分无法替换，非常重要 \nhttps://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_redirect \n     #proxy_redirect $scheme://$server_addr:$server_port/ /; \n     #proxy_redirect $scheme://$server_addr:$server_port/ $scheme://$http_host/; \n     #proxy_redirect ~^http://172.16.0.1:81(.*) http://100.100.100.100:81$1;  \n     proxy_redirect  ~^http://172.16.0.91:81(.*)  $scheme :// $http_host $1 ; \n     #proxy_set_header REMOTE-HOST $server_addr; \n     proxy_set_header  X-FORWARDED-HOST  $server_addr ; \n     proxy_set_header  X-FORWARDED-PORT  $server_port ; \n     proxy_set_header  Referer  $http_referer ; \n     proxy_set_header  Cookie  $http_cookie ; \nresponse中set-cookie的domain转换 \n     #proxy_cookie_domain $server_addr $host;  \n } \n 方案二 \n \n 使用纯Nginx+Lua实现  lua-nginx-module 时序图 ，点击链接后向上滑动 \n \n 完整实现脚本见 https://github.com/bajins/scripts_shell \n \n 后端返回的地址全部填NGINX的内网IP:port（端口内外网是一致的），当为外网IP请求进来时，把URL替换成NGINX的内网IP，返回时替换内网IP为外网IP \n \n \n access_by_lua*  替换请求头Host和 service 参数 \n \n \n 此方式可以使用Nginx全局变量实现，但可自定义程度范围不大 \n \n if  ( $is_args  =  "?" ) { \n  \n } \n if  ( $arg_service ) { \n     set   $arg_service   "http://172.16.0.91:81/test/login" ; \n } \n \n \n header_filter_by_lua*  替换响应头Location和Refresh \n \n \n 其实此方式也可以使用Nginx第三方模块实现： headers-more-nginx-module \n \n 其他人的一些实现 \n \n https://github.com/EsupPortail/nginx-auth-cas-lua \n https://github.com/search?q=nginx+cas \n 方案三 \n 继承 FormAuthenticationFilter 动态改变各个url \n \n 后端继承 FormAuthenticationFilter 并修改 CasRealm.setCasService() 为动态URL（应与访问CAS登录URL携带的 service 参数一致，授权是根据此参数发票） \n \n \n CAS验证前端传的 ticket 所属域（Host）与 CasService 是否一致，不一致将报错： org.jasig.cas.client.validation.TicketValidationException: ticket \'ST-5490-w49WPFydIwcL9bdlY7cq-cas01.example.org\' does not match supplied service. The original service was \'http://x.x.x.x:8080/test/login\' and the supplied service was \'http://172.16.0.91:2931/test/login\' \n 且在浏览器客户端不停地重定向 首页->cas登录->登录带ticket 死循环，查看IP下的Cookie发现ticket其实是在另一个IP下面 \n \n \n 出现此错误的原因是：由于 CasRealm.setCasService() 的值是固定的（这里我并没有修改），然后在lua脚本中替换了CAS登录URL中所有的Host（错误的： http://100.100.100.100:81/cas/login?service=http://100.100.100.100:81/test/login ，包含 service 参数部分被替换，正确的应该是： http://100.100.100.100:81/cas/login?service=http://172.16.0.91:81/test/login ），这是因为在登录之后，CAS中校验授权时会发现票根的URL（ http://172.16.0.91:81/test/login ）与当前访问的应用URL（ http://100.100.100.100:81/test/login ）不一致 \n \n package   com . bajins . common ; \n\n import   java . io . IOException ; \n\n import   javax . servlet . ServletContext ; \n import   javax . servlet . ServletRequest ; \n import   javax . servlet . ServletResponse ; \n import   javax . servlet . http . HttpServletRequest ; \n\n import   org . apache . shiro . cas . CasFilter ; \n import   org . apache . shiro . spring . web . ShiroFilterFactoryBean ; \n import   org . apache . shiro . web . filter . authc . FormAuthenticationFilter ; \n import   org . apache . shiro . web . filter . authc . LogoutFilter ; \n import   org . apache . shiro . web . util . WebUtils ; \n import   org . slf4j . Logger ; \n import   org . slf4j . LoggerFactory ; \n import   org . springframework . context . ApplicationContext ; \n import   org . springframework . util . StringUtils ; \n import   org . springframework . web . context . support . WebApplicationContextUtils ; \n\n import   com . bajins . common . shiro . cas . CasUserRealm ; \n\n /**\n * @Title: ImsAuthenticationFilter.java\n * @Package com.bajins.common\n * @Description: shiro动态改变loginUrl\n * @author: https://www.bajins.com\n * @date: 2021年4月15日 下午3:07:18\n * @version V1.0\n * @Copyright: 2021 bajins.com Inc. All rights reserved.\n */ \n public   class   ImsAuthenticationFilter   extends   FormAuthenticationFilter   { \n\n     private   static   transient   final   Logger  log  =   LoggerFactory . getLogger ( ImsAuthenticationFilter . class ) ; \n\n     private   static   final   String   FLAG   =   "/login?service=" ; \n\n     private   String  clientUrl ; \n     private   String  serverUrl ; \n\n     /**\n     * @return the clientUrl\n     */ \n     public   String   getClientUrl ( )   { \n         return  clientUrl ; \n     } \n\n     /**\n     * @param clientUrl the clientUrl to set\n     */ \n     public   void   setClientUrl ( String  clientUrl )   { \n         this . clientUrl  =  clientUrl ; \n     } \n\n     /**\n     * @return the serverUrl\n     */ \n     public   String   getServerUrl ( )   { \n         return  serverUrl ; \n     } \n\n     /**\n     * @param serverUrl the serverUrl to set\n     */ \n     public   void   setServerUrl ( String  serverUrl )   { \n         this . serverUrl  =  serverUrl ; \n     } \n\n     @Override \n     protected   void   redirectToLogin ( ServletRequest  request ,   ServletResponse  response )   throws   IOException   { \n\n         HttpServletRequest  httpServletRequest  =   ( HttpServletRequest )  request ; \n\n         String  contextPath  =  httpServletRequest . getContextPath ( ) ; \n\n         // url - uri = domain \n         int  len  =  httpServletRequest . getRequestURL ( ) . length ( )   -  httpServletRequest . getRequestURI ( ) . length ( ) ; \n         String  domain  =  httpServletRequest . getRequestURL ( ) . substring ( 0 ,  len ) ; \n\n         /*String reg = "^(192\\\\.168|172\\\\.(1[6-9]|2\\\\d|3[0,1]))(\\\\.(2[0-4]\\\\d|25[0-5]|[0,1]?\\\\d?\\\\d)){2}$"\n                + "|^10(\\\\.([2][0-4]\\\\d|25[0-5]|[0,1]?\\\\d?\\\\d)){3}$";\n        //String reg = "(10|172|192|127)\\\\.([0-1][0-9]{0,2}|[2][0-5]{0,2}|[3-9][0-9]{0,1})\\\\.([0-1][0-9]{0,2}"\n        //        + "|[2][0-5]{0,2}|[3-9][0-9]{0,1})\\\\.([0-1][0-9]{0,2}|[2][0-5]{0,2}|[3-9][0-9]{0,1})";\n        Pattern p = Pattern.compile(reg);\n        Matcher matcher = p.matcher(ipAddress);\n        boolean isIntranet = matcher.find();\n        if (isIntranet || httpServletRequest.getRemoteHost().equals("172.16.0.91")) { // 如果是内网\n            WebUtils.issueRedirect(request, response, domain + "/cas" + loginUrl);\n        } else {\n            \n        }*/ \n\n         // 获取servletContext容器 \n         ServletContext  sc  =  httpServletRequest . getSession ( ) . getServletContext ( ) ; \n         // 获取web环境下spring容器 \n         ApplicationContext  ac  =   WebApplicationContextUtils . getWebApplicationContext ( sc ) ; \n\n         CasUserRealm  casUserRealm  =   ( CasUserRealm )  ac . getBean ( "casUserRealm" ) ; \n         CasFilter  casFilter  =   ( CasFilter )  ac . getBean ( "casFilter" ) ; \n         LogoutFilter  logoutFilter  =   ( LogoutFilter )  ac . getBean ( "logoutFilter" ) ; \n\n         ShiroFilterFactoryBean  shiroFilter  =   ( ShiroFilterFactoryBean )  ac . getBean ( "&shiroFilter" ) ; \n\n         // 根据客户端url中的host动态替换url \n         String  client  =  domain  +  contextPath ; \n         String  clientLoginUrl  =  client  +   "/login" ; \n        casUserRealm . setCasServerUrlPrefix ( domain  +   getServerUrl ( ) ) ; \n        casUserRealm . setCasService ( clientLoginUrl ) ; \n        casFilter . setFailureUrl ( client  +   "/index" ) ; \n        casFilter . setSuccessUrl ( client  +   "/" ) ; \n         // casFilter.setLoginUrl(loginUrl); \n        logoutFilter . setRedirectUrl ( domain  +   getServerUrl ( )   +   FLAG . replace ( "login" ,   "logout" )   +  clientLoginUrl ) ; \n        shiroFilter . setLoginUrl ( domain  +   getServerUrl ( )   +   FLAG   +  clientLoginUrl ) ; \n        log . info ( "login跳转地址：{}" ,   this . getLoginUrl ( ) ) ; \n\n         WebUtils . issueRedirect ( httpServletRequest ,  response ,   this . getLoginUrl ( ) ) ;   // 302跳转 \n     } \n\n     /*@Override\n    protected boolean isAccessAllowed(ServletRequest request, ServletResponse response, Object mappedValue) {\n        return false;\n    }*/ \n\n     /*@Override\n    protected boolean onAccessDenied(ServletRequest request, ServletResponse response) throws Exception {\n        String loginUrl = this.getLoginUrl();\n        Subject subject = getSubject(request, response);\n        if (subject.getPrincipal() == null) {// 表示没有登录，重定向到登录页面\n            saveRequest(request);\n            WebUtils.issueRedirect(request, response, loginUrl);\n        } else {\n            if (StringUtils.hasText(loginUrl)) {\n                WebUtils.issueRedirect(request, response, loginUrl);\n            } else {\n                WebUtils.toHttp(response).sendError(HttpServletResponse.SC_UNAUTHORIZED);\n            }\n        }\n        return true;\n    }*/ \n\n     /**\n     * 获取用户真实IP地址\n     * <p>\n     * 当我们通过request获取客户端IP时，如果对自身服务器做了反向代理。 \n     * 通过request.getRemoteAddr();可能获取到的是代理服务器的IP，而无法获取到用户请求IP\n     *\n     * @param request\n     * @return java.lang.String\n     */ \n     public   static   String   getIpAddress ( HttpServletRequest  request )   { \n         // X-Real-IP：Nginx服务代理 \n         String  ipAddresses  =  request . getHeader ( "X-Real-IP" ) ; \n\n         if   ( ! StringUtils . hasText ( ipAddresses )   ||   "unknown" . equalsIgnoreCase ( ipAddresses ) )   { \n             // Proxy-Client-IP：Apache 服务代理 \n            ipAddresses  =  request . getHeader ( "Proxy-Client-IP" ) ; \n         } \n         if   ( ! StringUtils . hasText ( ipAddresses )   ||   "unknown" . equalsIgnoreCase ( ipAddresses ) )   { \n             // WL-Proxy-Client-IP：WebLogic 服务代理 \n            ipAddresses  =  request . getHeader ( "WL-Proxy-Client-IP" ) ; \n         } \n         if   ( ! StringUtils . hasText ( ipAddresses )   ||   "unknown" . equalsIgnoreCase ( ipAddresses ) )   { \n             // HTTP_CLIENT_IP：有些代理服务器 \n            ipAddresses  =  request . getHeader ( "HTTP_CLIENT_IP" ) ; \n         } \n         if   ( ! StringUtils . hasText ( ipAddresses )   ||   "unknown" . equalsIgnoreCase ( ipAddresses ) )   { \n            ipAddresses  =  request . getHeader ( "HTTP_X_FORWARDED_FOR" ) ; \n         } \n         if   ( ! StringUtils . hasText ( ipAddresses )   ||   "unknown" . equalsIgnoreCase ( ipAddresses ) )   { \n             // X-Forwarded-For：Squid 服务代理 和 Nginx服务代理 \n            ipAddresses  =  request . getHeader ( "X-Forwarded-For" ) ; \n         } \n         // 有些网络通过多层代理，那么会获取到以逗号（,）分割的多个IP，第一个才是真实IP \n         int  index  =  ipAddresses . indexOf ( "," ) ; \n         if   ( index  !=   - 1 )   { \n            ipAddresses  =  ipAddresses . substring ( 0 ,  index ) ; \n         } \n         if   ( ! StringUtils . hasText ( ipAddresses )   ||   "unknown" . equalsIgnoreCase ( ipAddresses ) )   { \n            ipAddresses  =  request . getRemoteAddr ( ) ; \n         } \n         return  ipAddresses ; \n     } \n } \n \n 修改Spring-Shiro配置xml \n < bean   id = " imsAuthenticationFilter "   class = " com.bajins.common.ImsAuthenticationFilter " > \n\t < property   name = " serverUrl "   value = " ${cas.server} "   /> \n\t < property   name = " clientUrl "   value = " ${cas.client} "   /> \n </ bean > \n \x3c!-- Shiro的Web过滤器 --\x3e \n < bean   id = " shiroFilter "   class = " org.apache.shiro.spring.web.ShiroFilterFactoryBean " > \n\t < property   name = " securityManager "   ref = " securityManager "   /> \n\t \x3c!-- 原来写死的配置 --\x3e \n\t \x3c!-- <property name="loginUrl" value="${cas.server}/login?service=${cas.client}/login" /> --\x3e \n\t < property   name = " loginUrl "   value = " /login?service=${cas.client}/login "   /> \n\t < property   name = " unauthorizedUrl "   value = " /unauthorized "   /> \n\t < property   name = " filters " > \n\t\t < util: map > \n\t\t\t \x3c!-- 这里把自定义的过滤器加入 --\x3e \n\t\t\t < entry   key = " authc "   value-ref = " imsAuthenticationFilter "   /> \n\t\t\t < entry   key = " authl "   value-ref = " loginControlFilter "   /> \n\t\t\t < entry   key = " cas "   value-ref = " casFilter "   /> \n\t\t\t < entry   key = " logout "   value-ref = " logoutFilter "   /> \n\t\t\t < entry   key = " casLogout "   value-ref = " casLogoutFilter "   /> \n\t\t </ util: map > \n\t </ property > \n\t \x3c!-- 指定访问地址经过指定Filter过滤 --\x3e \n\t < property   name = " filterChainDefinitions " > \n\t\t < value > \n\t\t\t/common/** = anon\n\t\t\t/css/** = anon\n\t\t\t/js/** = anon\n\t\t\t/fileUpload/**=anon\n\t\t\t/api/** = anon\n\t\t\t/changeLocale=anon\n\t\t\t \x3c!-- 注意：这里不能用自定义的过滤器，否则死循环重定向 --\x3e \n\t\t\t/login = authl,casLogout,cas\n\t\t\t/logout = logout\n\t\t\t \x3c!-- 使用自定义的过滤器 --\x3e \n\t\t\t/** = authc,casLogout,user\n\t\t </ value > \n\t </ property > \n </ bean > \n \n 参考： \n \n 解决CAS内外网双IP访问的问题 \n 双网隔离环境下CAS单点登录的解决方案 \n CAS内外网都能访问配置说明 \n DataViz CAS 单点登录集成 · dataviz \n springboot shiro 多realm多loginUrl设置（动态改变loginUrl）踩坑经历 重定向次数多 \n \n',createdTime:1761814324e3},{title:"JDK安装配置",frontmatter:{description:"https://www.oracle.com/cn/downloads\n    https://www.oracle.com/cn/java/technologies/downloads\n    https://www.oracle.com/java/technologies/downloads/archive\nhttps://www.oracle.com/java\n    https://www.oracle.com/cn/java/technologies/java-ee-glance.html\n版本管理 https://github.com/jingxiang/java-switch\nhttps://github.com/NotoChen/JavaVersionChoice\nhttps://github.com/marchof/java-almanac\n    https://javaalmanac.io\n    https://github.com/foojayio\n        https://foojay.io/almanac/jdk-21\n    https://github.com/HanSolo/discocli\n        https://harmoniccode.blogspot.com\nhttps://github.com/HanSolo/javafinder\nhttps://github.com/HanSolo/JDK-Updater",meta:[{name:"image",content:"https://bajins.com/images/JDK8-25的JEP数量.png"},{name:"twitter:title",content:"JDK安装配置"},{name:"twitter:description",content:"https://www.oracle.com/cn/downloads\n    https://www.oracle.com/cn/java/technologies/downloads\n    https://www.oracle.com/java/technologies/downloads/archive\nhttps://www.oracle.com/java\n    https://www.oracle.com/cn/java/technologies/java-ee-glance.html\n版本管理 https://github.com/jingxiang/java-switch\nhttps://github.com/NotoChen/JavaVersionChoice\nhttps://github.com/marchof/java-almanac\n    https://javaalmanac.io\n    https://github.com/foojayio\n        https://foojay.io/almanac/jdk-21\n    https://github.com/HanSolo/discocli\n        https://harmoniccode.blogspot.com\nhttps://github.com/HanSolo/javafinder\nhttps://github.com/HanSolo/JDK-Updater"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/JDK8-25的JEP数量.png"},{name:"twitter:url",content:"https://bajins.com/Java/JDK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html"},{property:"og:type",content:"article"},{property:"og:title",content:"JDK安装配置"},{property:"og:description",content:"https://www.oracle.com/cn/downloads\n    https://www.oracle.com/cn/java/technologies/downloads\n    https://www.oracle.com/java/technologies/downloads/archive\nhttps://www.oracle.com/java\n    https://www.oracle.com/cn/java/technologies/java-ee-glance.html\n版本管理 https://github.com/jingxiang/java-switch\nhttps://github.com/NotoChen/JavaVersionChoice\nhttps://github.com/marchof/java-almanac\n    https://javaalmanac.io\n    https://github.com/foojayio\n        https://foojay.io/almanac/jdk-21\n    https://github.com/HanSolo/discocli\n        https://harmoniccode.blogspot.com\nhttps://github.com/HanSolo/javafinder\nhttps://github.com/HanSolo/JDK-Updater"},{property:"og:image",content:"https://bajins.com/images/JDK8-25的JEP数量.png"},{property:"og:url",content:"https://bajins.com/Java/JDK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"JDK安装配置"},{itemprop:"description",content:"https://www.oracle.com/cn/downloads\n    https://www.oracle.com/cn/java/technologies/downloads\n    https://www.oracle.com/java/technologies/downloads/archive\nhttps://www.oracle.com/java\n    https://www.oracle.com/cn/java/technologies/java-ee-glance.html\n版本管理 https://github.com/jingxiang/java-switch\nhttps://github.com/NotoChen/JavaVersionChoice\nhttps://github.com/marchof/java-almanac\n    https://javaalmanac.io\n    https://github.com/foojayio\n        https://foojay.io/almanac/jdk-21\n    https://github.com/HanSolo/discocli\n        https://harmoniccode.blogspot.com\nhttps://github.com/HanSolo/javafinder\nhttps://github.com/HanSolo/JDK-Updater"},{itemprop:"image",content:"https://bajins.com/images/JDK8-25的JEP数量.png"}]},regularPath:"/Java/JDK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html",relativePath:"Java/JDK安装配置.md",key:"v-26c996dc",path:"/Java/JDK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"OpenJDK",slug:"openjdk"},{level:2,title:"通用VM",slug:"通用vm"},{level:2,title:"JVM",slug:"jvm"},{level:3,title:"常用参数",slug:"常用参数"},{level:3,title:"参考参数",slug:"参考参数"},{level:2,title:"Linux安装JDK",slug:"linux安装jdk"},{level:2,title:"Windows环境变量",slug:"windows环境变量"},{level:2,title:"源码包",slug:"源码包"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' JDK安装配置 \n Flag OpenJDK 通用VM JVM 常用参数 参考参数 Linux安装JDK Windows环境变量 源码包 \n Flag \n \n https://github.com/topics/jvm \n \n \n https://www.oracle.com/cn/downloads \n \n https://www.oracle.com/cn/java/technologies/downloads \n https://www.oracle.com/java/technologies/downloads/archive \n \n \n https://www.oracle.com/java \n \n https://www.oracle.com/cn/java/technologies/java-ee-glance.html \n \n \n 版本管理  https://github.com/jingxiang/java-switch \n https://github.com/NotoChen/JavaVersionChoice \n https://github.com/marchof/java-almanac \n \n https://javaalmanac.io \n https://github.com/foojayio \n \n https://foojay.io/almanac/jdk-21 \n \n \n https://github.com/HanSolo/discocli \n \n https://harmoniccode.blogspot.com \n \n \n \n \n https://github.com/HanSolo/javafinder \n https://github.com/HanSolo/JDK-Updater \n \n \n JDK版本生命周期 \n \n \n JDK 8 以来每个 Java 版本中的 JEP 数量 \n \n JEP 的全称就是 JDK Enhancement Proposals ，简单点讲就像是一个个对JAVA进行改进提案，\n这些提案会在合适的时间合适的地点被加入JDK的特定版本。 \n \n \n \n Java 25 的到来 \n OpenJDK \n \n https://github.com/topics/openjdk \n https://github.com/topics/jdk \n https://www.injdk.cn \n \n https://d10.injdk.cn \n \n \n \n \n https://github.com/openjdk \n \n https://openjdk.java.net \n http://hg.openjdk.java.net \n https://jdk.java.net/archive \n https://github.com/ojdkbuild/ojdkbuild \n https://github.com/oracle-actions/setup-java \n \n \n https://github.com/AdoptOpenJDK \n \n https://adoptopenjdk.net \n https://github.com/Adopt-a-JSR \n \n \n https://github.com/adoptium \n \n https://adoptium.net \n \n \n https://github.com/zulu-openjdk \n \n https://www.azul.com/downloads/zulu \n https://cdn.azul.com/zulu/bin \n \n \n Liberica  https://github.com/bell-sw \n \n https://bell-sw.com/pages/downloads \n \n \n https://github.com/corretto \n \n https://aws.amazon.com/cn/corretto \n \n \n https://github.com/SAP/SapMachine \n \n https://sap.github.io/SapMachine \n \n \n https://developer.ibm.com/languages/java/semeru-runtimes/downloads \n \n https://developer.ibm.com/languages/java \n https://developer.ibm.com/javasdk \n \n \n https://developers.redhat.com/products/openjdk \n https://www.openlogic.com/openjdk-downloads \n \n https://github.com/openlogic \n \n \n https://github.com/microsoft/openjdk \n \n https://www.microsoft.com/openjdk \n https://docs.microsoft.com/zh-cn/java \n \n \n https://github.com/dragonwell-project \n \n https://dragonwell-jdk.io \n \n \n https://github.com/beehive-lab/TornadoVM \n OpenJ9  https://github.com/eclipse-openj9 \n \n https://github.com/eclipse/omr \n \n \n https://github.com/TravaOpenJDK \n https://github.com/Tencent/TencentKona-17 \n https://gitee.com/openeuler/bishengjdk-17 \n https://github.com/eclipse-justj \n \n https://eclipse.dev/justj \n https://download.eclipse.org/justj/www/?page=download \n 通用VM \n \n https://github.com/topics/native-image \n \n GraalVM Native Image介绍 \n 下一代JVM：GraalVM的十大特性 \n \n \n 通用VM  https://github.com/graalvm \n \n https://www.graalvm.org/reference-manual/native-image \n 命令行  https://github.com/remkop/picocli \n \n \n SubstrateVM  https://github.com/oracle/graal \n \n https://github.com/westinyang/java-graalvm-start \n \n \n https://github.com/spring-projects-experimental/spring-native \n https://docs.spring.io/spring-native/docs/current/reference/htmlsingle \n https://openval.eu/jdk \n https://github.com/spaceflint7/bluebonnet \n iOS  https://github.com/ibinti/bugvm \n https://github.com/robovm/robovm \n \n https://github.com/MobiVM/robovm \n \n \n https://sourceforge.net/projects/xmlvm \n JVM \n \n https://www.oracle.com/cn/java/technologies/hotspotfaq.html \n G1垃圾收集器入门  https://www.oracle.com/technetwork/tutorials/tutorials-1876574.html \n http://jdk.java.net/zgc/ \n https://wiki.openjdk.java.net/display/zgc/Main \n Java平台，标准版HotSpot虚拟机垃圾收集调优指南 \n Java SE 6 HotSpot 虚拟机垃圾收集优化 \n JVM的那些常用参数以及命令 \n \n \n JVM配置工具  https://render.alipay.com/p/s/jvm-generate/JvmGenerate \n http://jvmmemory.com \n https://console.perfma.com \n 常用参数 \n \n https://www.oracle.com/cn/java/technologies/javase/vmoptions-jsp.html \n \n \n JVM参数配置说明 \n JVM内存配置最佳实践 \n JVM核心参数图解 \n JVM优化之 -Xss -Xms -Xmx -Xmn 参数设置 \n java编译器编码和JVM编码问题？ \n \n \n \n \n 参数 \n 说明 \n \n \n \n \n file.encoding \n 默认文件编码 \n \n \n -Xmx1024m \n 初始堆大小为1024m \n \n \n -Xms1024m \n 最大堆大小为1024m \n \n \n -Xmn366m \n 设置年轻代大小为366m,Sun官方推荐配置为整个堆的3/8（35.7%） \n \n \n -XX:NewSize=n \n 设置年轻代大小 \n \n \n -XX:MaxNewSize=n \n 设置最大的年轻代大小 \n \n \n -XX:PermSize=n \n JDK1.7设置永久代大小 \n \n \n -XX:MaxPermSize=n \n JDK1.7设置最大永久代大小 \n \n \n -XX:MetaspaceSize=n \n JDK1.8设置元空间大小 \n \n \n -XX:MaxMetaspaceSize=n \n JDK1.8设置最大元空间大小,最好与-XX:MetaspaceSize一致 \n \n \n -XX:NewRatio=4 \n 设置年轻代（包括Eden和两个Survivor区）与终身代的比值（除去永久代）。设置为4，则年轻代与终身代所占比值为1：4，年轻代占整个堆栈的1/5 \n \n \n -XX:SurvivorRatio=n \n 年轻代中Eden区与两个Survivor区的比值。注意Survivor区有两个。如：3，表示Eden：Survivor=3：2，一个Survivor区占整个年轻代的1/5 \n \n \n -XX:MaxTenuringThreshold \n 设置垃圾最大年龄，默认为：15。如果设置为0的话，则年轻代对象不经过Survivor区，直接进入年老代。对于年老代比较多的应用，可以提高效率。如果将此值设置为一个较大值，则年轻代对象会在Survivor区进行多次复制，这样可以增加对象再年轻代的存活时间，增加在年轻代即被回收的概论。 \n \n \n -XX:+CMSScavengeBeforeRemark \n CMS并发标记阶段与用户线程并发进行，此阶段会产生已经被标记了的对象又发生变化的情况，若打开此开关，可在一定程度上降低CMS重新标记阶段对上述“又发生变化”对象的扫描时间，当然，“清除尝试”也会消耗一些时间。注：开启此开关并不会保证在标记阶段前一定会进行清除操作 \n \n \n -XX:+UseSerialGC \n 设置串行收集器 \n \n \n -XX:+UseParallelGC \n 设置并行收集器 \n \n \n -XX:ParallelGCThreads=n \n 设置并行收集线程数 \n \n \n -XX:+UseParalledlOldGC \n 设置并行年老代收集器 \n \n \n -XX:MaxGCPauseMillis=n \n 设置并行收集最大暂停时间 \n \n \n -XX:GCTimeRatio=n \n 设置垃圾回收时间占程序运行时间的百分比。公式为1/(1+n) \n \n \n -XX:+UseConcMarkSweepGC \n 设置年老代为并发收集。测试中配置这个以后，-XX:NewRatio=4的配置失效了，原因不明。所以，此时年轻代大小最好用-Xmn设置。 \n \n \n -XX:CMSInitiatingOccupancyFraction=70 \n CMS垃圾收集器，当老年代达到70%时，触发CMS垃圾回收。 \n \n \n -XX:+UseCMSInitiatingOccupancyOnly \n 指定使用CMSInitiatingOccupancyFraction的值,如果不指定,JVM仅在第一次使用设定值,后续则自动调整。 \n \n \n -XX:+ParallelRefProcEnabled \n 并行处理Reference，加快处理速度，缩短耗时 \n 参考参数 \n \n 根据JDK8-4G内存-4核CPU生成的 JVM 参数，打印了 gc 各个阶段的日志 \n \n \n 看看 ygc 的回收时间，以及 old 区大小，最后看 FGC \n \n JAVA_OPTS = "\n-Dfile.encoding=UTF-8\n-Dstdout.encoding=UTF-8\n-Dstderr.encoding=UTF-8\n-server\n-Xms2688M\n-Xmx2688M\n-Xmn960m\n-Xss8m\n-XX:MetaspaceSize=512M\n-XX:MaxMetaspaceSize=512M\n-XX:+UseConcMarkSweepGC\n-XX:CMSInitiatingOccupancyFraction=70\n-XX:+UseCMSInitiatingOccupancyOnly\n-XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses\n-XX:+ParallelRefProcEnabled\n-XX:+CMSScavengeBeforeRemark\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:HeapDumpPath=/home/jvm_logs/heap.hprof\n-XX:ErrorFile=/home/jvm_logs/hs_err_pid%p.log\n-Xloggc:/home/jvm_logs/gc.log\n-Djava.rmi.server.hostname=192.168.1.220\n-Dcom.sun.management.jmxremote.port=18999\n-Dcom.sun.management.jmxremote.ssl=false\n-Dcom.sun.management.jmxremote.authenticate=false\n-XX:+PrintGCDetails\n-XX:+PrintGCDateStamps\n-verbose:class\n-XX:+PrintClassHistogramBeforeFullGC\n-XX:+PrintClassHistogramAfterFullGC\n-XX:+PrintCommandLineFlags\n-XX:+PrintGCApplicationConcurrentTime\n-XX:+PrintGCApplicationStoppedTime\n-XX:+PrintTenuringDistribution\n-XX:+PrintHeapAtGC\n" \n Linux安装JDK \n 查看已安装 \n rpm   -qa   |   grep   java \n \n 卸载JDK \n rpm   -e   --nodeps  查出来的名称\n \n 查看JDK软件包列表 \n安装之前最好先更新一下源 \nyum update  -y \n列出可用安装包 \nyum  -y  list java*\n或者 \nyum search  java   |   grep   -i   --color  JDK\n \n \n jdk-headless 为最小安装包，Java Runtime Environment (JRE) 主要包含了 Java 虚拟机（JVM），类和允许运行 Java 程序的二进制包。\nJava Development Kit (JDK) 包含 JRE 和用于构建 Java 应用的开发/调试工具和库文件 \n \n yum安装JDK \n \n 通过yum默认安装的路径为 /usr/lib/jvm \n \n yum  -y   install  java-1.8-openjdk java-1.8.0-openjdk-devel.x86_64\n \n 配置环境变量 \n \n 在 /etc/profile 或 /etc/environment 文件中使用 gedit 或者 vim 或者 nano 加入以下几行内容 \n \n ########## jdk  environment ###################### \n export   JAVA_HOME = /usr/lib/jvm/java-1.8-openjdk\njdk8需要配置jre的环境 \n export   JRE_HOME = $JAVA_HOME /jre\n export   CLASSPATH = .: $JAVA_HOME /lib: $JRE_HOME /lib\n export   PATH = $JAVA_HOME /bin: $JRE_HOME /bin: $PATH \n ########## jdk  environment ###################### \n刷新环境变量文件 \n source  /etc/profile\n查看变量是否生效 \n echo   $JAVA_HOME   &&   echo   $CLASSPATH \n源码安装时系统注册此jdk \nupdate-alternatives  --install  /usr/bin/java  java  /usr/lib/jvm/jdk1.8.0_191/bin/java  300 \n安装了多个版本jdk，通过以下命令在这些版本之间切换 \nupdate-alternatives –config  java \n查看Java版本信息 \n java   -version \n Windows环境变量 \n setx   /m  JAVA_HOME  "C:\\Program Files\\Java\\jre1.8.0_171" \n\n setx   /m  CATALINA_HOME  "D:\\apache-tomcat-8.5.30" \n\n setx   /m  JRE_HOME  "%JAVA_HOME%\\jre;" \n\n setx   /m  CLASSPATH  ".;%JAVA_HOME%\\lib;%JRE_HOME%\\lib;" \n\n setx   /m  Path  "%PATH%;%JAVA_HOME%\\bin;%JRE_HOME%\\bin;%MAVEN_HOME%\\bin;%CATALINA_HOME%\\bin;" \n 源码包 \n \n JavaFX源码：JDK安装目录下的 javafx-src.zip 文件 \n Java源码：JDK安装目录下的 src.zip 文件 \n \n \n IDEA查看源码都是从这两个ZIP文件加载，查看源码解压ZIP到 Maven 项目的 src/main/java 下，或者直接解压到普通项目 src 下 \n \n \n rt.jar  是JAVA基础类库，包含 lang 在内的大部分功能，而且 rt.jar 默认就在根 classloader 的加载路径里面 \n \n \n 在  java.util.concurrent 、 java.security 、 javax.cropty 、 javax.security  四个包中就占了两个（多线程、安全） \n \n 多线程（multi-threading and concurrent） \n \n 关键词：volatile, sychronized \n 传统的线程 API：java.lang.Thread, java.lang.Runnable, java.lang.ThreadGroup, Object#wait, Object#notify, Object#notifyAll \n JDK 5 并发包（java.util.concurrent）API：线程池、任务执行器、计数信号量、倒计数门闩、并发集合（并发 Map、阻塞队列等）、\n基于 CPU CAS 指令的原子 API（java.util.concurrent.atomic）、锁 API（java.util.concurrent.lock）和条件对象等。 \n 作为个人知识提升，还需要理解诸如自旋锁、分离锁、分拆锁、读写锁等的同步锁策略，以及可重入锁、锁的公平性的意义。\n以及各种并发锁的算法，比如：Peterson锁、Bakery锁 等等，以及现代 CPU 体系结构 \n \n \n 涉及多线程及并发的 API 在 java.lang 中及 java.util.concurrent.* 中。 \n \n 网络（network communication） \n \n java.net、javax.net \n \n \n 阻塞 TCP 通信、阻塞 UDP 通信、组播 \n 非阻塞 TCP 通信、非阻塞 UDP 通信 \n 客户端通信 API（java.net.URL, java.net.URLConnection 等类库） \n \n 涉及网络通信的 API 都在 java.net 和 java.nio.channels 包中。这里的网络已经将 RMI 相关包 java.rmi, javax.rmi 都排除了。 \n 安全（security, cryptography and AAA） \n \n Java 加密类库 JCA \n Java 加密类库扩展 JCE \n 涉及密码学知识点的消息摘要、消息认证码、对称加密、非对称加密、数字签名 \n 涉及网络通信证书管理工具（keytool）及 API（PKI、X.509证书） \n 基于 SSL/TLS 的安全网络通信 API（JSSE），包括：密钥库管理、信任库管理、阻塞 SSL 通信和非阻塞 SSL 通信等等 \n Java 认证及授权服务（JAAS）API \n \n 涉及安全的东西都在： \n \n java.security（JCA、JCE、数字证书，以及 JCE 的 SPI） \n javax.net（SSL/TLS） \n javax.security（JAAS） \n javax.crypto（密码学） \n keytool 的 JDK 工具 \n \n java 、 javax 、 sun 、 org 包有什么区别 \n \n 都是jdk提供的类包，且都是在 rt.jar 中。 \n \n \n java.*  java标准的一部分，是对外承诺的java开发接口，通常要保持向后兼容，一般不会轻易修改。 \n javax.*  java标准的一部分，但是没有包含在标准库中，一般属于标准库的扩展。通常属于某个特定领域，不是一般性的api。 \n \n \n 以扩展的方式提供api，以避免jdk的标准库过大。当然某些早期的javax，后来被并入到标准库中，所有也应该属于新版本JDK的标准库。\n比如jmx，java 5以前是以扩展方式提供，但是jdk5以后就做为标准库的一部分了，所有javax.management也是jdk5的标准库的一部分。 \n \n \n com.sun.*  是sun的hotspot虚拟机中 java.*  和  javax.* 的实现类。 \n \n \n 因为不是sun对外公开承诺的接口，所以根据根据实现的需要随时增减，因此在不同版本的hotspot中可能是不同的，\n而且在其他的jdk实现中是没有的，调用这些类，可能不会向后兼容，所以一般不推荐使用。 \n \n \n org.omg.*  是由企业或者组织提供的java类库，大部分不是sun公司提供的，同 com.sun.* ，不具备向后兼容性，会根据需要随时增减。 \n \n \n 其中比较常用的是w3c提供的对XML、网页、服务器的类和接口。 \n \n',createdTime:1761814324e3},{title:"JDK工具",frontmatter:{description:"JVM问题笔记",meta:[{name:"image",content:"https://bajins.com/images/JDK-bin.png"},{name:"twitter:title",content:"JDK工具"},{name:"twitter:description",content:"JVM问题笔记"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/JDK-bin.png"},{name:"twitter:url",content:"https://bajins.com/Java/JDK%E5%B7%A5%E5%85%B7.html"},{property:"og:type",content:"article"},{property:"og:title",content:"JDK工具"},{property:"og:description",content:"JVM问题笔记"},{property:"og:image",content:"https://bajins.com/images/JDK-bin.png"},{property:"og:url",content:"https://bajins.com/Java/JDK%E5%B7%A5%E5%85%B7.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"JDK工具"},{itemprop:"description",content:"JVM问题笔记"},{itemprop:"image",content:"https://bajins.com/images/JDK-bin.png"}]},regularPath:"/Java/JDK%E5%B7%A5%E5%85%B7.html",relativePath:"Java/JDK工具.md",key:"v-aae4bb34",path:"/Java/JDK%E5%B7%A5%E5%85%B7.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"监控分析",slug:"监控分析"},{level:2,title:"反编译工具",slug:"反编译工具"},{level:2,title:"tools",slug:"tools"},{level:3,title:"基本工具",slug:"基本工具"},{level:3,title:"安全工具",slug:"安全工具"},{level:3,title:"Java国际化工具",slug:"java国际化工具"},{level:3,title:"远程方法调用工具",slug:"远程方法调用工具"},{level:3,title:"IDL和RMI-IIOP工具",slug:"idl和rmi-iiop工具"},{level:3,title:"Java部署工具",slug:"java部署工具"},{level:3,title:"Java web工具",slug:"java-web工具"},{level:3,title:"JDK监控工具",slug:"jdk监控工具"},{level:3,title:"故障检测和修理工具",slug:"故障检测和修理工具"},{level:3,title:"其他工具",slug:"其他工具"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' JDK工具 \n Flag 监控分析 反编译工具 tools 基本工具 安全工具 Java国际化工具 远程方法调用工具 IDL和RMI-IIOP工具 Java部署工具 Java web工具 JDK监控工具 故障检测和修理工具 其他工具 \n Flag \n \n https://docs.oracle.com/javase/8/docs/technotes/tools \n http://openjdk.java.net/projects/code-tools \n https://github.com/openjdk/jmc \n \n \n https://github.com/topics/diagnosis \n https://github.com/topics/agent \n \n \n JVM问题笔记 \n \n 其他命令 \n \n 抛开IDE，了解一下javac如何编译 \n 使用javac编译工程 \n \n javac  -encoding  utf-8  -cp   ".;webapp\\WEB-INF\\lib\\*"   -d  target src \\ com \\ bajins \\ utils \\ *.java\n java   -cf  bajins.war  . \n获取当前JVM默认参数 \n java   -XX:+PrintFlagsFinal   -version   |   grep  MaxHeapSize\n通过进程ID(PID)找出占用CPU高（或执行时间长）的线程ID(TID) \n top   -H   -c   -p   $( pgrep  java ) \n top   -Hpc   $( pgrep  java ) \n ps   -mp   $( pgrep  java )   -o  THREAD,tid,time  |   sort   -rn \n打印堆栈异常信息，过滤转换为16进制的TID，-A 30显示后30行 \njstack  -l  PID  |   grep   $( printf   "%x \\n "  TID )   -A   30 \njstack  -l  PID  |   grep   -A   10   $( printf   "%x \\n "  TID ) \nnid：对应的linux操作系统下的TID，就是前面转化的16进制数字 \ntid：这个应该是jvm的jmm内存规范中的唯一地址定位 \n获取线程堆栈信息 \njstack  [ -l  ]   < pid >   |   tee   -a  jstack.log\n获取JVM的堆栈信息 \njmap -dump:live,format = b,file = /home/heapdump.hprof PID\njcmd PID GC.heap_dump /home/heapdump.hprof\n加载解析dump文件，默认7000端口 http://127.0.0.1:7000 \njhat heapdump.hprof\n \n 远程监控参数 \n \n 在jvm启动参数中加入或在Tomcat的 /bin/catalina.sh 文件中加入 \n \n -Djava.rmi.server.hostname = 主机的IP\n -Dcom.sun.management.jmxremote.port = 端口号\n -Dcom.sun.management.jmxremote.ssl = false\n -Dcom.sun.management.jmxremote.authenticate = false\n \n 远程Debug参数 \n \n 附加调试器到进程：注意参数一定要放在 -jar 命令之前，方可运行成功 \n \n java   -Djavax.net.debug = all  -Xdebug   -Xnoagent   -Djava.compiler = NONE  \\ \n -Xrunjdwp:transport = dt_socket,server = y,suspend = n,address = 端口  -jar  jar包\n \n -agentlib:jdwp = transport = dt_socket,server = y,suspend = n,address = 端口  -jar  jar包\n \n 参数说明 \n \n -Djavax.net.debug  查看调试信息， all  代表所有，其他有 SSL , handshake , date , trust manager \n -Xdebug  是通知JVM工作在DEBUG模式下 \n -Xnoagent  禁用默认sun.tools.debug调试器。 \n -Djava.compiler=NONE  为了加快debug的速度，禁止JIT编译器的加载， 详细说明 \n -Xrunjdwp  是通知JVM使用(Java debug wire protocol)来运行调试环境。\n \n transport=dt_socket  是指调试数据用SOCKET模式传送 \n transport=dt_shmem  指用共享内存方式 \n transport=dt_shmem  只适用于Windows平台。 \n server=y/n  VM是否需要作为调试服务器执行。 \n suspend=y/n  是否在调试客户端建立连接之后启动 VM 。(设置为y时启动不了) \n onthrow=java.io.IOException  指明，当产生该类型的Exception时，JVM就会中断下来，进行调式。可选参数 \n launch=/sbin/echo  指明，当JVM被中断下来时，执行的可执行程序。可选参数 \n onuncaught=y/n  指明，出现uncaught exception 后，是否中断JVM的执行. \n 监控分析 \n \n https://github.com/HanSolo/JDKMon \n Java诊断利器Arthas  https://github.com/alibaba/arthas \n \n https://arthas.aliyun.com/doc/quick-start.html \n https://github.com/dromara/cubic \n \n \n https://github.com/vipshop/vjtools \n https://github.com/qunarcorp/bistoury \n https://github.com/oldmanpushcart/greys-anatomy \n https://github.com/jvm-profiling-tools \n JVM沙箱容器  https://github.com/alibaba/jvm-sandbox \n 无侵入式的jvm监控  https://github.com/ThinkpadNC5/MyPerf4J \n Java和Android堆转储分析器  https://heaphero.io \n GC 日志分析器  https://gceasy.io \n https://github.com/microsoft/gctoolkit \n https://github.com/chewiebug/GCViewer \n https://www.threadanalyzer.online \n java程序跟踪工具  https://github.com/btraceio/btrace \n 监视和性能分析  https://github.com/aragozin/jvm-tools \n https://github.com/ajermakovics/jvm-mon \n https://github.com/saleson/fm-dynamic-compiler \n https://github.com/gperftools/gperftools \n https://www.yourkit.com/java/profiler \n https://github.com/async-profiler/async-profiler \n 内存分析  https://projects.eclipse.org/projects/tools.mat \n \n https://github.com/vlsi/mat-calcite-plugin \n \n \n 监控统计  https://github.com/worstcase/gumshoe \n https://github.com/stevensouza/automon \n https://github.com/zrbcool/pepper-metrics \n https://github.com/stagemonitor/stagemonitor \n https://github.com/dropwizard/metrics \n 流分析  https://github.com/wavefrontHQ/wavefront-proxy \n JProfiler  https://www.ej-technologies.com \n https://fastthread.io \n 静态分析  https://github.com/jspecify/jspecify \n \n https://jspecify.dev \n \n \n http://github.com/google/error-prone \n https://github.com/typetools \n https://github.com/eisop \n \n https://github.com/eisopux \n https://github.com/opprop \n \n \n https://github.com/facebook/infer \n https://github.com/uber/NullAway \n https://github.com/openrewrite \n https://github.com/codefuse-ai/CodeFuse-Query \n 重构  https://github.com/refactorfirst/RefactorFirst \n 反编译工具 \n \n java instrumentation  Java探针技术 \n https://github.com/topics/reverse-engineering \n https://github.com/topics/decompiler \n https://github.com/topics/disassembler \n \n \n https://github.com/Guardsquare \n https://github.com/apache/commons-bcel \n JD-Core  https://github.com/java-decompiler \n \n https://github.com/java-decompiler/jd-gui \n https://github.com/JetBrains/intellij-community/tree/master/plugins/java-decompiler \n \n \n CFR  https://github.com/leibnitz27/cfr \n Procyon  https://github.com/mstrobel/procyon \n \n Gui  https://github.com/deathmarine/Luyten \n \n \n Fernflower  https://github.com/fesh0r/fernflower \n \n https://github.com/MinecraftForge/ForgeFlower \n http://the.bytecode.club/fernflower.jar \n https://github.com/JetBrains/intellij-community/tree/master/plugins/java-decompiler \n Quiltflower  https://github.com/Vineflower/vineflower \n \n \n https://github.com/Storyyeller/Krakatau \n https://sourceforge.net/projects/jode \n https://github.com/MaxPixelStudios/MinecraftDecompiler \n https://github.com/bradsdavis/candle-decompiler \n Cavaj Java Decompiler  https://sureshotsoftware.com/products/cavaj \n https://github.com/mchr3k/jdeclipse-realign \n https://sourceforge.net/projects/jadclipse \n https://sourceforge.net/projects/jbdec \n https://sourceforge.net/projects/dedexer \n https://varaneckas.com/jad \n http://www.kpdus.com/jad.html \n https://sourceforge.net/projects/ejdc \n DJ Java Decompiler  http://www.neshkov.com \n https://github.com/vorburger/ScratchApplet \n https://sourceforge.net/projects/dcompiler \n https://sourceforge.net/projects/jadretro \n https://sourceforge.net/projects/ideajad \n https://sourceforge.net/projects/jad-align \n https://sourceforge.net/projects/jdc-el \n https://sourceforge.net/projects/jdec \n https://sourceforge.net/projects/javad \n https://sourceforge.net/projects/cupofjoe \n https://sourceforge.net/projects/debyte \n https://sourceforge.net/projects/jrevpro \n \n https://github.com/akkumar/jreversepro \n \n \n https://sourceforge.net/projects/jarg \n https://www.sothink.com/product/javadecompiler \n Jar和APK逆向工程套件  https://github.com/Konloch/bytecode-viewer \n dex2jar  https://github.com/pxb1988/dex2jar \n https://github.com/horsicq/DIE-engine \n http://www.gda.wiki:9090/index.php \n https://ghidra-sre.org \n https://github.com/skylot/jadx \n https://github.com/kwart/jd-cmd \n https://software.intel.com/articles/pin-a-dynamic-binary-instrumentation-tool \n https://github.com/Col-E/Recaf \n smali/baksmali  https://github.com/JesusFreke/smali \n snowman  https://derevenets.com \n javap -verbose 文件  查看class文件内容  https://github.com/topics/bytecode \n 字节码查看器  https://github.com/ingokegel/jclasslib \n https://github.com/ClassViewer \n https://github.com/zxh0/classpy \n https://github.com/phith0n/zkar \n https://github.com/jar-analyzer/jar-analyzer \n https://github.com/BeichenDream/JDR \n 混淆  https://sourceforge.net/projects/javaguard \n https://github.com/yWorks/yGuard \n http://www.e-t.com/jshrink.html \n 字节码插桩  https://github.com/javactrl/javactrl \n \n \n 在线反编译器  http://www.javadecompilers.com \n 反混淆  https://github.com/java-deobfuscator/deobfuscator \n jlink - 将一组模块及其依赖项组装并优化为自定义运行时映像 \n JDK14之jpackage命令 \n 大家都是怎么发布Java客户端程序的？难道让用户自己装JRE？ \n tools \n \n 细心的可能会发现， jdk/bin 目录下的这些工具都非常小，\n是因为这些工具大多是 jdk/lib/tools.jar 类库的一层包装而已，他们主要的功能代码是在 tools 类库中实现的。 \n \n \n \n https://github.com/jzillmann/jmh-visualizer \n https://github.com/HanSolo/jdktools \n 基本工具 \n \n 这些工具是JDK的基础，用这些工具来编写应用程序。 \n \n \n \n \n 工具名称 \n 用途 \n \n \n \n \n javac.exe \n Java语言编译器 \n \n \n java.exe \n Java应用程序启动器 \n \n \n javaw.exe \n Java运行工具，用于运行.class字节码文件或.jar文件，但不会显示控制台输出信息，适用于运行图形化程序。 \n \n \n javadoc.exe \n Java API文档生成器 \n \n \n apt.exe \n java 注释处理器 \n \n \n appletviewer.exe \n java applet小程序查看器 \n \n \n jar.exe \n java文件压缩打包工具 \n \n \n jdb.exe \n Java调试器 \n \n \n javah.exe \n C头文件和stub生成器，用于写本地化方法，例如生产JNI样式的头文件 \n \n \n javap.exe \n class文件反编译工具 \n \n \n extcheck.exe \n 用于检测jar包中的问题 \n \n \n jcmd.exe \n Java命令行(Java Command)，用于向正在运行的JVM发送诊断命令请求。 \n 安全工具 \n \n 这些工具用于设置系统的安全规则和生产可以工作在远端的安全规则下的应用程序 \n \n \n \n \n 工具名称 \n 用途 \n \n \n \n \n keytool.exe \n 管理密钥库和证书 \n \n \n jarsigner.exe \n 生产和校验JAR签名 \n \n \n policytool.exe \n 有用户界面的规则管理工具 \n \n \n kinit.exe \n 用于获得和缓存网络认证协议Kerberos 票证的授予票证 \n \n \n klist.exe \n 凭据高速缓存和密钥表中的 Kerberos 显示条目 \n \n \n ktab.exe \n 密钥和证书管理工具 \n Java国际化工具 \n \n 这些工具可以帮助你创建可本地化的应用程序 \n \n \n \n \n 工具名称 \n 用途 \n \n \n \n \n native2ascii.exe \n 将文本转化为 Unicode Latin-1 \n 远程方法调用工具 \n \n 这些工具可以帮助创建可以和web和网络交互的应用程序 \n \n \n \n \n 工具名称 \n 用途 \n \n \n \n \n rmic.exe \n 生成远程对象的stubs and skeletons(存根和框架) \n \n \n rmid.exe \n Java远程方法调用(RMI:Remote Method Invocation)活化系统守护进程 \n \n \n rmiregistry.exe \n Java远程对象注册表 \n \n \n serialver.exe \n 返回类的 serialVersionUID \n \n \n java-rmi.exe \n Java远程方法调用(Java Remote Method Invocation)工具，主要用于在客户机上调用远程服务器上的对象 \n IDL和RMI-IIOP工具 \n \n 这些工具用于创建使用OMG-Standard IDL 和 CORBA/IIOP 的应用程序 \n \n \n \n \n 工具名称 \n 用途 \n \n \n \n \n tnameserv.exe \n Java IDL瞬时命名服 \n \n \n idlj.exe \n 生产映射到OMG IDL接口可以使Java应用程序使用CORBA的.java文件 \n \n \n orbd.exe \n 为客户可以在CORBA环境下透明的定位和调用服务器的稳定的对象提供支持 \n \n \n servertool.exe \n 为应用程序提供易于使用的接口用于注册，注销，启动，关闭服务器 \n Java部署工具 \n \n \n \n 工具名称 \n 用途 \n \n \n \n \n pack200.exe \n 使用java gzip压缩工具将JAR文件转换为压缩的pack200文件，生产打包文件是高度压缩的JAR包，可以直接部署，减少下载时间 \n \n \n unpack200.exe \n 解包pack200文件为JARs \n Java web工具 \n \n \n \n 工具名称 \n 用途 \n \n \n \n \n javaws.exe \n Java web 启动命令行工具 \n \n \n schemagen.exe \n Java构架的XML Schema生成器 \n \n \n wsgen.exe \n 生成 JAX-WS \n \n \n wsimport.exe \n 生成 JAX-WS \n \n \n xjc.exe \n 绑定编译器 \n JDK监控工具 \n \n Java故障检修，程序概要分析，监视和管理工具 \n \n \n \n \n 工具名称 \n 用途 \n \n \n \n \n jvisualvm.exe \n 一个图形化的Java虚拟机。从OracleJDK9开始，不再包含。 \n \n \n jconsole.exe \n java监视台和管理控制台 \n \n \n jps.exe \n JVM Process Status进程状态工具。列出目标系统的HotSpot JVM \n \n \n jstat.exe \n 按照命令行的具体要求记录和收集一个JVM的性能数据 \n \n \n jstatd.exe \n JVM jstat 的守护进程 \n \n \n jmc.exe \n Java任务控制工具(Java Mission Control)，主要用于HotSpot JVM的生产时间监测、分析、诊断。从OracleJDK9开始，不再包含。 \n \n \n \n \n Java线上CPU内存冲高问题排查步骤 \n java进程CPU占用高如何排查-案例二 \n VisualVM \n \n https://github.com/visualvm/visualvm.github.io \n \n \n 从 Oracle JDK 9 开始，不再包含。需到GitHub下载 https://github.com/oracle/visualvm/releases \n \n \n Oracle JDK 8 及以下版本在 /jdk/bin 目录下 jvisualvm.exe \n \n \n 需要注意的是:当OS所在分区是FAT格式时，VisualVM无法获取相关信息！ \n \n \n 显示虚拟机进程以及进程的 配置 、 环境信息 （ jps 、 jinfo ）。 \n 监视应用程序的 CPU 、 GC 、 堆 、方法区(1.7及以前)， 元空间 （JDK1.8及以后）以及 线程 的信息（ jstat 、 jstack ）。 \n dump以及分析 堆转储快照 （ jmap 、 jhat ）。 \n 方法级的 程序运行性能分析 ， 找出被调用最多、运行时间最长的方法 。 \n 离线程序快照：收集程序的运行时配置、线程dump、内存dump等信息建立一个快照 \n \n \n 参考： 基于JVisualVM的可视化监控 ，\n VisualVM监控远程阿里云主机 \n \n 不受此JVM支持 \n \n 解决 Visual GC 提示 不受此JVM支持 ，要监控的主机没有配置 jstatd \n \n \n 参考： jvisualvm 连接 jstatd 远程监控 jvm 或 Visual GC提示"不受此JVM支持“ \n \n \n 先查看 jstatd 服务是否可用 \n \n jps  -l   127.0 .0.1\n \n \n 一、在原有配置文件 java.policy 中添加 \n \n vi   $JAVA_HOME /jre/lib/security/java.policy\n \n \n 在文件末位的  };  前添加 \n \n permission  java . security . AllPermission ; \n \n \n 启动jstatd \n \n cd   $JAVA_HOME /bin\n./jstatd -J-Djava.security.policy = all.policy -J-Djava.rmi.server.hostname = 本服务器IP  -p  端口  & \n \n \n 查看运行端口情况 \n \n netstat   -anp   |   grep  jstatd\n netstat   -ntlp \n lsof   -i:1099 \n \n \n 二、（推荐）新建一个配置文件 jstatd.all.policy \n \n cd   $JAVA_HOME /bin/\n vi  jstatd.all.policy\n \n \n 添加以下代码 \n \n grant codebase  "file:${java.home}/../lib/tools.jar"   { \n   permission  java . security . AllPermission ; \n } ; \n \n \n 给文件加上执行权限 \n \n chmod  +x jstatd.all.policy\n \n \n 在Java的bin目录下用以下命令启动 \n \n ./jstatd -J-Djava.security.policy = jstatd.all.policy -J-Djava.rmi.server.hostname = 本服务器IP  -p  端口 -J-Djava.rmi.server.logCalls = true  & \n \n \n -J-Djava.security.policy=jstatd.all.policy  文件的绝对路径； \n -J-Djava.rmi.server.logCalls=true  打开日志,如果客户端有连接过来的请求,可以监控到,便于排错； \n -J-Djava.rmi.server.hostname=本服务器IP  指明本机 hostname 对应的本机地址,确保该地址可以给客户机访问。\n \n 因为有的服务器 hostname 对应的 ip 不一定是外网能连上的，最好在这里直接明确指定； \n \n \n -p 3333  指定服务的端口号，默认是1099。也是可选参数。 \n JConsole \n \n 在 /jdk/bin 目录下 jconsole.exe ，如果上面的 内存 页签相当于可视化的 jstat 命令的话，\n 线程 页签的功能相当于可视化的 jstack 命令，遇到线程停顿时可以使用这个页签进行监控分析。 \n \n \n 线程长时间停顿的主要原因主要有：等待外部资源（数据库连接、网络资源、设备资源等）、死循环、锁等待（活锁和死锁） \n \n 查看hostname \n hostname   -i \n \n \n 如果hostname为 127.0.0.1 就需要修改， vi /etc/hosts 将其第一行 127.0.0.1 localhost.localdomain localhost 中的 127.0.0.1 \n修改为： 本服务器IP ，重启Linux，在服务器上输入 hostname -i ，查看实际设置的IP地址是否为你设置的 \n jps \n \n jps 命令（ 帮助文档 ）\n用于列出正在运行的虚拟机进程信息， \n \n 命令格式如下： \n jps  [   -q   ]   [   -mlvV   ] [ hostid  ] \njps  [   -help   ] \n \n \n 在默认情况下，jps的输出信息包括 Java 进程的进程ID以及主类名。jps还提供一些参数用于打印详细的信息。 \n \n 其中 -q 仅显示虚拟机的进程id， -mlvV 的意义如下： \n \n -m  将打印传递给主类的参数 \n -l  将打印模块名以及包名 \n -v  将打印传递给虚拟机的参数 \n -V  将打印传递给主类的参数、jar文件名等 \n jstat \n \n jstat （ 帮助文档 ）\n是用于监视虚拟机各种运行状态信息的命令行工具，它可以显示本地或者远程虚拟机进程中的类加载、内存、垃圾回收等信息 \n \n 命令格式如下 \n 用法：jstat -help|-options\n     jstat -<option> [-t] [-h<lines>] <vmid> [<interval> [<count>]]\n\n定义：\n  <option> -options选项报告的选项\n  <vmid>虚拟机标识符。 vmid采用以下形式：\n                     <lvmid> [@ <主机名> [：<端口>]]\n                其中<lvmid>是目标的本地vm标识符\n                Java虚拟机，通常是进程ID; <hostname>是\n                运行目标Java虚拟机的主机的名称;\n                和<port>是rmiregistry的端口号\n                目标主持人。有关更完整的信息，请参阅jvmstat文档\n                虚拟机标识符的描述。\n  <lines>标题行之间的样本数。\n  <interval>采样间隔。允许以下表格：\n                    <N> [ “MS” | “S”]\n                其中<n>是一个整数，后缀指定单位为\n                毫秒（“ms”）或秒（“s”）。默认单位为“ms”。\n  <count>终止前要采取的样本数。\n  -J <flag>将<flag>直接传递给运行时系统。\n \n \n 其中 vmid 全称是 Virtual Machine Identifier ，就是jps命令显示的进程id，如果是远程虚拟机进程 \n \n vmid 的格式如下 \n [protocol:][//]lvmid[@hostname[:port]/servername]\n \n jstat 命令包含很多的子命令，主要分为3类 \n \n 类加载（ -class ） \n 即时编译（ -compiler 和 -printcompilation ） \n 垃圾回收（ -gc* ） \n \n 输入 jstat -options 显示如下 \n -class\n-compiler\n-gc\n-gccapacity\n-gccause\n-gcmetacapacity\n-gcnew\n-gcnewcapacity\n-gcold\n-gcoldcapacity\n-gcutil\n-printcompilation\n \n \n jstat [ generalOption | outputOptions vmid [interval[s|ms] [count]] ] \n \n generalOption  一般使用-gcutil查看GC情况 \n vmid  虚拟机进程号，即当前运行的java进程号 \n interval  间隔时间，单位为秒或毫秒 \n count  打印次数，如果缺省则打印无数次 \nhttps://www.jianshu.com/p/d5ed70f875d9 \nhttps://www.cnblogs.com/qmfsun/p/5601734.html \n每2秒输出一次内存情况，连续输出100次 \njstat  -gcutil   < pid >   2000   100 \njstat  -gcutil   $( pgrep  java )   2000   100 \n输出heap各个分区大小，垃圾收集情况 \n每隔2秒打印一次，共打印2次 \njstat  -gc   < pid >  2s  2 \njstat  -gc   $( pgrep  java )  2s  2 \n \n \n JVM堆是分代的，前四个表示 Survivor 区的容量（Capacity）和已使用量（Utilization），EC表示当前Eden的容量，在翻阅文档的时候，\n发现没有 CGC 和 CGCT 的解释，它们分别代表并发 GC Stop-The-World 的次数和时间。 \n 故障检测和修理工具 \n \n Java虚拟机的监控及诊断工具（命令行） \n \n \n \n \n 工具名称 \n 用途 \n \n \n \n \n jinfo.exe \n 配置或打印某个Java进程VM flag \n \n \n jhat.exe \n 堆储存查看器 \n \n \n jmap.exe \n Java内存图 \n \n \n jsadebugd.exe \n Java的 Serviceability Agent Debug的守护进程 \n \n \n jstack.exe \n Java堆栈跟踪 \n jinfo \n \n jinfo 命令（ 帮助文档 ）\n用来实时地查看和调整虚拟机的各项参数。 \n \n \n 我们可以使用 jps -v 来查看传递给虚拟机的参数，即 System.getProperty 获取的 -D 参数，现在我们可以利用 jinfo 命令来获取了。 \n \n 命令格式如下 \n jinfo  [ option ]  pid\n \n \n -flag name  打印指定的虚拟机参数的名称和值 \n -flag [+|-]name  用来修改目标 Java 进程的 manageable 虚拟机参数。其中 + 代表开启， - 代表关闭。命令： java -XX:+PrintFlagsFinal -version | grep manageable \n -flag name=value  设置指定的虚拟机参数的值 \n -flags   打印全部的虚拟机参数，例如： jinfo -flags 26792 \n -sysprops  打印 java 系统参数（ Java System Properties ） \n jmap \n \n jmap 命令（ 帮助文档 ）\n用于生成堆转储快照，用于分析Java虚拟机堆中的对象。 \n \n 命令格式为 \n jmap  [ options ]  pid\n \n 参数选项 \n \n -clstats  连接到正在运行的进程并打印Java堆被加载类的统计信息 \n -finalizerinfo  连接到正在运行的进程并打印所有待 finalize 的对象。 \n -histo[:live]  连接到正在运行的进程并统计各个类的实例数目以及占用内存，并按照内存使用量从多至少的顺序排列。只统计堆中还在存活的对象。 \n -dump 连接到正在运行的进程并导出Java虚拟机堆内存的快照。\n \n live  只保存堆中存活的对象 \n format=b  将使 jmap 导出与 hprof （在 Java 9 中已被移除） -XX:+HeapDumpAfterFullGC 、 -XX:+HeapDumpOnOutOfMemoryError 格式一样的文件 \n file=filename  指定导出堆内存快照的位置 \n生成dump文件 \njmap -dump:live,format = b,file = heap.hprof  $( pgrep  java ) \n jstack \n \n jstack 命令（ 帮助文档 ）\n可以用来打印目标 Java 进程中各个线程的栈轨迹，以及这些线程所持有的锁。 \n \n \n 通过线程的栈轨迹可以定位线程长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致长时间等待等。 \n \n 命令格式如下 \n 用法：\n     jstack [-l] <pid>\n         （连接到正在运行的进程）\n     jstack -F [-m] [-l] <pid>\n         （连接到挂起的进程）\n     jstack [-m] [-l] <executable> <core>\n         （连接到核心文件）\n     jstack [-m] [-l] [server_id @] <远程服务器IP或主机名>\n         （连接到远程调试服务器）\n\n选项：\n     -F强制进行线程转储。 当jstack <pid>没有响应时（进程挂起）时使用\n     -m打印java和本机帧（混合模式）\n     -l长列表。 打印有关锁的其他信息\n     -h或-help打印此帮助消息\n \n 线程的状态 \n \n 在输出的信息中，会包含，下面是常见的线程状态： \n \n \n RUNNABLE  线程处于执行中 \n BLOCKED  线程被阻塞 \n WAITING  线程正在等待 \n TIMED_WAITING  超时等待 \n \n 示例 \n获取到线程的dump日志 \njstack  -l   $( pgrep  java )   > dump.log\n将所有线程信息输入到指定文件中 \njstack  -F   $( pgrep  java )   >  jvm.log\n jcmd \n \n jcmd 命令（ 帮助文档 ）\n可以向运行中的 Java 虚拟机( JVM )发送诊断命令。 \n \n 命令格式如下 \n jcmd  < pid  |  main class >   < command  .. .  |  PerfCounter.print  |   -f   file > \njcmd  -l \njcmd  -h \n \n 参数 \n \n pid  虚拟机的进程id \n main class  接收诊断命令请求的进程的main类。 \n command \n \n \n 该命令必须是针对所选JVM的有效 jcmd 命令。 \n \n \n jcmd 的可用命令列表是通过运行 help 命令( jcmd pid help )获得的，其中 pid 是运行 Java 进程的进程ID。 \n \n \n 如果 pid 为0，命令将被发送到所有的 Java 进程。 main class 参数将用于部分或完全匹配用于启动 Java 的类。 \n \n \n 如果没有提供任何选项，会列出正在运行的 Java 进程标识符以及用于启动进程的主类和命令行参数(与使用 -l 相同)。 \n \n \n Perfcounter.print  打印目标 Java 进程上可用的性能计数器。性能计数器的列表可能会随着 Java 进程的不同而产生变化。 \n -f file  从文件file中读取命令，然后在目标 Java 进程上调用这些命令。 \n -l  查看所有的进程列表信息。 \n -h  查看帮助信息。（同 -help ） \n \n 查看可用命令 \n jcmd  $( pgrep  java )   help \n \n 示例 \n生成dump文件 \njcmd  < pid >  GC.heap_dump /home/heap.hprof\n 其他工具 \n \n \n \n 工具名称 \n 用途 \n \n \n \n \n jabswitch.exe \n Java Access Bridge Switch的简称，用于控制Java访问桥的开/关。Java访问桥是一种技术，让Java应用程序实现Accessibility API，以供Microsoft Windows系统的辅助技术访问。 \n \n \n javafxpackager.exe \n JavaFX打包工具 \n \n \n jrunscript.exe \n 运行脚本 \n \n \n \n',createdTime:1761814324e3},{title:"JavaGUI",frontmatter:{description:"ui库第一代是awt，第二代是swing，第三代是javafx",meta:[{name:"twitter:title",content:"JavaGUI"},{name:"twitter:description",content:"ui库第一代是awt，第二代是swing，第三代是javafx"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Java/JavaGUI.html"},{property:"og:type",content:"article"},{property:"og:title",content:"JavaGUI"},{property:"og:description",content:"ui库第一代是awt，第二代是swing，第三代是javafx"},{property:"og:url",content:"https://bajins.com/Java/JavaGUI.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"JavaGUI"},{itemprop:"description",content:"ui库第一代是awt，第二代是swing，第三代是javafx"}]},regularPath:"/Java/JavaGUI.html",relativePath:"Java/JavaGUI.md",key:"v-787fabfe",path:"/Java/JavaGUI.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"JavaFX",slug:"javafx"},{level:3,title:"第三方依赖",slug:"第三方依赖"},{level:3,title:"Other",slug:"other"},{level:3,title:"示例项目",slug:"示例项目"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" JavaGUI \n Flag JavaFX 第三方依赖 Other 示例项目 \n Flag \n \n ui库第一代是awt，第二代是swing，第三代是javafx \n \n \n https://github.com/griffon/griffon \n \n https://github.com/griffon-plugins \n \n \n https://github.com/bobbylight/RSyntaxTextArea \n \n \n GUI 设计和 UI 设计有什么区别？ \n GUI和UI \n JavaFX \n \n https://github.com/topics/javafx \n https://github.com/topics/openjfx \n https://github.com/topics/javafx-desktop-apps \n \n \n https://github.com/openjdk/jfx \n \n https://docs.oracle.com/javase/8/javafx/user-interface-tutorial \n https://docs.oracle.com/javase/8/javafx/api/javafx/fxml/doc-files/introduction_to_fxml.html \n \n \n https://github.com/javafxports/openjdk-jfx \n https://github.com/openjfx \n \n https://openjfx.io \n https://openjfx.cn \n \n \n https://code.makery.ch/zh-cn/library/javafx-tutorial \n https://segmentfault.com/t/javafx \n https://gluonhq.com/products/javafx \n SceneBuilder  https://gluonhq.com/products/scene-builder \n \n https://www.oracle.com/cn/java/technologies/javase/javafxscenebuilder-info.html \n SceneBuilder例子 \n \n \n \n \n 文档  https://github.com/FXDocs/docs \n 第三方依赖 \n \n https://github.com/topics/javafx-library \n https://github.com/topics/javafx-8 \n https://github.com/mhrimaz/AwesomeJavaFX \n https://github.com/topics/fontawesomefx \n \n https://bitbucket.org/Jerady/fontawesomefx \n https://bintray.com/jerady/maven/FontAwesomeFX \n https://github.com/Jerady/fontawesomefx-jigsaw-modules \n \n \n https://github.com/JFXtras \n https://github.com/JonathanGiles \n https://github.com/Drombler \n https://github.com/jfree \n https://github.com/gluonhq \n \n \n https://github.com/dustinkredmond \n https://github.com/FXMisc \n \n 富文本  https://github.com/FXMisc/RichTextFX \n \n \n SVG  https://github.com/blackears/svgSalamander \n https://github.com/piusalfred/ikonfx \n https://github.com/openrndr/openrndr \n 扁平UI  https://github.com/JFormDesigner/FlatLaf \n https://github.com/mgarin/weblaf \n UI 控件  https://github.com/controlsfx \n https://github.com/eclipse/nebula \n https://github.com/dlsc-software-consulting-gmbh \n https://github.com/metawidget \n https://github.com/palexdev/MaterialFX \n https://github.com/jfx-ensemble \n https://github.com/mkpaz/atlantafx \n 动画库  https://github.com/Typhon0/AnimateFX \n 主题  https://github.com/weisJ/darklaf \n \n https://github.com/bulenkov/Darcula \n \n \n Google Material Design  https://github.com/jfoenixadmin/JFoenix \n Bootstrap样式  https://github.com/dicolar/jbootx \n https://github.com/edvin/tornadofx-controls \n https://github.com/kordamp/bootstrapfx \n \n https://github.com/aalmiray \n \n \n 仪表板  https://github.com/HanSolo \n https://github.com/fair-acc/chart-fx \n 等离子画布  https://github.com/bertjan/javafx-canvas-plasma \n 进度条  https://github.com/ctongfei/progressbar \n 3D  https://github.com/JogAmp \n https://github.com/saalfeldlab/paintera \n https://github.com/FXyz/FXyz \n 跨平台访问本机API  https://github.com/LWJGL \n \n https://github.com/lwjglgamedev/lwjglbook-bookcontents \n \n \n 嵌入chrome内核浏览器  https://jxbrowser-support.teamdev.com \n https://github.com/kingsleyljc/web_browser \n JavaFX的游戏超集  https://github.com/AlmasB/FXGL \n 缩放  https://github.com/miho/ScaledFX \n https://github.com/tom91136/GestureFX \n https://github.com/goxr3plus/FX-BorderlessScene \n 布局算法  https://github.com/AmaronUI/amaronui-layouts \n https://github.com/kirill-grouchnikov/radiance \n https://github.com/mikaelgrev/miglayout \n 无边框窗口  https://github.com/micheljung/fxstage \n https://github.com/micheljung/jfx-waitomo-theme \n 数据框可视化  https://github.com/PatMartin/Dex \n 校验  https://github.com/effad/ValidatorFX \n ffmpeg  https://github.com/a-schild/jave2 \n 图标包  https://github.com/kordamp/ikonli \n 键盘和鼠标  https://github.com/kwhat/jnativehook \n 数据绑定  https://github.com/TomasMikula/EasyBind \n 终端仿真器  https://github.com/javaterminal/TerminalFX \n WEB集成  https://github.com/JPro-one \n MVVM模式  https://github.com/sialcasa/mvvmFX \n \n \n Maven打包  https://github.com/javafx-maven-plugin \n UAC提权  https://github.com/dyorgio/run-as-root \n CS课程  https://github.com/Nurtak/ObjectGraphVisualization \n https://github.com/dlemmermann/LayoutFX \n Other \n \n JavaFX最新消息 \n 使用Java 9的模块化来构建零依赖的原生应用 \n JavaFX、OSGi、Eclipse开源资料 \n JavaFx+Springboot+Maven 开发打包教程 \n JavaFX 实现截图 \n IDEA通过Maven打包JavaFX工程（OpenJFX11） \n 创建JavaFX项目并用Maven打包 \n 示例项目 \n \n Java多线程下载GUI  https://github.com/fengxiaocan/Downloader \n https://github.com/proxyee-down-org/proxyee-down \n 基于javafx8代码生成器  https://github.com/EliMirren \n https://github.com/fuzhengwei/NaiveChat \n 词汇猎人  https://github.com/VocabHunter/VocabHunter \n 播放器  https://github.com/goxr3plus/XR3Player \n 音视频转换  https://github.com/goxr3plus/XR3Converter \n https://github.com/yhy0/ExpDemo-JavaFX \n https://github.com/ZhouRuikang015/javafx-havefun \n https://github.com/WBB1997/BingWallpaper \n 翻译  https://github.com/omegat-org/omegat \n \n https://sourceforge.net/projects/omegat \n \n \n 纸牌游戏  https://github.com/Card-Forge/forge \n PDF  https://github.com/torakiki/pdfsam \n 权限管理  https://gitee.com/lwdillon/dillon-boot-fx \n 空间任务设计  https://ai-solutions.com/restricted/freeflyer-downloads \n \n",createdTime:1761814324e3},{title:"Java注解",frontmatter:{description:"解释注解的方式：反射！反射是jdk中提供的一种机制，通过读取编译后的运行文件，反向获取类信息的一种手段！可以通过反射获取类、方法、成员变量上的运行时注解内容！",meta:[{name:"twitter:title",content:"Java注解"},{name:"twitter:description",content:"解释注解的方式：反射！反射是jdk中提供的一种机制，通过读取编译后的运行文件，反向获取类信息的一种手段！可以通过反射获取类、方法、成员变量上的运行时注解内容！"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Java/Java%E6%B3%A8%E8%A7%A3.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Java注解"},{property:"og:description",content:"解释注解的方式：反射！反射是jdk中提供的一种机制，通过读取编译后的运行文件，反向获取类信息的一种手段！可以通过反射获取类、方法、成员变量上的运行时注解内容！"},{property:"og:url",content:"https://bajins.com/Java/Java%E6%B3%A8%E8%A7%A3.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Java注解"},{itemprop:"description",content:"解释注解的方式：反射！反射是jdk中提供的一种机制，通过读取编译后的运行文件，反向获取类信息的一种手段！可以通过反射获取类、方法、成员变量上的运行时注解内容！"}]},regularPath:"/Java/Java%E6%B3%A8%E8%A7%A3.html",relativePath:"Java/Java注解.md",key:"v-286ca650",path:"/Java/Java%E6%B3%A8%E8%A7%A3.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"JDK",slug:"jdk"},{level:2,title:"Servlet",slug:"servlet"},{level:2,title:"Validation",slug:"validation"},{level:2,title:"JAX-RS",slug:"jax-rs"},{level:2,title:"Spring",slug:"spring"},{level:3,title:"声明bean的注解",slug:"声明bean的注解"},{level:3,title:"注入bean的注解",slug:"注入bean的注解"},{level:3,title:"java配置类相关注解",slug:"java配置类相关注解"},{level:3,title:"切面（AOP）相关注解",slug:"切面-aop-相关注解"},{level:3,title:"@Bean的属性支持",slug:"bean的属性支持"},{level:3,title:"@Value注解",slug:"value注解"},{level:3,title:"环境切换",slug:"环境切换"},{level:3,title:"异步相关",slug:"异步相关"},{level:3,title:"定时任务相关",slug:"定时任务相关"},{level:3,title:"@Enable*注解说明",slug:"enable-注解说明"},{level:3,title:"测试相关注解",slug:"测试相关注解"},{level:3,title:"SpringMVC注解",slug:"springmvc注解"},{level:2,title:"Swagger2",slug:"swagger2"},{level:2,title:"Jackson",slug:"jackson"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Java注解 \n Flag JDK Servlet Validation JAX-RS Spring 声明bean的注解 注入bean的注解 java配置类相关注解 切面（AOP）相关注解 @Bean的属性支持 @Value注解 环境切换 异步相关 定时任务相关 @Enable*注解说明 测试相关注解 SpringMVC注解 Swagger2 Jackson \n Flag \n \n 解释注解的方式：反射！反射是jdk中提供的一种机制，通过读取编译后的运行文件，反向获取类信息的一种手段！可以通过反射获取类、方法、成员变量上的运行时注解内容！ \n \n \n 元注解: 能注解到注解上的注解，能用在其他注解上的注解 \n \n \n Java 注解（Annotation） \n Javadoc标签和Javadoc注释规范 \n JDK \n \n 从Java源码中提取的所有注解 \n获取所有Java中的注解 \n import  os ,  re\n\ndir_path = "./jdk8u" \n\nans  =   set ( )   # 无序的不重复元素序列 \n\n for  r ,  d ,  f  in  os . walk ( dir_path ) : \n     for   file   in  f : \n        fp  =  os . path . join ( r ,   file ) \n         if   ".java"   in   file   and   not  re . search ( \'[0-9]+|Test\' ,   file ,  re . I ) : \n             try : \n                 with   open ( fp ,   "r" ,  encoding = "utf8" )   as  rf : \n                    an  =  re . compile ( r\'public @interface (.*) \\{\' ,  re . I ) . findall ( rf . read ( ) ) \n                     if  an  and   len ( an )   >   0 : \n                        ans . add ( "@"   +  an [ 0 ] ) \n             except : \n                 pass \n\n print ( \'\\n\' . join ( ans ) ) \n \n \n \n \n 注解 \n 版本 \n 说明 \n \n \n \n \n @WebParam \n \n 表示方法的参数 \n \n \n @Oneway \n \n 表示为只有输入消息而没有输出消息的 Web Service 单向操作 \n \n \n @WebResult \n \n 表示方法的返回值 \n \n \n @HandlerChain \n \n 使 Web Service 与外部定义的处理程序链相关联。 \n \n \n @WebService \n \n 用于对接口，类进行注解，表示要发布的web服务 \n \n \n @WebMethod \n \n 该注解用于用@WebService注解的类或接口的方法上，表示要发布的方法 \n \n \n @SOAPMessageHandlers \n \n \n \n \n @SOAPMessageHandler \n \n \n \n \n @SOAPBinding \n \n SOAP绑定类型：RPC、DOCUMENT \n \n \n @InitParam \n \n \n \n \n @Resource \n \n \n \n \n @Resources \n \n \n \n \n @PreDestroy \n Servlet2.5 \n 被@PreDestroy修饰的方法会在服务器卸载Servlet之前运行，并且只会被服务器调用一次 \n \n \n @Generated \n \n \n \n \n @PostConstruct \n Servlet2.5 \n 被@PostConstruct修饰的方法会在服务器加载Servle且构造函数之后执行，并且只会被服务器执行一次 \n \n \n @RespectBinding \n \n \n \n \n @ResponseWrapper \n \n \n \n \n @WebServiceRefs \n \n \n \n \n @Action \n \n \n \n \n @RequestWrapper \n \n \n \n \n @WebServiceProvider \n \n \n \n \n @WebServiceRef \n \n \n \n \n @FaultAction \n \n \n \n \n @WebFault \n \n \n \n \n @ServiceMode \n \n \n \n \n @WebEndpoint \n \n \n \n \n @BindingType \n \n \n \n \n @WebServiceClient \n \n \n \n \n @Addressing \n \n \n \n \n @MTOM \n \n \n \n \n @WebServiceFeatureAnnotation \n \n \n \n \n @XmlSeeAlso \n \n \n \n \n @XmlElementDecl \n \n \n \n \n @XmlIDREF \n \n \n \n \n @XmlValue \n \n \n \n \n @XmlAccessorType \n \n 控制字段或属性的序列化 \n \n \n @XmlMixed \n \n \n \n \n @XmlID \n \n \n \n \n @XmlRootElement \n \n 根节点,将Java类或枚举类型映射到XML元素 \n \n \n @XmlElementRef \n \n \n \n \n @XmlEnum \n \n \n \n \n @XmlElementWrapper \n \n 对于数组或集合（即包含多个元素的成员变量），生成一个包装该数组或集合的XML元素（称为包装器） \n \n \n @XmlEnumValue \n \n \n \n \n @XmlType \n \n 对于@XmlElementWrapper标注的属性，不能出现在@XmlType的propOrder列表中 \n \n \n @XmlAccessorOrder \n \n 控制JAXB 绑定类中属性和字段的排序 \n \n \n @XmlSchemaTypes \n \n \n \n \n @XmlInlineBinaryData \n \n \n \n \n @XmlSchema \n \n \n \n \n @XmlAnyElement \n \n \n \n \n @XmlSchemaType \n \n \n \n \n @XmlRegistry \n \n \n \n \n @XmlList \n \n \n \n \n @XmlAttribute \n \n 将Java类的一个属性映射到与属性同名的一个XML元素 \n \n \n @XmlAttachmentRef \n \n \n \n \n @XmlNs \n \n \n \n \n @XmlMimeType \n \n \n \n \n @XmlElements \n \n \n \n \n @XmlElement \n \n 对于所有@XmlElement标注过的属性，必须出现在@XmlType的propOrder列表中 \n \n \n @XmlElementRefs \n \n \n \n \n @XmlTransient \n \n \n \n \n @XmlAnyAttribute \n \n \n \n \n @XmlJavaTypeAdapters \n \n \n \n \n @XmlJavaTypeAdapter \n \n 使用定制的适配器（即扩展抽象类XmlAdapter并覆盖marshal()和unmarshal()方法），以序列化Java类为XML \n \n \n @Interned \n \n \n \n \n @NotNull \n \n \n \n \n @Nullable \n \n \n \n \n @MessageDumping \n \n \n \n \n @FeatureConstructor \n \n \n \n \n @FeatureListValidatorAnnotation \n \n \n \n \n @InstanceResolverAnnotation \n \n \n \n \n @SchemaValidation \n \n \n \n \n @Serialization \n \n \n \n \n @StreamingAttachment \n \n \n \n \n @UsesJAXBContext \n \n \n \n \n @MemberSubmissionAddressing \n \n \n \n \n @XmlAccessorFactory \n \n \n \n \n @OverrideAnnotationOf \n \n \n \n \n @XmlIsSet \n \n \n \n \n @XmlLocation \n \n \n \n \n @WsgenProtocol \n \n \n \n \n @InheritedAttributes \n \n \n \n \n @DescriptorFields \n \n \n \n \n @ParameterNames \n \n \n \n \n @ManagedAttribute \n \n \n \n \n @AMXMetadata \n \n \n \n \n @InheritedAttribute \n \n \n \n \n @IncludeSubclass \n \n \n \n \n @ManagedData \n \n \n \n \n @ManagedOperation \n \n \n \n \n @Description \n \n \n \n \n @NameValue \n \n \n \n \n @ManagedObject \n \n \n \n \n @DescriptorKey \n \n \n \n \n @Taxonomy \n \n \n \n \n @Reset \n \n \n \n \n @ProbeParam \n \n \n \n \n @ProbeProvider \n \n \n \n \n @Probe \n \n \n \n \n @ProbeListener \n \n \n \n \n @EnvelopeStyle \n \n \n \n \n @Property \n \n \n \n \n @DatabindingMode \n \n \n \n \n @Reference \n \n \n \n \n @Immutable \n \n \n \n \n @Ignore \n \n \n \n \n @Logger \n \n \n \n \n @Setter \n \n \n \n \n @Constructor \n \n \n \n \n @Optimistic \n \n \n \n \n @SpecializedFunction \n \n \n \n \n @ScriptClass \n \n \n \n \n @Function \n \n \n \n \n @Getter \n \n \n \n \n @CallerSensitive \n \n \n \n \n @Contended \n \n \n \n \n @MXBean \n \n \n \n \n @ProbeName \n \n \n \n \n @ProviderName \n \n \n \n \n @Attributes \n \n \n \n \n @NameAttributes \n \n \n \n \n @ProviderAttributes \n \n \n \n \n @FunctionAttributes \n \n \n \n \n @ModuleName \n \n \n \n \n @ModuleAttributes \n \n \n \n \n @ArgsAttributes \n \n \n \n \n @FunctionName \n \n \n \n \n @ConstructorProperties \n \n \n \n \n @Transient \n \n 标记的成员变量不参与序列化过程，配合@Table注解，ORM框架将忽略该属性 \n \n \n @Deprecated \n jdk1.5 \n 内置注解：用于标志过时的类、方法和成员变量 \n \n \n @FunctionalInterface \n jdk1.8 \n 函数式接口注解，用于定义函数式接口 \n \n \n @SafeVarargs \n jdk1.7 \n 参数安全类型注解，用于提示用户参数安全 \n \n \n @Override \n jdk1.5 \n 内置注解：用于修饰重写的方法 \n \n \n @SuppressWarnings \n jdk1.5 \n 内置注解：用户忽略@Deprecated标志过的警告 \n \n \n @Repeatable \n jdk1.8 \n 表示注解的属性可以重复！@Repeatable通俗来讲，就是注解容器！ \n \n \n @Inherited \n jdk1.5 \n 元注解：子类继承父类的注解（子类没有任何注解修饰） \n \n \n @Retention \n jdk1.5 \n 元注解：表示注解保留周期 \n \n \n @Documented \n jdk1.5 \n 元注解：将注解写入文档 \n \n \n @Target \n jdk1.5 \n 元注解：表示注解可以使用在什么地方 \n \n \n @Native \n jdk1.8 \n 生成本机头文件的工具的提示，以确定是否需要头文件，如果需要，它应该包含哪些声明。 \n \n \n @Validate \n \n \n \n \n @RequireContainer \n \n \n \n \n @Require \n \n \n \n \n @Exported \n \n \n \n \n @SupportedOptions \n \n \n \n \n @SupportedAnnotationTypes \n \n \n \n \n @SupportedSourceVersion \n \n \n \n \n @Trusted \n Servlet \n \n Tomcat 7.0 及以上版本的 server.api 才有注解 \n \n \n servlet.jar  是 servlet 3.0 版本之前的地址 \n javax.servlet-api.jar  是 servlet 3.0 版本之后的地址 \n \n \n https://github.com/eclipse-ee4j/servlet-api \n \n \n \n \n 注解 \n 版本 \n 说明 \n \n \n \n \n @WebServlet \n Servlet3.0 \n 用于声明servlet \n \n \n @WebListener \n Servlet3.0 \n 用于声明过监听器，可通过控制filter的文件名来控制执行顺序 \n \n \n @WebFilter \n Servlet3.0 \n 用于声明过滤器 \n \n \n @WebInitParam \n Servlet3.0 \n 为 Servlet 或者过滤器指定初始化参数，配置@WebServlet或@WebFilter时使用 \n \n \n @MultipartConfig \n Servlet3.0 \n HttpServletRequest 提供的对上传文件的支持，该注解标注在 Servlet 上面 \n \n \n @HandlesTypes \n \n \n \n \n @HttpConstraint \n \n \n \n \n @HttpMethodConstraint \n \n \n \n \n @ServletSecurity \n Validation \n \n JSR-303 是 JAVA EE 6 中的一项子规范，叫做 Bean Validation ，但是这只是一个接口，没有具体实现。 \n \n \n https://github.com/topics/validation \n https://github.com/topics/validator \n \n \n https://github.com/apache/commons-validator \n https://github.com/apache/bval \n https://github.com/jakartaee/validation \n \n https://beanvalidation.org \n https://github.com/hibernate/hibernate-validator \n https://github.com/nomemory/java-bean-validation-extension \n https://github.com/Baeldung/spring-security-registration \n https://github.com/jirutka/validator-collection \n https://github.com/Naoghuman/lib-validation \n \n \n https://github.com/neoremind/fluent-validator \n https://github.com/making/yavi \n \n \n javax.validation.Validation 、 hibernate-validator 和 Spring validtor \n提供了 JSR 303 规范中所有内置constraint 的实现，除此之外还有一些附加的 constraint \n \n \n 这么写参数校验(validator)就不会被劝退了 \n 四款数据校验的类(Validate) \n \n \n \n \n 注解 \n 支持Java类型 \n 备注 \n \n \n \n \n @AssertFalse \n Boolean, boolean \n 验证元素值必须为flase \n \n \n @AssertTrue \n Boolean, boolean \n 验证元素值必须为true，否则抛异常 \n \n \n @CreditCardNumber \n CharSequence \n 验证信用卡号码是否有效 \n \n \n @DecimalMax \n Object \n 验证数值是否小于等于指定值 \n \n \n @DecimalMin \n CharSequence \n 验证数值是否大于等于指定值 \n \n \n @Digits(integer = 3, fraction = 2) \n Long, Integer, Double, Float \n 验证注解的元素值的整数位数和小数位数上限 \n \n \n @Email \n CharSequence \n 验证元素必须是电子邮箱地址 \n \n \n @Future \n java.util.Date, java.util.Calendar \n 验证日期为当前时间之后 \n \n \n @FutureOrPresent \n java.util.Date, java.util.Calendar \n 验证日期为当前时间或之后一个时间 \n \n \n @Length(min=,max=) \n CharSequence \n 验证元素值包含在一个区间 \n \n \n @Max \n CharSequence \n 检验当前数值小于等于指定值 \n \n \n @Min \n BigDecimal, BigInteger, byte, short,int, long,Number. \n 检验当前数值大于等于指定值 \n \n \n @NotBlank \n CharSequence \n 验证元素值不为null且移除两边空格后长度大于0 \n \n \n @NotEmpty \n CharSequence,Collection,Map and Arrays \n 验证元素值不为null且不为空（字符串长度不为0、集合大小不为0） \n \n \n @NotNull \n Object \n 验证元素值不能为 null \n \n \n @Null \n Object \n 验证元素值为null \n \n \n @Past \n java.util.Date, java.util.Calendar \n 验证日期为当前时间之前 \n \n \n @PastOrPresent \n java.util.Date, java.util.Calendar \n 验证日期为当前时间或之前 \n \n \n @Pattern(regex=,flag=) \n CharSequence \n 验证元素必须符合指定的正则表达式 \n \n \n @Range(min=,max=,message=) \n CharSequence \n 验证数值为指定值区间范围内 \n \n \n @Size(max=, min=) \n String,Collection,Map,arrays,CharSequence \n 验证元素个数包含在一个区间 \n \n \n @UniqueElements \n Collection \n 校验集合中的元素必须保持唯一 否则异常 \n \n \n @URL \n CharSequence \n 验证日期为当前时间之前 \n \n \n @Valid \n Object \n 验证关联对象元素进行递归校验检查 \n \n \n @ScriptAssert \n CharSequence \n 脚本表达式的计算结果为true \n \n \n @SafeHtml \n CharSequence \n 可能包含不安全的html内容 \n JAX-RS \n \n Jersey 和 CxF 框架实现了 JSR311 / JSR339 标准 \n \n jersey常用注解 \n \n https://github.com/eclipse-ee4j/jersey \n \n \n \n \n Annotation \n 作用 \n 说明 \n \n \n \n \n @GET \n 查询请求 \n 相当于数据库的查询数据操作 \n \n \n @PUT \n 更新请求 \n 相当于数据库的更新数据操作 \n \n \n @POST \n 插入请求 \n 相当于数据库的插入数据操作 \n \n \n @DELETE \n 删除请求 \n 相当于数据的删除数据操作 \n \n \n @Path \n uri路径 \n 定义资源的访问路径，client通过这个路径访问资源。比如：@Path("user") \n \n \n @Produces \n 指定返回MIME格式 \n 资源按照那种数据格式返回，可取的值有：MediaType.APPLICATION_XXX。比如：@Produces(MediaType.APPLICATION_XML) \n \n \n @Consumes \n 接受指定的MIME格式 \n 只有符合这个参数设置的请求再能访问到这个资源。比如@Consumes("application/x-www-form-urlencoded") \n \n \n @PathParam \n uri路径参数 \n 写在方法的参数中，获得请求路径参数。比如：@PathParam("username") String userName \n \n \n @QueryParam \n uri路径请求参数 \n 写在方法的参数中，获得请求路径附带的参数。比如：@QueryParam("desc") String desc \n \n \n @DefaultValue \n 设置@QueryParam参数的默认值 \n 如果@QueryParam没有接收到值，就使用默认值。比如：@DefaultValue("description") @QueryParam("desc") String desc \n \n \n @FormParam \n form传递的参数 \n 接受form传递过来的参数。比如：@FormParam("name") String userName \n \n \n @BeanParam \n 通过Bean的形式传递参数 \n 接受client传递的bean类型的参数，同时这个bean可以在属性上配置@FormParam用以解决client的属性名称和bean的属性名称不一致的问题。比如：@BeanParam User user \n \n \n @Context \n 获得一些系统环境信息 \n 通过@Context可以获得以下信息：UriInfo、ServletConfig、ServletContext、HttpServletRequest、HttpServletResponse和HttpHeaders等 \n Spring \n 声明bean的注解 \n \n @Component  组件，没有明确的角色 \n @Service  在业务逻辑层使用（service层） \n @Repository  在数据访问层使用（dao层） \n @Controller  在展现层使用，控制器的声明（C） \n 注入bean的注解 \n \n 都可以注解在set方法和属性上，推荐注解在属性上（一目了然，少写代码）。 \n \n \n @Autowired  由Spring提供（Spring上下文已有实例（已注入IOC）， @Autowired 只是取一下） \n @Inject  由JSR-330提供 \n @Resource  由JSR-250提供 \n java配置类相关注解 \n \n @Configuration  声明当前类为配置类，相当于xml形式的Spring配置（类上） \n @Bean  注解在方法上，声明当前方法的返回值为一个bean，替代xml中的方式（方法上） \n @Configuration  声明当前类为配置类，其中内部组合了 @Component 注解，表明这个类是一个bean（类上） \n @ComponentScan  用于对Component进行扫描，相当于xml中的（类上） \n @WishlyConfiguration  为 @Configuration 与 @ComponentScan 的组合注解，可以替代这两个注解 \n 切面（AOP）相关注解 \n \n Spring支持AspectJ的注解式切面编程。 \n \n \n @Aspect  声明一个切面（类上） \n \n \n 使用 @After 、 @Before 、 @Around 定义建言（advice），可直接将拦截规则（切点）作为参数。 \n \n \n @After  在方法执行之后执行（方法上） \n @Before  在方法执行之前执行（方法上） \n @Around  在方法执行之前与之后执行（方法上） \n @PointCut  声明切点 \n \n \n 在java配置类中使用 @EnableAspectJAutoProxy 注解开启Spring对AspectJ代理的支持（类上） \n \n \n \n \n AOP配置元素 \n 描述 \n \n \n \n \n <aop:advisor> \n 定义AOP通知器 \n \n \n <aop:after> \n 定义AOP后置通知（不管该方法是否执行成功） \n \n \n <aop:after-returning> \n 在方法成功执行后调用通知 \n \n \n <aop:after-throwing> \n 在方法抛出异常后调用通知 \n \n \n <aop:around> \n 定义AOP环绕通知 \n \n \n <aop:aspect> \n 定义切面 \n \n \n <aop:aspect-autoproxy> \n 定义 @AspectJ 注解驱动的切面 \n \n \n <aop:before> \n 定义AOP前置通知 \n \n \n <aop:config> \n 顶层的AOP配置元素，大多数的 aop:* 包含在 aop:config 元素内 \n \n \n <aop:declare-parent> \n 为被通知的对象引入额外的接口，并透明的实现 \n \n \n <aop:pointcut> \n 定义切点 \n @Bean的属性支持 \n \n @Bean  手动创建一个实例，并保留在IOC中，当我们引用第三方库中的类需要装配到Spring容器时，可以通过 @Bean 来实现 \n \n \n @Scope  设置Spring容器如何新建Bean实例（方法上，得有 @Bean ）,其设置类型包括：\n \n Singleton  （单例,一个Spring容器中只有一个bean实例，默认模式）, \n Protetype  （每次调用新建一个bean）, \n Request  （web项目中，给每个http request新建一个bean）, \n Session  （web项目中，给每个http session新建一个bean）, \n GlobalSession （给每一个 global http session新建一个Bean实例） \n \n \n @StepScope  在Spring Batch中还有涉及 \n @PostConstruct  由JSR-250提供，在构造函数执行完之后执行，等价于xml配置文件中bean的initMethod \n @PreDestory  由JSR-250提供，在Bean销毁之前执行，等价于xml配置文件中bean的destroyMethod \n @Value注解 \n \n @Value  为属性注入值（属性上） \n \n \n @Value("Michael Jackson")  String name; 注入普通字符 \n @Value("#{systemProperties[\'os.name\']}")  String osName; 注入操作系统属性 \n @Value("#{ T(java.lang.Math).random() * 100 }")  String randomNumber; 注入表达式结果 \n @Value("#{domeClass.name}")  String name; 注入其它bean属性 \n @Value("classpath:com/hgs/hello/test.txt")  String Resource file; 注入文件资源 \n @Value("http://www.cznovel.com")  Resource url; 注入网站资源 \n @Value("${book.name}")  String bookName; 注入配置文件 \n \n 注入配置使用方法 \n \n 编写配置文件（test.properties） \n \n book.name = test\n \n \n @PropertySource  加载配置文件(类上) \n \n @PropertySource ( "classpath:/test.propertie" ) \n \n \n 还需配置一个 PropertySourcesPlaceholderConfigurer 的bean。 \n 环境切换 \n \n @Profile  通过设定Environment的ActiveProfiles来设定当前context需要使用的配置环境。（类或方法上） \n @Conditional  Spring4中可以使用此注解定义条件话的bean，通过实现Condition接口，并重写matches方法，从而决定该bean是否被实例化。（方法上） \n 异步相关 \n \n @EnableAsync  配置类中，通过此注解开启对异步任务的支持，叙事性AsyncConfigurer接口（类上） \n @Async  在实际执行的bean方法使用该注解来申明其是一个异步任务（方法上或类上所有的方法都将异步，需要@EnableAsync开启异步任务） \n 定时任务相关 \n \n @EnableScheduling  在配置类上使用，开启计划任务的支持（类上） \n @Scheduled  来申明这是一个任务，包括cron,fixDelay,fixRate等类型（方法上，需先开启计划任务的支持） \n @Enable*注解说明 \n \n 这些注解主要用来开启对xxx的支持。 \n \n \n @EnableAspectJAutoProxy  开启对AspectJ自动代理的支持 \n @EnableAsync  开启异步方法的支持 \n @EnableScheduling  开启计划任务的支持 \n @EnableWebMvc  开启Web MVC的配置支持 \n @EnableConfigurationProperties  开启对 @ConfigurationProperties 注解配置Bean的支持 \n @EnableJpaRepositories  开启对SpringData JPA Repository的支持 \n @EnableTransactionManagement  开启注解式事务的支持 \n @EnableTransactionManagement  开启注解式事务的支持 \n @EnableCaching  开启注解式的缓存支持 \n 测试相关注解 \n \n @RunWith  运行器，Spring中通常用于对JUnit的支持  @RunWith(SpringJUnit4ClassRunner.class) \n @ContextConfiguration  用来加载配置ApplicationContext，其中classes属性用来加载配置类  @ContextConfiguration(classes={TestConfig.class}) \n @WebAppConfiguration \n SpringMVC注解 \n \n @EnableWebMvc  在配置类中开启Web MVC的配置支持，如一些ViewResolver或者MessageConverter等，若无此句，重写WebMvcConfigurerAdapter方法（用于对SpringMVC的配置）。 \n @Controller  声明该类为SpringMVC中的Controller \n @RestController  该注解为一个组合注解，相当于 @Controller 和 @ResponseBody 的组合 \n @RequestMapping  用于映射Web请求，包括访问路径和参数（类或方法上）\n \n @PathVariable  用于接收url路径上使用 {} 声明的参数，将注解放在参数中前，即可获取该值，通常作为Restful的接口实现方法。\n \n 获取Spring中@PathVariable注解里带点的完整参数 \n \n \n @RequestParam  用于接收参数（如果变量名与参数名相同可不使用此注解）， GET 为 ? 后面的查询参数， POST 为body中的表单参数和URL参数； \n @RequestBody  适用于请求体格式为 application/json ，只能用于接收JSON对象，body中的内容 \n @RequestPart  适用于请求体格式为 multipart/form-data ，可嵌套复杂的请求域（JSON，XML），既可以接收对象又可以接收二进制数据 \n @ModelAttribute \n @RequestPayload  用于处理入站SOAP消息的请求部分 \n \n \n @ResponseBody  将返回内容序列化为json字符串（返回值旁或方法上） \n @CookieValue \n @CrossOrigin \n @Mapping \n @PutMapping \n @PatchMapping \n @PostMapping \n @DeleteMapping \n @GetMapping \n @ValueConstants \n @MatrixVariable \n @RequestHeader \n @RequestAttribute \n @SessionAttributes \n @SessionAttribute \n @ResponseStatus \n @ControllerAdvice  全局控制器，注解了 @Controller 的类的方法可使用，这对所有注解了 @RequestMapping 的控制器内的方法有效。\n \n @ExceptionHandler  用于全局处理控制器里的异常处理方法（全局异常捕获） \n @InitBinder  用来设置WebDataBinder（用来自动绑定前台请求参数到Model中）。 \n @ModelAttribute  本来的作用是绑定键值对到Model里，在 @ControllerAdvice 中是让全局的 @RequestMapping 都能获得在此处设置的键值对。 \n \n \n @RestControllerAdvice \n Swagger2 \n \n \n \n 注解名称 \n 注解属性 \n 作用域 \n 属性作用 \n \n \n \n \n @Api \n tags \n 类 \n 说明该类的作用 \n \n \n \n value \n 类 \n 说明该类的作用 \n \n \n @ApiOperation() \n value \n 方法 \n 描述方法作用 \n \n \n \n notes \n 方法 \n 提示内容 \n \n \n \n tags \n 方法 \n 分组 \n \n \n @ApiParam() \n name \n 方法参数 \n 参数名 \n \n \n \n value \n 方法参数 \n 参数说明 \n \n \n \n required \n 方法参数 \n 是否必填 \n \n \n @ApiModel() \n value \n 类 \n 对象名 \n \n \n \n description \n 类 \n 描述 \n \n \n @ApiModelProperty() \n value \n 方法 \n 字段说明 \n \n \n \n name \n 方法 \n 属性名 \n \n \n \n dataType \n 方法 \n 属性类型 \n \n \n \n required \n 方法 \n 是否必填 \n \n \n \n example \n 方法 \n 举例 \n \n \n \n hidden \n 方法 \n 隐藏 \n \n \n @ApiImplicitParam() \n value \n 方法 \n 参数说明 \n \n \n \n name \n 方法 \n 参数名 \n \n \n \n dataType \n 方法 \n 数据类型 \n \n \n \n paramType \n 方法 \n 参数类型 \n \n \n \n example \n 方法 \n 举例 \n \n \n @ApiResponse() \n response \n 方法 \n 返回类 \n \n \n \n code \n 方法 \n 返回码 \n \n \n \n message \n 方法 \n 返回信息 \n \n \n \n examples \n 方法 \n 例子 \n \n \n \n \n \n \n 注解 \n 属性 \n 值 \n 备注 \n \n \n \n \n @Api \n value \n 字符串 \n 可用在class头上,class描述 \n \n \n \n description \n 字符串 \n \n \n \n \n \n \n @Api(value = "xxx", description = "xxx") \n \n \n @ApiOperation \n value \n 字符串 \n 可用在方法头上.参数的描述容器 \n \n \n \n notes \n 字符串 \n \n \n \n \n \n \n @ApiOperation(value = "xxx", notes = "xxx") \n \n \n @ApiImplicitParams \n {} \n @ApiImplicitParam数组 \n 可用在方法头上.参数的描述容器 \n \n \n \n \n \n @ApiImplicitParams({@ApiImplicitParam1,@ApiImplicitParam2,...}) \n \n \n @ApiImplicitParam \n name \n 字符串 与参数命名对应 \n 可用在@ApiImplicitParams里 \n \n \n \n value \n 字符串 \n 参数中文描述 \n \n \n \n required \n 布尔值 \n true/false \n \n \n \n dataType \n 字符串 \n 参数类型 \n \n \n \n paramType \n 字符串 \n 参数请求方式:query/path \n \n \n \n \n \n query:对应@RequestParam?传递 \n \n \n \n \n \n path: 对应@PathVariable{}path传递 \n \n \n \n defaultValue \n 字符串 \n 在api测试中默认值 \n \n \n \n \n \n 用例参见项目中的设置 \n \n \n @ApiResponses \n {} \n @ApiResponse数组 \n 可用在方法头上.参数的描述容器 \n \n \n \n \n \n @ApiResponses({@ApiResponse1,@ApiResponse2,...}) \n \n \n @ApiResponse \n code \n 整形 \n 可用在@ApiResponses里 \n \n \n \n message \n 字符串 \n 错误描述 \n \n \n \n \n \n @ApiResponse(code = 200, message = "Successful") \n Jackson \n \n \n \n 注解名称 \n 作用域 \n 说明 \n \n \n \n \n @JacksonAnnotation \n \n \n \n \n @JacksonAnnotationsInside \n \n \n \n \n @JacksonAnnotationValue \n \n \n \n \n @JacksonInject \n \n \n \n \n @JsonAlias \n \n \n \n \n @JsonAnyGetter \n \n \n \n \n @JsonAnySetter \n \n \n \n \n @JsonAutoDetect \n \n \n \n \n @JsonBackReference \n \n \n \n \n @JsonClassDescription \n \n \n \n \n @JsonCreator \n \n \n \n \n @JsonEnumDefaultValue \n \n \n \n \n @JsonFilter \n \n \n \n \n @JsonFormat \n \n 格式化 \n \n \n @JsonGetter \n \n \n \n \n @JsonIdentityInfo \n \n \n \n \n @JsonIdentityReference \n \n \n \n \n @JsonIgnore \n \n \n \n \n @JsonIgnoreProperties \n \n \n \n \n @JsonIgnoreType \n \n \n \n \n @JsonInclude \n \n \n \n \n @JsonManagedReference \n \n \n \n \n @JsonMerge \n \n \n \n \n @JsonProperty \n \n \n \n \n @JsonPropertyDescription \n \n \n \n \n @JsonPropertyOrder \n \n \n \n \n @JsonRawValue \n \n \n \n \n @JsonRootName \n \n \n \n \n @JsonSetter \n \n \n \n \n @JsonSubTypes \n \n \n \n \n @JsonTypeId \n \n \n \n \n @JsonTypeInfo \n \n \n \n \n @JsonTypeName \n \n \n \n \n @JsonUnwrapped \n \n \n \n \n @JsonValue \n \n \n \n \n @JsonView \n \n \n \n \n \n',createdTime:1761814324e3},{title:"Java构建管理",frontmatter:{description:"Maven, Ivy, Grape, Gradle, Buildr, SBT, Leiningen, ant",meta:[{name:"twitter:title",content:"Java构建管理"},{name:"twitter:description",content:"Maven, Ivy, Grape, Gradle, Buildr, SBT, Leiningen, ant"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Java/Java%E6%9E%84%E5%BB%BA%E7%AE%A1%E7%90%86.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Java构建管理"},{property:"og:description",content:"Maven, Ivy, Grape, Gradle, Buildr, SBT, Leiningen, ant"},{property:"og:url",content:"https://bajins.com/Java/Java%E6%9E%84%E5%BB%BA%E7%AE%A1%E7%90%86.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Java构建管理"},{itemprop:"description",content:"Maven, Ivy, Grape, Gradle, Buildr, SBT, Leiningen, ant"}]},regularPath:"/Java/Java%E6%9E%84%E5%BB%BA%E7%AE%A1%E7%90%86.html",relativePath:"Java/Java构建管理.md",key:"v-5d38d082",path:"/Java/Java%E6%9E%84%E5%BB%BA%E7%AE%A1%E7%90%86.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"Ant",slug:"ant"},{level:2,title:"Maven",slug:"maven"},{level:3,title:"Maven命令",slug:"maven命令"},{level:3,title:"Maven私服搭建",slug:"maven私服搭建"},{level:3,title:"常见问题",slug:"常见问题"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Java构建管理 \n Flag Ant Maven Maven命令 Maven私服搭建 常见问题 \n Flag \n \n Maven, Ivy, Grape, Gradle, Buildr, SBT, Leiningen, ant \n \n \n https://github.com/kordamp/gm \n https://github.com/gradle/gradle \n \n https://github.com/johnrengelman/shadow \n 自定义运行时映像  https://github.com/beryx \n 创建支持包重定位  https://github.com/johnrengelman/shadow \n https://github.com/Omico/Gradm \n https://github.com/gdubw/gng \n https://github.com/gmazzo/gradle-buildconfig-plugin \n https://github.com/autonomousapps/dependency-analysis-gradle-plugin \n https://github.com/michel-kraemer/gradle-download-task \n https://github.com/gradle-nexus \n https://github.com/gradlex-org \n \n \n https://github.com/package-url \n https://github.com/sbt/sbt \n https://github.com/jbangdev \n https://github.com/sormuras/bach \n https://redmine.z2-environment.net \n 增量构建  https://github.com/sakerbuild/saker.build \n https://github.com/sakerbuild/saker.java.compiler \n 动态编译  https://github.com/janino-compiler/janino \n 打包  https://github.com/shevek/jarjar \n https://github.com/codehaus-plexus/plexus-compiler \n https://github.com/eclipse/eclipse.jdt.core \n https://www.jetbrains.com/help/idea/java-compiler.html \n https://github.com/alwans/code-diff \n https://github.com/policeman-tools/forbidden-apis \n 消除NullPointerException  https://github.com/uber/NullAway \n 静态类型检查  https://github.com/google/error-prone \n https://github.com/TouK/sputnik \n https://github.com/soot-oss/soot \n https://github.com/wala \n https://github.com/plast-lab/doop-mirror \n \n 如何快速上手指针分析工具doop？ \n \n \n https://github.com/souffle-lang/souffle \n https://github.com/spotbugs \n \n https://github.com/mebigfatguy/fb-contrib \n https://github.com/findbugsproject/findbugs \n \n https://sourceforge.net/projects/findbugs \n https://github.com/KengoTODA/findbugs-slf4j \n \n \n \n \n https://github.com/pascal-lab/Tai-e \n https://github.com/find-sec-bugs/find-sec-bugs \n https://github.com/jimbethancourt/RefactorFirst \n JAR文件分析  https://github.com/kordamp/jarviz \n 持续交付事件的通用规范  https://github.com/cdevents \n \n \n https://github.com/topics/classloader \n https://github.com/technomancy/leiningen \n https://java-source.net \n \n \n 原来实现项目多环境打包部署是如此的简单 \n \n 可执行文件打包 \n \n https://jar-download.com \n https://github.com/izpack/izpack \n \n https://sourceforge.net/projects/packjacket \n \n \n https://sourceforge.net/projects/launch4j \n \n https://github.com/orphan-oss/launch4j-maven-plugin \n \n \n https://github.com/poidasmith/winrun4j \n https://sourceforge.net/projects/vainstall \n https://github.com/BrunoReX/jsmooth \n https://sourceforge.net/projects/packlet \n https://sourceforge.net/projects/jpackit \n https://sourceforge.net/projects/one-jar \n https://sourceforge.net/projects/autojar \n https://sourceforge.net/projects/mjar \n 把Java应用程序安装成一个Windows NT服务或Unix Daemon \n \n \n https://exe4j.apponic.com \n JavaFx应用打包 \n 如何将 JavaFX 的程序打包成 exe，更进一步制作一个windows 安装程序? \n \n 持续集成 \n \n https://github.com/jenkinsci \n \n https://www.jenkins.io \n https://github.com/cloudbees \n \n \n Jenkins前身  https://github.com/hudson \n https://www.jetbrains.com/zh-cn/teamcity \n https://www.atlassian.com/zh/software/bamboo \n https://github.com/technomancy/leiningen \n \n https://codeberg.org/leiningen/leiningen \n \n \n https://github.com/jitpack/jitpack.io \n https://github.com/jreleaser \n Ant \n \n https://github.com/apache/ant \n \n Apache Ant核心 \n \n \n \n 包 \n 描述 \n \n \n \n \n org.apache.tools.ant \n 它是一个核心程序包, 其中包含核心类和接口。 \n \n \n org.apache.tools.ant.attribute \n 该程序包包含用于处理属性的类。 \n \n \n org.apache.tools.ant.dispatch \n 它包含调度的类和接口。 \n \n \n org.apache.tools.ant.filters \n 它由过滤器类和接口组成。 \n \n \n org.apache.tools.ant.filters.util \n 它包含用于过滤器的实用程序类。 \n \n \n org.apache.tools.ant.helper \n 包含帮助程序类。 \n \n \n org.apache.tools.ant.input \n 包含输入类和接口。 \n \n \n org.apache.tools.ant.launch \n 包含类。 \n \n \n org.apache.tools.ant.loader \n 包含类和接口。 \n \n \n org.apache.tools.ant.property \n 包含用于ant属性的辅助类。 \n \n \n \n Apache Ant核心任务 \n \n \n \n 包 \n 描述 \n \n \n \n \n org.apache.tools.ant.taskdefs \n 它包含核心任务类和接口。 \n \n \n org.apache.tools.ant.taskdefs.compilers \n 它包含用于编译器的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.condition \n 它包含条件的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.cvslib \n 包含cvs的类。 \n \n \n org.apache.tools.ant.taskdefs.email \n 电子邮件任务类和界面组。 \n \n \n org.apache.tools.ant.taskdefs.launcher \n 与启动器相关的类。 \n \n \n org.apache.tools.ant.taskdefs.rmic \n 远程方法编译器类。 \n \n \n \n Apache Ant核心类型 \n \n \n \n 包 \n 描述 \n \n \n \n \n org.apache.tools.ant.types \n 核心类型的根包。 \n \n \n org.apache.tools.ant.types.mappers \n 包含映射器类和接口。 \n \n \n org.apache.tools.ant.types.resolver \n 包含解析器类和接口。 \n \n \n org.apache.tools.ant.types.resources \n 资源类组。 \n \n \n org.apache.tools.ant.types.resources.comparator \n 资源比较器类和接口。 \n \n \n org.apache.tools.ant.types.resources.selectors \n 它包含资源选择器类和接口。 \n \n \n org.apache.tools.ant.types.selectors \n 它是选择器的根目录。 \n \n \n org.apache.tools.ant.types.selectors.modifiedselector \n 它包含修改后的选择器类和接口。 \n \n \n org.apache.tools.ant.types.spi \n 与串行外围设备接口有关的类。 \n \n \n \n Apache Ant可选任务 \n \n \n \n 包 \n 描述 \n \n \n \n \n org.apache.tools.ant.taskdefs.optional \n 它包含可选任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.ccm \n 它包含ccm任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.clearcase \n 它包含clearcase任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.depend \n 它包含依赖任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.depend.constantpool \n 它包含constaint任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.ejb \n 它包含ejb任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.extension \n 它包含扩展任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.extension.resolvers \n 它包含解析程序任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.i18n \n 它包含i18n任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.image \n 它包含图像任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.j2ee \n 它包含j2ee任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.javacc \n 它包含javacc task的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.javah \n 它包含javah任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.jdepend \n 它包含jdepend任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.jlink \n 它包含jlink任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.jsp \n 它包含jsp任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.jsp.compilers \n 它包含编译器任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.junit \n 它包含junit任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.junitlauncher \n 它包含junitlauncher任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.native2ascii \n 它包含native2ascii任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.net \n 它包含网络任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.pvcs \n 它包含pvcs任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.script \n 它包含脚本任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.sos \n 与SourceOffSite源代码控制系统一起使用的Ant任务。 \n \n \n org.apache.tools.ant.taskdefs.optional.sound \n 它包含声音任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.splash \n 它包含启动任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.ssh \n 它包含ssh任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.testing \n 它包含测试任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.unix \n 它包含Unix任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.vss \n 它包含vss task的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.windows \n 它包含Windows任务的类和接口。 \n \n \n org.apache.tools.ant.taskdefs.optional.xz \n 它包含xz任务的类和接口。 \n \n \n \n Apache Ant可选类型 \n \n \n \n 包 \n 描述 \n \n \n \n \n org.apache.tools.ant.types.optional \n 可选的类型类和接口。 \n \n \n org.apache.tools.ant.types.optional.depend \n 依赖类型类和接口。 \n \n \n org.apache.tools.ant.types.optional.image \n 包含图像类型类和接口。 \n \n \n org.apache.tools.ant.types.optional.xz \n 包含xz类型类。 \n \n \n \n Apache Ant实用程序 \n \n \n \n 包 \n 描述 \n \n \n \n \n org.apache.tools.ant.util \n 组织util类和接口。 \n \n \n org.apache.tools.ant.util.depend \n 一组依赖类。 \n \n \n org.apache.tools.ant.util.depend.bcel \n Bcel实用程序类和接口。 \n \n \n org.apache.tools.ant.util.facade \n 外观类和接口。 \n \n \n org.apache.tools.ant.util.java15 \n Java15类。 \n \n \n org.apache.tools.ant.util.optional \n 可选的类和接口。 \n \n \n org.apache.tools.ant.util.regexp \n 处理正则表达式的类。 \n \n \n \n 其他 \n \n \n \n 包 \n 描述 \n \n \n \n \n org.apache.tools.bzip2 \n 由bzip类和接口组成。 \n \n \n org.apache.tools.mail \n 包含邮件类。 \n \n \n org.apache.tools.tar \n 组织课程以处理tar。 \n \n \n org.apache.tools.zip \n 邮编类和子类。 \n Maven \n \n https://maven.apache.org \n \n https://maven.apache.org/plugins/index.html \n \n \n https://github.com/ibofine/mavenbook \n \n https://ibofine.github.io/mavenbook \n \n \n Maven详细教程 \n 史上最全的maven的pom.xml文件详解 \n Maven - 花落花开 \n maven手册  https://github.com/inuter/Maven-Notebook \n \n 仓库 \n \n https://github.com/jvm-repo-rebuild/reproducible-central \n \n \n http://mvnrepository.com \n https://central.sonatype.com \n https://search.maven.org \n https://www.mvncenter.com \n https://nexus.pentaho.org \n https://public.nexus.pentaho.org \n JFrog Bintray  https://github.com/bintray \n \n https://bintray.com \n \n \n https://packages.aliyun.com \n https://www.codeyyy.com \n \n \n 命令行搜索  https://github.com/mthmulders/mcs \n \n 插件 \n \n maven-jar-plugin 默认的打包插件，用来打普通的project JAR包； \n maven-shade-plugin 用来打可执行JAR包，也就是所谓的fat JAR包； \n maven-assembly-plugin 支持自定义的打包结构，也可以定制依赖项等。 \n 插件大全  https://github.com/mojohaus \n https://github.com/apache/maven-wagon \n https://github.com/takari/maven-wrapper \n https://github.com/mathieucarbou/license-maven-plugin \n https://github.com/pentaho/maven-parent-poms \n https://github.com/mojohaus/build-helper-maven-plugin \n https://github.com/maven-download-plugin \n 构建自动清理  https://github.com/castor-software/depclean \n 模块化  https://github.com/moditect/layrry \n https://github.com/sormuras/modules \n 检测旧版API  https://github.com/gaul/modernizer-maven-plugin \n https://github.com/mojohaus/build-helper-maven-plugin \n 排序  https://github.com/Ekryd/sortpom \n 格式化  https://github.com/revelc/formatter-maven-plugin \n https://github.com/maveniverse/mima \n 集成Rust  https://github.com/questdb/rust-maven-plugin \n \n \n 开源的一小步----开源类库传至Maven中央仓库 \n Maven(6) Java上传本地jar包到maven中央仓库 \n \n Maven镜像 \n \n maven镜像配置文件 \n https://maven.aliyun.com/mvn/view \n \n 更多镜像源 \n 打包编译到Docker部署 \n \n https://github.com/spotify/docker-maven-plugin \n https://github.com/spotify/dockerfile-maven \n https://github.com/khanhas/spicetify-cli \n https://github.com/fabric8io/docker-maven-plugin \n https://github.com/GoogleContainerTools/jib \n https://github.com/lazyboyl/docker-develop-maven-plugin \n 利用Maven打包docker镜像上传docker容器 \n Maven插件构建Docker镜像 \n dockerfile-maven-plugin构建Docker镜像 \n 使用maven插件dockerfile-maven-plugin进行镜像的build和push \n 如何构建SpringBoot应用的Docker镜像 \n https://github.com/hariko1991/docker-demo \n https://github.com/gaochao-ncp/spring-boot-docker-example \n \n 打包部署到服务器 \n \n https://github.com/apache/tomcat-maven-plugin \n https://mvnrepository.com/artifact/org.apache.tomcat.maven \n https://github.com/codehaus-cargo \n 使用Maven插件wagon-maven-plugin自动化部署 \n java项目自动部署方案（1）：wagon-maven-plugin \n Jenkins+Maven+GitHub自动部署项目到远程服务器 \n idea部署maven项目到远程tomcat \n maven远程部署war包到tomcat8服务器 \n 如何利用maven插件部署项目到远程运行环境 \n 使用site-maven-plugin在github上搭建公有仓库 \n Maven中央仓库项目上传指南 \n Maven命令 \n \n maven 命令的格式为 mvn [plugin-name]:[goal-name] \n \n \n -D  指定参数，如 -Dmaven.test.skip=true 跳过单元测试；` \n -P  指定 Profile 配置，可以用于区分环境；` \n -e  显示maven运行出错的信息 \n -o  离线执行命令,即不去远程仓库更新包 \n -X  显示maven允许的debug信息 \n -U  强制去远程更新snapshot的插件或依赖，默认每天只更新一次 \n \n \n 创建maven项目:  mvn archetype:create \n 指定 group:  -DgroupId=packageName \n 指定 artifact:  -DartifactId=projectName \n 创建web项目:  -DarchetypeArtifactId=maven-archetype-webapp \n 创建maven项目:  mvn archetype:generate \n 验证项目是否正确:  mvn validate \n maven 打包:  mvn package \n 只打jar包:  mvn jar:jar \n 生成源码jar包:  mvn source:jar \n 产生应用需要的任何额外的源代码:  mvn generate-sources \n 编译源代码:  mvn compile \n 编译测试代码:  mvn test-compile \n 运行测试:  mvn test \n 运行检查:  mvn verify \n 清理maven项目:  mvn clean \n 生成eclipse项目:  mvn eclipse:eclipse \n 清理eclipse配置:  mvn eclipse:clean  删除 .settings 、 .project 、 .classpath 、 .factorypath \n 生成idea项目:  mvn idea:idea \n 安装项目到本地仓库:  mvn install \n 发布项目到远程仓库:  mvn:deploy \n 在集成测试可以运行的环境中处理和发布包:  mvn integration-test \n 显示maven依赖树:  mvn dependency:tree \n 显示maven依赖列表:  mvn dependency:list \n 下载依赖包的源码:  mvn dependency:sources \n \n web项目相关命令 \n \n 启动tomcat:  mvn tomcat:run \n 启动jetty:  mvn jetty:run \n 运行打包部署:  mvn tomcat:deploy \n 撤销部署:  mvn tomcat:undeploy \n 启动web应用:  mvn tomcat:start \n 停止web应用:  mvn tomcat:stop \n 重新部署:  mvn tomcat:redeploy \n 部署展开的war文件:  mvn war:exploded tomcat:exploded \n 使用本地jar包 \n 将jar包安装到本地Maven仓库中 \n mvn install:install-file -Dfile=C:\\Users\\xx\\Desktop\\test-1.0-SNAPSHOT.jar -DgroupId=com.bajins -DartifactId=test -Dversion=1.0 -Dpackaging=jar \n \n -Dfile ：指定要安装的文件的路径。 \n -DgroupId ：指定项目的groupId。 \n -DartifactId ：指定项目的artifactId。 \n -Dversion ：指定项目的版本号。 \n -Dpackaging ：指定项目的打包类型。 \n \n \n Eclipse ->  File  ->  Import  ->  Maven  ->  Install or deply an artifact to a Maven reposeitory  ->  Next  ->  Install artifact \n Eclipse -> 项目右键 ->  Maven  ->  Update Project \n \n 引用本地jar包，非引用本地Maven仓库 \n < dependency > \n     < groupId > com.xxx </ groupId > \n     < artifactId > xxx-sdk </ artifactId > \n     < version > ${xxxSDK.version} </ version > \n     < scope > system </ scope > \n     < systemPath > ${project.basedir}/lib/xxxSDK.jar </ systemPath > \n </ dependency > \n\n < plugin > \n     < groupId > org.springframework.boot </ groupId > \n     < artifactId > spring-boot-maven-plugin </ artifactId > \n     \x3c!-- 加以下配置 打包时包括引用的本地jar --\x3e \n     < configuration > \n         < includeSystemScope > true </ includeSystemScope > \n     </ configuration > \n </ plugin > \n < plugin > \n     < groupId > org.apache.maven.plugins </ groupId > \n     < artifactId > maven-war-plugin </ artifactId > \n         < configuration > \n             < webResources > \n                 < resource > \n                     \x3c!-- 拷贝指定文件夹下的文件到指定目录 --\x3e \n                     < directory > ${project.basedir}/lib </ directory > \n                     < targetPath > WEB-INF/lib </ targetPath > \n                     < filtering > false </ filtering > \n                     < includes > \n                         < include > **/*.jar </ include > \n                     </ includes > \n                 </ resource > \n             </ webResources > \n         </ configuration > \n     < version > 2.1.1 </ version > \n </ plugin > \n Maven私服搭建 \n \n https://github.com/sonatype \n \n https://github.com/sonatype-nexus-community \n https://help.sonatype.com/repomanager3/download \n docker 快速搭建maven私服并上传jar包 \n Maven部署jar包到远程仓库 \n 在 Docker 搭建 Maven 私有库 \n 利用 Docker 搭建 Nexus 仓库私服 \n docker 安装 maven 私有库 nexus3 \n \n \n https://github.com/apache/archiva \n \n http://archiva.apache.org \n Apache Archiva 私服搭建 \n \n \n https://github.com/jfrog \n \n Artifactory  https://jfrog.com/open-source \n \n \n \n \n 私有仓库maven-pulic代理的远程仓库：\n \n jboss  http://repository.jboss.com/maven2 \n jitpack  https://jitpack.io \n jcenter  http://jcenter.bintray.com \n 常见问题 \n Maven3.8.1+禁止访问HTTP协议的仓库 \n \n 正常情况下访问HTTP仓库会自动重定向访问 http://0.0.0.0/ 导致报错： from/to maven-default-http-blocker (http://0.0.0.0/): Blocked mirror for repositories: \n \n \n 使用低版本Maven \n 命令行参数： -Dmaven.allow.insecure.protocol=true \n 添加以下配置到Maven的settings.xml文件中的 <settings> 下的 <mirrors> 标签中 \n \n \x3c!-- Maven 3.8.1+ 默认禁止通过 HTTP 协议访问远程仓库（安全限制）maven-default-http-blocker --\x3e \n < mirror > \n     < id > allow-http </ id > \n     < mirrorOf > * </ mirrorOf > \n     \x3c!-- <mirrorOf>external:http:*</mirrorOf>   external:http:* 表示允许所有外部的 HTTP 请求 --\x3e \n     < url > http://xxxx.com/repository/maven-public/ </ url >   \x3c!-- 配置为允许访问的仓库地址 --\x3e \n     < blocked > false </ blocked >   \x3c!-- 允许 HTTP --\x3e \n </ mirror > \n \n ",createdTime:1761814324e3},{title:"Java笔记",frontmatter:{description:"什么是 hash\n什么是散列表(Hash Table)\nHashMap在Jdk1.7和1.8中的实现\nHashMap的底层结构和实现原理\nConcurrentHashMap实现原理及源码分析\n初学者应该了解的数据结构：Array、HashMap 与 List",meta:[{name:"image",content:"https://bajins.com/images/Java内置异常.png"},{name:"twitter:title",content:"Java笔记"},{name:"twitter:description",content:"什么是 hash\n什么是散列表(Hash Table)\nHashMap在Jdk1.7和1.8中的实现\nHashMap的底层结构和实现原理\nConcurrentHashMap实现原理及源码分析\n初学者应该了解的数据结构：Array、HashMap 与 List"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/Java内置异常.png"},{name:"twitter:url",content:"https://bajins.com/Java/Java%E7%AC%94%E8%AE%B0.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Java笔记"},{property:"og:description",content:"什么是 hash\n什么是散列表(Hash Table)\nHashMap在Jdk1.7和1.8中的实现\nHashMap的底层结构和实现原理\nConcurrentHashMap实现原理及源码分析\n初学者应该了解的数据结构：Array、HashMap 与 List"},{property:"og:image",content:"https://bajins.com/images/Java内置异常.png"},{property:"og:url",content:"https://bajins.com/Java/Java%E7%AC%94%E8%AE%B0.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Java笔记"},{itemprop:"description",content:"什么是 hash\n什么是散列表(Hash Table)\nHashMap在Jdk1.7和1.8中的实现\nHashMap的底层结构和实现原理\nConcurrentHashMap实现原理及源码分析\n初学者应该了解的数据结构：Array、HashMap 与 List"},{itemprop:"image",content:"https://bajins.com/images/Java内置异常.png"}]},regularPath:"/Java/Java%E7%AC%94%E8%AE%B0.html",relativePath:"Java/Java笔记.md",key:"v-2bfe0417",path:"/Java/Java%E7%AC%94%E8%AE%B0.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"代码块文档注释",slug:"代码块文档注释"},{level:2,title:"多行字符串",slug:"多行字符串"},{level:2,title:"函数重载",slug:"函数重载"},{level:2,title:"关键保留字",slug:"关键保留字"},{level:2,title:"访问控制修饰符",slug:"访问控制修饰符"},{level:2,title:"classpath意义",slug:"classpath意义"},{level:2,title:"日期时间",slug:"日期时间"},{level:2,title:"RoundingMode",slug:"roundingmode"},{level:3,title:"几个参数详解",slug:"几个参数详解"},{level:2,title:"Java锁",slug:"java锁"},{level:3,title:"synchronized",slug:"synchronized"},{level:2,title:"Java异常",slug:"java异常"},{level:2,title:"HTTP",slug:"http"},{level:2,title:"泛型generics",slug:"泛型generics"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Java笔记 \n Flag 代码块文档注释 多行字符串 函数重载 关键保留字 访问控制修饰符 classpath意义 日期时间 RoundingMode 几个参数详解 Java锁 synchronized Java异常 HTTP 泛型generics \n Flag \n \n https://www.yiibai.com/html/java/ \n \n \n 什么是 hash \n 什么是散列表(Hash Table) \n HashMap在Jdk1.7和1.8中的实现 \n HashMap的底层结构和实现原理 \n ConcurrentHashMap实现原理及源码分析 \n 初学者应该了解的数据结构：Array、HashMap 与 List \n \n \n 强一致性、弱一致性、最终一致性、读写一致性、单调读、因果一致性 的区别与联系 \n CAP 定理的含义 \n 二进制运算 \n 什么是位运算 \n java运算符 \n 数据库扩展性设计：使用二进制解决一条记录关联多个状态的问题 \n Java8新特性有哪些 \n fastjson这么快老外为啥还是热衷 jackson? \n JAX-WS与JAX-RS区别是什么？ \n 接口框架 : WebService与Jersey RESTful 要点梳理 \n JAVA多线程使用场景和注意事项 \n Java持久性API(Java Persistence API)  https://en.wikipedia.org/wiki/Java_Persistence_API \n fork/join 全面剖析 \n 收集业务日志，提炼有效数据 \n 通过filebeat、logstash、rsyslog采集nginx日志的几种方式 \n 分布式系统唯一ID生成方案汇总 \n \n 理解Snowflake算法的实现原理 \n \n \n 设计一个全局异常处理器 \n 理解、学习与使用 JAVA 中的 OPTIONAL \n 理解零拷贝（Zero-copy） \n 可代替 ASM，使用 AnnotationProcessor 做代码插桩 \n 动态代理和Lombok学习 \n Spring AOP和Lombok是什么原理？ \n java.lang.Record替代Lombok \n 这四种对象属性拷贝方式，你都知道吗？ \n 领域模型转换那些事儿 \n Java正则多次匹配和多次组匹配 \n https://www.zhihu.com/people/rednaxelafx \n Java 正则表达式详解 \n java的native方法 \n \n \n JMH（Java Microbenchmark Harness）是专门用于代码微基准测试的工具套件 \n 什么是JNDI？ \n Web项目中Junit测试如何添加JNDI \n https://github.com/h-thurow/Simple-JNDI \n \n \n JNDI是Java Naming and Directory Interface（Java命名与目录接口）其实和Spring依赖注入差不多的效果，\n就是我们可以将我们需要的类注册进去，然后一般我们都是使用该类的实例对象，这时候因为刚才我们已经给每个类按照JNDI的规范进行了注入，\n这时候我们直接通过JNDI的使用规则取出来我们想要的数据（实例对象）即可。 \n \n \n 有状态就是有数据存储功能。有状态对象(Stateful Bean)，就是有实例变量的对象，可以保存数据，是非线程安全的。在不同方法调用间不保留任何状态。 \n 无状态就是一次操作，不能保存数据。无状态对象(Stateless Bean)，就是没有实例变量的对象 .不能保存数据，是不变类，是线程安全的。 \n \n Windows隐藏窗口后台运行jar包（推荐vbs可设置JVM参数） \n \n hidden_run_jar.bat \n hidden_run_jar.vbs \n 代码块文档注释 \n \n 一定要用 <pre>{@code }</pre> 包裹代码块，或者进行HTML编码转义，否则将丢失格式 \n \n \n {@code ... }  用来包裹代码块，这样可以在JavaDoc中保留代码的格式，并且正确处理HTML标签和相关的特殊字符，如小于号 < 和大于号 > 。 \n <pre>  是预格式化文本的HTML标签，它告诉JavaDoc这里的文本应该按照预设格式显示，保留空白字符，如空格和换行符。 \n \n /**\n * <pre>\n * List<Map<String, Object>> n = new ArrayList<>();\n * Map<String, Object> map = new HashMap<>();\n * {@code\n * List<Map<String, Object>> n = new ArrayList<>();\n * Map<String, Object> map = new HashMap<>();\n * }\n * List&lt;Map&lt;String, Object&gt;&gt; n = new ArrayList&lt;&gt;();\n * Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n * </pre>\n *\n */ \n 多行字符串 \n \n Multiline String 多行字符串 \n Template String 模板字符串 \n Text Blocks 文本块 \n Raw String Literals 原始字符串字面量 \n \n \n Java 13 Text Blocks 第一次预览版，Java 14 Text Blocks 第二次预览版，Java 15 Text Blocks 正式版 \n 函数重载 \n \n 方法名相同,方法参数的个数和类型不同,通过个数和类型的不同来区分不同的函数; \n 方法的重载跟返回值类型和修饰符无关,Java的重载是发生在本类中的,重载的条件是在本类中有多个方法名相同; \n 参数列表不同(参数个数不同、参数类型不同)跟返回值无关; \n 关键保留字 \n \n https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html \n \n \n \n \n 名称 \n 说明 \n \n \n \n \n private \n 一种访问控制方式：私用模式 \n \n \n protected \n 一种访问控制方式：保护模式 \n \n \n public \n 一种访问控制方式：共用模式 \n \n \n abstract \n 表明类或者成员方法具有抽象属性 \n \n \n class \n 类 \n \n \n extends \n 表明一个类型是另一个类型的子类型，这里常见的类型有类和接口 \n \n \n final \n 用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变 \n \n \n implements \n 表明一个类实现了给定的接口 \n \n \n interface \n 接口 \n \n \n native \n 用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的 \n \n \n new \n 用来创建新实例对象 \n \n \n static \n 表明具有静态属性 \n \n \n strictfp \n 用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范 \n \n \n synchronized \n 表明一段代码需要同步执行 \n \n \n transient \n 声明不用序列化的成员域 \n \n \n volatile \n 表明两个或者多个变量必须同步地发生变化 \n \n \n break \n 提前跳出一个块 \n \n \n continue \n 回到一个块的开始处 \n \n \n return \n 从成员方法中返回数据 \n \n \n do \n 用在do-while循环结构中 \n \n \n while \n 用在循环结构中 \n \n \n if \n 条件语句的引导词 \n \n \n else \n 用在条件语句中，表明当条件不成立时的分支 \n \n \n for \n 一种循环结构的引导词 \n \n \n instanceof \n 用来测试一个对象是否是指定类型的实例对象 \n \n \n switch \n 分支语句结构的引导词 \n \n \n case \n 用在switch语句之中，表示其中的一个分支 \n \n \n default \n 默认，例如，用在switch语句中，表明一个默认的分支 \n \n \n try \n 尝试一个可能抛出异常的程序块 \n \n \n catch \n 用在异常处理中，用来捕捉异常 \n \n \n throw \n 抛出一个异常 \n \n \n throws \n 声明在当前定义的成员方法中所有需要抛出的异常 \n \n \n import \n 表明要访问指定的类或包 \n \n \n package \n 包 \n \n \n boolean \n 基本数据类型之一，布尔类型 \n \n \n byte \n 基本数据类型之一，字节类型 \n \n \n char \n 基本数据类型之一，字符类型 \n \n \n double \n 基本数据类型之一，双精度浮点数类型 \n \n \n float \n 基本数据类型之一，单精度浮点数类型 \n \n \n int \n 基本数据类型之一，整数类型 \n \n \n long \n 基本数据类型之一，长整数类型 \n \n \n short \n 基本数据类型之一,短整数类型 \n \n \n super \n 表明当前对象的父类型的引用或者父类型的构造方法 \n \n \n this \n 指向当前实例对象的引用 \n \n \n void \n 声明当前成员方法没有返回值 \n \n \n goto \n 保留关键字，没有具体含义 \n \n \n const \n 保留关键字，没有具体含义 \n 访问控制修饰符 \n \n \n \n 修饰符 \n 当前类 \n 同一包内 \n 子孙类(同一包) \n 子孙类(不同包) \n 其他包 \n \n \n \n \n public(interface default) \n Y \n Y \n Y \n Y \n Y \n \n \n protected \n Y \n Y \n Y \n Y/N \n N \n \n \n default \n Y \n Y \n Y \n N \n N \n \n \n private \n Y \n N \n N \n N \n N \n \n \n \n protected 需要从以下两个点来分析说明 \n \n 子类与基类在同一包中：被声明为 protected 的变量、方法和构造器能被同一个包中的任何其他类访问； \n \n \n 子类与基类不在同一包中：那么在子类中，子类实例可以访问其从基类继承而来的 protected 方法，而不能访问基类实例的 protected 方法。 \n classpath意义 \n \n java项目中的classpath到底是什么 \n spring classpath:和classpath*:区别和实际应用 \n java项目中的classpath到底指向的哪里 \n eclipse项目中.classpath文件详解 \n \n \n classpath ：只会到你的 class 路径中查找文件，和 classpath:/ 是等价的，都是相对于类的根路径\n \n src 不是 classpath ， WEB-INF/classes 和 lib 才是 classpath ， WEB-INF/ 是资源目录, 客户端不能直接访问 \n WEB-INF/classes 目录存放 src 目录 java 文件编译之后的 class 文件、 xml 、 properties 等资源配置文件 \n lib 和 classes 同属 classpath ，两者的访问优先级为:  lib  >  classes \n \n \n classpath* ：不仅包含 class 路径，还包括 jar 文件中（ class 路径）进行查找 \n \n \n 注意：用 classpath* 需要遍历所有的 classpath ，所以加载速度是很慢，尽量避免使用。\n ** 表示在任意目录下，也就是说在 WEB-INF/classes/ 下任意层的目录 \n \n \n \n \n 前缀 \n 例子 \n 说明 \n \n \n \n \n classpath: \n classpath:com/myapp/config.xml \n 从classpath中加载。 \n \n \n file: \n file:/data/config.xml \n 作为 URL 从文件系统中加载。 \n \n \n http: \n http://myserver/logo.png \n 作为 URL 加载。 \n \n \n (none) \n /data/config.xml \n 根据 ApplicationContext 进行判断。 \n 日期时间 \n \n jdk8时间日期 \n \n \n 可变性 : 像日期和时间这样的类应该是不可变的,返回一个值,原来的对象不变 \n 偏移性 : Date中的年份是从1900开始的,而月份是从0开始的 \n 日期表示需要减 new Date(2020-1900,9-1,8)  这样才可以表示2020年9月8日 \n 格式化: 格式化日期只对Date有用,Calendar则不行 \n 线程不安全的,不能处理闰秒等 \n Java8吸收了 Joda-Time （该项目作者参与了Java8的time包开发）精华，开启了新的API \n \n java.lang.System类 \n // 用于返回当前时间与1970年1月1日0:0:0之间以毫秒为单位的时间戳 \n public   static   native   long   currentTimeMillis ( ) ; \n // 返回正在运行的Java虚拟机的当前值,高分辨率时间源，以纳秒为单位 \n public   static   native   long   nanoTime ( ) ; \n \n \n \n \n 变量名 \n 说明 \n \n \n \n \n java.version \n Java运行时环境版本 \n \n \n java.vendor \n Java运行时环境供应商 \n \n \n java.vendor.url \n Java供应商的 URL \n \n \n java.home \n Java安装目录 \n \n \n java.vm.specification.version \n Java虚拟机规范版本 \n \n \n java.vm.specification.vendor \n Java虚拟机规范供应商 \n \n \n java.vm.specification.name \n Java虚拟机规范名称 \n \n \n java.vm.version \n Java虚拟机实现版本 \n \n \n java.vm.vendor \n Java虚拟机实现供应商 \n \n \n java.vm.name \n Java虚拟机实现名称 \n \n \n java.specification.version \n Java运行时环境规范版本 \n \n \n java.specification.vendor \n Java运行时环境规范供应商 \n \n \n java.specification.name \n Java运行时环境规范名称 \n \n \n java.class.version \n Java类格式版本号 \n \n \n java.class.path \n Java类路径 \n \n \n java.library.path \n 加载库时搜索的路径列表 \n \n \n java.io.tmpdir \n 默认的临时文件路径 \n \n \n java.compiler \n 要使用的JIT编译器的名称 \n \n \n java.ext.dirs \n 一个或多个扩展目录的路径 \n \n \n os.name \n 操作系统的名称 \n \n \n os.arch \n 操作系统的架构 \n \n \n os.version \n 操作系统的版本 \n \n \n file.separator \n 文件分隔符（在UNIX中是“/”） \n \n \n path.separator \n 路径分隔符（在UNIX中是“:”） \n \n \n line.separator \n 行分隔符（在UNIX中是“/n”） \n \n \n user.name \n 用户的账户名称 \n \n \n user.home \n 用户的主目录 \n \n \n user.dir \n 用户的当前工作目录 \n \n \n \n java.util.Date类 \n \n 两个构造器\n \n new Date();  当前时间 \n new Date(Long 毫秒数)  根据毫秒数创建指定日期 \n \n \n 两个方法的使用\n \n toString( )` 显示当前的年,月,日,时,分,秒 \n getTime()  获取当前date对象的对应的毫秒数(时间戳) \n \n \n \n \n java.util.Date 和 java.sql.Date 互相转换 \n \n Date  date  =   new   java . sql . Date ( ) ; \n java . sql . Date  date2  =   ( java . sql . Date )  date ; \n java . sql . Date  date3  =   new   java . sql . Date ( new   Date ( ) . getTime ( ) ) ; \n \n java.text.SimpleDateFormat类 \n \n Date类的API不易于国际化，大部分被废弃，并且不是线程安全的 \n \n \n format()  方法 按照具体的格式格式化时间 \n parse()  方法 将字符串解析成时间 \n \n java.time 的基础包 \n \n \n \n java.time \n 包含值对象的基础包 \n \n \n \n \n java.time.chrono \n 提供不同日历系统的访问 \n \n \n java.time.format \n 格式化和解析时间和日期 \n \n \n java.time.temporal \n 包含底层框架和扩展特性 \n \n \n java.time.zone \n 包含时区支持的类 \n \n \n \n 新的 java.time 包含了如下子类 \n \n \n \n 类 \n 作用 \n 说明 \n \n \n \n \n Instant \n 表示时刻 \n 对应jdk7之前的Date \n \n \n LocalDateTime \n 获取当前系统的日期时间(内部不记录时区) \n 可以认为由LocalDate和LocalTime组成 \n \n \n LocalDate \n 获取当前系统的日期 \n \n \n \n LocalTime \n 获取当前系统的时间 \n \n \n \n ZoneId \n 时区，"5:00"和"Europe/Paris"、"Asia/Shanghai" \n 除了处理与标准时间的时间差还处理地区时（夏令时，冬令时等） \n \n \n ZoneOffset \n 时区，只处理 "6:00" \n ZoneOffset是ZoneId的子类 \n \n \n ZoneDateTime \n 一个在ISO-8601日历系统特定时区的日期和时间 \n 其中每个时区都有对应的Id,每个地区Id都有"{区域}/{城市}" 例如 Asia/Shanghai等 \n \n \n ZonedDateTime \n 处理日期和时间与相应的时区 \n \n \n \n Duration \n 持续时间,用于计算两个"时间"的间隔 \n \n \n \n Period \n 日期间隔,用于计算两个"日期"的间隔 \n \n \n \n Clock \n 使用时区提供对当前即时，日期和时间的访问 \n \n \n \n \n 方法前缀 \n \n \n \n 前缀 \n 含义 \n 示例 \n \n \n \n \n now \n 静态工厂方法, 用当前时间创建实例 \n LocalDate.now(); \n \n \n of \n 静态工厂方法 \n LocalDate.of(2018, 12, 20); \n \n \n parse \n 静态工厂方法, 关注于解析 \n LocalDate.parse("2018-12-20"); \n \n \n get \n 获取某个字段的值 \n localDate.getYear(); \n \n \n is \n 比对判断 \n localDate.isAfter(LocalDate.now()); \n \n \n with \n 基于当前实例创建新的实例, 但部分字段被更新 \n localDate.withMonth(3); \n \n \n plus \n 在当前实例基础上增加(值可负), 返回新实例 \n localDate.plusDays(1); \n \n \n minus \n 在当前实例基础上减小(值可负), 返回新实例 \n localDate.minusDays(1); \n \n \n to \n 基于当前实例转换出另一个类型的实例 \n localDateTime.toLocalDate(); \n \n \n at \n 把当前对象和另一个对象结合, 生成新的类型的实例 \n localDate.atTime(21, 30, 50) \n \n \n format \n 格式化 \n localDate.format(DateTimeFormatter.ofPattern("yyyy-MM-dd")); \n RoundingMode \n \n java.math.RoundingMode 是一个舍入枚举类 \n \n \n https://blog.csdn.net/alanzyy/article/details/8465098 \n https://my.oschina.net/sunchp/blog/670909 \n https://blog.csdn.net/chendaoqiu/article/details/45841283 \n 几个参数详解 \n \n RoundingMode.CEILING (对应 BigDecimal.ROUND_CEILING )：取右边最近的整数 \n RoundingMode.UP (对应 BigDecimal.ROUND_UP )：远离0取整，即负数向左取整，正数向右取整 \n RoundingMode.DOWN (对应 BigDecimal.ROUND_DOWN )：从不在舍弃(即截断)的小数之前增加数字（其实就是截断的意思） \n RoundingMode.FLOOR (对应 BigDecimal.ROUND_FLOOR )：取左边最近的正数 \n RoundingMode.HALF_UP (对应 BigDecimal.ROUND_HALF_UP )：四舍五入，负数原理同上 \n RoundingMode.HALF_DOWN (对应 BigDecimal.ROUND_HALF_DOWN )：五舍六入，负数先取绝对值再五舍六入再负数 \n RoundingMode.HALF_EVEN (对应 BigDecimal.ROUND_HALF_EVEN )：这个比较绕，整数位若是奇数则四舍五入，若是偶数则五舍六入 \n RoundingMode.UNNECESSARY (对应 BigDecimal.ROUND_UNNECESSARY )：用于断言请求的操作具有精确结果的舍入模式，因此不需要舍入 \n Java锁 \n synchronized \n \n synchronized(this)以及非static的synchronized方法，只能防止多个线程同时执行同一个对象的同步代码段。 \n \n \n synchronized锁住的是代码还是对象？ \n \n 答案是：synchronized锁住的是括号里的对象，而不是代码。对于非static的synchronized方法，锁的就是对象本身也就是this。 \n \n \n \n 当synchronized锁住一个对象后，别的线程如果也想拿到这个对象的锁，就必须等待这个线程执行完成释放锁，才能再次给对象加锁，这样才达到线程同步的目的。 \n \n \n 即使两个不同的代码段，都要锁同一个对象，那么这两个代码段也不能在多线程环境下同时运行。 \n \n \n 所以我们在用synchronized关键字的时候，尽量缩小代码段的范围，尽量不要在整个方法上加同步。这叫减小锁的粒度，使代码更大程度的并发。 \n \n \n static方法可以直接类名加方法名调用，方法中无法使用this，所以它锁的不是this，而是Class，所以static synchronized方法也相当于全局锁，相当于锁住了代码段。 \n Java异常 \n \n Java中的异常处理 \n \n \n \n \n \n 未经检查的异常 \n 说明 \n \n \n \n \n ArithmeticException \n 算术错误，如被0除 \n \n \n ArrayIndexOutOfBoundsException \n 数组下标出界 \n \n \n ArrayStoreException \n 数组元素赋值类型不兼容 \n \n \n ClassCastException \n 非法强制转换类型 \n \n \n EnumConstantNotPresentException \n 枚举常量不存在异常。 \n \n \n EOFException \n 文件已结束异常 \n \n \n Exception \n 根异常。用以描述应用程序希望捕获的情况。 \n \n \n FileNotFoundException \n 文件未找到异常 \n \n \n IllegalArgumentException \n 调用方法的参数非法 \n \n \n IllegalMonitorStateException \n 非法监控操作，如等待一个未锁定线程 \n \n \n IllegalStateException \n 环境或应用状态不正确 \n \n \n IllegalThreadStateException \n 请求操作与当前线程状态不兼容 \n \n \n IndexOutOfBoundsException \n 某些类型索引越界 \n \n \n IOException \n 输入输出异常 \n \n \n NegativeArrayException \n 数组负下标异常 \n \n \n NegativeArraySizeException \n 数组大小为负值异常。当使用负数大小值创建数组时抛出该异常。 \n \n \n NullPointerException \n 非法使用空引用 \n \n \n NumberFormatException \n 字符串到数字格式非法转换 \n \n \n RuntimeException \n 运行时异常。是所有Java虚拟机正常操作期间可以被抛出的异常的父类。 \n \n \n SecurityException \n 试图违反安全性 \n \n \n SQLException \n 操作数据库异常 \n \n \n StringIndexOutOfBoundsException \n 试图在字符串边界之外索引 \n \n \n TypeNotPresentException \n 类型不存在异常。 \n \n \n UnsupportedOperationException \n 遇到不支持的操作 \n \n \n \n \n \n \n 检查的异常 \n 说明 \n \n \n \n \n ClassNotFoundException \n 找不到类 \n \n \n CloneNotSupportedException \n 试图克隆一个不能实现Cloneable接口的对象 \n \n \n IllegalAccessException \n 对一个类的访问被拒绝 \n \n \n InstantiationException \n 试图创建一个抽象类或者抽象接口的对象 \n \n \n InterruptedException \n 一个线程被另一个线程中断 \n \n \n NoSuchFieldException \n 请求的字段不存在 \n \n \n NoSuchMethodException \n 请求的方法不存在 \n \n \n \n \n \n \n 错误 \n 说明 \n \n \n \n \n java.lang.AbstractMethodError \n 抽象方法错误 \n \n \n java.lang.AssertionError \n 断言错 \n \n \n java.lang.ClassCircularityError \n 类循环依赖错误 \n \n \n java.lang.ClassFormatError \n 类格式错误 \n \n \n java.lang.Error \n 错误 \n \n \n java.lang.ExceptionInInitializerError \n 初始化程序错误 \n \n \n java.lang.IllegalAccessError \n 违法访问错误 \n \n \n java.lang.IncompatibleClassChangeError \n 不兼容的类变化错误 \n \n \n java.lang.InstantiationError \n 实例化错误 \n \n \n java.lang.InternalError \n 内部错误 \n \n \n java.lang.LinkageError \n 链接错误 \n \n \n java.lang.NoClassDefFoundError \n 未找到类定义错误 \n \n \n java.lang.NoSuchFieldError \n 域不存在错误 \n \n \n java.lang.NoSuchMethodError \n 方法不存在错误 \n \n \n java.lang.OutOfMemoryError \n 内存不足错误 \n \n \n java.lang.StackOverflowError \n 堆栈溢出错误 \n \n \n java.lang.UnknownError \n 未知错误 \n \n \n java.lang.UnsatisfiedLinkError \n 未满足的链接错误 \n \n \n java.lang.UnsupportedClassVersionError \n 不支持的类版本错误 \n \n \n java.lang.VerifyError \n 验证错误 \n \n \n java.lang.VirtualMachineError \n 虚拟机错误 \n \n \n java.lang.ThreadDeath \n 线程结束 \n HTTP \n \n 在 Java 中下载的文件会出现乱码是为什么？ \n \n 常量 \n \n java.net.HttpURLConnection \n io.netty.handler.codec.http.HttpResponseStatus \n org.springframework.http.HttpStatus \n org.apache.http.HttpStatus \n org.asynchttpclient.util.HttpConstants \n org.apache.http.protocol.HTTP \n org.springframework.http.HttpHeaders \n javax.ws.rs.HttpMethod \n org.springframework.http.HttpMethod \n \n Mime/Content-Type/Media-Type \n \n https://github.com/search?q=mime \n https://github.com/topics/mime \n https://github.com/mime-types \n https://www.solvusoft.com/en/mime-multipurpose-internet-mail-extensions \n \n \n com.google.common.net.MediaType  guava \n javax.ws.rs.core.MediaType  Jersey框架 \n org.springframework.http.MediaType 和 org.springframework.util.MimeTypeUtils  spring框架 \n 在Tomcat配置文件 conf/web.xml 中的 Default MIME Type Mappings 部分定义 \n nginx配置文件 conf/mime.types 中定义 \n \n HTTP实现依赖库 \n \n HttpURLConnection  Java自带API \n HttpClient  JDK11的API  Java11 HttpClient小试牛刀 \n RestTemplate  默认实现是 HttpURLConnection ，默认使用HttpMessageConverter将Http消息转换成POJO 或POJO转化成Http消息\n \n ForEntity 返回 ResponseEntity 响应码、响应消息体等 \n ForObject 只返回消息体 \n exchange  配合 HttpEntity 或 RequestEntity 使用，返回 ResponseEntity \n \n \n WebClient  是 Spring 5.0 开始提供的非阻塞响应式编程的Http工具。 \n \n \n HTTP客户端连接，选择HttpClient还是OkHttp？ \n \n Apache HttpClient GET拼接URL参数 \n Map < String ,   Object >  params  =   new   HashMap < > ( ) ; \nparams . put ( "key1" ,   "value1" ) ; \nparams . put ( "key2" ,   "value2" ) ; \n\n // 方式一：使用setParameters \n List < NameValuePair >  nvps  =   new   ArrayList < NameValuePair > ( ) ; \n // 通过map集成entrySet方法获取entity循环遍历，获取迭代器 \n Iterator < Entry < String ,   Object > >  iterator  =  params . entrySet ( ) . iterator ( ) ; \n while   ( iterator . hasNext ( ) )   { \n     Entry < String ,   Object >  mapEntry  =  iterator . next ( ) ; \n    nvps . add ( new   BasicNameValuePair ( mapEntry . getKey ( ) ,  mapEntry . getValue ( ) . toString ( ) ) ) ; \n } \n // 由于GET请求的参数都是拼装在URL地址后方，所以我们要构建一个URL，带参数 \n\n URIBuilder  uriBuilder  =   new   URIBuilder ( url ) ; \n // 封装请求参数 \nuriBuilder . setParameters ( nvps ) ; \nuriBuilder . build ( ) ; \n\n // 方式二：转换参数并拼接 \nurl  +=   "?"   +   EntityUtils . toString ( new   UrlEncodedFormEntity ( nvps ,   Consts . UTF_8 ) ) ; \n URIBuilder  uriBuilder  =   new   URIBuilder ( url ) ; \nuriBuilder . build ( ) ; \n \n \n 根据HttpGet反向获取键值对列表 \n \n HttpGet  request  =   new   HttpGet ( "http://example.com/?var=1&var=2" ) ; \n //获取键值对列表 \n List < NameValuePair >  params  =   new   URIBuilder ( request . getURI ( ) ) . getQueryParams ( ) ; \n //转换为键值对字符串 \n String  str  =   EntityUtils . toString ( new   UrlEncodedFormEntity ( params ,   Consts . UTF_8 ) ) ; \n 泛型generics \n \n Java泛型的协变、逆变和不变 \n 图解java泛型的协变和逆变 \n \n \n 协变( <? extends T> ) \n 逆变( <? super T> ) \n 不变( T ) \n \n 泛型的通配符 \n \n ? 表示不确定的类型 \n T (type) 表示具体的类型 \n K V (key value) 分别代表键值中的Key Value \n E (element) 代表Element \n \n 泛型三种常用的使用方式： \n \n java 泛型详解-绝对是对泛型方法讲解最详细的，没有之一 \n \n \n 可以有多个类型变量 \n \n \n 泛型类：在类名后指定类型变量，如： public class Pair<T, U> { \n 泛型接口：在接口名后指定类型变量，如： public interface Generator<T, U> { \n 泛型方法：在修饰符后，返回类型前指定类型变量，如： public static <T extends Object, E> T test(Class<T> a, Class<E> b) { \n \n',createdTime:1761814324e3},{title:"ORM",frontmatter:{description:"对象关系映射（Object Relational Mapping，简称ORM）是通过使用描述对象和数据库之间映射的元数据，\n> 将面向对象语言程序中的对象自动持久化到关系数据库中。",meta:[{name:"twitter:title",content:"ORM"},{name:"twitter:description",content:"对象关系映射（Object Relational Mapping，简称ORM）是通过使用描述对象和数据库之间映射的元数据，\n> 将面向对象语言程序中的对象自动持久化到关系数据库中。"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Java/ORM.html"},{property:"og:type",content:"article"},{property:"og:title",content:"ORM"},{property:"og:description",content:"对象关系映射（Object Relational Mapping，简称ORM）是通过使用描述对象和数据库之间映射的元数据，\n> 将面向对象语言程序中的对象自动持久化到关系数据库中。"},{property:"og:url",content:"https://bajins.com/Java/ORM.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"ORM"},{itemprop:"description",content:"对象关系映射（Object Relational Mapping，简称ORM）是通过使用描述对象和数据库之间映射的元数据，\n> 将面向对象语言程序中的对象自动持久化到关系数据库中。"}]},regularPath:"/Java/ORM.html",relativePath:"Java/ORM.md",key:"v-f6f5c342",path:"/Java/ORM.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"JDBC驱动",slug:"jdbc驱动"},{level:2,title:"Mybatis",slug:"mybatis"},{level:2,title:"Hibernate",slug:"hibernate"},{level:3,title:"返回结果接收方式",slug:"返回结果接收方式"},{level:3,title:"HQL查询",slug:"hql查询"},{level:3,title:"QBC查询",slug:"qbc查询"},{level:3,title:"关闭session",slug:"关闭session"},{level:3,title:"只读错误",slug:"只读错误"},{level:3,title:"编程式修改FlushMode",slug:"编程式修改flushmode"},{level:3,title:"配置过滤器",slug:"配置过滤器"},{level:3,title:"使用execute方法回调方式实现",slug:"使用execute方法回调方式实现"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' ORM \n Flag JDBC驱动 Mybatis Hibernate 返回结果接收方式 HQL查询 QBC查询 关闭session 只读错误 编程式修改FlushMode 配置过滤器 使用execute方法回调方式实现 \n Flag \n \n 对象关系映射（Object Relational Mapping，简称ORM）是通过使用描述对象和数据库之间映射的元数据，\n将面向对象语言程序中的对象自动持久化到关系数据库中。 \n \n \n https://github.com/topics/jdbc \n https://github.com/topics/orm \n \n \n https://sourceforge.net/projects/jpox \n Java，JDBC和MySQL对应数据类型 \n http://www.squirrelsql.org \n http://java-source.net/open-source/sql-clients \n JPA标准API  https://github.com/Blazebit/blaze-persistence \n 链式SQL框架  https://github.com/jOOQ \n https://github.com/querydsl/querydsl \n https://github.com/BatooOrg/BatooJPA \n https://github.com/aaberg/sql2o \n https://github.com/jdbi/jdbi \n toplink  https://github.com/eclipse-ee4j/eclipselink \n https://github.com/datanucleus \n https://github.com/apache/openjpa \n https://github.com/spring-projects/spring-data-jdbc \n https://github.com/apache/commons-dbutils \n https://github.com/sagframe/sagacity-sqltoy \n 元数据操作  https://github.com/schemacrawler/SchemaCrawler \n \n https://sourceforge.net/projects/schemacrawler.mirror \n \n \n 只读查询  https://github.com/ejlchina/bean-searcher \n https://github.com/speedment \n https://github.com/troyzhxu/bean-searcher \n https://github.com/MyCATApache/Mycat2 \n https://github.com/teiid/teiid \n \n \n CRUD生成器  https://github.com/SanjinKurelic/MVCGenerator \n https://github.com/jeddict/jeddict \n https://codverter.com/src/sqltoclass \n https://gitee.com/l0km/sql2java \n \n https://sourceforge.net/projects/sql2java \n https://github.com/xgp/sql2java \n \n \n https://github.com/blinkfox/zealot \n https://github.com/vipbooks/TableGo \n https://github.com/jahlborn/sqlbuilder \n 表结构文档生成  https://github.com/pingfangushi/screw \n 数据库中间件  https://github.com/apache/shardingsphere \n \n https://github.com/apache/shardingsphere-elasticjob \n \n \n 数据库动态监控  https://github.com/p6spy/p6spy \n https://github.com/jdbc-observations \n \n SQL解析和验证器 \n \n https://github.com/search?q=sql+parser \n \n \n https://github.com/apache/calcite \n \n https://github.com/ieugen/calcite-clj \n 如何实现一个SQL解析器 \n \n \n https://github.com/JSQLParser/JSqlParser \n \n https://github.com/manticore-projects \n \n https://manticore-projects.com/JSQLParser/index.html \n \n \n https://sourceforge.net/projects/jsqlparser \n https://github.com/braisdom/ObjectiveSql \n \n \n https://github.com/prestodb/presto \n https://github.com/camertron/SQLParser \n https://github.com/iByteCoding/M-SQLParser \n https://github.com/jparsec/jparsec \n https://github.com/manasesjesus/fdbs-and-sql-parser \n https://github.com/liweihua274/druid-sqlparser \n \n https://github.com/alibaba/druid/wiki/SQL-Parser \n Java工具篇之Druid SQL语法解析树 \n \n \n \n 连接池 \n \n https://github.com/topics/connection-pool \n \n \n https://github.com/brettwooldridge/HikariCP \n https://github.com/alibaba/druid \n \n https://alphahinex.github.io/2022/05/15/use-druid-to-transform-sql \n 记一次 Druid 超时配置的问题 → 引发对 Druid 时间配置项的探究 \n 真的会用removeAbandoned吗 \n druid双刃剑参数之removeAbandoned \n \n \n https://github.com/apache/tomcat/tree/main/modules/jdbc-pool \n \n https://tomcat.apache.org/tomcat-9.0-doc/jdbc-pool.html \n \n \n https://github.com/apache/commons-dbcp \n https://github.com/apache/commons-pool \n https://github.com/agroal/agroal \n https://github.com/vibur \n https://github.com/Chris2018998/BeeCP \n https://sourceforge.net/projects/proxool \n https://github.com/swaldman/c3p0 \n \n https://sourceforge.net/projects/c3p0 \n \n \n https://github.com/wwadge/bonecp \n \n \n https://github.com/vladmihalcea/flexy-pool \n \n Transaction \n \n https://github.com/atomikos/transactions-essentials \n \n Atomikos开源版本的事务管理器实现TransactionEssentials \n \n \n https://github.com/codingapi/tx-lcn \n https://github.com/seata/seata \n https://github.com/changmingxie/tcc-transaction \n https://github.com/QNJR-GROUP/EasyTransaction \n https://github.com/liuyangming/ByteTCC \n https://github.com/wchswchs/Hulk \n https://github.com/atomikos/transactions-essentials \n https://github.com/bitronix/btm \n \n \n 分布式事务 XA 两段式事务 X/open CAP BASE 一次分清 \n X/Open  https://publications.opengroup.org/s243 \n JDBC驱动 \n 注意使用的MySQL Connector/J驱动 \n \n org.gjt.mm.mysql.Driver  用于 3.x 版本之前，在 5.1.47 以上版本不存在该类，由一个名为MM (Monty\'s MySQL) 的项目开发的，该项目后来被Sun Microsystems收购 \n com.mysql.jdbc.Driver  用于 5.1.6 版本之前，在MySQL AB（后被Oracle Corporation收购）接手并继续开发JDBC驱动之后使用的 \n com.mysql.cj.jdbc.Driver  用于 5.1.6 版本之后 \n \n \n 从Java 6  JDBC 4.0 开始，显式加载驱动类的步骤 Class.forName(…) 通常是不必要的，因为JDBC服务提供者机制会自动加载驱动 \n \n URL及参数 \n \n [(https://mysql-net.github.io/MySqlConnector/connection-options]((https://mysql-net.github.io/MySqlConnector/connection-options)\n \n https://mysqlconnector.net/connection-options \n \n \n \n \n jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false \n &useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai \n \n \n \n \n 参数名称 \n 参数说明 \n 缺省值 \n 最低版本要求 \n \n \n \n \n user \n 数据库用户名（用于连接数据库） \n \n 所有版本 \n \n \n password \n 用户密码（用于连接数据库） \n \n 所有版本 \n \n \n useUnicode \n 是否使用Unicode字符集，使用参数characterEncoding，本参数值必须设置为true \n FALSE \n 1.1g \n \n \n characterEncoding \n 当useUnicode设置为true时，指定字符编码。比如可设置为gb2312或gbk、UTF-8 \n FALSE \n 1.1g \n \n \n autoReconnect \n 当数据库连接异常中断时，是否自动重新连接？ \n FALSE \n 1.1 \n \n \n autoReconnectForPools \n 是否使用针对数据库连接池的重连策略 \n FALSE \n 3.1.3 \n \n \n failOverReadOnly \n 自动重连成功后，连接是否设置为只读？ \n TRUE \n 3.0.12 \n \n \n maxReconnects \n autoReconnect设置为true时，重试连接的次数 \n 3 \n 1.1 \n \n \n initialTimeout \n autoReconnect设置为true时，两次重连之间的时间间隔，单位：秒 \n 2 \n 1.1 \n \n \n connectTimeout \n 和数据库服务器建立socket连接时的超时，单位：毫秒 \n 0 \n 3.0.1 \n \n \n socketTimeout \n socket操作（读写）超时，单位：毫秒。 0表示永不超时 \n 0 \n 3.0.1 \n \n \n useSSL \n 是否进行ssl连接 \n \n \n \n \n zeroDateTimeBehavior \n 把零值日期转换为 null \n \n \n \n \n serverTimezone \n GMT%2B8   %2B 是 + 的转义字符,其实就是 GMT+8 （\'+8:00\'）,代表东八区 Asia/Shanghai \n \n \n \n \n \n \n useTimeZone  为true时，会开启服务器和客户端之间的时区转换，只有 useLegacyDatetimeCode = true 时才回生效 \n useLegacyDatetimeCode  默认为true，为false时:  useTimezone ,  useJDBCCompliantTimezoneShift ,  useGmtMillisForDatetimes ,  useFastDateParsing  这几个参数都会无效 \n Mybatis \n \n https://github.com/mybatis \n \n https://mybatis.org/mybatis-3/zh/dynamic-sql.html \n http://www.mybatis.cn \n \n \n https://github.com/pagehelper/Mybatis-PageHelper \n https://github.com/baomidou/mybatis-plus \n \n https://github.com/davidfantasy/mybatis-plus-generator-ui \n https://github.com/baomidou/awesome-mybatis-plus \n \n \n https://github.com/mybatis-mapper \n https://github.com/abel533/Mapper \n https://github.com/ck-open/jumper \n \n https://gitlab.com/ck-open/jumper \n \n \n \n \n https://github.com/alexdyysp/MybatisHandBook \n https://github.com/fengwenyi/mybatis-plus-code-generator \n https://github.com/itfsw/mybatis-generator-plugin \n \n \n 干掉mapper.xml！MyBatis新特性动态SQL \n Mybatis 源码分析 (一) Mapper扫描及代理 \n 一条sql查出树形结构数据 \n Sql中对于树形结构的处理 \n \n trim标签 \n \n \n \n 属性 \n 描述 \n \n \n \n \n prefix \n 在条件语句前需要加入的内容 \n \n \n suffix \n 在条件语句后需要加入的内容 \n \n \n prefixOverrides \n 覆盖/去除sql语句前面的指定内容 \n \n \n suffixOverrides \n 覆盖/去除sql语句后面的指定内容 \n \n \n \n \n 示例 \n \n < select   id = " selectSelective "   resultType = " java.util.Map " > \n  SELECT * FROM user\n   < trim   prefix = " WHERE "   suffix = " AND|OR " > \n     < if   test = " id != null and id.trim() != \'\'  " > \n        id = #{id} AND\n     </ if > \n     < if   test = " name != null and name.trim() != \'\'  " > \n        name = #{name} AND\n     </ if > \n   </ trim > \n </ select > \n \x3c!-- 等同于以下方式 --\x3e \n < select   id = " selectSelective "   resultType = " java.util.Map " > \n  SELECT * FROM user\n   < where > \n     < if   test = " id != null and id.trim() != \'\'  " > \n        id = #{id}\n     </ if > \n     < if   test = " name != null and name.trim() != \'\'  " > \n        AND name = #{name} \n     </ if > \n   </ where > \n </ select > \n \n Oracle 的in query list 的大小要不大于1000 \n List < String >  taskLists  =   new   ArrayList < > ( ) ; \ntaskLists . addAll ( tasksToArchive ) ; \n int  times  =  tasksToArchive . size ( )   %   1000   ==   0   ?  tasksToArchive . size ( )   /   1000   :   ( tasksToArchive . size ( )   /   1000   +   1 ) ; \n List < IAccountingTask >  tasksToArchiveList  =   new   ArrayList < IAccountingTask > ( ) ; \n if   ( taskLists  !=   null   &&   ! taskLists . isEmpty ( ) )   { \n     for   ( int  i  =   0 ;  i  <  times ;  i ++ )   { \n         List < ?   extends   IAccountingTask >  tempList ; \n         if   ( ( i  +   1 )   *   1000   <=  taskLists . size ( ) )   { \n            tempList  =  persistenceManager . getSession ( ) . getAll ( AccountingTask . class , \n                    taskLists . subList ( i  *   1000 ,   ( i  +   1 )   *   1000 ) ) ; \n         }   else   { \n            tempList  =  persistenceManager . getSession ( ) . getAll ( AccountingTask . class , \n                    taskLists . subList ( i  *   1000 ,  taskLists . size ( ) ) ) ; \n         } \n        tasksToArchiveList . addAll ( tempList ) ; \n     } \n } \n\n List < TransactRepViewModel >  result  =   new   ArrayList < TransactRepViewModel > ( ) ; \n final   List < List < String > >  partitions  =   ListUtils . partition ( clientIdList ,   999 ) ; \n for   ( List < String >  partition  :  partitions )   { \n    result . addAll ( yourRepo . findByClientIdList ( partition ,  startDate ,  endDate ) ; ) \n } \n \n < foreach   collection = " sessionIds "   item = " session_id "   open = " ( "   close = " ) "   separator = " , "   index = " index " > \n     < if   test = " index == 0 " > \n      session_id in (\n     </ if > \n     \x3c!-- 多个if判断原因：\n           sql in 最大只有1000个参数。\n           foreach 只去掉了最后一个‘,’\n           数据库表中sessionId是非空设置\n    --\x3e \n     < if   test = " index != 0 and index % 500 == 0 " > \n      \'\' ) or session_id in (\n     </ if > \n    #{session_id}\n     < if   test = " index == sessionIds.size - 1 " > \n      )\n     </ if > \n </ foreach > \n Hibernate \n \n https://github.com/hibernate \n https://github.com/vladmihalcea/hypersistence-optimizer \n https://github.com/jeecgboot/MiniDao \n https://github.com/AnghelLeonard/Hibernate-SpringBoot \n 返回结果接收方式 \n setresulttransformer与addentity的区别 \n \n 一个区别是前者支持查任意的列，后者必须用select * from users的形式或select {a. },{b. } from a,b where ....。 \n 如果使用原生sql语句进行query查询时，hibernate是不会自动把结果包装成实体的。所以要手动调用addentity(class class)等一系列方法。 \n 如session.createsqlquery(sql).addentity(class class);注意hibernate3.0.5不支持，单个参数的addentity方法 \n 另外，hibernate3.2可以对原生sql 查询使用resulttransformer。这会返回不受hibernate管理的实体。 \n \n session . createsqlquery ( "select name ,age,birthday from students" )   . setresulttransformer ( transformers . aliastobean ( students . class ) )  \n // 或 \n setresulttransformer ( new  aliastobeanresulttransformer  ( students . class ) )  \n \n \n \n 上面的查询将会返回students的列表,它将被实例化并且将name和birthday的值注射入对应的属性或者字段。\n但必须注意，对每一个列都必须addscalar("列名") \n \n \n 返回结果转换为Map \n List < Map < String ,   Object > >  list  =  session . createSQLQuery ( sql ) . setResultTransformer ( Transformers . ALIAS_TO_ENTITY_MAP ) . list ( ) ; \n Map < String ,   Object >  map  =   ( Map < String ,   Object > )  session . createSQLQuery ( sql ) . setResultTransformer ( Transformers . ALIAS_TO_ENTITY_MAP ) . uniqueResult ( ) ; \n \n 当确定返回的实例只有一个或者null时 用uniqueResult()方法 \n Double  result  =   ( Double )  session . createSQLQuery ( querySql ) . uniqueResult ( ) ; \n HQL查询 \n String  hql  =   "from Invest i where i.loan.id=? and i.status=?" ; \n List < Invest >  is  =  ht . find ( hql ,   new   String [ ]   {  loanId ,   InvestStatus . REPAYING   } ) ; \n // 或者 \n String  hql  =   "from Invest i where i.loan.id=? and i.status=?" ; \n List < Invest >  is  =  ht . find ( hql ,  loanId ,   InvestStatus . REPAYING   ) ; \n\n // 使用in，同createSQLQuery使用方式一样 \n String  hql  =   "from Invest i where i.loan.id=? and i.status in(:status)" ; \n List < Invest >  is  =  session . createQuery ( sql ) \n\t\t\t\t\t . setParameter ( 0 ,  loanId ) \n\t\t\t\t\t . setParameterList ( "status" ,   Arrays . asList ( InvestStatus . REPAYING ,   InvestStatus . OVERDUE , \n\t\t\t\t\t\t\t InvestStatus . COMPLETE ,   InvestStatus . BID_SUCCESS ) ) . list ( ) \n QBC查询 \n \n 该方式只能用关联表的关联字段为查询条件，无法使用关联表的其他字段为查询条件 \n \n \n Criteria 和 DetachedCriteria 的主要区别在于创建的形式不一样, Criteria 是在线的，所以它是由hibernate Session 进行创建的；\n而 DetachedCriteria 是离线的，创建时无需Session ，DetachedCriteria 提供了 2 个静态方法 forClass(Class) 或 forEntityName(Name)进行DetachedCriteria 实例的创建。 \n \n \n spring 的框架提供了getHibernateTemplate().findByCriteria(detachedCriteria) 方法可以很方便地根据DetachedCriteria 来返回查询结果。 \n \n hibernate5.2版本之前createCriteria()查询的方式 \n // Restrictions.in传值为数组或list集合 \n List < String >  status  =   Arrays . asList ( InvestConstants . InvestStatus . REPAYING , InvestConstants . InvestStatus . OVERDUE ) ; \n DetachedCriteria  criteria  =   DetachedCriteria . forClass ( InvestExtensionPlan . class ) ; \ncriteria . createAlias ( "invest" ,   "i" ) ; // 当查询关联第三张表时，第二张表需要取别名 \ncriteria . add ( Restrictions . eq ( "i.loan.id" ,  loanExtensionPlan . getLoan ( ) . getId ( ) ) ) ; \ncriteria . add ( Restrictions . in ( "status" ,  status ) ) ;   // 可解决ORACLE in 大于1000问题 \ncriteria . addOrder ( Order . desc ( "period" ) ) ; // 添加排序 \n\n // 查询一范围内的的数据,需借助Criteria来查询 \n Criteria  cri  =  criteria . getExecutableCriteria ( ht . getSessionFactory ( ) . getCurrentSession ( ) ) ; \ncri . setFirstResult ( firstResult ) ; // 从第几条开始 \ncri . setMaxResults ( maxResults ) ; // 查询多少条 \n List < InvestExtensionPlan >  investExtensionPlans  =  ht . findByCriteria ( criteria ) ; \n\n\n // 可解决ORACLE in 大于1000问题 \n private   void   addCriteriaIn ( String  propertyName ,   List < ? >  list ,   Criteria  criteria )   { \n     Disjunction  or  =   Restrictions . disjunction ( ) ; \n     if   ( list . size ( )   >   1000 )   { \n         while   ( list . size ( )   >   1000 )   { \n             List < ? >  subList  =  list . subList ( 0 ,   1000 ) ; \n            or . add ( Restrictions . in ( propertyName ,  subList ) ) ; \n            list . subList ( 0 ,   1000 ) . clear ( ) ; \n         } \n     } \n    or . add ( Restrictions . in ( propertyName ,  list ) ) ; \n    criteria . add ( or ) ; \n } \n \n \n 模糊查询和自定义查询 \n \n criteria . add ( Restrictions . like ( "time" , "%"   +   "2018-11-13"   +   "%" ) ) ; \ncriteria . add ( Restrictions . sqlRestriction ( "time like \'%2018-11-13%\'" ) ) ; \n \n hibernate5.2及之后版本createCriteria()查询的方式 \n \n 原有的session.createCriteria()方法已经过时，替代的方式是使用JPA Criteria。 \n \n \n session.createSQLCriteria()方法也过时了，当然可以用session.createNativeCriteria()方法来代替。 \n \n //注意导入的包是import javax.persistence.criteria.CriteriaQuery; \n try   { \n    session . beginTransaction ( ) ; \n     //1.创建CriteriaBuilder,用于创建查询 \n     CriteriaBuilder  criteriaBuilder  =  session . getCriteriaBuilder ( ) ; \n     //2.创建CriteriaQuery,用于设置查询语句的信息 \n     CriteriaQuery < Student >  criteriaQuery  =  criteriaBuilder . createQuery ( Student . class ) ; \n     //3.定义查询的From子句中能出现的类型,也可以用root.get()获取具体的某个属性 \n     Root < Student >  root  =  criteriaQuery . from ( Student . class ) ; \n     //4.设置WHERE字句的条件，此处条件为score<= 98 \n    criteriaQuery . where ( criteriaBuilder . lt ( root . get ( "score" ) ,   98 ) ) ; \n     //5.设置排序标准与排序方式 \n    criteriaQuery . orderBy ( criteriaBuilder . desc ( root . get ( "score" ) ) ) ; \n     //6.创建Query对象并获取结果集list \n     Query < Student >  query  =  session . createQuery ( criteriaQuery ) ; \n     List < Student >  list  =  query . list ( ) ; \n     // List<Student> list = session.createQuery(criteriaQuery).getResultList(); \n     //7.遍历结果集 \n    list . forEach ( System . out :: println ) ; \n    session . getTransaction ( ) . commit ( ) ; \n }   catch   ( Exception  e )   { \n    e . printStackTrace ( ) ; \n    session . getTransaction ( ) . rollback ( ) ; \n } \n \n \n 多表查询 \n \n try   { \n    session . beginTransaction ( ) ; \n     //1.创建CriteriaBuilder \n     CriteriaBuilder  criteriaBuilder  =  session . getCriteriaBuilder ( ) ; \n     //2.创建CriteriaQuery \n     CriteriaQuery < Country >  criteriaQuery  =  criteriaBuilder . createQuery ( Country . class ) ; \n     //3.设置distinct去重 \n    criteriaQuery . distinct ( true ) ; \n     //4.获取root句柄 \n     Root < Country >  root  =  criteriaQuery . from ( Country . class ) ; \n     //5.设置fetch的连接对象以及连接类型，此处为迫切左外连接 \n    root . fetch ( "ministers" ,   JoinType . LEFT ) ; \n     //6.设置where查询条件 \n    criteriaQuery . where ( criteriaBuilder . equal ( root . get ( "cid" ) ,   1 ) ) ; \n     //7.获取Query对象 \n     Query < Country >  query  =  session . createQuery ( criteriaQuery ) ; \n     //8.获取查询结构 \n     List < Country >  list  =  query . list ( ) ; \n     // List<Student> list = session.createQuery(criteriaQuery).getResultList(); \n     for   ( Country  country  :  list )   { \n\t System . out . println ( country ) ; \n\tcountry . getMinisters ( ) . forEach ( System . out :: println ) ; \n     } \n    session . getTransaction ( ) . commit ( ) ; \n }   catch   ( Exception  e )   { \n    e . printStackTrace ( ) ; \n    session . getTransaction ( ) . rollback ( ) ; \n } \n \n \n 调用hibernate存储过程 \n 关闭session \n if   ( session  !=   null )   { \n\tsession . flush ( ) ; \n\tsession . clear ( ) ; \n\tsession . close ( ) ; \n } \n \n \n hibernate中evict()和clear()的区别 \n \n \n session.evict(obj)：会把指定的缓冲对象从一级缓存中进行清除； \n \n \n session.clear()：把一级缓存中的全部对象清除，但不包括操作中的对象。 \n \n \n hibernate执行的顺序如下： \n \n \n (1)生成一个事务的对象，并标记当前的session处于事务状态（此时并未启动数据库级事务）。 \n \n \n (2)应用使用s.save()保存对象，这个时候Session将这个对象放入entityEntries，用来标记对象已经和当前的会话建立了关联，\n由于应用对对对象做了保存的操作，Session还要在insertions中登记应用的这个插入行为(行为包括：对象引用、对象id、Session、持久化处理类)。 \n \n \n (3)s.evict()将对象从s会话中拆离，这时s会从entityEntries中将这个对象移除。 \n \n \n (4)事务提示，需要将所有缓存flush入数据库，Session启动一个事务，并按照insert ,update,...,delete的顺序提交所有之前登记的操作\n（注意：所有insert执行完毕后才会执行update，这里的特殊处理也可能会将你的程序搞得一团遭，如需要控制操作的顺序，需要使用flush），\n现在对象不再entityEntries中，但在执行insert的行为时只需要访问insertions就足够了，所以此时不会有任何的异常，\n异常出现在插入后通知Session该对象已经插入完毕这个步骤上，这个步骤中需要将entityEntries中对象的existsInDatabase标志置true，\n由于对象并不存在于entityEntres中，此时Hibernate就认为insertions和entityEntries可能因为线程安全的问题产生了不同步\n（也不知道Hibernate的开发者是否考虑到例子中的处理方式，如果没有的话，这也许算是一个bug吧），\n于是一个net.sf.hibernate.AssertionFailure就被抛出，程序终止。 \n \n \n 一般我们会错误的认为s.sava会立即执行，而将对象过早的与session拆离，造成了session的insertion和entityEntries中内容的不同步。\n所以我们在做此类操作时一定要清楚hibernate什么时候会将数据flush入数据库，在未flush之前不要将已进行操作的对象从session上拆离，解决办法是在sava之后，添加session.flush。 \n \n /**\n * 验证缓存管理的方法evict\n * 执行完evict之后，将会将id为5的user对象从一级缓存中移除，再次访问的话将重新查询数据库\n * 该用例将发出2个select语句\n */ \n @Test \n public   void   testEvict ( ) { \n\t Session  session  =   HibernateUtil . getSession ( ) ; \n\t User  user1  =    ( User ) session . get ( User . class ,   5 ) ; \n\t System . out . println ( user1 . getName ( ) ) ; \n\tsession . evict ( user1 ) ; \n\t User  user2  =    ( User ) session . get ( User . class ,   5 ) ; \n\t System . out . println ( user2 . getName ( ) ) ; \n\tsession . close ( ) ; \n } \n\n\n /**\n * 验证缓存管理的方法clear\n * 执行clear方法之后，一级缓存中的对象全部被清除，再次查询，将从数据库中查询\n * 该用例将发出2个select语句\n */ \n @Test \n public   void   testClear ( ) { \n\t Session  session  =   HibernateUtil . getSession ( ) ; \n\t User  user1  =    ( User ) session . get ( User . class ,   5 ) ; \n\t System . out . println ( user1 . getName ( ) ) ; \n\t System . out . println ( "=======================" ) ; \n\t User  user2  =    ( User ) session . get ( User . class ,   5 ) ; \n\t System . out . println ( user2 . getName ( ) ) ; \n\tsession . clear ( ) ; \n\n\n } \n 只读错误 \n \n Write operations are not allowed in read-only mode (FlushMode.MANUAL):\nTurn your Session into FlushMode.COMMIT/AUTO or remove \'readOnly\' marker from transaction definition. \n \n \n 写操作在只读模式下不被允许(FlushMode.MANUAL): 把你的Session改成FlushMode.COMMIT/AUTO或者清除事务定义中的readOnly标记。 \n 编程式修改FlushMode \n ht . setFlushMode ( HibernateTemplate . FLUSH_AUTO ) ; \nht . getSessionFactory ( ) . getCurrentSession ( ) . setFlushMode ( FlushMode . AUTO ) ; \n 配置过滤器 \n < web-app   version = " 3.0 "   > \n     < filter > \n         < filter-name > OpenSessionInViewFilter </ filter-name > \n         < filter-class > org.springframework.orm.hibernate3.support.OpenSessionInViewFilter </ filter-class > \n         \x3c!-- singleSession默认为true,若设为false则等于没用OpenSessionInView 。所以默认可以不写 --\x3e \n         < init-param > \n             < param-name > singleSession </ param-name > \n             < param-value > true </ param-value > \n         </ init-param > \n         \x3c!-- 设置flushMode为AUTO(在确保查询从不会返回脏数据的情况下，在查询前刷新Session。)/COMMIT(Session在提交事务时刷新。) --\x3e \n         < init-param > \n             < param-name > flushMode </ param-name > \n             < param-value > AUTO </ param-value > \n         </ init-param > \n     </ filter > \n     < filter-mapping > \n         < filter-name > OpenSessionInViewFilter </ filter-name > \n         < url-pattern > /* </ url-pattern > \n     </ filter-mapping > \n </ web-app > \n 使用execute方法回调方式实现 \n \n Dao层HibernateTemplate操作数据时，使用execute方法回调方式实现： \n \n // 原方式 \n getHibernateTemplate ( ) . save ( user ) ;  \n\n // 更改后方式 \n getHibernateTemplate ( ) . execute ( new   HibernateCallback < User > ( )   { \n\t @Override \n\t public   User   doInHibernate ( Session  session )   throws   HibernateException   { \n\t\tsession . save ( user ) ; \n\t\t return   null ; \n\t } \n } ) ; \n\n \n ',createdTime:1761814324e3},{title:"Java第三方库",frontmatter:{description:"https://github.com/eclipse-ee4j/soteria\nhttps://github.com/justauth\njwt https://github.com/jwtk/jjwt\nhttps://github.com/auth0/java-jwt\nhttps://sourceforge.net/projects/jsch\n    https://github.com/mwiede/jsch\n    https://github.com/sbabcoc/Remote-Session\n    https://github.com/jiashunx/tools-jsch\n    https://github.com/DarkAssassinator/ssh-spring-boot-starter\n    JSch-用java实现服务器远程操作\nhttps://projects.eclipse.org/projects/technology.microprofile\n    https://github.com/eclipse/microprofile\n嵌入静态资源 https://github.com/webjars\n    https://www.webjars.org\n图形验证码 https://github.com/whvcse/EasyCaptcha\nhttps://github.com/orclight/jcaptcha\n依赖关系注入器 https://github.com/google/dagger\nhttps://github.com/MyCATApache\n验证码 https://github.com/ramostear/Happy-Captcha\n邮件 https://github.com/eclipse-ee4j/mail\n    https://github.com/javaee/javamail\n    https://www.oracle.com/cn/java/technologies/javamail-releases.html\nhttps://github.com/eclipse-ee4j/jaf\n    https://github.com/javaee/activation\nSMB https://github.com/AgNO3/jcifs-ng",meta:[{name:"twitter:title",content:"Java第三方库"},{name:"twitter:description",content:"https://github.com/eclipse-ee4j/soteria\nhttps://github.com/justauth\njwt https://github.com/jwtk/jjwt\nhttps://github.com/auth0/java-jwt\nhttps://sourceforge.net/projects/jsch\n    https://github.com/mwiede/jsch\n    https://github.com/sbabcoc/Remote-Session\n    https://github.com/jiashunx/tools-jsch\n    https://github.com/DarkAssassinator/ssh-spring-boot-starter\n    JSch-用java实现服务器远程操作\nhttps://projects.eclipse.org/projects/technology.microprofile\n    https://github.com/eclipse/microprofile\n嵌入静态资源 https://github.com/webjars\n    https://www.webjars.org\n图形验证码 https://github.com/whvcse/EasyCaptcha\nhttps://github.com/orclight/jcaptcha\n依赖关系注入器 https://github.com/google/dagger\nhttps://github.com/MyCATApache\n验证码 https://github.com/ramostear/Happy-Captcha\n邮件 https://github.com/eclipse-ee4j/mail\n    https://github.com/javaee/javamail\n    https://www.oracle.com/cn/java/technologies/javamail-releases.html\nhttps://github.com/eclipse-ee4j/jaf\n    https://github.com/javaee/activation\nSMB https://github.com/AgNO3/jcifs-ng"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Java第三方库"},{property:"og:description",content:"https://github.com/eclipse-ee4j/soteria\nhttps://github.com/justauth\njwt https://github.com/jwtk/jjwt\nhttps://github.com/auth0/java-jwt\nhttps://sourceforge.net/projects/jsch\n    https://github.com/mwiede/jsch\n    https://github.com/sbabcoc/Remote-Session\n    https://github.com/jiashunx/tools-jsch\n    https://github.com/DarkAssassinator/ssh-spring-boot-starter\n    JSch-用java实现服务器远程操作\nhttps://projects.eclipse.org/projects/technology.microprofile\n    https://github.com/eclipse/microprofile\n嵌入静态资源 https://github.com/webjars\n    https://www.webjars.org\n图形验证码 https://github.com/whvcse/EasyCaptcha\nhttps://github.com/orclight/jcaptcha\n依赖关系注入器 https://github.com/google/dagger\nhttps://github.com/MyCATApache\n验证码 https://github.com/ramostear/Happy-Captcha\n邮件 https://github.com/eclipse-ee4j/mail\n    https://github.com/javaee/javamail\n    https://www.oracle.com/cn/java/technologies/javamail-releases.html\nhttps://github.com/eclipse-ee4j/jaf\n    https://github.com/javaee/activation\nSMB https://github.com/AgNO3/jcifs-ng"},{property:"og:url",content:"https://bajins.com/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Java第三方库"},{itemprop:"description",content:"https://github.com/eclipse-ee4j/soteria\nhttps://github.com/justauth\njwt https://github.com/jwtk/jjwt\nhttps://github.com/auth0/java-jwt\nhttps://sourceforge.net/projects/jsch\n    https://github.com/mwiede/jsch\n    https://github.com/sbabcoc/Remote-Session\n    https://github.com/jiashunx/tools-jsch\n    https://github.com/DarkAssassinator/ssh-spring-boot-starter\n    JSch-用java实现服务器远程操作\nhttps://projects.eclipse.org/projects/technology.microprofile\n    https://github.com/eclipse/microprofile\n嵌入静态资源 https://github.com/webjars\n    https://www.webjars.org\n图形验证码 https://github.com/whvcse/EasyCaptcha\nhttps://github.com/orclight/jcaptcha\n依赖关系注入器 https://github.com/google/dagger\nhttps://github.com/MyCATApache\n验证码 https://github.com/ramostear/Happy-Captcha\n邮件 https://github.com/eclipse-ee4j/mail\n    https://github.com/javaee/javamail\n    https://www.oracle.com/cn/java/technologies/javamail-releases.html\nhttps://github.com/eclipse-ee4j/jaf\n    https://github.com/javaee/activation\nSMB https://github.com/AgNO3/jcifs-ng"}]},regularPath:"/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",relativePath:"Java/Java第三方库.md",key:"v-38136cbc",path:"/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"框架",slug:"框架"},{level:3,title:"Dubbo",slug:"dubbo"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Java第三方库 \n Flag 框架 Dubbo \n Flag \n \n 现在常用的java框架有哪些? \n Java开发主流框架是什么？ \n https://github.com/akullpp/awesome-java \n https://github.com/uhub/awesome-java \n https://github.com/topics/java-library \n https://github.com/xuxueli \n http://www.apache.org/index.html#projects-list \n \n 下载地址镜像 \n \n \n hutool  https://github.com/dromara \n https://github.com/shulieTech \n https://github.com/codehaus \n https://github.com/rohankumardubey \n https://github.com/orgs/deepin-community \n https://github.com/xerial \n https://github.com/Willena \n https://github.com/OpenHFT \n \n https://github.com/peter-lawrey \n \n \n \n \n https://github.com/eclipse-ee4j/soteria \n https://github.com/justauth \n jwt  https://github.com/jwtk/jjwt \n https://github.com/auth0/java-jwt \n https://sourceforge.net/projects/jsch \n \n https://github.com/mwiede/jsch \n https://github.com/sbabcoc/Remote-Session \n https://github.com/jiashunx/tools-jsch \n https://github.com/DarkAssassinator/ssh-spring-boot-starter \n JSch-用java实现服务器远程操作 \n \n \n https://projects.eclipse.org/projects/technology.microprofile \n \n https://github.com/eclipse/microprofile \n \n \n 嵌入静态资源  https://github.com/webjars \n \n https://www.webjars.org \n \n \n 图形验证码  https://github.com/whvcse/EasyCaptcha \n https://github.com/orclight/jcaptcha \n 依赖关系注入器  https://github.com/google/dagger \n https://github.com/MyCATApache \n 验证码  https://github.com/ramostear/Happy-Captcha \n 邮件  https://github.com/eclipse-ee4j/mail \n \n https://github.com/javaee/javamail \n https://www.oracle.com/cn/java/technologies/javamail-releases.html \n \n \n https://github.com/eclipse-ee4j/jaf \n \n https://github.com/javaee/activation \n \n \n SMB  https://github.com/AgNO3/jcifs-ng \n \n \n Markdown解析器  https://github.com/vsch/flexmark-java \n https://github.com/math4j \n 数学表达式  https://github.com/mariuszgromada/MathParser.org-mXparser \n 数学框架  https://github.com/Ismail-Mekni/mxreflection \n 读取mp3文件  https://github.com/mpatric/mp3agic \n https://github.com/sedmelluq/lavaplayer \n https://github.com/cemfi/meico \n \n https://github.com/music-encoding \n \n \n 流媒体  https://github.com/Red5 \n MP4解析  https://github.com/sannies/mp4parser \n https://github.com/zakgof/velvet-video \n https://github.com/jcodec/jcodec \n https://github.com/ihmcrobotics/ihmc-video-codecs \n https://github.com/drewnoakes/metadata-extractor \n https://github.com/guozheng/jvast \n 多媒体检索  https://github.com/vitrivr \n 地理空间数据  https://github.com/geotools/geotools \n \n https://sourceforge.net/projects/geotools \n https://www.osgeo.org/projects \n \n \n https://github.com/geoserver/geoserver \n https://github.com/Esri/geoportal-server-harvester \n https://github.com/Esri/geoportal-server-catalog \n 几何图形  https://github.com/GeoLatte/geolatte-geom \n 科学计算  https://github.com/deeplearning4j/nd4j \n 大数据  https://github.com/apache/flink \n https://github.com/apache/hive \n https://github.com/apache/impala \n 物联网  https://github.com/jetlinks \n 元数据和治理  https://github.com/odpi/egeria \n https://github.com/JNOSQL \n 解析命令行参数  http://github.com/cbeust/jcommander \n \n LOG \n \n https://github.com/topics/logging \n https://github.com/topics/logback \n \n \n log4j —> JUL—> JCL—> slf4j —> logback —> log4j2 \n 输出debug日志前需要isDebugEnabled吗 \n \n \n https://github.com/tinylog-org \n https://github.com/apache/logging-log4j2 \n https://github.com/qos-ch \n \n https://github.com/qos-ch/logback \n https://github.com/logfellow/logstash-logback-encoder \n https://github.com/YLongo/logback-chinese-manual \n http://www.logback.cn \n Spring框架下异步日志收集及验证是否生效 \n \n \n https://github.com/qqxx6661/logRecord \n https://github.com/bluelinelabs/LoganSquare \n \n Cache \n \n https://github.com/search?q=bitmap \n \n \n https://github.com/ehcache \n \n http://www.ehcache.org/apidocs \n Ehcache3配置使用 \n JAVA中使用springBoot和Ehcache3.X无xml配置和xml配置 \n ehcache之offheap \n Ehcache缓存从2.10升到3.5.0版本的简单用法和踩坑经验 \n \n \n 分布式  https://github.com/Terracotta-OSS/offheap-store \n https://github.com/ben-manes/caffeine \n \n https://github.com/ck-jesse/l2cache \n \n \n https://github.com/xiaolyuh/layering-cache \n GuavaCache使用示例  https://github.com/songyaxu/guava-cache \n 存储和检索海量数据  https://github.com/dCache/dcache \n 高效键值对存储  https://github.com/OpenHFT/Chronicle-Map \n Redis云管理平台  https://github.com/sohutv/cachecloud \n 压缩位图  https://github.com/RoaringBitmap \n \n 延迟队列 \n \n https://github.com/search?l=Java&o=desc&q=delayqueue&s=updated&type=Repositories \n https://github.com/dongzhuo0228/delayqueuetest \n https://github.com/qjm201000/concurrent_delayqueue \n \n 工具 \n \n https://github.com/bytedeco \n https://commons.apache.org \n \n https://github.com/apache?q=commons \n \n \n https://github.com/google/guava \n https://github.com/SpringForAll \n https://github.com/ifeilong \n https://github.com/oblac/jodd \n https://github.com/0opslab/opslabJutil \n https://github.com/houbb/heaven \n https://github.com/avaje \n https://github.com/yupiik \n https://github.com/derive4j/derive4j \n https://github.com/paganini2008/devtools \n https://github.com/YattaSolutions \n spring framework util \n 流式断言器  https://github.com/assertj \n \n https://assertj.github.io/doc \n https://github.com/joel-costigliola/assertj \n FEST  https://github.com/alexruiz \n \n \n https://github.com/hamcrest/JavaHamcrest \n https://github.com/robstoll/atrium \n https://github.com/archine/tools \n 容错  https://github.com/failsafe-lib/failsafe \n https://github.com/resilience4j \n https://github.com/bucket4j/bucket4j \n https://github.com/apache/shenyu \n 函数增强  https://github.com/vavr-io/vavr \n https://github.com/amaembo/streamex \n https://github.com/jOOQ/jOOL \n https://github.com/poetix/protonpack \n https://github.com/robertvazan/noexception \n https://github.com/inferred/FreeBuilder \n https://github.com/RichardWarburton/lambda-behave \n https://github.com/jasongoodwin/better-java-monads \n https://github.com/functionaljava/functionaljava \n https://github.com/tginsberg/gatherers4j \n 并发数据结构  https://github.com/JCTools/JCTools \n https://github.com/real-logic \n https://github.com/carrotsearch/hppc \n 特性开关  https://github.com/ff4j/ff4j \n \n FF4J（特性框架）简介及入门 \n 微服务版本分支管理与特性开关 \n \n \n https://github.com/togglz/togglz \n 集合增强  https://github.com/vigna/fastutil \n https://github.com/lemire/javaewah \n Native本地调用  https://github.com/zakgof/java-native-benchmark \n \n https://yanbin.blog/java-jni-libraries \n \n \n https://github.com/jnr \n \n https://github.com/SerCeMan/jnr-fuse \n \n \n https://github.com/java-native-access/jna \n https://sourceforge.net/projects/jnative \n https://github.com/fusesource/hawtjni \n https://jogamp.org \n https://sourceforge.net/projects/cxxwrap \n https://github.com/bytedeco/javacpp \n https://github.com/nativelibs4java \n https://github.com/luben/zstd-jni \n https://teamdev.com/jniwrapper \n 线程池  https://github.com/acmenlt/dynamic-threadpool \n https://github.com/opengoofy/hippo4j \n https://github.com/dromara/dynamic-tp \n 线程间消息传递  https://github.com/lmax-exchange/disruptor \n https://github.com/alibaba/transmittable-thread-local \n https://github.com/real-logic/agrona \n 通道(Channels)  https://github.com/softwaremill/jox \n 地理哈希  https://github.com/kungfoo/geohash-java \n URL解析  https://github.com/smola/galimatias \n 解析Java源文件  https://github.com/forge/roaster \n INI配置  https://github.com/sshtools/jini \n https://github.com/matteobaccan/owner \n \n https://github.com/cyfonly/owner-doc \n \n \n 类型转换  https://github.com/kordamp/ezmorph \n \n \n Java8以下的时间替代项目 joda-time   https://github.com/JodaOrg \n https://github.com/ocpsoft/prettytime \n https://github.com/ThreeTen/threetenbp \n https://github.com/iandarwin/date4j \n https://github.com/MenoData/Time4J \n 对配置内容加密  https://github.com/ulisesbocchio/jasypt-spring-boot \n Google加密  https://github.com/google/tink \n https://github.com/joshjdevl/libsodium-jni \n bcprov-jdk15on  https://github.com/bcgit/bc-java  Bouncy Castle Crypto \n https://github.com/fzakaria/ascii85 \n https://github.com/rbuck/java-codecs \n https://github.com/biagioT/java-uudecoder \n https://github.com/alexey-lapin/eme-java \n Headless Chrome For Java  https://github.com/fanyong920/jvppeteer \n https://github.com/andotorg/utf8bom-to-utf8 \n https://github.com/downgoon/gbk2utf8 \n 中文转拼音  https://github.com/houbb/pinyin \n https://github.com/toolgood/ToolGood.Words \n https://github.com/belerweb/pinyin4j \n https://github.com/Andision/chinese2digits-java \n 中文繁简体转换  https://github.com/houbb/opencc4j \n https://github.com/xiaodaojava/sunshine \n 字符串编码解码  https://github.com/shekhargulati/strman-java \n 字符编码检测  https://sourceforge.net/projects/jchardet \n https://github.com/albfernandez/juniversalchardet \n https://github.com/thkoch2001/juniversalchardet \n https://github.com/sigpwned/chardet4j \n https://sourceforge.net/projects/cpdetector \n https://github.com/apache/Tika \n https://github.com/unicode-org/icu \n \n https://unicode-org.github.io/icu/userguide/icu4j \n \n \n https://github.com/codehaus/guessencoding \n https://github.com/shabanali-faghani/IUST-HTMLCharDet \n 元组  https://github.com/javatuples \n \n 在Java中使用元组类型的利器javatuples \n \n \n https://github.com/eclipse/eclipse-collections \n https://github.com/topics/comparator \n https://github.com/magicwerk/brownies-collections \n 规则  https://github.com/xmolecules/jmolecules \n 比较文本差异  https://github.com/java-diff-utils/java-diff-utils \n https://github.com/ejlchina \n 获取系统信息  https://github.com/oshi/oshi \n https://github.com/HaraldWalker/user-agent-utils \n 分布式ID  https://github.com/zjcscut/framework-mesh \n https://github.com/Meituan-Dianping/Leaf \n 执行脚本  https://github.com/beanshell \n https://github.com/fleipold/jproc \n \n \n 字体文件解析  https://sourceforge.net/projects/fontbox \n 条码  https://github.com/zxing/zxing \n \n Java 条形码生成 \n \n \n https://github.com/woo-j/OkapiBarcode \n https://github.com/lessthanoptimal/BoofCV \n https://sourceforge.net/projects/barcode4j \n https://sourceforge.net/projects/jbarcode \n 图片处理  https://github.com/jai-imageio \n https://github.com/levigo/jbig2-imageio \n https://github.com/haraldk/TwelveMonkeys \n https://github.com/imcdonagh/image4j \n https://github.com/coobird/thumbnailator \n \n http://projects.coobird.net \n \n \n SVG  https://github.com/css4j/echosvg \n 压缩文件  https://github.com/junrar/junrar \n https://github.com/apache/commons-compress \n https://github.com/airlift/aircompressor \n https://github.com/xerial/snappy-java \n https://github.com/lz4/lz4-java \n https://sourceforge.net/projects/sevenzipjbind \n \n https://github.com/borisbrodski/sevenzipjbinding \n \n \n https://github.com/srikanth-lingala/zip4j \n https://github.com/ymnk/jzlib \n https://tukaani.org/xz/java.html \n 重试  https://github.com/houbb/sisyphus \n \n \n HTTP  https://github.com/apache/httpcomponents-client \n https://github.com/square/okhttp \n \n https://github.com/square/okio \n \n \n https://github.com/Kong/unirest-java \n https://github.com/eclipse-ee4j/websocket-api \n https://github.com/OpenFeign \n https://github.com/eclipse-ee4j/jersey \n https://github.com/AsyncHttpClient \n https://github.com/square/retrofit \n \n https://github.com/LianjiaTech/retrofit-spring-boot-starter \n \n \n https://github.com/ratpack/ratpack \n https://github.com/TooTallNate/Java-WebSocket \n https://github.com/bootique/bootique \n https://github.com/jooby-project/jooby \n https://github.com/spotify/apollo \n https://github.com/googleapis/google-http-java-client \n https://github.com/oblac/jodd-http \n \n 对象/类/字节码 \n \n https://gitlab.ow2.org/asm/asm \n https://asm.ow2.io \n http://asm.ow2.org \n https://github.com/cglib/cglib \n https://www.eclipse.org/aspectj \n \n \n 模板引擎生成输出文本  https://github.com/apache/freemarker \n \n https://github.com/freemarker/freemarker3 \n http://freemarker.foofun.cn \n https://github.com/GreedyStar/generator \n \n \n https://github.com/apache/velocity-engine \n https://github.com/thymeleaf \n https://github.com/spullara/mustache.java \n https://github.com/trimou/trimou \n https://github.com/fizzed/rocker \n https://github.com/PebbleTemplates \n https://gitee.com/jfinal/enjoy \n https://gitee.com/xiandafu/beetl \n 类路径扫描器和模块扫描器  https://github.com/classgraph \n Java 应用程序打包  https://github.com/fvarrui/JavaPackager \n https://github.com/rzwitserloot/lombok \n 创建不可变对象  https://github.com/immutables \n https://github.com/google/auto \n https://github.com/Randgalt/record-builder \n NBeanCopyUtil采用的是Javassist \n https://github.com/square/javapoet \n https://github.com/raphw/byte-buddy \n \n ByteBuddy（史上最全） \n bytebuddy基本使用 \n \n \n JAVA programming ASSISTant  https://github.com/jboss-javassist \n https://github.com/jbosstools \n 反射工具包  https://github.com/ronmamo/reflections \n https://github.com/EsotericSoftware/reflectasm \n https://github.com/leangen/geantyref \n https://github.com/easymock/objenesis \n 获取方法参数名  https://github.com/paul-hammant/paranamer \n 可缓存反射  https://github.com/OxideWaveLength/Java-BetterReflection \n 属性比对器  https://github.com/dadiyang/equator \n 对象比较属性和审核  https://github.com/javers/javers \n 堆内存处理  https://github.com/airlift/slice \n \n 序列化/反序列化 \n \n 几种Java常用序列化框架的选型与对比 \n https://stackoverflow.com/questions/447898/what-is-object-serialization \n \n \n 反序列化备忘单  https://github.com/GrrrDog/Java-Deserialization-Cheat-Sheet \n https://github.com/NickstaDB/SerializationDumper \n https://github.com/frohoff/ysoserial \n 序列化基准测试  https://github.com/eishay/jvm-serializers \n \n \n 序列化为二进制  https://github.com/EsotericSoftware/kryo \n \n https://github.com/magro/kryo-serializers \n https://github.com/altoo-ag/akka-kryo-serialization \n \n \n https://github.com/RuedigerMoeller/fast-serialization \n https://github.com/linbin-eric/Fse \n https://github.com/protostuff \n \n https://github.com/dhgate-group/protostuff \n \n \n \n \n XML文件的解析技术有：DOM（文档对象模型）、SAX（简单API for XML）、JAXB（Java Architecture for XML Binding) 是一个业界的标准，是一项根据 XML Schema 产生Java类的技术 \n \n \n jaxp sun公司开发，直接存在于JDK中 \n https://github.com/javolution \n https://github.com/sparklemotion/nokogiri \n https://github.com/dom4j/dom4j \n https://github.com/jhy/jsoup \n https://github.com/openjax \n https://github.com/FasterXML/woodstox \n https://github.com/hunterhacker/jdom \n https://github.com/x-stream/xstream \n https://github.com/castor-data-binding \n \n https://castor.exolab.org/xml-framework.html \n https://github.com/codehaus/castor \n \n \n 爬虫  https://github.com/bonigarcia/webdrivermanager \n \n 推荐一些优秀的开源Java爬虫项目 \n \n \n https://github.com/Ardesco/Selenium-Maven-Template \n https://github.com/fanyong920/jvppeteer \n https://github.com/kklisura/chrome-devtools-java-client \n https://github.com/assertthat/selenium-shutterbug \n https://github.com/code4craft/webmagic \n https://github.com/internetarchive/heritrix3 \n https://github.com/yasserg/crawler4j \n https://github.com/apache/nutch \n https://github.com/xtuhcy/gecco \n https://gitee.com/ssssssss-team/spider-flow \n https://github.com/CrawlScript/WebCollector \n https://gitee.com/l-weiwei/Spiderman2 \n https://gitee.com/flashsword20/webmagic \n https://github.com/zhegexiaohuozi/SeimiCrawler \n https://github.com/3breadt/dd-plist \n html  https://github.com/HtmlUnit/htmlunit \n \n https://sourceforge.net/projects/htmlunit \n \n \n \n \n JSON-P  https://github.com/eclipse-ee4j/jsonp \n JSON-B  https://github.com/jakartaee/jsonb-api \n JSON库基准测试 https://github.com/fabienrenaud/java-json-benchmark \n https://github.com/creek-service/json-schema-validation-comparison \n https://github.com/networknt/json-schema-validator \n https://github.com/victools/jsonschema-generator \n \n \n https://github.com/cliftonlabs/json-simple \n \n https://github.com/fangyidong/json-simple \n \n \n https://github.com/eclipse-ee4j/yasson \n https://github.com/apache/johnzon \n https://github.com/FasterXML/jackson \n https://github.com/stleary/JSON-java \n https://github.com/kordamp/json-lib \n \n https://sourceforge.net/projects/json-lib \n \n \n https://github.com/google/gson \n \n https://github.com/julman99/gson-fire \n \n \n https://github.com/alibaba/fastjson \n \n https://github.com/alibaba/fastjson2 \n \n \n https://github.com/everit-org/json-schema \n https://github.com/netplex/json-smart-v2 \n https://github.com/java-json-tools/json-schema-validator \n https://github.com/square/moshi \n 使用XPath语法取值  https://github.com/json-path/JsonPath \n \n 数据拷贝 \n \n https://github.com/topics/mapping \n https://github.com/topics/bean-mapping \n https://github.com/topics/javabeans \n \n \n JMH基准测试  https://github.com/arey/java-object-mapper-benchmark \n \n \n Spring Beanutils \n https://github.com/mapstruct \n Apache BeanUtils  https://github.com/apache/commons-beanutils \n 深拷贝  https://github.com/orika-mapper/orika \n https://github.com/DozerMapper/dozer \n \n https://github.com/yangtu222/BeanUtils \n \n \n https://github.com/kostaskougios/cloning \n \n https://github.com/chadlwilson/cloning \n https://github.com/aem-design/cloning \n \n \n https://github.com/sugar-cubes/sugar-cubes-cloner \n https://github.com/modelmapper/modelmapper \n https://github.com/HotelsDotCom/bull \n cglib的BeanCopier \n https://github.com/remondis-it/remap \n https://github.com/roookeee/datus \n https://github.com/xebia-france/selma \n https://github.com/jmapper-framework/jmapper-core \n \n Schedule \n \n https://github.com/topics/schedule \n https://github.com/topics/scheduler \n https://github.com/topics/scheduled-jobs \n https://github.com/topics/job \n https://github.com/topics/cron \n https://github.com/topics/time \n \n \n https://github.com/apache/dolphinscheduler \n https://github.com/attemper/attemper \n https://github.com/azkaban/azkaban \n https://github.com/apache/airflow \n \n https://github.com/astronomer \n https://github.com/teamclairvoyant \n \n \n https://github.com/quartz-scheduler/quartz \n \n quartz-scheduler建表SQL \n 分布式任务调度系统(Quartz动态管理集群部署) \n \n \n https://github.com/jobrunr/jobrunr \n https://github.com/vipshop/Saturn \n https://github.com/ltsopensource/light-task-scheduler \n https://github.com/xuxueli/xxl-job \n https://github.com/lukas-krecan/ShedLock \n https://github.com/Netflix/Fenzo \n https://github.com/PowerJob/PowerJob \n https://github.com/HubSpot/Singularity \n https://github.com/siaorg/sia-task \n https://github.com/nmyphp/tbschedule \n https://github.com/TimefoldAI \n \n \n 时间轮（RingBufferWheel） \n 无锁环形缓冲RingBuffer的原理及Java实现 \n 关于动态定时任务的解决方案 \n \n 地区数据 \n \n https://github.com/topics/area \n \n \n https://github.com/modood/Administrative-divisions-of-China \n https://github.com/eduosi/district \n https://github.com/wecatch/china_regions \n https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov \n https://github.com/adyliu/china_area \n \n 文档 \n \n https://github.com/springfox/springfox \n https://github.com/springwolf/springwolf-core \n https://github.com/topics/swagger-ui \n \n https://github.com/swagger-api/swagger-ui \n https://github.com/SpringForAll/spring-boot-starter-swagger \n https://github.com/Swagger2Markup/swagger2markup \n https://github.com/caspar-chen/swagger-ui-layer \n knife4j  https://github.com/xiaoymin/swagger-bootstrap-ui \n \n https://gitee.com/xiaoym/knife4j \n \n \n https://github.com/chfree/think-swagger-ui-vuele \n https://github.com/MaxxtonGroup/swagger2markup \n \n \n https://github.com/maxcellent/javadoc.io \n \n https://www.javadoc.io \n \n \n https://github.com/spring-projects/spring-restdocs \n \n https://github.com/ScaCap/spring-auto-restdocs \n \n \n https://github.com/YeDaxia/JApiDocs \n https://github.com/talsma-ict/umldoclet \n 资源读取  https://github.com/hosuaby/inject-resources \n \n 测试/mock/faker \n \n https://github.com/topics/mock \n https://github.com/topics/mock-data \n https://github.com/topics/testing \n https://github.com/topics/unittesting \n https://github.com/topics/fake-data \n https://github.com/topics/dataset \n https://github.com/topics/data-generation \n \n \n 所谓的mock就是创建一个类的虚假的对象，以达到expect-run-verify （期望-运行-验证）： \n \n 验证这个对象的某些方法的调用情况，调用了多少次，参数是什么等等; \n 指定这个对象的某些方法的行为，返回特定的值，或者是执行特定的动作 \n \n \n \n https://github.com/junit-team \n \n https://sourceforge.net/projects/dbunit \n https://github.com/piotrturski/zohhak \n \n \n https://github.com/gatling/gatling \n https://github.com/jqwik-team \n https://github.com/serenity-bdd \n https://github.com/easymock \n https://github.com/powermock/powermock \n https://github.com/mockito \n https://github.com/jmock-developers \n https://github.com/jmockit \n https://github.com/houbb/junitperf \n https://github.com/testcontainers \n \n https://github.com/steadybit/testcontainers \n \n \n https://github.com/testsigmahq \n https://github.com/GraphWalker \n https://github.com/dreamhead/moco \n https://github.com/spockframework \n https://github.com/jqno/equalsverifier \n https://github.com/cbeust/testng \n https://github.com/google/truth \n https://github.com/arquillian \n https://github.com/awaitility/awaitility \n https://github.com/TNG/ArchUnit \n https://github.com/jumper2014/fast-test \n 比较两个SQL结果  https://github.com/Accenture/DBTestCompare \n 生成测试数据  https://github.com/jsonzou/jmockdata \n https://github.com/szpak/mockito-java8 \n https://github.com/DiUS/java-faker \n https://github.com/j-easy/easy-random \n https://github.com/Devskiller/jfairy \n https://github.com/yindz/common-random \n https://github.com/binarywang/java-testdata-generator \n https://github.com/Double-O-Seven/stubr \n https://github.com/autonomx \n https://github.com/dbunit/dbunit-mirror \n https://github.com/datafaker-net/datafaker \n https://github.com/instancio/instancio \n https://github.com/Terracotta-OSS/angela \n https://github.com/rest-assured/rest-assured \n https://github.com/selenide/selenide \n https://github.com/intuit/karate \n https://github.com/kevin-wang001/mockj \n https://github.com/mtedone/podam \n https://gitlab.com/gitlab-org/security-products/analyzers/fuzzers \n https://sourceforge.net/projects/unitils \n \n https://sourceforge.net/projects/dbmaintain \n \n \n \n \n https://github.com/mryingjie/common-insert \n 框架 \n \n https://github.com/topics/nio \n https://github.com/topics/java-nio \n Web框架  https://github.com/perwendel/spark \n https://github.com/topics/shiro \n \n https://github.com/johntostring/spring-boot-shiro \n https://github.com/YuxingXie/shiro \n https://github.com/waylau/apache-shiro-1.2.x-reference \n \n \n https://github.com/supertokens/supertokens-core \n https://github.com/resteasy \n https://github.com/vaadin \n https://github.com/allwefantasy/ServiceFramework \n https://github.com/javalin \n https://github.com/actframework \n https://github.com/restlet \n JSF  https://github.com/omnifaces \n https://github.com/ButterFaces \n https://github.com/primefaces \n 云原生框架  https://github.com/quarkusio/quarkus \n \n https://github.com/quarkiverse \n \n \n https://github.com/piranhacloud \n 全堆栈框架  https://github.com/micronaut-projects \n https://github.com/ClouGence/hasor \n https://github.com/minbox-projects \n \n https://gitee.com/minbox-projects \n \n \n https://github.com/microprofile \n \n https://microprofile.io \n \n \n https://github.com/OpenLiberty \n \n 业务流/工作流/BPMN/BPM/BPMS/DMN/CMMN/BRMS/BRE \n \n https://www.omg.org/spec/BPMN \n \n https://www.bpmn.org \n https://github.com/bpmn-miwg/bpmn-miwg-tools \n \n \n https://www.iso.org/standard/62652.html \n https://www.bpmnmodeler.com/workflow \n \n \n https://github.com/kiegroup/jbpm \n \n https://github.com/kiegroup/droolsjbpm-integration \n \n \n jBPM分支  https://github.com/Activiti/Activiti \n \n https://github.com/henryyan/activiti-in-action-codes \n https://github.com/shenzhanwang/Spring-activiti \n \n \n Activiti5分支  https://github.com/camunda/camunda-bpm-platform \n \n https://github.com/camunda-community-hub \n https://github.com/camunda-consulting \n https://github.com/k-rks/camunda-bpm-platform \n https://github.com/dsunaric/vanilla-converter \n https://github.com/opentmf/camunda7-bpmn-sync-service \n https://github.com/AOT-Technologies \n https://github.com/holunda-io/c7 \n \n \n https://github.com/vanillabp \n Camunda7分支  https://github.com/operaton/operaton \n Activiti6分支  https://github.com/flowable \n \n https://github.com/KonBAI-Q/RuoYi-Flowable-Plus \n \n \n https://github.com/bonitasoft/bonita-engine \n https://github.com/NitorCreations/nflow \n https://github.com/nekinci/flowd \n https://github.com/bashizip/abada-engine \n https://github.com/datasharingframework/dsf \n https://gitee.com/opencc/JFlow \n \n https://vue3.ccbpm.cn/#/Middle \n \n \n https://github.com/mrtylerzhou/AntFlow-activiti \n \n https://gitee.com/tylerzhou/Antflow \n \n http://antflow.top/admin \n \n \n https://gitee.com/ldhnet/AntFlow-Designer \n \n \n https://github.com/StavinLi/Workflow \n \n https://github.com/StavinLi/Workflow-Vue3 \n https://github.com/mos1128/workflow \n \n \n https://github.com/L1yp/van-app \n \n https://github.com/L1yp/van \n https://admin.l1yp.com \n \n \n https://github.com/aizuda/flowlong \n https://github.com/risesoft-y9/WorkFlow-Engine \n \n https://demo.youshengyun.com/itemAdmin/processModelNew \n \n \n https://github.com/didi/turbo \n \n https://github.com/didi/LogicFlow \n https://github.com/Logic-Flow/turbo-client \n \n \n https://github.com/alibaba/compileflow \n https://github.com/youseries/uflo \n 工作流  https://github.com/imixs/imixs-workflow \n https://github.com/snakerflow \n \n https://github.com/snakerflow-starter \n \n \n https://github.com/ailohq/osworkflow \n https://github.com/copper-engine/copper-engine \n https://github.com/danielgerlag/jworkflow \n 规则引擎  https://github.com/j-easy \n \n Java规则引擎 Easy Rules \n \n \n https://github.com/openl-tablets/openl-tablets \n https://github.com/killme2008/aviatorscript \n \n Aviator—Java表达式求值引擎的使用 \n \n \n https://github.com/apache/incubator-kie-optaplanner \n \n OptaPlanner - 入门介绍 \n 【OptaPlanner教程1】OptaPlanner介绍 \n \n \n https://github.com/kiegroup/drools \n \n https://github.com/apache/incubator-kie-drools \n https://github.com/apache/incubator-kie-kogito-runtimes \n https://github.com/kiegroup/optaplanner \n \n \n https://github.com/mvel/mvel \n https://github.com/alibaba/QLExpress \n https://github.com/zjn-zjn/ice \n https://github.com/youseries/urule \n https://github.com/aalansehaiyang/risk-talk \n https://github.com/deonwu/ik-expression \n \n \n 建模  https://github.com/imixs/open-bpmn \n DMN FEEL解析器  https://github.com/nikku/feelin \n 复杂事件处理 (CEP - Complex Event Processing) 事件流  https://github.com/espertechinc/esper \n 状态机  https://gitlab.com/erasmusmc-public-health/parallelstateless4j \n https://github.com/stateless4j/stateless4j \n 前端  https://github.com/bpmn-io \n \n https://github.com/LinDaiDai/bpmn-chinese-document \n https://github.com/miyuesc/bpmn-js-i18n-zh \n https://github.com/LiaPig/vue-bpmn-demo2 \n \n \n https://gitee.com/willianfu/jw-workflow-engine \n \n https://github.com/willianfu/wflow \n \n \n https://github.com/clearself/bpmn-nest-fe \n \n https://nest.flypa.cn/bpmn \n https://nest.flypa.cn/example/workFlow \n \n \n https://github.com/PL-FE/bpmn-camunda \n https://github.com/evanyangg/vue-bpmn-modeler \n https://gitee.com/wang-baohai/eal-pm-web \n \n 响应式/反应式（reactive/Reactor）/事件驱动 \n \n 反应式（具有非阻塞背压的异步数据流）编程规范，已集成到Java9 API中Flow类 \n \n \n 规范  https://github.com/reactive-streams \n \n 宣言  https://github.com/reactivemanifesto \n 原则  https://github.com/reactivefoundation/reactiveprinciples \n https://github.com/rsocket \n \n https://github.com/making/rsc \n \n \n 反应式关系数据库连接  https://github.com/r2dbc \n https://github.com/aol/cyclops \n \n \n https://github.com/ReactiveX \n \n https://cn.rx.js.org \n \n \n https://github.com/reactor \n \n https://github.com/get-set \n \n \n https://github.com/eclipse-vertx/vert.x \n \n https://github.com/vert-x3 \n https://github.com/vertx-web-site \n http://vertx.io \n https://appdev.openshift.io/docs/vertx-runtime.html \n 开发者指南  https://github.com/vertxfun/vertx-guide-for-java-devs-cn \n https://github.com/VertxChina/vertx-translation-chinese \n https://github.com/vertx-china \n https://github.com/wjw465150/Vert.x-Core-Manual \n https://github.com/wjw465150/Vert.x-in-Action-ChineseVersion \n \n \n https://github.com/netty/netty \n \n https://github.com/sanshengshui/netty-learning-example \n https://github.com/Childe-Mu/bio-nio-aio-netty-notes \n \n \n https://github.com/Atmosphere \n https://github.com/tywo45/t-io \n https://github.com/smallrye \n 微服务  https://github.com/helidon-io \n https://github.com/eventuate-tram \n \n https://github.com/eventuate-foundation \n https://github.com/eventuate-local \n https://github.com/eventuate-clients \n https://github.com/eventuate-tram-examples \n https://github.com/eventuate-examples \n https://eventuate.io \n https://microservices.io \n \n \n 模块化代码生成器  https://github.com/jhipster/generator-jhipster \n https://github.com/seed4j/seed4j \n 编排引擎  https://github.com/conductor-oss/conductor \n \n \n https://github.com/kilim/kilim \n \n Kilim工作原理 \n \n \n https://github.com/puniverse/quasar \n \n quasar从原理到代码应用 \n \n \n https://github.com/esoco/coroutines \n https://github.com/offbynull/coroutines \n https://github.com/electronicarts/ea-async \n \n \n Reactive programming 一种技术 各自表述 \n Java 异步编程：从 Future 到 Loom \n 超越传统线程：探索Java Loom协程(纤程/虚拟线程)的无限潜力 \n Dubbo \n \n http://zookeeper.apache.org  下载带 bin 的压缩包，否则需要 maven 安装依赖\n 下载地址镜像 \n https://github.com/apache/dubbo \n https://github.com/apache/dubbo-spring-boot-project \n https://github.com/apache/dubbo-admin \n \n \n 官网 2.7.0 及以上由Apache（org.apache.dubbo）维护，旧版本还是由阿里巴巴团队（com.alibaba.dubbo）维护 \n \n \n dubbo客户端版本选择 \n Dubbo 一篇文章就够了：从入门到实战 \n Dubbo版本升级 \n 干货 | 聊聊携程升级Dubbo的踩坑历程 \n dubbo2.5.3升级到2.7.3记录 \n dubbo2.5.3升级到2.7.3 \n dubbox升级至apache-dubbo-2.7.2的兼容方案 \n springboot整合dubbo2.7.x版本 \n dubbo2.7.5整合spirngMVC入门demo（Apache） \n \n",createdTime:1761814324e3},{title:"SPI",frontmatter:{description:"https://github.com/Enaium/BullPlugin\nspringboot插件式开发框架 https://gitee.com/starblues/springboot-plugin-framework-parent",meta:[{name:"image",content:"https://images.gitbook.cn/b15400e0-69bd-11eb-8f82-1d786eda1f74"},{name:"twitter:title",content:"SPI"},{name:"twitter:description",content:"https://github.com/Enaium/BullPlugin\nspringboot插件式开发框架 https://gitee.com/starblues/springboot-plugin-framework-parent"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://images.gitbook.cn/b15400e0-69bd-11eb-8f82-1d786eda1f74"},{name:"twitter:url",content:"https://bajins.com/Java/SPI.html"},{property:"og:type",content:"article"},{property:"og:title",content:"SPI"},{property:"og:description",content:"https://github.com/Enaium/BullPlugin\nspringboot插件式开发框架 https://gitee.com/starblues/springboot-plugin-framework-parent"},{property:"og:image",content:"https://images.gitbook.cn/b15400e0-69bd-11eb-8f82-1d786eda1f74"},{property:"og:url",content:"https://bajins.com/Java/SPI.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"SPI"},{itemprop:"description",content:"https://github.com/Enaium/BullPlugin\nspringboot插件式开发框架 https://gitee.com/starblues/springboot-plugin-framework-parent"},{itemprop:"image",content:"https://images.gitbook.cn/b15400e0-69bd-11eb-8f82-1d786eda1f74"}]},regularPath:"/Java/SPI.html",relativePath:"Java/SPI.md",key:"v-b755f34a",path:"/Java/SPI.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"什么是 SPI？",slug:"什么是-spi"},{level:2,title:"JDK 中的 SPI",slug:"jdk-中的-spi"},{level:3,title:"实例以及测试",slug:"实例以及测试"},{level:3,title:"源码分析",slug:"源码分析"},{level:2,title:"SPI 如何实现代码的解耦？",slug:"spi-如何实现代码的解耦"},{level:2,title:"SPI 适合什么场景下使用？",slug:"spi-适合什么场景下使用"},{level:2,title:"使用 SPI 的优势和劣势在哪里？",slug:"使用-spi-的优势和劣势在哪里"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' SPI \n Flag 什么是 SPI？ JDK 中的 SPI 实例以及测试 源码分析 SPI 如何实现代码的解耦？ SPI 适合什么场景下使用？ 使用 SPI 的优势和劣势在哪里？ \n Flag \n \n https://github.com/McModLauncher/modlauncher \n https://github.com/SpongePowered/Mixin \n https://github.com/FabricMC \n \n Fabric 与Mixin 教程 \n \n \n https://github.com/MinecraftForge/MinecraftForge \n https://github.com/Chocohead/OptiFabric \n \n https://github.com/sp614x/optifine \n \n \n https://github.com/Mojang/brigadier \n https://github.com/osgi \n \n OSGI（Open Service Gateway Initiative），是一个由OSGi Alliance发起的以Java为技术平台的动态模块化规范 \n https://github.com/bndtools/bnd \n \n \n https://github.com/eclipse-equinox \n Jigsaw Java9 modules \n 观察者设计模式  Java设计模式之观察者模式 \n Spring 实现 ApplicationContextAware 接口获取到指定接口的所有实现 \n \n \n https://github.com/Enaium/BullPlugin \n springboot插件式开发框架  https://gitee.com/starblues/springboot-plugin-framework-parent \n \n \n 从Java SPI机制实现到Dubbo SPI扩展 \n 从Java SPI机制实现到Spring Boot SPI扩展 \n AVA SPI机制详解 \n 深入理解SPI机制 \n \n 热插拔/热加载/热部署/热更新/HotSwap \n \n https://www.jrebel.com/products/jrebel/download \n \n http://jrebel.cicoding.cn \n http://jrebel.cicoding.cn/guid \n \n \n https://github.com/spring-projects/spring-loaded \n https://github.com/HotswapProjects \n https://github.com/dcevm \n \n https://ssw.jku.at/dcevm \n \n \n https://github.com/fakereplace \n https://github.com/jmarranz/relproxy \n https://github.com/cm4j \n \n \n https://github.com/dmitry-zhuravlev/hotswap-agent-intellij-plugin#solution \n 深入探索 Java 热部署 \n java热更新class如何实现？ \n Java的类加载机制及热部署的原理 \n JAVA热部署，通过agent进行代码增量热替换 \n Java 调试技术 JPDA 架构解读 \n 什么是 SPI？ \n SPI 全称为（Service Provider Interface），字面意思为服务提供者接口，是 JDK 内置的一种服务提供发现机制 。\n这一机制为很多框架的扩展提供了可能，比如在 Dubbo、JDBC、Spring Boot 中都使用到了 SPI 机制。\n说白了就是提供给“服务提供厂商”或者“插件开发者”使用的接口 \n SPI 是一种动态发现替换机制，例如我们在学习 Java Web 的时候连接数据库使用的 java.sql.Driver 接口，可以根据不同的驱动，\n连接不同的数据库，如常用的 MySQL 或者 Oracle 数据库,，我们在使用 JDBC 连接数据库的时候首先需要的就是连接驱动： \n Class . forName ( "com.mysql.jdbc.Driver" ) \n \n 加载 MySQL 驱动后，就会 执行其中的静态代码，把 Driver 注册到 DriverManager 中那么通过数据库的 url、用户名、密码，\n我们就可以成功连接到你的 MySQL 数据库并可以进行相应的操作，如果你要更换成 Oracle 数据库，那么就需要更换对应的驱动，\n下面是 JDBC 连接数据库的一个步骤，帮助大家回忆： \n //声明数据库驱动，数据源的 url，用于登录数据库的账户和密码（将其他功能封装成方法的时候方便使用） \n String  driver  =   "数据库驱动名称" ；\n String  url  =   "数据库连接地址" String  user  =   "用来连接数据库的用户名" ；\n String  pwd  =   "用来连接数据库的密码" ；\n //加载数据库驱动   \n Class . forName ( driver ) ; \n //根据 url 创建数据库连接对象 Connection  \n Connection  con  =   DriverManager . getConnection ( url , user , pwd ) ; \n //用数据库连接对象创建 Statement 对象(或 PrepareStatement) \n Statement  s  =  con . createStatement ( ) ; \n //或 \n PrepareStatement  ps  =   con . PrepareStatement ( sql ) ; \n //做数据库的增删改查工作 \n ResultSet  rs  =  ps . executeQuery ( ) ; \n //关闭结果集对象 Resultset，statement 对象，connection 对象， \nrs . close ( ) ; \ns . close ( ) ; \ncon . close ( ) ; \n //各个步骤的异常处理 \n \n 结合上面的代码和下面的图片来简单分析一下。 \n 我们在使用 MySQL 的数据库时，需要导入一个 MySQL 的连接驱动包，打开这个驱动包，你会发现在下图的目录中有一个文件，\n Class.forName(driver)  它会去找到这个 com.mysql.jdbc.Driver 的类，然后用 DriverManager 加载这个类，\n然后再去使用这个类中的方法，例如  con.PrepareStatement(sql);  就是使用的 com.mysql.jdbc.Driver 这个类中的方法，\n同理如果你将驱动换成 Oracle，那么 DriverManager 就会得到 Oracle 的连接对象，那么  con.PrepareStatement(sql); \n调用的就是 Oracle 对应驱动中的方法，也就是说，如果我们将数据库换成 Orale，理论上，上面的操作数据库的代码是不需要变动的，\n只需要更换驱动、url 和账号密码，这部分我们后面都是以配置文件的形式写入，所以很好的将代码和数据库解耦了。 \n 下图是我在网上找到图片： \n \n 如果你还是不能很好的理解，没有关系，接下来，我们就慢慢剖析这个 SPI。 \n JDK 中的 SPI \n 实例以及测试 \n 我们先从 JDK 开始，通过一个很简单的例子来看下它是怎么用的。 \n 这是例子的代码结构： \n \n 首先，我们需要定义一个接口 SPIService。 \n 这个接口只有一个打印的方法： \n public  interfaceSPIService  { \n     voidprint ( ) ; \n } \n \n 然后我们再定义一个实现类，只做打印输出： \n public  classSPIServiceImplimplementsSPIService { \n     publicvoidprint ( ) { \n         System . out . println ( "print.............." ) ; \n     } \n } \n \n 然后我们需要在 resources 下创建文件夹：META-INF/services\n然后在 services 文件夹下创建文件，文件名就是服务接口的全限定类名： \n \n 文件的内容就是该接口的实现类的全限定类名。 \n 文件内容： \n com . spi . service . impl . SPIServiceImpl \n \n 然后我们就可以通过 ServiceLoader.load 方法拿到实现类的实例，并调用它的方法。 \n 我们在启动类中测试： \n package   com . spi ; \n\n import   com . spi . service . SPIService ; \n import   java . util . Iterator ; \n import   java . util . ServiceLoader ; \n\npublicclassSPIApplication { \n     publicstaticvoidmain ( String [ ]  args ) { \n         //加载类 \n         ServiceLoader < SPIService >  load  =   ServiceLoader . load ( SPIService . class ) ; \n         Iterator < SPIService >  iterator  =  load . iterator ( ) ; \n         while   ( iterator . hasNext ( ) ) { \n             //获取类的实例 \n             SPIService  service  =  iterator . next ( ) ; \n            service . print ( ) ; \n         } \n     } \n } \n \n 运行结果： \n 源码分析 \n 首先，我们先来了解下 ServiceLoader，看看它的类结构： \n public  finalclassServiceLoader < S >  implementsIterable < S > { \n     //配置文件的路径privatestaticfinal String PREFIX = "META-INF/services/"; \n     //加载的服务类或接口privatefinal Class<S> service; \n     //已加载的服务类集合private LinkedHashMap<String,S> providers = new LinkedHashMap<>(); \n     //类加载器privatefinal ClassLoader loader; \n     //内部类，真正加载服务类private LazyIterator lookupIterator; \n } \n \n 当我们调用 load 方法时，并没有真正的去加载和查找服务类。而是调用了 ServiceLoader 的构造方法，\n在这里最重要的是实例化了内部类 LazyIterator，ServiceLoader 才是接下来的主角： \n private   ServiceLoader ( Class < S >  svc ,   ClassLoadercl )   { \n     //要加载的接口 \n    service  =   Objects . requireNonNull ( svc ,   "Service interface cannot be null" ) ; \n     //类加载器 \n    loader  =   ( cl  ==   null )   ?   ClassLoader . getSystemClassLoader ( )   :  cl ; \n     //访问控制器 \n    acc  =   ( System . getSecurityManager ( )   !=   null )   ?   AccessController . getContext ( )   :   null ; \n     //先清空 \n    providers . clear ( ) ; \n     //实例化内部类  \n     LazyIterator  lookupIterator  =   new   LazyIterator ( service ,  loader ) ; \n } \n \n 查找实现类和创建实现类的过程，都在 LazyIterator 完成。当我们调用 iterator.hasNext 和 iterator.next 方法的时候，\n实际上调用的都是 LazyIterator 的相应方法： \n public   Iterator < S >   iterator ( )   { \n\n    returnnew  Iterator < S > ( )   { \n\n         publicbooleanhasNext ( ) { \n             return  lookupIterator . hasNext ( ) ; \n         } \n         public   S   next ( ) { \n             return  lookupIterator . next ( ) ; \n         } \n         . . . . . . . \n     } ; \n } \n \n 因此，我们重点关注  lookupIterator.hasNext()  方法，它最终会调用到  hasNextService ，在这里返回实现类名称： \n private  classLazyIteratorimplementsIterator < S > { \n     Class < S >  service ; \n     ClassLoader  loader ; \n     Enumeration < URL >  configs  =   null ; \n     Iterator < String >  pending  =   null ; \n     String  nextName  =   null ;     \n     privatebooleanhasNextService ( ) { \n         // 第二次调用的时候，已经解析完成了，直接返回 \n         if   ( nextName  !=   null )   { \n            returntrue ; \n         } \n         if   ( configs  ==   null )   { \n             // META-INF/services/ 加上接口的全限定类名，就是文件服务类的文件 \n             // META-INF/services/com.viewscenes.netsupervisor.spi.SPIService \n             String  fullName  =   PREFIX   +  service . getName ( ) ; \n             //将文件路径转成 URL 对象 \n            configs  =  loader . getResources ( fullName ) ; \n         } \n         while   ( ( pending  ==   null )   ||   ! pending . hasNext ( ) )   { \n             //解析 URL 文件对象，读取内容，最后返回 \n            pending  =   parse ( service ,  configs . nextElement ( ) ) ; \n         } \n         //拿到第一个实现类的类名 \n        nextName  =  pending . next ( ) ; \n        returntrue ; \n     } \n } \n \n 然后当我们调用  next()  方法的时候，调用到  lookupIterator.nextService ，它通过反射的方式，创建实现类的实例并返回： \n private   S   nextService ( )   { \n     //全限定类名 \n     String  cn  =  nextName ; \n    nextName  =   null ; \n     //创建类的 Class 对象 \n     Class < ? >  c  =   Class . forName ( cn ,   false ,  loader ) ; \n     //通过 newInstance 实例化 \n     S  p  =  service . cast ( c . newInstance ( ) ) ; \n     //放入集合，返回实例 \n    providers . put ( cn ,  p ) ; \n     return  p ;  \n } \n \n 到这为止，已经获取到了类的实例，这就是 SPI 机制的一个内部原理。 \n SPI 如何实现代码的解耦？ \n 其实在前面提到 JDBC 的时候已经大致了解了 SPI 解耦，那么我们就再结合前面的实例，用通俗的语言概述一下吧。 \n 我们可以通过下面这个简单的流程图来进一步理解 SPI 是如何解耦和扩展的。 \n 首先需要定义一个标准化的服务接口，例如上面的实例 SPIService，里面有一些服务例如 print，然后实现这个接口，\n我们暂定它为实现类 A（SPIServiceImpl），它实现的 print 方法里面可以自定义实现内容，如果现在要求说要再增加一种打印的方式，\n但是保留之前的 print 的打印方式，那么我们就可以再定义一个实现类 B 去实现这个标准化的服务接口，如果后面再增加新的打印方式也一样，\n直接加，或者某一种不需要了，直接去掉即可。 \n 那么由此可见，它是将标准的服务接口与服务提供方实现类进行解耦的，我们可以思考一下，它进行扩展是非常方便的，只需要实现标准服务接口，\n然后在  META-INF/services  对应的文件中添加该实现类的全限定类名，然后在实现类的方法中填充实现就可以了。 \n 但如果你要是想修改标准服务接口的方法定义，那么就比较麻烦了，只要是实现这个接口的类都需要改，也就是软件设计原则提到的 开闭原则 ，\n因此我们需要一开始就设计好标准服务接口的内容，保证软件系统的稳定性和延续性。 \n SPI 适合什么场景下使用？ \n 比较常见的例子： \n \n 数据库驱动加载接口实现类的加载：JDBC 加载不同类型数据库的驱动。 \n 日志门面接口实现类加载：SLF4J 加载不同提供商的日志实现类。 \n Spring：Spring 中大量使用了 SPI，比如：对 servlet3.0 规范对 ServletContainerInitializer 的实现、\n自动类型转换 Type Conversion SPI（Converter SPI、Formatter SPI）等。 \n Spring Boot 的自动配置：Spring Boot 的 Web 应用都能正常运行，Spring Boot 正是依靠自动配置来完成，\n自动配置就是依靠 SpringFactoriesLoader 来加载的。 \n Dubbo：Dubbo 中也大量使用 SPI 的方式实现框架的扩展，不过它对 Java 提供的原生 SPI 做了封装，允许用户扩展实现 Filter 接口。 \n \n 概括地说，适用于： 调用者根据实际使用需要，启用、扩展、或者替换方案（框架）的实现策略 。 \n 很多地方写的是替换框架，但是我在这里改成了方案，更方便理解（如果这里有一些争议的话，欢迎大家在评论区留言），\n实际上我们可以把每一个实现类都叫做一种方案，例如我们前面提到的 SPIService 的实现类 A 和 B，就是对 print 这个方法的两种方案，\nSLF4J 加载不同提供商的日志实现类实际上也是加载不同的日志方案，因此实际上如果我们想在自己的项目中运用到 SPI，\n那么它最好的使用就是对某一个事件不同方案的处理，例如给公司员工计算月/年薪资（里面包含了绩效、KPI、考勤、奖金等等），\n公司针对不同的层级或者区域的员工有不同的方案，这个例子的事件就是薪资计算，不管你什么类型什么等级的员工，\n计算薪资的总和都是这几项加起来的结果，不同的是每一项的根据不同的实现方案计算内容有一定的差别。 \n 使用 SPI 的优势和劣势在哪里？ \n 优点： \n 不用多说，优势就是实现解耦，使得第三方服务模块的装配控制的逻辑与调用者的业务代码分离，而不是耦合在一起。\n应用程序可以根据实际业务情况启用框架扩展或替换框架组件，或者调整不同的方案。 满足软件设计的开闭原则 。 \n 缺点： \n \n \n 虽然 ServiceLoader 也算是使用的延迟加载， 但是基本只能通过遍历全部获取 ，也就是接口的实现类全部加载并实例化一遍，\n如果你并不想用某些实现类，它也被加载并实例化了，这就造成了浪费。 \n \n \n 获取某个实现类的方式不够灵活 ，只能通过 Iterator 形式获取，不能根据某个参数来获取对应的实现类。 \n \n \n 一般我们在实际项目开发的时候，会使用枚举来确定不同方案，然后每个方案都有一个 getSchemeId 的方法用于返回这个方案对应的 ID，\n通过这个 id 去筛选当前需要的方案。 \n 小例子： \n //动态加载 SPIService 的所有方案实现类 \n List < SPIService >  services  =   SpiServiceLoader . getService ( SPIService . class ) ; \n for   ( SPIService  service :  services )   { \n     //获取当前这个人对应方案的实现类 \n     if   ( Objects . equals ( service . getSchemeId ( ) ,  person . getSchemeId ( ) ) )   { \n         //使用这个方案的实现类 \n        service . print ( ) ; \n         break ; \n     } \n } \n \n 这个里面 SpiServiceLoader 是自己封装的 SPI 加载器，相当于把前面实例中的 main 中的 ServiceLoader 和 Iterator 封装起来了。 \n \n 多个并发多线程使用 ServiceLoader 类的实例是不安全的。  实际上这个可以解决，我们在第 2 点的基础上修改。 \n \n 自己封装的 SpiServiceLoader 在使用 getService 中会调用 ServiceLoader，那么我们给 getService 方法加上锁  synchronized  就可以解决并发的问题了。 \n 这里至于为什么没有放 SpiServiceLoader，是因为这个代码是公司的代码，不能随便用来写文章，所以，这里提供了思路，实现就没有那么难了。 \n 以上就是我对 SPI 机制的理解和总结，实际上真实的项目中远比这个要复杂。 \n',createdTime:1761814324e3},{title:"Java",frontmatter:{description:"Java 是一种简洁、面向对象、分布式、解释型、健壮、安全、架构中立、可移植、高性能、多线程的动态编程语言。\n> 阅读比编写更重要；简单性很重要；Java 应该是一种在任何地方都有相同含义的语言。",meta:[{name:"twitter:title",content:"Java"},{name:"twitter:description",content:"Java 是一种简洁、面向对象、分布式、解释型、健壮、安全、架构中立、可移植、高性能、多线程的动态编程语言。\n> 阅读比编写更重要；简单性很重要；Java 应该是一种在任何地方都有相同含义的语言。"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Java/"},{property:"og:type",content:"article"},{property:"og:title",content:"Java"},{property:"og:description",content:"Java 是一种简洁、面向对象、分布式、解释型、健壮、安全、架构中立、可移植、高性能、多线程的动态编程语言。\n> 阅读比编写更重要；简单性很重要；Java 应该是一种在任何地方都有相同含义的语言。"},{property:"og:url",content:"https://bajins.com/Java/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Java"},{itemprop:"description",content:"Java 是一种简洁、面向对象、分布式、解释型、健壮、安全、架构中立、可移植、高性能、多线程的动态编程语言。\n> 阅读比编写更重要；简单性很重要；Java 应该是一种在任何地方都有相同含义的语言。"}]},regularPath:"/Java/",relativePath:"Java/README.md",key:"v-fa68ae44",path:"/Java/",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"学习",slug:"学习"},{level:2,title:"示例项目",slug:"示例项目"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Java \n Flag 学习 示例项目 \n Flag \n \n Java 是一种简洁、面向对象、分布式、解释型、健壮、安全、架构中立、可移植、高性能、多线程的动态编程语言。\n阅读比编写更重要；简单性很重要；Java 应该是一种在任何地方都有相同含义的语言。 \n \n \n https://github.com/topics/java \n https://github.com/jcp-org \n https://docs.oracle.com \n \n https://www.oracle.com/cn/java/technologies \n https://www.oracle.com/cn/java/technologies/java-se-api-doc.html \n https://docs.oracle.com/javase/8/index.html \n https://docs.oracle.com/javase/8/docs \n https://docs.oracle.com/javase/7/docs \n JavaBeans 规范 \n https://dev.java \n https://learn.java \n \n \n https://github.com/eclipse-ee4j \n \n https://projects.eclipse.org/list-of-projects \n https://github.com/eclipse-ditto \n \n \n https://github.com/jakartaee \n \n https://github.com/javaee \n https://projects.eclipse.org/jakartaee \n https://jakarta.ee/zh/specifications \n https://github.com/OmniFish-EE \n \n \n \n \n https://github.com/javaee-samples \n 生成代码  https://github.com/moshowgame/SpringBootCodeGenerator \n Java Web安全  https://github.com/javaweb-sec/javaweb-sec \n https://github.com/su18 \n https://github.com/phith0n \n https://github.com/vulhub \n 开源教程、开发者工具、编程网站和技术资源 \n \n \n Michael Redlich-Java近期新闻 \n Java版本比较 \n Java 9-16 新增语法元素一览 \n Java 速查手册 \n javaEE和javaweb的区别？ \n 学习 \n \n 技术集合归档 \n Java 全栈知识体系  https://www.pdai.tech \n http://tutorials.jenkov.com \n https://javadox.com \n https://javadoc.io \n https://github.com/Snailclimb/awesome-java \n https://github.com/search?q=Interview \n \n \n Java新功能  https://github.com/wesleyegberto/java-new-features \n \n https://github.com/rokon12/project-loom-slides-and-demo-code \n https://github.com/nipafx \n \n \n https://github.com/hepengju/java-new-features \n https://github.com/GreyZeng/java_new_features \n https://github.com/javamultiplex/java-new-features \n Java8函数式编程  https://github.com/glen9527/Java-8-Lambdas-zh \n https://www.manning.com/books/java-8-in-action \n https://github.com/CyC2018/CS-Notes \n https://github.com/hollischuang/toBeTopJavaer \n https://github.com/bethrobson/Head-First-Java \n 在线课程  https://codegym.cc/zh \n 多个学习项目组织  https://github.com/doocs \n https://github.com/quanke \n https://github.com/Snailclimb/JavaGuide \n https://github.com/crossoverJie/JCSprout \n 《Java编程思想》 第5版   https://github.com/LingCoder/OnJava8 \n https://github.com/Syasuker/OnJava8-zh \n https://github.com/Knn120/OnJava8-PDF \n Java Tutorials  https://github.com/pingfangx/java-tutorials-in-chinese \n https://github.com/jast90/The-Java-Tutorials-CN \n https://github.com/WebJournal/journaldev \n https://github.com/eugenp/tutorials \n https://jenkov.com \n Java Servlet 3.1 规范  https://github.com/waylau/servlet-3.1-specification \n https://github.com/flance/java-servlet-specification-4.0 \n Effective Java  https://github.com/search?q=effective-java \n \n https://github.com/sjsdfg/effective-java-3rd-chinese \n https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual \n https://gitee.com/liuzidong/effctive-java-3rd-chinese \n https://gitee.com/lin-mt/effective-java-third-edition \n https://github.com/Wasabi1234/EffectiveJava3-zh \n \n \n 精通 Java 并发编程（第2 版 ）  https://github.com/Jueee/ConcurrencyWithJava \n 设计原理和模式中的并行编程  http://gee.cs.oswego.edu/dl/cpj/index.html \n Java 9 模块化开发  https://github.com/ledudu/Java-9-Modularity-zh \n https://github.com/hansonwang99/JavaCollection \n 后端技术总结  https://github.com/NotFound9/interviewGuide \n https://github.com/RedSpider1/concurrent \n https://github.com/javagrowing/JGrowing \n https://github.com/dunwu/java-tutorial \n https://github.com/zszdevelop/java-study-gitbook \n 面试题  https://gitee.com/souyunku/DevBooks \n https://github.com/Tyson0314/Java-learning \n https://github.com/xbox1994/Java-Interview \n Java服务端知识技能图谱  https://github.com/caison/java-knowledge-mind-map \n https://yun.itheima.com/subject/javamap/index.html \n JAVA书籍存放库  https://github.com/singgel/JAVA \n https://github.com/waylau/essential-java \n https://github.com/qinxuewu/docs \n https://github.com/scalad/Note \n https://github.com/fuzhengwei/CodeGuide \n 设计模式  https://github.com/fuzhengwei/itstack-demo-design \n https://github.com/stalary/Source-code-analysis \n https://github.com/nibnait/algorithms \n https://github.com/Childe-Mu/java_notes \n https://github.com/whx123/JavaHome \n https://developer.ibm.com/zh/technologies/java/gettingstarted \n 深入理解Java函数式编程和Streams API  https://github.com/CarpenterLee/JavaLambdaInternals \n https://github.com/yamw/CodingRecord \n https://github.com/ZXiangC/my-blogs \n https://github.com/huge0612/jdk1.8-book \n https://github.com/ZZX9599/JDK8NewFeatures \n https://github.com/weitw/Notes \n https://github.com/zhangtianyi0110/CodeNote \n https://github.com/k-saihua/clicknium-docs-test \n https://github.com/weitw/docsify-sample \n https://github.com/chanhuiwumeng/Java-Class \n https://github.com/kookwe/leyous \n https://github.com/kun213/JavaNotes \n https://github.com/elastic-work/codedoc \n https://github.com/deyou123/docsify-notes \n https://github.com/ninghuang00/githubio \n https://github.com/DuHouAn/Java \n https://github.com/innnky/netlify \n https://github.com/binghe001/BingheGuide \n Java源码分析【源码笔记】  https://github.com/yuanmabiji/Java-SourceCode-Blogs \n \n https://github.com/yuanmabiji/jdk1.8-sourcecode-analysis \n \n \n http://github.com/CarpenterLee/JavaLambdaInternals \n https://github.com/itwanger/javabooks \n https://github.com/crisxuan/bestJavaer \n https://github.com/fenixsoft/awesome-fenix \n https://github.com/AobingJava/JavaFamily \n JDK源码阅读笔记  https://github.com/kangjianwei/LearningJDK \n https://github.com/seaswalker/jdk-sourcecode-analysis \n https://github.com/wupeixuan/JDKSourceCode1.8 \n JDK8 实现 JVM  https://github.com/guxingke/mini-jvm \n https://github.com/diguage/jdk-source-analysis \n Java 虚拟机规范（第11版）  https://github.com/waylau/java-virtual-machine-specification \n https://github.com/PansonPanson/Java-Notes \n https://github.com/xjjdog/javaok \n https://github.com/dunwu/javacore \n https://github.com/wuxiaobo000111/Java--apollo \n https://github.com/nivelle/java-all \n https://github.com/siriuscc/Java-Note \n https://github.com/niumoo/JavaNotes \n https://github.com/kosoraYintai/TreeMapSourceAnalysis \n https://github.com/wx-chevalier/ProgrammingLanguage-Series \n https://github.com/DreamCats/Dc-Notes \n https://github.com/loveincode/notes \n https://github.com/c-rainstorm/blog \n https://github.com/dahuoyzs/javapdf \n https://github.com/Jstarfish/JavaKeeper \n https://github.com/Byron4j/CookBook \n https://github.com/basicExploration/books \n https://github.com/fenixsoft/jvm_book \n https://github.com/aCoder2013/blog \n https://github.com/guang19/framework-learning \n Java多线程编程核心技术  https://github.com/loveincode/java-multi-thread-programming \n 项目实践讲解  https://github.com/RudeCrab/rude-java \n Java OpenTelemetry测试指南  https://github.com/chenmudu/open-telemetry-java-guides \n https://github.com/spring2go/staffjoy \n https://github.com/lenve/javaboy-code-samples \n https://github.com/0voice/expert_readed_books \n https://github.com/DreamCats/java-notes \n https://github.com/winterbe/java8-tutorial \n \n Java8简明教程  https://github.com/wizardforcel/modern-java-zh \n \n \n https://github.com/zq99299/java-tutorial \n 常用框架源码赏析  https://github.com/doocs/source-code-hunter \n https://github.com/RichardWarburton/java-8-lambdas-exercises \n https://github.com/ameizi/DevArticles \n https://github.com/bage2014/study \n demo  https://github.com/brucevsked/vskeddemolist \n https://github.com/biezhi/30-seconds-of-java8 \n https://github.com/jufeng98/java-master \n https://github.com/yrojha4ever/JavaStud \n https://github.com/BNYMellon/CodeKatas \n 并发专题  https://github.com/CL0610/Java-concurrency \n https://github.com/itwanger/toBeBetterJavaer \n https://github.com/vgrazi/JavaConcurrentAnimatedReboot \n https://space.bilibili.com/435498550 \n \n \n https://ddkk.com \n 示例项目 \n \n https://gitee.com/renrenio \n \n https://github.com/renrenio \n \n \n https://github.com/nutzam/nutz \n https://github.com/febsteam \n https://github.com/thinkgem/jeesite4 \n https://github.com/hs-web \n https://github.com/erupts/erupt \n https://gitee.com/xiaonuobase \n https://github.com/hiparker/opsli-boot \n https://github.com/dibo-software/diboot \n https://gitee.com/Thinkingcao/projects \n \n \n 后台管理模板  https://github.com/oukingtim/king-admin \n https://gitee.com/naan1993/guns \n https://gitee.com/xiandafu/springboot-plus \n https://gitee.com/baomidou/SpringWind \n https://gitee.com/zhougaojun/KangarooAdmin \n https://github.com/honghuangdc/soybean-admin \n https://github.com/lenve/vhr \n https://github.com/yangzongzhuan/RuoYi-Vue3 \n https://github.com/YunaiV/ruoyi-vue-pro \n https://github.com/yudaocode \n https://github.com/dromara/skyeye \n https://github.com/thinkgem \n https://github.com/soybeanjs/soybean-admin \n https://github.com/yuxintao6/koi-ui \n https://github.com/chuzhixin/vue-admin-better \n https://gitee.com/iBase4J/iBase4J \n https://gitee.com/sunhan521/framework \n https://gitee.com/Morning_/Morning \n https://gitee.com/shuzheng/zheng \n https://gitee.com/eric.xu/BMS \n https://gitee.com/wangzhixuan/spring-shiro-training \n https://gitee.com/willenfoo/center \n https://github.com/fengchangsheng/skeleton \n https://gitee.com/z77z/springboot_mybatisplus \n https://gitee.com/blind/maple \n https://gitee.com/dataact/jeeweb-mybatis \n https://gitee.com/fumiao/youngcms \n https://gitee.com/theodo/jeefast \n https://gitee.com/xiaobingby/bing-upms \n https://gitee.com/jamen/slife \n https://gitee.com/log4j/pig \n https://gitee.com/wanglingxiao/mysiteforme \n https://github.com/watchdog-framework/watchdog-framework \n https://gitee.com/iartisan/iartisan-admin-template \n https://gitee.com/qiqiim/qiqiim-server \n https://github.com/Exrick/x-boot \n https://gitee.com/stylefeng/guns \n https://github.com/macrozheng/mall-swarm \n https://github.com/macrozheng/mall \n https://gitee.com/ibyte/M-Pass \n https://github.com/techa03/goodsKill \n https://github.com/zycgit/hasor \n https://github.com/enilu/web-flash \n https://github.com/WANG-Fan0912/SnowAdmin \n https://github.com/Zheng-Changfu/naive-ui-pro \n 商城  https://github.com/crmeb/crmeb_java \n 行为验证码  https://github.com/anji-plus/captcha \n EL-ADMIN 后台管理系统  https://github.com/elunez/eladmin \n SaaS多租户微服务开发平台  https://github.com/chillzhuang/SpringBlade \n 基于springboot的一款纯净脚手架  https://github.com/fuce1314/Springboot_v2 \n https://gitee.com/lovetime/WeAdmin \n https://github.com/ssssssss-team/magic-api \n 停车场管理  https://github.com/981011512/-- \n https://github.com/smart-cloud/smart-cloud \n https://github.com/shuzheng/zheng \n 文件管理  https://github.com/kekingcn/kkFileView \n \n Windows  http://kkfileview.keking.cn/kkFileView-4.1.0.zip \n Linux  http://kkfileview.keking.cn/kkFileView-4.1.0.tar.gz \n Docker  http://kkfileview.keking.cn/kkFileView-4.1.0-docker.tar \n 启动时报错 a process with acceptString ‘socket,host= \n http://view.officeapps.live.com/op/view.aspx?src= \n Office文档在线预览服务器 \n 微软office web apps 服务器搭建之在线文档预览 \n https://github.com/dounine?tab=repositories&q=windows-server \n \n \n 博客  https://github.com/88250/solo \n https://github.com/adlered/bolo-solo \n https://github.com/o2oa/o2oa \n https://github.com/wildfirechat/im-server \n https://github.com/xiweicheng/tms \n https://github.com/KouShenhai/KCloud-Platform-Alibaba \n https://github.com/shiyindaxiaojie/eden-demo-cola \n https://github.com/argouml-tigris-org \n 数据中台  https://github.com/birdLark/LarkMidTable \n 消息推送  https://github.com/ZhongFuCheng3y/austin \n IM  https://gitee.com/howcode/aq-chat-server \n ERP  https://github.com/wimoor-erp/wimoor \n 复刻掘金BBS  https://github.com/shandonghengyudianzi/forum-easy \n \n",createdTime:1761814324e3},{title:"Spring",frontmatter:{description:"是时候给大家介绍 Spring Boot/Cloud 背后豪华的研发团队了",meta:[{name:"image",content:"https://bajins.com/images/spring-web-client.png"},{name:"twitter:title",content:"Spring"},{name:"twitter:description",content:"是时候给大家介绍 Spring Boot/Cloud 背后豪华的研发团队了"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/spring-web-client.png"},{name:"twitter:url",content:"https://bajins.com/Java/Spring.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Spring"},{property:"og:description",content:"是时候给大家介绍 Spring Boot/Cloud 背后豪华的研发团队了"},{property:"og:image",content:"https://bajins.com/images/spring-web-client.png"},{property:"og:url",content:"https://bajins.com/Java/Spring.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Spring"},{itemprop:"description",content:"是时候给大家介绍 Spring Boot/Cloud 背后豪华的研发团队了"},{itemprop:"image",content:"https://bajins.com/images/spring-web-client.png"}]},regularPath:"/Java/Spring.html",relativePath:"Java/Spring.md",key:"v-056a522d",path:"/Java/Spring.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"事务",slug:"事务"},{level:2,title:"依赖注入",slug:"依赖注入"},{level:2,title:"Spring Boot",slug:"spring-boot"},{level:3,title:"默认依赖管理",slug:"默认依赖管理"},{level:3,title:"配置方式",slug:"配置方式"},{level:2,title:"Starters",slug:"starters"},{level:2,title:"Spring Cloud",slug:"spring-cloud"},{level:2,title:"Spring Security",slug:"spring-security"},{level:2,title:"Spring TaskScheduler",slug:"spring-taskscheduler"},{level:2,title:"Spring MVC",slug:"spring-mvc"},{level:2,title:"Spring AOP原理",slug:"spring-aop原理"},{level:2,title:"JDK动态代理:",slug:"jdk动态代理"},{level:2,title:"Cglib",slug:"cglib"},{level:2,title:"Lombok原理",slug:"lombok原理"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Spring \n Flag 事务 依赖注入 Spring Boot 默认依赖管理 配置方式 Starters Spring Cloud Spring Security Spring TaskScheduler Spring MVC Spring AOP原理 JDK动态代理: Cglib Lombok原理 \n Flag \n \n 是时候给大家介绍 Spring Boot/Cloud 背后豪华的研发团队了 \n \n \n https://github.com/topics/spring \n https://github.com/topics/spring-boot \n https://github.com/topics/spring-cloud \n \n \n https://github.com/spring-projects \n \n https://spring.io/projects \n \n \n https://github.com/spring-projects-experimental \n https://github.com/spring-guides \n https://github.com/fmarchioni/masterspringboot \n 启动分析器  https://github.com/linyimin0812/spring-startup-analyzer \n 配置中心对比  https://github.com/hxz393/ConfigCenterComparer \n \n \n https://github.com/wuyouzhuguli/SpringAll \n \n http://www.spring4all.com \n \n \n https://github.com/mingyang66/spring-parent \n https://github.com/xuchengsheng/spring-reading \n Spring源码阅读  https://github.com/seaswalker/spring-analysis \n https://github.com/DerekYRC/mini-spring \n Spring 实战第五版中文翻译  https://github.com/PotoYang/spring-in-action-v5-translate \n https://github.com/dunwu/spring-tutorial \n https://github.com/piomin \n \n \n spring boot项目，需要写一个接口吗？ \n SpringCloud和Dubbo \n SpringCache自定义过期时间及自动刷新 \n Spring揭秘学习笔记 \n \n webmvc与webflux \n \n 展开查看示例结构 \n \n \n \n webmvc是servlet stack based，基于同步阻塞的IO模型\n \n 在 org.springframework.web 包下 \n artifactId ： spring-boot-starter-web \n RestTemplate  阻塞式客户端，默认使用 HttpURLConnection 实现 \n \n \n webflux是reactive stack based，一个完全的reactive并且非阻塞的web框架，API公开了 Reactor Flux 和 Mono 类型\n \n 在 org.springframework.web.reactive 包下 \n artifactId ： spring-boot-starter-webflux \n WebClient  非阻塞式客户端，默认使用 Reactor Netty 实现 \n \n \n \n \n Spring WebFlux快速上手 \n \n \n Spring MVC or WebFlux? \n 让Spring MVC返回HTML类型的视图 \n \n 注解生成Bean默认命名规则 \n \n 在使用 @Component 、 @Repository 、 @Service 、 @Controller 等注解创建bean时，如果不指定bean名称，默认类名的首字母小写 \n \n \n 如果类名前两个及以上字母都是大写，那么bean名称与类名一样，如： RBACAuthorityService - RBACAuthorityService \n \n \n 修改Spring注解生成Bean时候的命名方式 \n \n 启动错误 \n \n NoClassDefFoundError: Could not initialize class org.springframework.beans.factory.BeanCreationException \n 可能是内存大小不够，加参数： -Xms1024M -Xmx2048M -XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=2048m -Xss5120k \n 事务 \n \n org.springframework.transaction.annotation.Propagation \n \n \n Spring事务嵌套导致的异常,Transaction rolled back because it has been marked as rollback-only \n Spring事务嵌套引发的血案---Transaction rolled back because it has been marked as rollback-only \n Spring事务方法嵌套引发的异常与问题分析 \n Spring事务管理嵌套事务详解 : 同一个类中，一个方法调用另外一个有事务的方法 \n Spring 事务嵌套无效 \n spring嵌套事务问题 \n \n /*\nPropagation.REQUIRED\t如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。这是默认值。\nPropagation.REQUIRES_NEW\t创建一个新的事务，如果当前存在事务，则把当前事务挂起。\nPropagation.SUPPORTS\t如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。\nPropagation.NOT_SUPPORTED\t以非事务方式运行，如果当前存在事务，则把当前事务挂起。\nPropagation.NEVER\t以非事务方式运行，如果当前存在事务，则抛出异常。\nPropagation.MANDATORY\t如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。\nPropagation.NESTED\t如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于Propagation.REQUIRED\n*/ \n // REQUIRES_NEW 与 NESTED 前者是内层异常影响外层，外层不影响内层；后者正好相反，内层加try catch后 异常不影响外层，外层会影响内层 \n @Transactional ( rollbackFor  =   Exception . class ,  propagation  =   Propagation . REQUIRES_NEW ) \n\n @Autowired \n private   TransactionTemplate  transactionTemplate ; \n\n\n // 手动管理事务 \n @Autowired \n private   DataSourceTransactionManager  transactionManager ; \n /*@Autowired\nprivate PlatformTransactionManager platformTransactionManager;*/ \n /*@Autowired\nprivate TransactionDefinition transactionDefinition;*/ \n\n // 设置事务隔离级别，开启新事务 \n DefaultTransactionDefinition  def  =   new   DefaultTransactionDefinition ( TransactionDefinition . PROPAGATION_REQUIRES_NEW ) ; \n //def.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRES_NEW); \n\n // foreach start \n\n // 获得事务状态 \n TransactionStatus  status  =  transactionManager . getTransaction ( def ) ; \n try   { \n    \n }   catch   ( Exception  e )   { \n     if ( ! TransactionAspectSupport . currentTransactionStatus ( ) . isRollbackOnly ( ) ) {   // 获取当前最大事务 \n         TransactionAspectSupport . currentTransactionStatus ( ) . setRollbackOnly ( ) ;   // 标记事务回滚 \n     } \n     if ( ! status . isRollbackOnly ( ) ) { \n        status . setRollbackOnly ( ) ;   // 标记事务回滚 \n     } \n     // https://www.cnblogs.com/yaohuiqin/p/9486975.html \n    transactionManager . rollback ( status ) ;   // 回滚事务，设置completed为完成状态，清理事务资源 \n }   finally   { \n     if   ( status  != null   &&  status . isNewTransaction ( )   &&   ! status . isCompleted ( )   &&   ! status . isRollbackOnly ( ) ) { \n        transactionManager . commit ( status ) ;   // 如果rollBackOnly状态被设置将回滚，否则执行正常的事务提交操作 \n     } \n } \n // foreach end \n 依赖注入 \n \n @Autowired\n \n Field （属性变量） Field injection is not recommended（不再推荐使用字段注入） \n 构造器注入适合强制性的注入旨在不变性 \n Setter 注入适合可变性的注入。 \n \n \n @Resource \n @Inject \n \n \n 这几个关于Spring 依赖注入的问题你清楚吗？ \n Field injection is not recommended（Spring IOC不再推荐使用属性注入） \n IDEA 警告 Field injection is not recommended \n Field injection is not recommended \n @Autowired警告：Field injection is not recommended \n 使用@Autowired注解警告Field injection is not recommended \n \n \n Spring中获取request的几种方法，及其线程安全性分析 \n Spring Boot \n \n https://github.com/dyc87112/SpringBoot-Learning \n https://github.com/macrozheng/mall-learning \n \n https://macrozheng.github.io/mall-learning \n \n \n https://github.com/vector4wang/spring-boot-quick \n https://github.com/kanyways/learning-spring \n https://github.com/gf-huanchupk/SpringBootLearning \n https://github.com/lyb-geek/springboot-learning \n https://github.com/xkcoding/spring-boot-demo \n https://github.com/xuwujing/springBoot-study \n https://github.com/houko/SpringBootUnity \n https://github.com/hemin1003/spring-boot-study \n https://github.com/smltq/spring-boot-demo \n https://github.com/liuyueyi/spring-boot-demo \n https://github.com/TianShengBingFeiNiuRen/springboot-util \n https://github.com/WinterChenS/springboot-learning-experience \n https://github.com/jesusfc/springboot3-java17 \n 工具包  https://github.com/lets-mica/mica \n 测试  https://github.com/codecentric/chaos-monkey-spring-boot \n \n \n Springboot 优雅停止服务的几种方法 \n SpringBoot系列: 如何优雅停止服务 \n Spring Boot 2.3 新特性优雅停机详解 \n \n \n Spring Boot 监听 Redis Key 失效事件实现定时任务 \n Spring Boot 无侵入式 实现API接口统一JSON格式返回 \n \n \n 约定优于配置（convention over configuration），也称作按约定编程，是一种软件设计范式，\n旨在减少软件开发人员需做决定的数量，获得简单的好处，而又不失灵活性。 \n \n \n 开发人员仅需规定应用中不符合约定的部分，在没有规定配置的地方，采用默认配置，以力求最简配置为核心思想 \n \n 有哪些约定 \n \n \n Maven的目录结构 \n \n 默认有 resources 文件夹,存放资源配置文件。 src-main-resources , src-main-java 。 \n 默认编译生成的类都在 targe 文件夹下面 \n \n \n \n 项目默认的配置文件必须是 \n \n application 前缀命名的 yml 文件 \n application 前缀命名的 properties 文件 \n 默认依赖管理 \n \n 使用默认依赖管理的目的是：常用的包依赖可以省去version标签。如下： \n \n < dependencies > \n    < dependency > \n        < groupId > org.springframework.boot </ groupId > \n        < artifactId > spring-boot-starter-web </ artifactId > \n    </ dependency > \n </ dependencies > \n \n \n 方式一 \n \n < parent > \n     \x3c!-- spring-boot-starter-parent 是一个特殊的starter，它用来提供相关的Maven默认依赖 --\x3e \n     \x3c!--继承spring-boot-dependencies依赖管理，指定了JDK版本，多了编译配置--\x3e \n     < groupId > org.springframework.boot </ groupId > \n     < artifactId > spring-boot-starter-parent </ artifactId > \n     < version > 2.2.5.RELEASE </ version > \n     < relativePath /> \n </ parent > \n \n \n 方式二 \n \n < dependencyManagement > \n     < dependencies > \n         \x3c!--引入spring-boot依赖管理，其中包含多个依赖，如slf4j、logback--\x3e \n         \x3c!--要使用property的形式覆盖原始的依赖项（升级依赖版本），则需要在此之前添加--\x3e \n         < dependency > \n             < groupId > org.springframework.boot </ groupId > \n             < artifactId > spring-boot-dependencies </ artifactId > \n             < version > ${spring-boot-version} </ version > \n             < type > pom </ type > \n             < scope > import </ scope > \n         </ dependency > \n     </ dependencies > \n </ dependencyManagement > \n 配置方式 \n \n Spring Boot 加载配置多种方式 \n \n Spring Boot Starter \n \n Spring Boot Starter说明 \n \n \n 需要在 pom.xml 中引入为 starter 的依赖 \n 然后在 application.yml 或者 application.properties 中配置，无需在其他任何地方配置（如 xml 、 Bean ） \n \n Java代码配置Bean \n \n 需要在 pom.xml 中引入不为 starter 的依赖 \n 创建一个配置类，然后使用注解 @Configuration 在类上， @bean 配置方法，方法名是相当于 xml 配置的 id ，\n返回结果相当于将哪个类注入到bean容器中 \n \n 加载自定义xml配置 \n \n 需要在 pom.xml 中引入不为 starter 的依赖 \n 在启动类上使用注解 @ImportResource(locations={"classpath:配置文件路径}) ，把自定义的 xml 配置加载进来 \n \n 使用注解获取配置文件中的配置 \n \n @Value("${配置中的属性名}") 用在Bean的域（属性）上，获取默认配置文件中的属性值 \n @ConfigurationProperties(prefix="配置中的属性名") 用在类名上，获取默认配置文件中的属性值，用 @Resource 引入到其他类 \n \n \n 必须要让Spring 扫描到该类才能使用，有三种方法：加 @Component ；创建配置类加 @Configuration ，\n再加 @EnableConfigurationProperties(类名.class) 或者创建构造器加 @Bean \n \n \n @PropertySource("classpath:配置文件路径") 用在类名上，获取默认自定义 properties 文件中的属性值，用 @Resource 引入到其他类 \n Starters \n \n https://start.aliyun.com \n \n \n https://github.com/mouzt/mzt-biz-log \n https://github.com/ballcat-projects/ballcat \n \n application starters \n \n Spring Boot 所有应用程序级的 Starters \n \n \n \n \n Starter 名称 \n Starter 描述 \n \n \n \n \n spring-boot-starter \n 核心 Starter，包括自动配置、日志及 YAML 支持等 \n \n \n spring-boot-starter-activemq \n 集成 Apache ActiveMQ，基于 JMS 的消息队列 \n \n \n spring-boot-starter-artemis \n 集成 Apache Artemis，基于 JMS 的消息队列 \n \n \n spring-boot-starter-amqp \n 集成 Spring AMQP 和 Rabbit MQ 的消息队列 \n \n \n spring-boot-starter-aop \n 集成 Spring AOP 和 AspectJ 面向切面编程 \n \n \n spring-boot-starter-batch \n 集成 Spring Batch（批处理） \n \n \n spring-boot-starter-cache \n 集成 Spring Cache（缓存） \n \n \n spring-boot-starter-data-cassandra \n 集成 Cassandra（分布式数据库） 和 Spring Data Cassandra \n \n \n spring-boot-starter-data-cassandra-reactive \n 集成 Cassandra（分布式数据库） 和 Spring Data Cassandra Reactive \n \n \n spring-boot-starter-data-couchbase \n 集成 Couchbase（文档型数据库） 和 Spring Data Couchbase \n \n \n spring-boot-starter-data-couchbase-reactive \n 集成 Couchbase（文档型数据库） 和 Spring Data Couchbase Reactive \n \n \n spring-boot-starter-data-elasticsearch \n 集成 Elasticsearch（搜索引擎）和 Spring Data Elasticsearch \n \n \n spring-boot-starter-data-solr \n 集成 Apache Solr（搜索引擎）结合 Spring Data Solr \n \n \n spring-boot-starter-data-jdbc \n 集成 Spring Data JDBC \n \n \n spring-boot-starter-data-jpa \n 集成 Spring Data JPA 结合 Hibernate \n \n \n spring-boot-starter-data-ldap \n 集成 Spring Data LDAP \n \n \n spring-boot-starter-data-mongodb \n 集成 MongoDB（文档型数据库）和 Spring Data MongoDB \n \n \n spring-boot-starter-data-mongodb-reactive \n 集成 MongoDB（文档型数据库）和 Spring Data MongoDB Reactive \n \n \n spring-boot-starter-data-neo4j \n 集成 Neo4j（图形数据库）和 Spring Data Neo4j \n \n \n spring-boot-starter-data-r2dbc \n 集成 Spring Data R2DBC \n \n \n spring-boot-starter-data-redis \n 集成 Redis（内存数据库）结合 Spring Data Redis 和  Lettuce 客户端 \n \n \n spring-boot-starter-data-redis-reactive \n 集成 Redis（内存数据库）结合 Spring Data Redis reactive 和 Lettuce 客户端 \n \n \n spring-boot-starter-data-rest \n 集成 Spring Data REST 暴露 Spring Data repositories 输出 REST 资源 \n \n \n spring-boot-starter-thymeleaf \n 集成 Thymeleaf 视图构建 MVC web 应用 \n \n \n spring-boot-starter-freemarker \n 集成 FreeMarker 视图构建 MVC web 应用 \n \n \n spring-boot-starter-groovy-templates \n 集成 Groovy 模板视图构建 MVC web 应用 \n \n \n spring-boot-starter-hateoas \n 集成 Spring MVC 和 Spring HATEOAS 构建超媒体 RESTful Web 应用程序 \n \n \n spring-boot-starter-integration \n 集成 Spring Integration \n \n \n spring-boot-starter-jdbc \n 集成 JDBC 结合 HikariCP 连接池 \n \n \n spring-boot-starter-jersey \n 集成 JAX-RS 和 Jersey 构建 RESTful web 应用，是 spring-boot-starter-web 的一个替代 Starter \n \n \n spring-boot-starter-jooq \n 集成 jOOQ 访问 SQL 数据库，是 spring-boot-starter-data-jpa 或者 spring-boot-starter-jdbc 的替代 Starter \n \n \n spring-boot-starter-json \n 用于读写 JSON \n \n \n spring-boot-starter-jta-atomikos \n 集成 Atomikos 实现  JTA 事务 \n \n \n spring-boot-starter-jta-bitronix \n 集成  Bitronix 实现  JTA 事务（ 从 2.3.0 开始标识为 Deprecated） \n \n \n spring-boot-starter-mail \n 集成 Java Mail 和 Spring 框架的邮件发送功能 \n \n \n spring-boot-starter-mustache \n 集成 Mustache 视图构建 web 应用 \n \n \n spring-boot-starter-security \n 集成 Spring Security \n \n \n spring-boot-starter-oauth2-client \n 集成 Spring Security’s OAuth2/OpenID 连接客户端功能 \n \n \n spring-boot-starter-oauth2-resource-server \n 集成 Spring Security’s OAuth2 资源服务器功能 \n \n \n spring-boot-starter-quartz \n 集成 Quartz 任务调度 \n \n \n spring-boot-starter-rsocket \n 构建 RSocket 客户端和服务端 \n \n \n spring-boot-starter-test \n 集成 JUnit Jupiter, Hamcrest 和 Mockito 测试 Spring Boot 应用和类库 \n \n \n spring-boot-starter-validation \n 集成 Java Bean Validation 结合 Hibernate Validator \n \n \n spring-boot-starter-web \n 集成 Spring MVC 构建 RESTful web 应用，使用  Tomcat 作为默认内嵌容器 \n \n \n spring-boot-starter-web-services \n 集成 Spring Web Services \n \n \n spring-boot-starter-webflux \n 集成 Spring Reactive Web 构建 WebFlux 应用 \n \n \n spring-boot-starter-websocket \n 集成 Spring WebSocket 构建 WebSocket 应用 \n \n \n \n \n 数据源  https://github.com/baomidou/dynamic-datasource-spring-boot-starter \n \n production starters \n \n 生产级 Starters 能被用于线上/生产功能，这个意味着和任何技术、任何业务没关系，也不是只有生产才能使用，只是在生产环境使用更能体现它的意义。 \n \n \n \n \n Starter 名称 \n Starter 描述 \n \n \n \n \n spring-boot-starter-actuator \n 集成 Spring Boot Actuator，提供生产功能以帮助监控和管理应用程序 \n \n \n \n technical starters \n \n 技术类 Starters，用于帮助你排除或者替换指定的框架或技术 \n \n \n \n \n Starter 名称 \n Starter 描述 \n \n \n \n \n spring-boot-starter-jetty \n 集成 Jetty 作为内嵌的 servlet 容器，可用于替代 spring-boot-starter-tomcat \n \n \n spring-boot-starter-log4j2 \n 集成 Log4j2 日志框架，可用于替代 spring-boot-starter-logging \n \n \n spring-boot-starter-logging \n 集成 Logback 日志框架，这个也是默认的日志 Starter \n \n \n spring-boot-starter-reactor-netty \n 集成 Netty 作为内嵌的响应式 HTTP 服务器 \n \n \n spring-boot-starter-tomcat \n 集成 Tomcat 作为内嵌的 servlet 容器，这也是默认的 servlet 容器 starter 被集成 spring-boot-starter-web 里面 \n \n \n spring-boot-starter-undertow \n 集成 Undertow 作为内嵌的 servlet 容器，可用于替代 spring-boot-starter-tomcat \n Spring Cloud \n \n https://github.com/spring-cloud \n https://github.com/spring-cloud-samples \n https://github.com/macrozheng/springcloud-learning \n https://github.com/dyc87112/SpringCloud-Learning \n https://github.com/gf-huanchupk/SpringCloudLearning \n https://github.com/2227324689/Spring-Cloud-Alibaba- \n https://github.com/SpringCloud \n https://github.com/venusteam \n https://github.com/forezp/SpringCloudLearning \n https://github.com/sqshq/piggymetrics \n https://github.com/huaweicloud \n https://github.com/sofastack \n https://github.com/zlt2000/microservices-platform \n https://github.com/chillzhuang/blade-tool \n https://gitee.com/smallc \n https://github.com/littlehorse-enterprises/littlehorse \n \n \n 微服务就是单个应用程序拆分成许多个小型服务的一种开发方法 \n \n \n SpringCloud组件和概念介绍 \n springcloud核心组件介绍 \n 一文读懂SpringCloud与Eureka，Feign，Ribbon，Hystrix，Zuul核心组件间的关系 \n springcloudの核心组件Eureka、Ribbon、Feign、Hystrix、Zuul \n Spring Cloud Alibaba与Spring Boot、Spring Cloud之间不得不说的版本关系 \n https://www.springcloud.cc \n 聊聊分布式链路追踪 \n \n \n \n 冒着挂科的风险也要给你们看的 Spring Cloud 入门总结 \n \n \n bootstrap.yml （.properties）用来程序引导时执行，应用于更加早期配置信息读取，如可以使用来配置application.yml中使用到参数等 \n \n \n \n bootstrap.yml 是被一个父级的 Spring ApplicationContext 加载的。这个父级的 Spring ApplicationContext 是先加载的，\n在加载 application.yml 的 ApplicationContext 之前。 \n \n \n application.yml （.properties) 应用程序特有配置信息，可以用来配置后续各个模块中需使用的公共参数等 \n \n \n https://github.com/hashicorp/consul \n \n Consul免费注册中心  https://portal.cloud.hashicorp.com \n \n \n \n \n \n \n 组件 \n 作用 \n 替代项目 \n 说明 \n \n \n \n \n Alibaba Cloud SchedulerX \n 分布式任务调度 \n elastic-job、xxl-job \n 阿里中间件团队开发的一款分布式任务调度产品，提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务（商业组件）。 \n \n \n Alibaba RocketMQ \n \n \n 一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。 \n \n \n Alibaba Seata \n \n \n \n \n \n ElasticSearch+LogStash+Kibana \n 分布式日志收集 \n \n logstash（收集）、elasticsearch（存储+搜索）、kibana（展示），我们将这三个组合起来的技术称之为ELK \n \n \n Feign \n 声明式HTTP客户端 \n Retrofit \n 基于动态代理机制，根据注解和选择的机器，拼接请求URL地址，发起请求 \n \n \n Netflix Archaius \n 配置管理 \n \n 提供动态类型化属性、线程安全配置操作、轮询框架、回调机制等功能。可以实现动态获取配置 \n \n \n Netflix Eureka \n 服务发现 \n Consul、Zookeeper、Alibaba Nacos \n 各个服务启动时，Eureka Client都会将服务注册到Eureka Server，并且Eureka Client还可以反过来从Eureka Server拉取注册表，从而知道其他服务在哪里 \n \n \n Netflix Hystrix \n 断路器 \n Resilience4j、Alibaba Sentinel \n 提供线程池，不同的服务走不同的线程池，实现了不同服务调用的隔离，避免了服务雪崩的问题 \n \n \n Netflix Zuul \n API网关 \n Spring Cloud Gateway \n 如果前端、移动端要调用后端系统，统一从Zuul网关进入，由Zuul网关转发请求给对应的服务 \n \n \n Ribbon \n 负载均衡器 \n Spring Cloud Loadbalancer \n 服务间发起请求的时候，基于Ribbon做负载均衡，从一个服务的多台机器中选择一台 \n \n \n Spring Cloud Bus \n 消息总线 \n \n 将分布式的节点用轻量的消息代理连接起来。它可以用于广播配置文件的更改或者服务之间的通讯，也可以用于监控 \n \n \n Spring Cloud Cluster \n \n \n 取代Spring Integration。提供在分布式系统中的集群所需要的基础功能支持，如：选举、集群的状态一致性、全局锁、tokens等常见状态模式的抽象和实现。 \n \n \n Spring Cloud Config \n 配置管理 \n Ctrip Apollo、Spring Cloud Consul、Zookeeper、Alibaba Nacos \n 解决分布式系统的配置管理方案。Server提供配置文件的存储、以接口的形式将配置文件的内容提供出去，Client通过接口获取数据、并依据此数据初始化自己的应用。 \n \n \n Spring Cloud Connectors \n \n \n 简化了连接到服务的过程和从云平台获取操作的过程，有很强的扩展性，可以利用Spring Cloud Connectors来构建你自己的云平台。 \n \n \n Spring Cloud for Cloud Foundry \n 开源PaaS云平台 \n \n 支持多种框架、语言、运行时环境、云平台及应用服务，使开发人员能够在几秒钟内进行应用程序的部署和扩展 \n \n \n Spring Cloud Security \n 安全框架 \n \n 添加安全控制 \n \n \n Spring Cloud Sleuth \n 分布式链路跟踪 \n \n 日志收集工具包，封装了Dapper和log-based追踪以及Zipkin和HTrace操作，为SpringCloud应用实现了一种分布式追踪解决方案。 \n \n \n Spring Cloud Starters \n \n \n Spring Boot式的启动项目，为Spring Cloud提供开箱即用的依赖管理。 \n \n \n Spring Cloud Stream \n 数据流 \n \n 创建消息驱动微服务应用的框架，使用spring integration提供与消息代理之间的连接。数据流操作开发包，任务之间通过事件触发 \n \n \n Spring Cloud Task \n 批量任务 \n \n 主要解决短命微服务的任务管理，任务调度的工作，比如说某些定时任务晚上就跑一次，或者某项数据分析临时就跑几次。 \n \n \n \n \n https://github.com/apolloconfig \n https://github.com/ctripcorp/apollo \n API网关  https://github.com/apache/incubator-shenyu \n https://github.com/siaorg/sia-gateway \n https://github.com/mitre/HTTP-Proxy-Servlet \n https://github.com/mkopylec/charon-spring-boot-starter \n https://github.com/stargate/stargate \n 日志收集  https://github.com/apache/flume \n \n https://flume.liyifeng.org \n \n \n https://github.com/fayechenlong/plumelog \n \n \n 分布式日志框架ELK入门 \n SpringCloud实践分享 日志收集Kafka ELK \n 【Sentinel（一）】Sentinel介绍与使用 \n Spring Security \n \n 认证成功与失败的处理器 \n 过滤器列表 \n 标准过滤器别名和顺序 \n \n \n https://github.com/topics/spring-security \n https://github.com/Snailclimb/spring-security-jwt-guide \n \n 拦截器和过滤器区别 \n \n 拦截器（Interceptor）：依赖于web框架，在实现上,基于Java的反射机制，拦截的是action，说白了拦截的是访问路径 \n 过滤器（Filter）：依赖于servlet容器。在实现上，基于函数回调，可以几乎过滤掉所有的东西 \n \n \n 拦截器与过滤器的执行顺序：过滤前 -> 拦截前 -> action执行 -> 拦截后 -> 过滤后 \n \n \n 过滤器可以修改request，拦截器只能对action请求起作用 \n 过滤器需要在servlet容器中实现，拦截器可以适用于javaEE，javaSE等各种环境 \n 拦截器可以调用IOC容器中的各种依赖，而过滤器不能 \n 过滤器只能在请求的前后使用，而拦截器可以详细到每个方法 \n Spring TaskScheduler \n \n Spring Scheduling Tasks  Spring 3.0 版本之后自带的一个定时任务。其所属Spring的资源包为： spring-context-support \n \n \n 可以将它看成一个轻量级的 Quartz ，而且使用起来比Quartz简单许多。默认单线程串行执行任务，多任务时若某个任务执行时间过长，\n后续任务会无法及时执行；抛出异常后，同一个任务后续不再触发 \n \n \n Spring Quartz  Spring集成整合 Quartz ，主要Bean:  JobDetail 、 Trigger 以及 SchedulerFactory ， JobDataMap 数据传递 \n \n \n 需要继承 org.springframework.scheduling.quartz.QuartzJobBean 或者实现 org.quartz.Job 。采用多线程，下一个调度时间到达时，\n会另起一个线程执行调度，不会发生阻塞问题，但调度过多时可能导致数据处理异常，抛出异常后，同一个任务后续仍然会触发 \n \n \n TBSchedule \n Spring MVC \n redirect重定向 \n \n redirect重定向可以跳转到任意服务器地址，传递时要对中文编码进行处理 \n \n @RequestMapping ( value = "/test" ,  method  =   {   RequestMethod . POST ,   RequestMethod . GET   } ) \n public   ModelAndView   testredirect ( HttpServletResponse  response ) { \n    response . sendRedirect ( "/index" ) ; // 参数可以直接拼接在url上 \n     return   null ; \n } \n @RequestMapping ( "/testredirect" ) \n public   String   testredirect ( Model  model ,   RedirectAttributes  attr )   { \n\tattr . addAttribute ( "test" ,   "51gjie" ) ; // 跳转地址带参数 \n    attr . addFlashAttribute ( "u2" ,   "51gjie" ) ; // 跳转地址不带参数，只存在body中 \n\t return   "redirect:/user/users" ; // 参数可以直接拼接在url上 \n } \n @RequestMapping ( value = "/toredirect" , method  =   {   RequestMethod . POST ,   RequestMethod . GET   } ) \n public    ModelAndView   toredirect ( String  userName ) { \n     ModelAndView   model  =   new   ModelAndView ( "/main/index" ) ; // 参数可以直接拼接在url上 \n     // 把userName参数带入到controller的RedirectAttributes中 \n    model . addObject ( "userName" ,  userName ) ; \n     return  model ; \n } \n Spring AOP原理 \n \n AOP: 其实现的关键就在于 AOP 框架自动创建的 AOP 代理，AOP 代理则可分为静态代理和动态代理两大类\n \n 其中静态代理是指使用 AOP 框架提供的命令进行编译，从而在编译阶段就可生成 AOP 代理类，因此也称为编译时增强；静态代理分为：编译时织入（特殊编译器实现）、类加载时织入（特殊的类加载器实现）。静态代理的代表为AspectJ； \n 而动态代理则在运行时借助于 JDK 动态代理、CGLIB 等在内存中“临时”生成 AOP 动态代理类，因此也被称为运行时增强。动态代理分为：JDK动态代理（基于接口来实现）、CGLib（基于类实现）。而动态代理则以Spring AOP为代表。 \n \n \n Spring AOP：只支持动态代理，通过两种方式进行实现：\n \n JDK动态代理，通过反射实现，只支持对实现接口的类进行代理 \n CGLib动态字节码注入方式实现代理。 \n JDK动态代理: \n JDK中的动态代理是通过反射类Proxy反射机制生成一个实现代理接口的匿名类，在调用具体方法前调用InvocationHandler回调接口实现的，但是JDK中所有要进行动态代理的类必须要实现一个接口，也就是说只能对该类所实现接口中定义的方法进行代理，这在实际编程中有一定的局限性，而且使用反射的效率也不高 \n Cglib \n cglib动态代理是利用asm开源包，对代理对象类的class文件加载进来，通过修改其字节码生成子类来处理。 \n 动态生成一个要代理的子类，子类重写要代理的类的所有不是final的方法。在子类中采用方法拦截技术拦截所有的父类方法的调用，顺势织入横切逻辑 \n ASM是一个java字节码操纵框架，它能被用来动态生成类或者增强既有类的功能。ASM 可以直接产生二进制 class 文件，也可以在类被加载入 Java 虚拟机之前动态改变类行为 \n Lombok原理 \n \n 定义编译期的注解  @Retention(RetentionPolicy.SOURCE) \n 利用 JSR269 api(Pluggable Annotation Processing API ) 编译期的注解处理器 （AbstractProcessor在编译时指定一个processor类来对编译阶段的注解进行干预，Lombok的注解处理器：AnnotationProcessor） \n 利用 tools.jar 的 javac  api处理 AST (抽象语法树)，将功能注册进jar包 \n \n',createdTime:1761814324e3},{title:"Tomcat",frontmatter:{description:"Tomcat集群Redis会话管理器 https://github.com/ran-jit/tomcat-cluster-redis-session-manager\nhttps://github.com/magro/memcached-session-manager\nTomcat监控 https://github.com/psi-probe",meta:[{name:"twitter:title",content:"Tomcat"},{name:"twitter:description",content:"Tomcat集群Redis会话管理器 https://github.com/ran-jit/tomcat-cluster-redis-session-manager\nhttps://github.com/magro/memcached-session-manager\nTomcat监控 https://github.com/psi-probe"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Java/Tomcat.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Tomcat"},{property:"og:description",content:"Tomcat集群Redis会话管理器 https://github.com/ran-jit/tomcat-cluster-redis-session-manager\nhttps://github.com/magro/memcached-session-manager\nTomcat监控 https://github.com/psi-probe"},{property:"og:url",content:"https://bajins.com/Java/Tomcat.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Tomcat"},{itemprop:"description",content:"Tomcat集群Redis会话管理器 https://github.com/ran-jit/tomcat-cluster-redis-session-manager\nhttps://github.com/magro/memcached-session-manager\nTomcat监控 https://github.com/psi-probe"}]},regularPath:"/Java/Tomcat.html",relativePath:"Java/Tomcat.md",key:"v-5b57fb0d",path:"/Java/Tomcat.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"其他应用服务器",slug:"其他应用服务器"},{level:2,title:"执行器（线程池）",slug:"执行器-线程池"},{level:2,title:"连接器优化",slug:"连接器优化"},{level:2,title:"禁用AJP连接器",slug:"禁用ajp连接器"},{level:2,title:"http头的验证",slug:"http头的验证"},{level:2,title:"Tomcat热部署",slug:"tomcat热部署"},{level:2,title:"问题及解决方案",slug:"问题及解决方案"},{level:3,title:"403AccessDenied",slug:"_403accessdenied"},{level:3,title:"启动时一直卡100%",slug:"启动时一直卡100"},{level:3,title:"请考虑增加缓存的最大空间",slug:"请考虑增加缓存的最大空间"},{level:2,title:"CentOS安装Tomcat",slug:"centos安装tomcat"},{level:2,title:"window运行",slug:"window运行"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Tomcat \n Flag 其他应用服务器 执行器（线程池） 连接器优化 禁用AJP连接器 http头的验证 Tomcat热部署 问题及解决方案 403AccessDenied 启动时一直卡100% 请考虑增加缓存的最大空间 CentOS安装Tomcat window运行 \n Flag \n \n https://github.com/topics/tomcat \n https://github.com/apache/tomcat \n \n https://tomcat.apache.org \n \n \n \n \n Tomcat集群Redis会话管理器  https://github.com/ran-jit/tomcat-cluster-redis-session-manager \n https://github.com/magro/memcached-session-manager \n Tomcat监控  https://github.com/psi-probe \n \n \n 归档 | 回忆飘如雪 \n Shiro的反序列化漏洞，以及内存马技术 \n Java Agent 从入门到内存马 \n Tomcat性能监控与调优 \n 超详细的Tomcat性能监控及调优教程 \n Gzip无法压缩48k以上的资源？ \n \n \n 因为Tomcat运行在JAVA虚拟机之上,适当调整运行JVM参数可以提升整体性能。 \n \n \n Windows：修改 bin/catalina.bat 文件，文件中有注释说明，配置JVM参数： set "JAVA_OPTS=%JAVA_OPTS% -Dfile.encoding=UTF-8" \n Linux：修改 bin/catalina.sh 文件，文件中有注释说明，配置JVM参数： JAVA_OPTS="$JAVA_OPTS -Dfile.encoding=UTF-8" \n 其他应用服务器 \n \n https://github.com/Aresyi/HowTomcatWorks \n https://github.com/wildfly/wildfly \n \n https://github.com/thorntail/thorntail \n \n \n https://github.com/undertow-io/undertow \n https://github.com/eclipse/jetty.project \n https://github.com/eclipse-ee4j/grizzly \n https://github.com/eclipse-ee4j/glassfish \n \n https://github.com/payara/Payara \n 执行器（线程池） \n \n Executor  Tomcat默认没有启用线程池，在tomcat中每一个用户请求都是一个线程，所以可以使用线程池提高性能。\n这里前台其实有一个调度线程，然后调度线程会放入线程池内，然后到到一定的时候线程池的任务变成工作线程。 \n \n \n 在 server.xml 中找到 <Service name="Catalina"> 节点下的 Executor 标签取消注释 \n \n < Executor   name = " tomcatThreadPool "   namePrefix = " catalina-exec- " \n         maxThreads = " 800 "   minSpareThreads = " 100 "    maxQueueSize = " 100 "   prestartminSpareThreads = " true "   /> \n \n \n \n \n 参数 \n 说明 \n \n \n \n \n name \n 命名线程池 \n \n \n threadPriority \n 优先级 \n \n \n daemon \n 守护进程 \n \n \n namePrefix \n 名称前缀 \n \n \n maxThreads \n 最大线程数 \n \n \n minSpareThreads \n 最小活跃线程数 \n \n \n maxIdleTime \n 空闲线程等待时间 \n \n \n maxQueueSize \n 最大的等待队里数，超过则请求拒绝 \n \n \n prestartminSpareThreads \n 是否在启动时就生成minSpareThreads个线程 \n \n \n threadRenewalDelay \n 重建线程的时间间隔 \n \n \n \n \n 连接器指定线程池：在 server.xml 中找到 <Service name="Catalina"> 节点下的 Connector ，使用 executor="线程池名称" \n 连接器优化 \n \n Connector是连接器，负责接收客户的请求，以及向客户端回送响应的消息。所以 Connector的优化是重要部分。\n默认情况下 Tomcat只支持200线程访问，超过这个数量的连接将被等待甚至超时放弃，所以我们需要提高这方面的处理能力。 \n \n \n Tomcat 连接器Connector 的三种运行模式 Bio、Nio、Apr \n \n \n \n \n 参数 \n 说明 \n \n \n \n \n maxPostSize \n 参数形式处理的最大长度，默认值为2097152（2兆字节）。上传提交的时候可以用的 \n \n \n acceptCount \n 请求的最大队列长度，当队列满时收到的任何请求将被拒绝 \n \n \n acceptorThreadCount \n 用于接受连接的线程的数量 \n \n \n disableUploadTimeout \n 此标志允许servlet容器在数据上传时使用不同的连接超时，通常较长。如果没有指定，该属性被设置为true，禁用上传超时。 \n \n \n connectionUploadTimeout \n 上传数据过程中，指定的以毫秒为单位超时时间。只有在设置disableUploadTimeout为false有效。 \n \n \n connectionTimeout \n 在将提交的请求URI行呈现之后，连接器将等待接受连接的毫秒数。使用值-1表示没有超时（即无限）。默认值是60000（60秒），但请注意，Tomcat的标准server.xml中，设置为20000（即20秒）。 \n \n \n maxConnections \n 服务器接受并处理的最大连接数 \n \n \n SSLEnabled \n 在连接器上使用此属性来启用SSL加密传输 \n \n \n port \n TCP端口号，连接器利用该端口号将创建一个服务器套接字，并等待传入的连接。 \n \n \n protocol \n 设置协议来处理传入流量。默认值是 HTTP/1.1，将使用自动切换机制来选择阻塞的基于Java的连接器或APR /native 为基础的连接器。可用以下值：org.apache.coyote.http11.Http11Protocol -阻塞式的Java连接器;org.apache.coyote.http11.Http11NioProtocol -不阻塞Java连接器;org.apache.coyote.http11.Http11AprProtocol的 -的APR / native 连接器 \n \n \n maxThreads \n 最多同时处理的连接数，Tomcat使用线程来处理接收的每个请求。这个值表示Tomcat可创建的最大的线程数。如果没有指定，该属性被设置为200。如果使用了execute将忽略此连接器的该属性，连接器将使用execute，而不是一个内部线程池来处理请求。 \n \n \n minSpareThreads \n 始终保持运行最小线程数。如果没有指定，则默认为10。 \n \n \n maxHttpHeaderSize \n 请求和响应的HTTP头的（以字节为单位的）最大尺寸。如果没有指定，该属性被设置为8192（8 KB）。 \n \n \n tcpNoDelay \n 如果设置为true，TCP_NO_DELAY选项将被设置在服务器上的套接字上，在大多数情况下，这样可以提高性能。默认设置为true。 \n \n \n compression \n 通常会在ngnix里面配置压缩开启压缩GZIP，当值是“off ”（禁用压缩），“on ”（允许压缩，这会导致文本数据被压缩），“force ”（强制在所有的情况下压缩），或者一个整数值（这是相当于为“on”，但指定了输出之前被压缩的数据最小量）。如果不知道内容长度但被设置为“on”或更积极的压缩，输出的数据也将被压缩。如果没有指定，该属性被设置为“off”。 \n \n \n compressionMinSize \n 如果压缩被设置为“on”，那么该属性可以用于指定在输出之前被压缩的数据的最小量。如果未指定，此属性默认为“2048”。 \n \n \n redirectPort \n 如果该连接器支持非SSL请求，并且接收到的请求为满足安全约束需要SSL传输， Catalina 将自动将请求重定向到指定的端口号。 \n \n \n enableLookups \n 设置为false时跳过DNS查找，并返回字符串情势的IP地址（从而提高性能）。默认景象下，禁用DNS查找。 \n \n \n URIEncoding \n 指定使用的字符编码，来解码URI字符。如果没有指定，ISO-8859-1将被使用。 \n \n \n executor \n 指向Executor元素的引用。 \n \n \n compressableMimeType \n 可以在 conf/web.xml 中的 Default MIME Type Mappings 部分找到 \n \n \n \n < Connector   executor = " tomcatThreadPool " \n         connectionTimeout = " 20000 " \n         port = " 8080 " \n         protocol = " org.apache.coyote.http11.Http11Nio2Protocol " \n         redirectPort = " 8443 " \n         maxHttpHeaderSize = " 8192 " \n         enableLookups = " false " \n         maxPostSize = " 1048576000 " \n         URIEncoding = " UTF-8 " \n         acceptCount = " 1000 " \n         acceptorTreadCount = " 100 " \n         disableUploadTimeout = " true " \n         maxConnections = " 10000 " \n         SSLEnabled = " false " \n         compression = " on " \n         compressionMinSize = " 2048 " \n         noCompressionUserAgents = " gozilla,traviata " \n         compressableMimeType = " text/html,text/xml,application/javascript,text/javascript,text/css,text/plain,text/json " \n         /> \n 禁用AJP连接器 \n \n 如果是使用 Nginx + tomcat 的架构，所以用不着 AJP 协议，所以把 AJP 连接器禁用。 \n \n \n AJPv13协议是面向包的。WEB服务器和Servlet容器通过TCP连接来交互；为了节省SOCKET创建的昂贵代价，\nWEB服务器会尝试维护一个永久TCP连接到servlet容器，并且在多个请求和响应周期过程会重用连接。 \n \n \n 在 server.xml 中找到 <Service name="Catalina"> 节点下的 Connector 标签带有 protocol="AJP/1.3" 属性的注释掉 \n http头的验证 \n \n Tomcat在  7.0.73 、 8.0.39 、以及 8.5.7 版本后，添加了对于 http 头的验证。 \n \n \n 在 conf/catalina.properties 文件的末尾添加或者修改最后一行 \n \n tomcat.util.http.parser.HttpParser.requestTargetAllow = |{} \n Tomcat热部署 \n \n 在 /conf/context.xml 的 Context 标签中配置会使全局生效 \n \n \n https://tomcat.apache.org/tomcat-9.0-doc/config/context.html#Attributes \n \n \n 在 /conf/server.xml 的 Host 标签中配置 \n \n \n 替换 WEB-INF/lib 目录中的 jar 文件或 WEB-INF/classes 目录中的 class 文件时，\n reloadable="true" 会让修改生效（但代价不小），该选项适合调试。 \n \n \n 在 webapps 目录中增加新的目录、 war 文件、修改 WEB-INF/web.xml ， autoDeploy="true" 会新建或重新部署应用，该选项方便部署。 \n \n < Context   docBase = " xxx "   path = " /xxx "   reloadable = " true "   autoDeploy = " true " />  \n 问题及解决方案 \n \n eclipse启动tomcat提示端口被占用 实际端口并没有被占用 重启也没用 \n 403AccessDenied \n \n tomcat8 以上管理页面提示 403 Access Denied 问题 \n \n \n 修改 conf/tomcat-users.xml \n \n vi  conf/tomcat-users.xml\n \n \n 按 shift+g 跳到末尾,在 </tomcat-users> 前添加 \n \n < role   rolename = " manager-gui " /> \n < role   rolename = " manager-script " /> \n < role   rolename = " admin-gui " /> \n < role   rolename = " admin-script " /> \n < user   username = " tomcat "   password = " 密码 "   roles = " manager-gui,manager-script,admin-gui,admin-script " /> \n \n \n 修改 context.xml \n \n \n 打开 webapps 下的 host-manager 和 manager ，在 META-INF 里面都有 context.xml \n \n vi  webapps/manager/META-INF/context.xml\n vi  webapps/host-manager/META-INF/context.xml\n \n \n 修改 <Context antiResourceLocking="false" privileged="true" > 节点 \n \n \n 这段代码的作用是限制来访IP的， 127.d+.d+.d+|::1|0:0:0:0:0:0:0:1 是正则表达式，表示 IPv4 和 IPv6 的本机环回地址 \n \n < Valve   className = " org.apache.catalina.valves.RemoteAddrValve " \n      allow = " 127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1|\\d+\\.\\d+\\.\\d+\\.\\d+ "   /> \n 启动时一直卡100% \n \n 有可能是mybatis的mapper XML多了（比如删除了dao，而没有删除xml） \n 还有可能是xml内的语法或元素错误（比如两个标签的id重复） \n 或者没有对用到的实体类进行扫描 \n 检查xml中映射的实体类全限定路径（改了包名） \n \n \n eclipse+tomcat 启动已有工程时卡在starting100%状态的解决办法 \n tomcat启动时卡在100%（preparing launch delegate...） \n 请考虑增加缓存的最大空间 \n \n https://tomcat.apache.org/tomcat-9.0-doc/config/resources.html#Attributes \n \n \n 编辑 tomcat\\conf\\context.xml 或 webapp\\META-INF\\context.xml 文件 \n \n \x3c!-- cachingAllowed是否缓存静态资源 --\x3e \n < Resources   cachingAllowed = " true "   cacheMaxSize = " 102400 "   cacheObjectMaxSize = " 1024 " /> \n CentOS安装Tomcat \n \n https://tomcat.apache.org \n \n 解压 \n tar   -zxvf  apache-tomcat-8.5.31.tar.gz\n \n 重命名目录 \n mv  apache-tomcat-8.5.31 tomcat-8080\n \n 复制目录 \n cp   -r  tomcat-8080 tomcat-8082\n \n 修改第二个Tomcat配置 \n \n 进入tomcat-8082的 bin 目录，修改 startup.sh 和 shutdown.sh 两个文件，都添加如下内容 \n \n ######### tomcat 2 ########## \n export   JAVA_HOME = JDK安装目录\n export   PATH = $PATH : $JAVA_HOME /bin\n export   CLASSPATH = $JAVA_HOME /lib\n export   CATALINA_HOME = $CATALINA_2_HOME \n export   CATALINA_BASE = $CATALINA_2_BASE \n ######### tomcat 2 ########## \n \n \n 修改第二个tomcat端口,第一个不变 \n \n \n 进入 /tomcat-8082/conf 中修改 server.xml 修改后示例如下 \n \n \x3c!-- 关闭端口：8005->9005 --\x3e \n < Server   port = " 9005 "   shutdown = " SHUTDOWN " > \n\n \x3c!-- Web端口：8080->8181 --\x3e \n < Connector   port = " 8181 "   maxHttpHeaderSize = " 8192 " \n maxThreads = " 150 "   minSpareThreads = " 25 "   maxSpareThreads = " 75 " \n enableLookups = " false "   redirectPort = " 8443 "   acceptCount = " 100 " \n connectionTimeout = " 20000 "   disableUploadTimeout = " true "   /> \n\n \x3c!-- 监听端口：8009->9009 --\x3e \n < Connector   port = " 9009 "   enableLookups = " false "   redirectPort = " 8443 "   protocol = " AJP/1.3 "   /> \n \n 添加环境变量 \n \n 在 /etc/profile 文件中加入下面内容配置环境变量 \n \n ########## tomcat 1 ########### \n CATALINA_BASE = /home/tomcat-8080\n CATALINA_HOME = /home/tomcat-8080\n TOMCAT_HOME = /home/tomcat-8080\n export  CATALINA_BASE CATALINA_HOME TOMCAT_HOME\n ########## tomcat 1############ \n\n ######### tomcat 2 ########## \n CATALINA_2_BASE = /home/tomcat-8082\n CATALINA_2_HOME = /home/tomcat-8082\n TOMCAT_2_HOME = /home/tomcat-8082\n export  CATALINA_2_BASE CATALINA_2_HOME TOMCAT_2_HOME\n ########## tomcat 2########## \n \n \n 刷新环境变量 \n \n \n source 命令也称为“点命令”，也就是一个点符号 . 。 source 命令通常用于重新执行刚修改的初始化文件，使之立即生效 \n \n source  /etc/profile \n或者 \n .  /etc/profile\n window运行 \n \n 在文件头部添加隐藏窗口运行 并修改以下文件，执行不显示dos窗口 \n \n :: window下tomcat在当前窗口启动，不在一个新的窗口启动：把start改为run \n call   "%EXECUTABLE%"  start  %CMD_LINE_ARGS% \n call   "%EXECUTABLE%"  run  %CMD_LINE_ARGS% \n \n ',createdTime:1761814324e3},{title:"Bookmarks",frontmatter:{description:"TED（最优质的演讲） https://www.ted.com\n谷粉学术 https://gfsoso.99lb.net/scholar.html\n大学资源网 http://www.dxzy163.com\n简答题 http://www.jiandati.com\n网易公开课 https://open.163.com/ted\n网易云课堂 https://study.163.com\n中国大学MOOC http://www.icourse163.org\n网易云课堂 http://study.163.com\n哔哩哔哩弹幕网 http://www.bilibili.com\n我要自学网 http://www.51zxw.net\n学堂在线 http://www.xuetangx.com\n爱课程 http://www.icourses.cn\n猫咪论文 https://lunwen.im\niData（论文搜索） http://www.cn-ki.net\n文泉考试 https://www.wqkaoshi.com\n通过实践学习 https://scrimba.com\nhttps://www.geeksforgeeks.org\nhttps://flaviocopes.com\nhttps://topbook.cc\n    https://www.zhihu.com/org/topbook\n翻译视频 https://crashcourse.club\n设计师口袋心理学\n认知偏差知识手册\n认知偏差\nhttps://github.com/debitCrossBlockchain/renzhengfei\nhttps://github.com/fenwii/huaweimind\n学英语 https://github.com/xiaolai/everyone-can-use-english\nhttps://github.com/byoungd/English-level-up-tips\nhttps://github.com/luzhenhua/NCE-Flow\n英语单词列表 https://github.com/dwyl/english-words\nhttps://www.languagereactor.com\nhttps://youglish.com\nhttps://medevel.com/tag/open-source",meta:[{name:"twitter:title",content:"Bookmarks"},{name:"twitter:description",content:"TED（最优质的演讲） https://www.ted.com\n谷粉学术 https://gfsoso.99lb.net/scholar.html\n大学资源网 http://www.dxzy163.com\n简答题 http://www.jiandati.com\n网易公开课 https://open.163.com/ted\n网易云课堂 https://study.163.com\n中国大学MOOC http://www.icourse163.org\n网易云课堂 http://study.163.com\n哔哩哔哩弹幕网 http://www.bilibili.com\n我要自学网 http://www.51zxw.net\n学堂在线 http://www.xuetangx.com\n爱课程 http://www.icourses.cn\n猫咪论文 https://lunwen.im\niData（论文搜索） http://www.cn-ki.net\n文泉考试 https://www.wqkaoshi.com\n通过实践学习 https://scrimba.com\nhttps://www.geeksforgeeks.org\nhttps://flaviocopes.com\nhttps://topbook.cc\n    https://www.zhihu.com/org/topbook\n翻译视频 https://crashcourse.club\n设计师口袋心理学\n认知偏差知识手册\n认知偏差\nhttps://github.com/debitCrossBlockchain/renzhengfei\nhttps://github.com/fenwii/huaweimind\n学英语 https://github.com/xiaolai/everyone-can-use-english\nhttps://github.com/byoungd/English-level-up-tips\nhttps://github.com/luzhenhua/NCE-Flow\n英语单词列表 https://github.com/dwyl/english-words\nhttps://www.languagereactor.com\nhttps://youglish.com\nhttps://medevel.com/tag/open-source"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Other/Bookmarks.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Bookmarks"},{property:"og:description",content:"TED（最优质的演讲） https://www.ted.com\n谷粉学术 https://gfsoso.99lb.net/scholar.html\n大学资源网 http://www.dxzy163.com\n简答题 http://www.jiandati.com\n网易公开课 https://open.163.com/ted\n网易云课堂 https://study.163.com\n中国大学MOOC http://www.icourse163.org\n网易云课堂 http://study.163.com\n哔哩哔哩弹幕网 http://www.bilibili.com\n我要自学网 http://www.51zxw.net\n学堂在线 http://www.xuetangx.com\n爱课程 http://www.icourses.cn\n猫咪论文 https://lunwen.im\niData（论文搜索） http://www.cn-ki.net\n文泉考试 https://www.wqkaoshi.com\n通过实践学习 https://scrimba.com\nhttps://www.geeksforgeeks.org\nhttps://flaviocopes.com\nhttps://topbook.cc\n    https://www.zhihu.com/org/topbook\n翻译视频 https://crashcourse.club\n设计师口袋心理学\n认知偏差知识手册\n认知偏差\nhttps://github.com/debitCrossBlockchain/renzhengfei\nhttps://github.com/fenwii/huaweimind\n学英语 https://github.com/xiaolai/everyone-can-use-english\nhttps://github.com/byoungd/English-level-up-tips\nhttps://github.com/luzhenhua/NCE-Flow\n英语单词列表 https://github.com/dwyl/english-words\nhttps://www.languagereactor.com\nhttps://youglish.com\nhttps://medevel.com/tag/open-source"},{property:"og:url",content:"https://bajins.com/Other/Bookmarks.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Bookmarks"},{itemprop:"description",content:"TED（最优质的演讲） https://www.ted.com\n谷粉学术 https://gfsoso.99lb.net/scholar.html\n大学资源网 http://www.dxzy163.com\n简答题 http://www.jiandati.com\n网易公开课 https://open.163.com/ted\n网易云课堂 https://study.163.com\n中国大学MOOC http://www.icourse163.org\n网易云课堂 http://study.163.com\n哔哩哔哩弹幕网 http://www.bilibili.com\n我要自学网 http://www.51zxw.net\n学堂在线 http://www.xuetangx.com\n爱课程 http://www.icourses.cn\n猫咪论文 https://lunwen.im\niData（论文搜索） http://www.cn-ki.net\n文泉考试 https://www.wqkaoshi.com\n通过实践学习 https://scrimba.com\nhttps://www.geeksforgeeks.org\nhttps://flaviocopes.com\nhttps://topbook.cc\n    https://www.zhihu.com/org/topbook\n翻译视频 https://crashcourse.club\n设计师口袋心理学\n认知偏差知识手册\n认知偏差\nhttps://github.com/debitCrossBlockchain/renzhengfei\nhttps://github.com/fenwii/huaweimind\n学英语 https://github.com/xiaolai/everyone-can-use-english\nhttps://github.com/byoungd/English-level-up-tips\nhttps://github.com/luzhenhua/NCE-Flow\n英语单词列表 https://github.com/dwyl/english-words\nhttps://www.languagereactor.com\nhttps://youglish.com\nhttps://medevel.com/tag/open-source"}]},regularPath:"/Other/Bookmarks.html",relativePath:"Other/Bookmarks.md",key:"v-61c3b8ad",path:"/Other/Bookmarks.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"学习",slug:"学习"},{level:2,title:"冷知识和黑科技",slug:"冷知识和黑科技"},{level:2,title:"导航页",slug:"导航页"},{level:2,title:"音视频",slug:"音视频"},{level:2,title:"设计",slug:"设计"},{level:2,title:"文档",slug:"文档"},{level:2,title:"图片",slug:"图片"},{level:2,title:"基金股票",slug:"基金股票"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Bookmarks \n Flag 学习 冷知识和黑科技 导航页 音视频 设计 文档 图片 基金股票 \n Flag \n \n 书签管理器  https://github.com/linkwarden/linkwarden \n https://github.com/omnivore-app/omnivore \n https://github.com/hoarder-app/hoarder \n Web归档  https://github.com/webrecorder \n https://github.com/dginev/ar5iv \n https://github.com/dosyago/DownloadNet \n URL分类  https://github.com/CH563/gtps-url \n 隐私  https://github.com/pluja/awesome-privacy \n https://github.com/bayandin/awesome-awesomeness \n \n \n 130 余个相见恨晚的超实用网站 \n https://dmucd.github.io/archives \n 2023年终总结  https://github.com/saveweb/review-2023 \n Huberman Lab Podcast 全系列笔记 \n https://github.com/zijie0/HumanSystemOptimization \n HackerNews每日AI摘要  https://www.supertechfans.com/cn \n 学习 \n \n TED（最优质的演讲）  https://www.ted.com \n 谷粉学术  https://gfsoso.99lb.net/scholar.html \n 大学资源网  http://www.dxzy163.com \n 简答题  http://www.jiandati.com \n 网易公开课  https://open.163.com/ted \n 网易云课堂  https://study.163.com \n 中国大学MOOC  http://www.icourse163.org \n 网易云课堂  http://study.163.com \n 哔哩哔哩弹幕网  http://www.bilibili.com \n 我要自学网  http://www.51zxw.net \n 学堂在线  http://www.xuetangx.com \n 爱课程  http://www.icourses.cn \n 猫咪论文  https://lunwen.im \n iData（论文搜索）  http://www.cn-ki.net \n 文泉考试  https://www.wqkaoshi.com \n 通过实践学习  https://scrimba.com \n https://www.geeksforgeeks.org \n https://flaviocopes.com \n https://topbook.cc \n \n https://www.zhihu.com/org/topbook \n \n \n 翻译视频  https://crashcourse.club \n 设计师口袋心理学 \n 认知偏差知识手册 \n 认知偏差 \n https://github.com/debitCrossBlockchain/renzhengfei \n https://github.com/fenwii/huaweimind \n 学英语  https://github.com/xiaolai/everyone-can-use-english \n https://github.com/byoungd/English-level-up-tips \n https://github.com/luzhenhua/NCE-Flow \n 英语单词列表  https://github.com/dwyl/english-words \n https://www.languagereactor.com \n https://youglish.com \n https://medevel.com/tag/open-source \n 冷知识和黑科技 \n \n 上班摸鱼必备（假装电脑系统升级）  http://fakeupdate.net \n PIECES 拼图（30 个 CSS 碎片进行拼图，呈现 30 种濒临灭绝的动物）  http://www.species-in-pieces.com \n 查无此人（刷新网站，展现一张AI 生成的人脸照片）  https://thispersondoesnotexist.com \n 在线制作地图图例  https://mapchart.net \n 创意光线绘画  http://weavesilk.com \n 星系观察  https://stellarium-web.org \n 地球温度  https://zoom.earth/maps/temperature \n 煎蛋  http://jandan.net \n 渣男-说话的艺术  https://lovelive.tools \n 全历史  https://www.allhistory.com \n iData  https://www.cn-ki.net \n 术语在线  http://www.termonline.cn \n 航班线路  https://flight.is26.com \n 屏幕坏点检测  https://deadpixeltest.org \n https://volumeshader.org \n https://sysin.org/archive \n 测试GPU  https://www.volumeshader.dev \n 导航页 \n \n 世界各国网址大全  http://www.world68.com \n 小森林导航  http://www.xsldh6.com \n 简捷工具  http://www.shulijp.com \n NiceTool.net 好工具网  http://www.nicetool.net \n 现实君工具箱（综合型在线工具集成网站）  http://tool.uixsj.cn \n 蓝调网站  http://lcoc.top \n 偷渡鱼  https://touduyu.com \n 牛导航  http://www.ziliao6.com \n 小呆导航  https://www.webjike.com/index.html \n 简法主页  http://www.jianfast.com \n KIM主页  https://kim.plopco.com \n 聚BT  https://jubt.net/cn/index.html \n 精准云工具合集  https://jingzhunyun.com \n 兔2工具合集  https://www.tool2.cn \n 爱资料工具（在线实用工具集合）  http://www.toolnb.com \n 工具导航  https://hao.logosc.cn \n 资源导航  http://hao.zifh.com \n https://www.mjjloc.com \n 音视频 \n \n 阿木影视  https://www.aosk.online \n 电影推荐（分类别致）  http://www.mvcat.com \n APP影院  https://app.movie \n 去看TV  https://www.qukantv.net \n 动漫视频网  http://www.zzzfun.com \n 94神马电影网  http://www.9rmb.com \n NO视频官网  http://www.novipnoad.com \n 蓝光画质电影  http://www.languang.co \n 在线看剧  http://dy.27234.cn \n 大数据导航  http://hao.199it.com \n 多功能图片网站  https://www.logosc.cn/so \n https://shots.so \n 牛牛TV  http://www.ziliao6.com/tv \n VideoFk解析视频  http://www.videofk.com \n 蓝调网站  http://lcoc.top/vip2.3 \n 永久资源采集网  http://www.yongjiuzy1.com \n \n \n 免费下载音乐的网站在哪里? \n 无损音乐吧  https://www.dtshot.com \n https://soundcloud.com \n 超高无损音乐网  https://www.sq688.com \n 无损音乐免费下载  http://www.51ape.com \n http://tool.liumingye.cn/music \n 音频学习  https://www.eartrainx.com \n 全球实时视频  https://www.earthcam.com \n https://www.skylinewebcams.com \n https://www.citywalks.live \n 三维太空可视化  https://eyes.nasa.gov \n 元素周期表  https://github.com/baotlake/periodic-table-pro \n 白噪音  https://ambiph.one \n https://soundbox.fun \n https://www.ppbzy.com \n 视频编辑  https://pikimov.com \n 儿童睡前故事  https://beddystories.com/zh \n 儿歌  https://beddysongs.com/zh \n https://publiciptv.com \n 设计 \n \n 码力全开（产品/设计师/独立开发者的资源库）  https://www.maliquankai.com/designnav \n 免费音频素材  https://icons8.cn/music \n 新CG儿（视频素材模板，无水印+免费下载）  https://www.newcger.com \n 小图标下载  https://www.easyicon.net \n https://github.com/Templarian/MaterialDesign \n Flight Icon  https://www.flighticon.co \n 第一字体转换器  http://www.diyiziti.com \n doyoudosh（平面设计）  http://www.doyoudo.com \n 企业宣传视频在线制作  https://duomu.tv \n MAKE海报设计官网  http://maka.im \n https://www.behance.net \n 一键海报神器  https://www.logosc.cn/photo/?utm_source=hao.logosc.cn&utm_medium=referral \n 字由（字体设计）  http://www.hellofont.cn \n 查字体网站  https://fonts.safe.360.cn \n 爱给网（免费素材下载的网站，包括音效、配乐，3D、视频、游戏，平面、教程）  http://www.aigei.com \n 在线视频剪辑  https://bilibili.clipchamp.com/editor \n 图标生成  https://realfavicongenerator.net \n https://github.com/faviator/faviator \n https://scrnshts.club \n https://appmotion.design \n https://www.meiye.art \n https://uxbaike.com \n https://mjcn.club \n https://www.logocook.shop/editor \n 灵感设计  https://refto.one \n https://github.com/gantFDT/icraft \n \n 3D架构图  https://icraft.gantcloud.com \n \n \n DIY项目  https://makeityourself.org \n 王慧文清华产品课 \n 产品反馈  https://www.featurebase.app \n 图表制作  https://chartfromtext.com \n https://makegraph.app \n 文档 \n \n 即书（在线制作PPT）  https://www.keysuper.com \n PDF处理  https://smallpdf.com/cn \n PDF处理  https://www.ilovepdf.com/zh-cn \n PDF处理  https://www.pdfpai.com \n PDF处理  https://www.hipdf.cn \n 图片压缩，PDF处理  https://docsmall.com \n iLovePDF（在线转换PDF利器）  http://www.ilovepdf.com \n PPT在线制作  https://www.woodo.cn \n PDF24工具（pdf处理工具）  https://tools.pdf24.org/en \n IMGBOT（在线图片处理）  http://www.imgbot.ai \n 福昕云编辑（在线编辑PDF）  http://edit.foxitcloud.cn \n TinyPNG（在线压缩图片）  tinypng.com \n UZER.ME（在线使用各种大应用，在线使用CAD，MATLAB，Office三件套）  http://uzer.me \n 优品PPT（模板下载）  http://www.ypppt.com \n 第一PPT（模板下载）  http://www.1ppt.com/xiazai \n 三顿PPT导航  http://sandunppt.com \n Excel函数表 \n 字帖生成  https://paper.z2h.cn \n 图片 \n \n 电脑壁纸  http://lcoc.top/bizhi \n https://unsplash.com \n https://pixabay.com \n https://www.pexels.com \n https://visualhunt.com \n https://www.ssyer.com \n 彼岸图网  http://pic.netbian.com \n 极像素（超高清大图）  https://www.sigoo.com \n 免费版权图片搜索  https://www.logosc.cn/so \n http://www.gooico.com \n https://cleanup.pictures \n https://www.gaituya.com/ps \n https://imagecompressor.com/zh \n https://tinyPNG.com \n https://picwish.cn \n https://www.huismessager.com \n 共享卡片  https://share.aitimi.cn \n 名片设计  https://yft.design \n 图像压缩  https://compressjpg.io \n 模拟摄影  https://www.filmtypes.com \n 基金股票 \n \n https://github.com/OpenQuant-Community/quant-fund \n https://github.com/axiaoxin-com/investool \n https://github.com/1zilc/fishing-funds \n https://github.com/wanyuqin/live-trading \n https://github.com/lanZzV/fund \n https://github.com/Micro-sheep/efinance \n https://github.com/sauon1314/fund-visual-platform \n 扩展  https://github.com/x2rr/funds \n \n https://gitee.com/rabt/funds \n \n \n API  https://github.com/kouchao/TiantianFundApi \n https://github.com/zhangxiangliang/stock-api \n https://github.com/Gy-hy/ttfunds \n https://github.com/huage2580/leeks \n https://github.com/Aerolite794/Aerolite_fund_ana \n 策略回测  https://github.com/refraction-ray/xalpha \n https://github.com/hsliuping/TradingAgents-CN \n https://github.com/key06/stock_predict \n https://github.com/LargeCupPanda/StockAnal_Sys \n https://github.com/ArvinLovegood/go-stock \n 指数估值备份  https://github.com/caibingcheng/djeva \n 财经资讯  https://github.com/sgrsun3/FinNewsCollectionBot \n \n \n https://github.com/jianglang740/Basic-OF-Python-Learning \n https://github.com/louloulin/mdb \n \n",createdTime:1761814324e3},{title:"专业术语",frontmatter:{description:"英语词汇 http://testyourvocab.com\nhttps://testyourculture.com\nhttps://liuxue.ef.com.cn/epi\nhttps://freerice.com/categories/english-vocabulary\nhttps://sourceforge.net/projects/stardict-4\n    https://github.com/huzheng001\nhttps://oldwestenglish.github.io/grammar\n黑客背单词 https://sourceforge.net/projects/reciteword\nhttps://github.com/JuanitoFatas/Computer-Science-Glossary\n编程开发常用词汇\n认知",meta:[{name:"twitter:title",content:"专业术语"},{name:"twitter:description",content:"英语词汇 http://testyourvocab.com\nhttps://testyourculture.com\nhttps://liuxue.ef.com.cn/epi\nhttps://freerice.com/categories/english-vocabulary\nhttps://sourceforge.net/projects/stardict-4\n    https://github.com/huzheng001\nhttps://oldwestenglish.github.io/grammar\n黑客背单词 https://sourceforge.net/projects/reciteword\nhttps://github.com/JuanitoFatas/Computer-Science-Glossary\n编程开发常用词汇\n认知"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Other/%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD.html"},{property:"og:type",content:"article"},{property:"og:title",content:"专业术语"},{property:"og:description",content:"英语词汇 http://testyourvocab.com\nhttps://testyourculture.com\nhttps://liuxue.ef.com.cn/epi\nhttps://freerice.com/categories/english-vocabulary\nhttps://sourceforge.net/projects/stardict-4\n    https://github.com/huzheng001\nhttps://oldwestenglish.github.io/grammar\n黑客背单词 https://sourceforge.net/projects/reciteword\nhttps://github.com/JuanitoFatas/Computer-Science-Glossary\n编程开发常用词汇\n认知"},{property:"og:url",content:"https://bajins.com/Other/%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"专业术语"},{itemprop:"description",content:"英语词汇 http://testyourvocab.com\nhttps://testyourculture.com\nhttps://liuxue.ef.com.cn/epi\nhttps://freerice.com/categories/english-vocabulary\nhttps://sourceforge.net/projects/stardict-4\n    https://github.com/huzheng001\nhttps://oldwestenglish.github.io/grammar\n黑客背单词 https://sourceforge.net/projects/reciteword\nhttps://github.com/JuanitoFatas/Computer-Science-Glossary\n编程开发常用词汇\n认知"}]},regularPath:"/Other/%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD.html",relativePath:"Other/专业术语.md",key:"v-14463ec3",path:"/Other/%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"中文",slug:"中文"},{level:2,title:"英文",slug:"英文"},{level:2,title:"🧠 什么是第一性原理？",slug:"🧠-什么是第一性原理"},{level:3,title:"定义：",slug:"定义"},{level:3,title:"第一性原理思维的核心步骤：",slug:"第一性原理思维的核心步骤"},{level:2,title:"🔍 举个经典例子：埃隆·马斯克与电池成本",slug:"🔍-举个经典例子-埃隆·马斯克与电池成本"},{level:2,title:"🛠️ 如何应用第一性原理思维？",slug:"🛠️-如何应用第一性原理思维"},{level:3,title:"步骤 1：明确你要解决的问题",slug:"步骤-1-明确你要解决的问题"},{level:3,title:"步骤 2：质疑现有假设",slug:"步骤-2-质疑现有假设"},{level:3,title:"步骤 3：拆解问题到最基础层面",slug:"步骤-3-拆解问题到最基础层面"},{level:3,title:"步骤 4：从底层逻辑重构解决方案",slug:"步骤-4-从底层逻辑重构解决方案"},{level:2,title:"💡 第一性原理 vs 类比思维",slug:"💡-第一性原理-vs-类比思维"},{level:2,title:"🎯 适用场景",slug:"🎯-适用场景"},{level:2,title:"📚 相关概念推荐",slug:"📚-相关概念推荐"},{level:2,title:"✅ 小结：如何训练第一性原理思维？",slug:"✅-小结-如何训练第一性原理思维"},{level:2,title:"一、工作的基本定义",slug:"一、工作的基本定义"},{level:2,title:"二、如何让工作变得不痛苦，甚至感到幸福？",slug:"二、如何让工作变得不痛苦-甚至感到幸福"},{level:2,title:"三、三种层次的工作幸福感",slug:"三、三种层次的工作幸福感"},{level:3,title:"✅ 最幸福的工作",slug:"✅-最幸福的工作"},{level:3,title:"⚖️ 中等幸福的工作",slug:"⚖️-中等幸福的工作"},{level:3,title:"❌ 不太幸福的工作",slug:"❌-不太幸福的工作"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 专业术语 \n Flag 中文 英文 🧠 什么是第一性原理？ 定义： 第一性原理思维的核心步骤： 🔍 举个经典例子：埃隆·马斯克与电池成本 🛠️ 如何应用第一性原理思维？ 步骤 1：明确你要解决的问题 步骤 2：质疑现有假设 步骤 3：拆解问题到最基础层面 步骤 4：从底层逻辑重构解决方案 💡 第一性原理 vs 类比思维 🎯 适用场景 📚 相关概念推荐 ✅ 小结：如何训练第一性原理思维？ 一、工作的基本定义 二、如何让工作变得不痛苦，甚至感到幸福？ 三、三种层次的工作幸福感 ✅ 最幸福的工作 ⚖️ 中等幸福的工作 ❌ 不太幸福的工作 \n Flag \n \n 英语词汇  http://testyourvocab.com \n https://testyourculture.com \n https://liuxue.ef.com.cn/epi \n https://freerice.com/categories/english-vocabulary \n https://sourceforge.net/projects/stardict-4 \n \n https://github.com/huzheng001 \n \n \n https://oldwestenglish.github.io/grammar \n 黑客背单词  https://sourceforge.net/projects/reciteword \n https://github.com/JuanitoFatas/Computer-Science-Glossary \n 编程开发常用词汇 \n 认知 \n 中文 \n \n 出栈 \n 入栈 \n 压栈 \n 可变性 \n 偏移性 \n 有状态对象(Stateful Bean) \n 无状态对象(Stateless Bean) \n 域 \n 泛型 \n 进制 \n 补码 \n 原码 \n 反码 \n zigzag \n 显式声明和隐式声明 \n 形参/实参 \n 重载/重构/重写 \n 覆盖/覆写 \n 指令重排 \n 内存屏障 \n 原子性 \n 可见性 \n 有序性 \n Volatile \n 弱类型： 允许不兼容的类型进行运算，如数字除字符串是合法的 \n 强类型 \n 动态类型：声明一个变量之后，可以存储（指向）不同类型，如变量可以一会是字符串，一会是浮点 \n 静态类型 \n 增量更新/热更新/强更新/差量更新 \n 编码 \n 编译 \n 序列 \n 队列 \n 侧加载 \n 代码管理 \n 冒烟测试 \n 回归测试 \n 持续测试 \n 功能测试 \n 集成测试 \n 系统测试 \n 单元测试 \n 基准测试 \n 模糊测试 \n 持续开发 \n 持续集成 \n 持续构建 \n 持续部署 \n 持续监控 \n 敏捷流程 \n 哨兵（Sentinel） \n 从节点（replication/replica/slave） \n 全限定类名 \n 非限定类名 \n 解构（Destructuring） \n 展开运算符（Spread Operator） \n FFI(Foreign Function Interface) 编程语言交互接口 \n ABI(Application Binary Interface) 应用程序二进制接口 \n 材料化视图（实体化视图、物化视图） 一种特殊的数据库视图 \n 索引视图 \n 分区视图 \n 类型推断/类型推理/类型推导(Type inference/Type deduction) \n 抽象数据类型（ADT，Abstract Data Type） \n 边缘平台架构（edge platform） \n 巴士因子：一支团队里有多少成员意外被巴士撞了（或者受其他偶发因素影响而无法继续工作），才会导致项目陷入停滞。 \n MCDC测试覆盖率：确定代码修改条件的决策覆盖率。也就是说测试必须保证所生成二进制代码中的每个分支操作至少跑通一次。 \n 正向代理-传统模式 \n 正向代理-透明模式 \n 反向代理模式 \n 负载均衡（Load Balancing） \n 代码检查工具（Linter） \n 副作用 (Side Effects) \n 竞争条件 (Race Conditions) \n 隔离性 (Isolation) \n 清晰性 (Clarity) \n 安全性 (Safety) \n Friendly Enough Expression Language （FEEL） 旨在以业务专业人员和开发人员都易于理解的方式编写表达式 \n OGSA（Open Grid Services Architecture）是开放网络服务框架，定义了网格服务（Grid Services）的概念 \n 代码走查(code walkthrough) \n 代码审查(code inspection) \n 英文 \n \n 程序员工作中常见的英语词汇 \n \n \n CURD \n CRUD \n \n 常用词汇 \n \n add \n edit \n delete \n del \n query \n get \n select \n insert \n write \n read \n out \n input \n in \n of \n for \n by \n exist \n not \n is \n and \n has \n is \n can \n allow \n defunct \n orig \n target \n dest \n source \n notice \n inform \n notify \n notification \n apprize \n native \n local \n locale \n location \n retrieve \n this \n self \n cls \n clz \n class \n clazz \n sideload \n Sideloading  旁加载/侧加载 \n chaos  混沌测试 \n CookieJar  HTTP 请求时存储和管理cookies，同CookieManager、BasicCookieStore \n \n 月份/星期 \n \n 一月：January（Jan） \n 二月：February（Feb） \n 三月：March（Mar） \n 四月：April（Apr） \n 五月：May（May） \n 六月：June（Jun） \n 七月：July（Jul） \n 八月：August（Aug） \n 九月：September（Sept） \n 十月：October（Oct） \n 十一月：November（Nov） \n 十二月：December（Dec） \n 星期一：Monday（Mon） \n 星期二：Tuesday（Tues） \n 星期三：Wednesday（Wed） \n 星期四：Thursday（Thur） \n 星期五：Friday（Fri） \n 星期六：Saturday（Sat） \n 星期日：Sunday（Sun） \n 第一性原理思维 \n 第一性原理思维（First Principles Thinking）  是一种 从本质出发、层层推导 的思维方式，常用于解决问题、创新思考和决策制定。它强调 打破表象、回归基本事实 ，然后基于这些不可再拆分的“第一性原理”重新构建解决方案。 \n 🧠 什么是第一性原理？ \n 定义： \n \n 第一性原理 （First Principle）是指某个领域中最基本、不可再分解的前提或真理。它是推理和判断的基础。 \n 第一性原理思维的核心步骤： \n \n 识别问题或现状 \n 质疑现有假设 \n 拆解为最基本的组成部分（即“第一性原理”） \n 从这些基本原理出发，重新构建新的解决方案 \n 🔍 举个经典例子：埃隆·马斯克与电池成本 \n 背景 ：传统观念认为电动车太贵是因为电池太贵。 \n \n 普通思路：沿用现有电池价格 → 成本高 → 无法普及 \n 马斯克的思路（第一性原理）： \n \n \n “电池是由哪些材料组成的？铁、镍、钴、铝等金属元素。如果我直接购买这些原材料，成本是多少？” \n→ 结果发现：原材料成本远低于成品电池的价格。 \n \n 于是特斯拉开始自己研发和制造电池，大幅降低成本。 \n 🛠️ 如何应用第一性原理思维？ \n 步骤 1：明确你要解决的问题 \n \n 例如：“为什么我们的产品开发周期这么长？” \n 步骤 2：质疑现有假设 \n \n “大家都说流程复杂是正常的”、“我们一直就是这么做的” —— 这些可能是偏见或历史惯性。 \n 步骤 3：拆解问题到最基础层面 \n \n 开发周期长可能由以下因素构成： \n \n \n 需求评审流程 \n 设计沟通效率 \n 开发任务分配 \n 测试反馈机制 \n 上线部署流程 \n \n 继续追问每个环节的基本原理： \n \n “需求评审真的需要这么多层级吗？” \n “测试是否必须人工参与每一步？” \n 步骤 4：从底层逻辑重构解决方案 \n \n 基于核心要素重新设计流程： \n \n \n 引入自动化测试减少人工等待 \n 精简审批流程，采用异步确认机制 \n 使用敏捷开发快速迭代 \n 💡 第一性原理 vs 类比思维 \n \n \n \n 思维方式 \n 描述 \n 特点 \n 示例 \n \n \n \n \n 类比思维 \n “别人怎么做我就怎么做” \n 快速但易陷入路径依赖 \n 看别人做APP我也做APP \n \n \n 第一性原理 \n “这件事的本质是什么？我能怎么重新做？” \n 缓慢但更具创新性 \n 马斯克造火箭、贝佐斯建AWS \n 🎯 适用场景 \n \n 创新突破（如新产品、新技术） \n 复杂问题解决（如系统瓶颈、流程优化） \n 决策制定（如战略方向、投资选择） \n 教育学习（深入理解知识本质） \n 📚 相关概念推荐 \n \n 奥卡姆剃刀原则 （Occam’s Razor）：如无必要，勿增实体。 \n 5 Why 分析法 ：连续问5次“为什么”，找到根本原因。 \n 逆向思维 / 反证法 ：从结果倒推，验证逻辑是否成立。 \n 费曼技巧 ：将复杂概念简化表达，检验理解深度。 \n ✅ 小结：如何训练第一性原理思维？ \n \n 多问“为什么” ，不接受表面答案 \n 学会拆解问题 ，直到不能再拆 \n 尝试重构方案 ，从零开始思考 \n 挑战传统做法 ，问“这是最优解吗？” \n 不断练习 ：在日常生活中使用（比如做饭、买手机、选课等） \n 关于工作的意义 \n 不知道大伙有没有想过工作的意义是什么，特别是对于工程师而言。 \n 一、工作的基本定义 \n 简单说，工作就是为了获得收入和满足消费而进行的有组织的劳动。既然是有组织的，那么就不是完全自由的，甚至会有不少人觉得是痛苦的。 \n 因此，在19世纪出现了不少“工作最光荣”的理论和社会价值观，用于解决当时人们不愿意去工厂干活的主动性问题。 \n 二、如何让工作变得不痛苦，甚至感到幸福？ \n 我理解的答案是： \n \n 用自己的专业去解决问题、提供服务，并且刚好是自己热爱的事情 ，也就是： \n做自己喜欢的事情，顺便把钱赚了。 \n 三、三种层次的工作幸福感 \n ✅ 最幸福的工作 \n \n 特点 ：不是别人分配给你的，而是你自己发现的。 \n 核心 ：结合市场需求与自身擅长，提供解决方案、服务或情绪价值。 \n 优势 ：能解决你想解决的问题，具有高度自主性和成就感。 \n ⚖️ 中等幸福的工作 \n \n 特点 ：虽然大方向不受自己控制，但对自己做的事情有一定掌控感。 \n 核心 ：不是被异化的劳动。 \n 目标 ：在这个过程中培养能力，逐步向“最幸福的工作”迈进。 \n ❌ 不太幸福的工作 \n \n 特点 ：做的不是自己想做的事，属于被异化的工作。 \n 思考方向 ：\n \n 这份工作是否可以帮助你摆脱经济束缚？ \n 是否有一个明确的“脱离之日”？ \n \n \n 策略 ：\n \n 先解决温饱； \n 在此过程中积累能力，为未来转型做准备； \n 目标是转变为中等幸福或最幸福的工作。 \n \n \n \n \n 📌  总结 ：工作的意义不仅是谋生手段，更是实现自我价值、创造社会价值的过程。找到热爱并为之努力，才能真正实现职业上的幸福。 \n \n",createdTime:1761814324e3},{title:"Markdown",frontmatter:{description:"该文件用来测试和展示书写README的各种markdown语法。\n>\n> GitHub的markdown语法在标准的markdown语法基础上做了扩充，称之为GitHub Flavored Markdown。简称GFM，GFM在GitHub上有广泛应用，\n> 除了README文件外，issues和wiki均支持markdown语法。",meta:[{name:"image",content:"https://bajins.com/URL title"},{name:"twitter:title",content:"Markdown"},{name:"twitter:description",content:"该文件用来测试和展示书写README的各种markdown语法。\n>\n> GitHub的markdown语法在标准的markdown语法基础上做了扩充，称之为GitHub Flavored Markdown。简称GFM，GFM在GitHub上有广泛应用，\n> 除了README文件外，issues和wiki均支持markdown语法。"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/URL title"},{name:"twitter:url",content:"https://bajins.com/Other/Markdown.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Markdown"},{property:"og:description",content:"该文件用来测试和展示书写README的各种markdown语法。\n>\n> GitHub的markdown语法在标准的markdown语法基础上做了扩充，称之为GitHub Flavored Markdown。简称GFM，GFM在GitHub上有广泛应用，\n> 除了README文件外，issues和wiki均支持markdown语法。"},{property:"og:image",content:"https://bajins.com/URL title"},{property:"og:url",content:"https://bajins.com/Other/Markdown.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Markdown"},{itemprop:"description",content:"该文件用来测试和展示书写README的各种markdown语法。\n>\n> GitHub的markdown语法在标准的markdown语法基础上做了扩充，称之为GitHub Flavored Markdown。简称GFM，GFM在GitHub上有广泛应用，\n> 除了README文件外，issues和wiki均支持markdown语法。"},{itemprop:"image",content:"https://bajins.com/URL title"}]},regularPath:"/Other/Markdown.html",relativePath:"Other/Markdown.md",key:"v-53f85f06",path:"/Other/Markdown.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"横线",slug:"横线"},{level:2,title:"标题",slug:"标题"},{level:2,title:"文本",slug:"文本"},{level:3,title:"普通文本",slug:"普通文本"},{level:3,title:"单行文本",slug:"单行文本"},{level:3,title:"文本块",slug:"文本块"},{level:3,title:"文字高亮",slug:"文字高亮"},{level:2,title:"表格",slug:"表格"},{level:2,title:"字体",slug:"字体"},{level:2,title:"图片",slug:"图片"},{level:2,title:"链接",slug:"链接"},{level:3,title:"URL变量",slug:"url变量"},{level:3,title:"图片链接",slug:"图片链接"},{level:3,title:"锚点",slug:"锚点"},{level:2,title:"列表",slug:"列表"},{level:3,title:"无序列表",slug:"无序列表"},{level:3,title:"多级无序列表",slug:"多级无序列表"},{level:3,title:"有序列表",slug:"有序列表"},{level:3,title:"复选框列表",slug:"复选框列表"},{level:2,title:"块引用",slug:"块引用"},{level:3,title:"常用于引用文本",slug:"常用于引用文本"},{level:3,title:"块引用有多级结构",slug:"块引用有多级结构"},{level:2,title:"代码高亮",slug:"代码高亮"},{level:2,title:"diff语法",slug:"diff语法"},{level:2,title:"HTML元素",slug:"html元素"},{level:2,title:"工具",slug:"工具"},{level:3,title:"输出目录结构",slug:"输出目录结构"},{level:3,title:"微信公众号排版",slug:"微信公众号排版"},{level:3,title:"表格生成",slug:"表格生成"},{level:3,title:"生成标题目录树",slug:"生成标题目录树"},{level:3,title:"解析库",slug:"解析库"},{level:3,title:"在线版客户端",slug:"在线版客户端"},{level:3,title:"本地版客户端",slug:"本地版客户端"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Markdown \n Flag 横线 标题 文本 普通文本 单行文本 文本块 文字高亮 表格 字体 图片 链接 URL变量 图片链接 锚点 列表 无序列表 多级无序列表 有序列表 复选框列表 块引用 常用于引用文本 块引用有多级结构 代码高亮 diff语法 HTML元素 工具 输出目录结构 微信公众号排版 表格生成 生成标题目录树 解析库 在线版客户端 本地版客户端 \n Flag \n \n 该文件用来测试和展示书写README的各种markdown语法。 \n GitHub的markdown语法在标准的markdown语法基础上做了扩充，称之为 GitHub Flavored Markdown 。简称 GFM ，GFM在GitHub上有广泛应用，\n除了README文件外，issues和wiki均支持markdown语法。 \n \n \n https://daringfireball.net/projects/markdown \n \n https://daringfireball.net/projects/markdown/dingus \n \n \n GitHub Flavored Markdown基本撰写和格式语法 \n https://segmentfault.com/markdown \n https://github.com/guodongxiaren/README \n markdown语法大全 \n https://github.com/mattcone/markdown-guide \n \n https://www.markdown.xyz \n \n \n https://guides.github.com/features/mastering-markdown \n https://github.com/Olwiba/Kickass-markdown \n Markdeep是Markdown的超集  https://github.com/morgan3d/markdeep \n CommonMark  https://github.com/commonmark \n MultiMarkdown  https://github.com/fletcher/MultiMarkdown-6 \n Kramdown  https://github.com/gettalong/kramdown \n https://github.com/docbook \n reStructuredText  https://sourceforge.net/projects/docutils \n https://github.com/pygments/pygments \n \n https://github.com/mitsuhiko \n https://github.com/birkenfeld \n \n \n https://github.com/sphinx-doc/sphinx \n \n https://zh-sphinx-doc.readthedocs.io \n \n \n https://sourceforge.net/projects/epydoc \n https://github.com/numpy/numpydoc \n https://github.com/pycco-docs/pycco \n https://github.com/Python-Markdown/markdown \n https://github.com/jgm/pandoc \n https://github.com/Awes0meM4n/Awes0meM4n.github.io \n \n \n 文档转换  https://github.com/topics/converter \n https://github.com/VikParuchuri/marker \n GitHub角落图标  https://github.com/tholman/github-corners \n https://github.com/missive/emoji-mart \n https://github.com/rickstaa/github-emoji-picker \n SVG徽章  https://github.com/badges/shields \n https://github.com/WebpageFX/emoji-cheat-sheet.com \n \n http://www.emoji-cheat-sheet.com \n \n \n https://github.com/carloscuesta/gitmoji \n https://github.com/caiyongji/emoji-list \n https://github.com/12313kaihuang/GitHub-Emoji \n https://github.com/liuchengxu/git-commit-emoji-cn \n https://github.com/afeld/emoji-css \n Github 上 emoji 表情的含义及使用规范 \n https://github.com/mkdocs/mkdocs \n https://www.github.com/VectorLogoZone/vectorlogozone \n \n \n 表情（两个冒号包围的字符）,比如 :blush: ，可以显示 😊 \n \n \n 中文文案排版指北： https://github.com/sparanoid/chinese-copywriting-guidelines \n https://github.com/yikeke/zh-style-guide \n 中英混排文档在线排版工具： https://github.com/CyC2018/Text-Typesetting \n \n https://cyc2018.github.io/Text-Typesetting \n 横线 \n ***\n \n ---\n \n ___\n 标题 \n 一级标题 \n ##  二级标题 \n ###  三级标题 \n ####  四级标题 \n #####  五级标题 \n ######  六级标题 \n 文本 \n 普通文本 \n 这是一段普通的文本 \n 单行文本 \n \n 在一行开头加入1个Tab或者4个空格。 \n \n Hello,大家好，我是果冻虾仁。\n 文本块 \n 语法1 \n \n 在连续几行的文本开头加入1个Tab或者4个空格。 \n \n 欢迎到访\n很高兴见到您\n祝您，早上好，中午好，下午好，晚安\n \n 语法2 \n \n 使用一对各三个的反引号 \n \n \n 该语法也可以实现代码高亮，见 代码高亮 \n \n 欢迎到访\n我是C++码农\n你可以在知乎、CSDN、简书搜索【果冻虾仁】找到我\n 文字高亮 \n \n 文字高亮功能能使行内部分文字高亮，使用一对反引号。 \n \n \n 也适合做一篇文章的tag \n \n `linux` `网络编程` `socket` `epoll` \n \n \n 效果： linux   网络编程   socket   epoll \n \n 换行 \n \n 直接回车不能换行，可以在上一行文本后面补两个空格，这样下一行的文本就换行了。 \n 或者就是在两行文本直接加一个空行。也能实现换行效果，不过这个行间距有点大。 \n 表格 \n \n 表格可以指定对齐方式 \n \n \n \n \n 左对齐 \n 居中 \n 右对齐 \n \n \n \n \n col 3 is \n some wordy text \n $1600 \n \n \n col 2 is \n centered \n $12 \n \n \n zebra stripes \n are neat \n $1 \n 字体 \n \n 斜体、粗体、删除线 \n \n \n \n \n 语法 \n 效果 \n \n \n \n \n *斜体1* \n 斜体1 \n \n \n _斜体2_ \n 斜体2 \n \n \n **粗体1** \n 粗体1 \n \n \n __粗体2__ \n 粗体2 \n \n \n 这是一个 ~~删除线~~ \n 这是一个  删除线 \n \n \n ***斜粗体1*** \n 斜粗体1 \n \n \n ___斜粗体2___ \n 斜粗体2 \n \n \n ***~~斜粗体删除线1~~*** \n 斜粗体删除线1 \n \n \n ~~***斜粗体删除线2***~~ \n 斜粗体删除线2 \n \n \n \n \n 斜体、粗体、删除线可混合使用 \n 图片 \n \n \n 基本格式： ![alt](URL title) \n \n \n alt和title即对应HTML中的alt和title属性（都可省略） \n \n alt表示图片显示失败时的替换文本 \n title表示鼠标悬停在图片时的显示文本（注意这里要加引号） \n \n \n \n \n \n \n 语法 \n 效果 \n \n \n \n \n ![baidu](http://www.baidu.com/img/bdlogo.gif "百度logo") \n \n \n \n ![](http://www.baidu.com/img/bdlogo.gif) \n 链接 \n \n \n \n 语法 \n 效果 \n \n \n \n \n [我的博客](https://www.bajins.com "悬停显示") \n 我的博客 \n \n \n [我的博客](https://www.bajins.com) \n 我的博客 \n URL变量 \n \n 定义变量 \n \n [var]:https://www.bajins.com\n[blog]:https://www.bajins.com "我的博客"\n[baidu-logo]:http://www.baidu.com/img/bdlogo.gif "百度logo"\n \n \n \n \n 使用变量语法 \n 效果 \n \n \n \n \n [使用变量][var] \n 使用变量 \n \n \n [我的博客][blog] \n 我的博客 \n \n \n ![baidu][baidu-logo] \n \n \n \n [![baidu-logo]](https://www.baidu.com) \n 图片链接 \n \n 给图片加链接的本质是混合图片显示语法和普通的链接语法。普通的链接中[ ]内部是链接要显示的文本，而图片链接[ ]里面则是要显示的图片。 \n直接混合两种语法当然可以，但是十分啰嗦，为此我们可以使用URL标识符的形式。 \n \n \n \n \n 语法 \n 效果 \n \n \n \n \n [![weibo](https://weibo.com/favicon.ico)](https://weibo.com) \n \n \n \n [![][zhihu-logo]](https://www.zhihu.com "知乎") \n \n \n \n \n \n 注意，此时鼠标悬停时显示的文字是图片的title，而非链接本身的title了。 \n 锚点 \n \n 其实呢，每一个标题都是一个锚点，和HTML的锚点（ # ）类似，比如 [回到顶部](#readme) 回到顶部 \n \n \n 不过要注意，标题中的英文字母都被转化为 小写字母 了。 \n \n \n 注意 \n \n \n 标题中的空格都是转换为 - ，标题中有除字体或字母数字以外的符号时应该在锚点中直接去除后方可跳转 \n \n * [获得当前日期+时间`date+time`函数](#获得当前日期时间datetime函数)\n\n## 获得当前日期+时间date+time函数\n \n * [获得当前日期+时间（date+time）函数](#获得当前日期时间datetime函数)\n\n## 获得当前日期+时间（date+time）函数\n 列表 \n 无序列表 \n \n 昵称：果冻虾仁 \n \n \n 别名：隔壁老王 \n \n \n 英文名：Jelly \n 多级无序列表 \n \n 编程语言\n \n 脚本语言\n \n Python \n 有序列表 \n 一般效果 \n \n 就是在数字后面加一个点，再加一个空格。不过看起来起来可能不够明显。 \n \n \n 面向对象的三个基本特征： \n \n \n 封装 \n 继承 \n 多态 \n \n 多级有序列表 \n \n 和无序列表一样，有序列表也有多级结构 \n \n \n 这是一级的有序列表，数字1还是1\n \n 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字\n \n 这是三级的有序列表，数字在显示的时候变成了英文字母 \n 复选框列表 \n \n [x] 需求分析 \n [x] 系统设计 \n [x] 详细设计 \n [ ] 编码 \n [ ] 测试 \n [ ] 交付 \n \n \n 您可以使用这个功能来标注某个项目各项任务的完成情况。 \n \n \n Tip: \n \n 在GitHub的 issue 中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。 \n 块引用 \n 常用于引用文本 \n \n 文本摘自《深入理解计算机系统》P27 \n \n 令人吃惊的是，在哪种字节顺序是合适的这个问题上，人们表现得非常情绪化。\n实际上术语“little endian”（小端）和“big endian”（大端）出自Jonathan Swift的《格利佛游记》一书，\n其中交战的两个派别无法就应该从哪一端打开一个半熟的鸡蛋达成一致。因此，争论沦为关于社会政治的争论。\n只要选择了一种规则并且始终如一的坚持，其实对于哪种字节排序的选择都是任意的。 \n \n “端”（endian）的起源 \n以下是Jonathan Swift在1726年关于大小端之争历史的描述： \n“……下面我要告诉你的是，Lilliput和Blefuscu这两大强国在过去36个月里一直在苦战。\n战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，\n可是当今的皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，\n当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破较小的一端，违令者重罚。” \n 块引用有多级结构 \n \n 数据结构 \n \n 树 \n \n 二叉树 \n \n 平衡二叉树 \n \n 满二叉树 \n 代码高亮 \n \n 在三个反引号后面加上编程语言的名字(如果是配置则为 ini 、 conf 、 properties )，另起一行开始写代码，最后一行再加上三个反引号。 \n \n \n https://en.wikipedia.org/wiki/Configuration_file \n https://prismjs.com/#supported-languages \n \n public   static   void   main ( String [ ] args ) { }   //Java \n \n int   main ( int  argc ,   char   * argv [ ] )   //C \n \n echo   "hello GitHub"   #Bash \n \n document . getElementById ( "myH1" ) . innerHTML = "Welcome to my Homepage" ;   //javascipt \n \n string  & operator + ( const  string &  A , const  string &  B )   //cpp \n diff语法 \n \n 版本控制的系统中都少不了 diff 的功能，即展示一个文件内容的增加与删除。 \n \n \n GFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。 \n \n \n 其语法与代码高亮类似，只是在三个反引号后面写 diff ，并且其内容中，以  + 开头表示新增， - 开头表示删除。另外还有有 ! 和 # 的语法。 \n \n \n 效果如下： \n \n +  人闲桂花落，\n -  夜静春山空。\n !  月出惊山鸟，\n时鸣春涧中。\n HTML元素 \n \n <code></code> \n <pre></pre> \n <kdb></kdb>  按钮效果 \n <b></b> \n <strong></strong> \n <i></i> \n <em></em> \n <sup></sup> \n <sub></sub> \n <br/> \n <details><summary style="font-size:160%;">点击查看</summary></details>  折叠 \n 工具 \n \n 跨平台博客同步  https://github.com/LetTTGACO/elog \n 输出目录结构 \n Windows \n \n TREE [drive:][path] [/F] [/A] \n \n /F   显示每个文件夹中文件的名称。默认是只输出文件夹的名字。 \n /A   使用 ASCII 字符，而不使用扩展字符。 \n \n \n \n \n 生成当前目录下的结构到 test 文件中： TREE /F >test \n \n Linux \n \n yum install -y tree  安装 \n tree --help  查看使用帮助 \n man tree  查看更详细的参数说明 \n \n NodeJS \n \n https://github.com/derycktse/treer \n https://github.com/JohnByrneRepo/mddir \n https://github.com/zero9527/node-test \n 微信公众号排版 \n \n https://github.com/aclickall/aclickall.github.io \n \n md.aclickall.com \n \n \n https://github.com/doocs/md \n \n https://doocs.github.io/md \n \n \n https://github.com/phodal/mifa \n \n http://relatos.top/md \n https://md.phodal.com \n \n \n https://github.com/mdnice/markdown-nice \n \n https://mdnice.com \n \n \n https://github.com/lyricat/wechat-format \n https://github.com/zkqiang/wechat-mdeditor \n https://github.com/dyc87112/online-markdown \n https://github.com/didadi599/wechat-markdown-editor \n wechat-editor \n https://knb.im/mp \n https://github.com/ufologist/wechat-mp-article \n https://github.com/barretlee/online-markdown \n https://github.com/wangduanduan/m2w-transform \n \n https://wdd.js.org/m2w-transform \n \n \n https://github.com/lyricat/wechat-format \n \n https://lab.lyric.im/wxformat \n \n \n https://github.com/xiaobox/mdeditor \n https://github.com/geekjourneyx/md2wechat-mcp-server \n \n https://www.md2wechat.cn \n \n \n https://github.com/caol64/wenyan \n \n \n mp-transform-public \n 表格生成 \n \n HTML 表格转 Excel 可以直接在 office Excel 中点击  数据  ->  自网站  ->  URL  然后进行操作 \n \n \n https://tableconvert.com \n https://www.tablesgenerator.com/markdown_tables \n https://markdown-convert.com/zh \n https://github.com/stevecat/table-magic \n https://github.com/jakebathman/Markdown-Table-Generator \n https://github.com/donatj/CsvToMarkdownTable \n https://github.com/jonmagic/copy-excel-paste-markdown \n 生成标题目录树 \n \n TOC   https://en.wikipedia.org/wiki/Table_of_contents \n \n \n https://github.com/topics/toc \n https://github.com/topics/table-of-contents \n https://github.com/topics/toc-generator \n https://github.com/topics/markdown-toc \n \n \n https://github.com/dohliam/tocdown \n \n https://dohliam.github.io/tocdown \n \n \n markdown-toc-generate \n \n https://github.com/magnetikonline/markdown-toc-generate \n \n \n https://github.com/nochso/tocenize \n https://github.com/thlorenz/doctoc \n https://github.com/dkyaorui/MDToc \n https://github.com/medfreeman/markdown-it-toc-and-anchor \n https://github.com/jonschlinkert/gulp-format-md \n https://github.com/remarkablemark/mdtocs \n \n https://remarkablemark.org/mdtocs \n \n \n https://github.com/luciopaiva/markdown-toc \n \n https://luciopaiva.com/markdown-toc \n 解析库 \n \n https://github.com/topics/markdown \n https://github.com/topics/markdown-to-html \n \n \n https://github.com/domchristie/turndown \n \n https://domchristie.github.io/turndown \n \n \n https://github.com/markdown-it/markdown-it \n https://github.com/markedjs/marked \n \n https://marked.js.org/demo \n \n \n https://github.com/mdnice/markdown-resume \n https://github.com/syfxlin/xkeditor \n https://github.com/pandao/editor.md \n https://github.com/jonschlinkert/remarkable \n https://github.com/benweet/stackedit \n https://github.com/commonmark/commonmark.js \n https://github.com/showdownjs/showdown \n https://github.com/github/markup \n https://github.com/unifiedjs/unified \n https://github.com/remarkjs/remark \n https://github.com/88250/lute \n \n \n 转PDF  https://github.com/realdennis/md2pdf \n \n https://md2pdf.netlify.app \n https://realdennis.github.io/md2pdf \n \n \n https://github.com/BlueHatbRit/mdpdf \n https://github.com/simonhaenisch/md-to-pdf \n https://github.com/jmaupetit/md2pdf \n 在线版客户端 \n \n https://github.com/joemccann/dillinger \n \n https://dillinger.io \n \n \n https://tool.lu/markdown \n https://github.com/jserme/mahua \n \n http://mahua.jser.me \n \n \n 马克飞象  https://maxiang.io \n 小书匠  http://markdown.xiaoshujiang.com \n \n https://github.com/suziwen \n \n \n Cmd Markdown  https://www.zybuluo.com/mdeditor \n \n https://github.com/ghosert/cmd-editor \n \n \n https://github.com/JP1016/Markdown \n \n https://markdownapp.vercel.app \n \n \n https://github.com/aromalanil/markItDown \n \n https://markitdown.netlify.app \n \n \n https://github.com/davidfowl/TodoApi \n https://github.com/iamgio/quarkdown \n https://github.com/showdownjs/showdown \n \n http://demo.showdownjs.com \n \n document . querySelector ( "body > div.lateral-menu.ng-isolate-scope.ng-pageslide" ) . remove ( ) ; \ndocument . querySelector ( "body > nav" ) . remove ( ) \ndocument . querySelector ( "#editor" ) . remove ( ) \n const  ew  =  document . querySelector ( "#editor-wrapper" ) ; \new . style . width = "unset" ; \new . style . paddingTop = "unset" ; \n const  pv  =  document . querySelector ( "#preview" ) ; \npv . style . width = "unset" ; \npv . style . overflowY = "unset" ; \n const  pvd  =  document . querySelector ( "#preview > div" ) ; \npvd . style . paddingBottom = "50px" ; \n \n \n https://github.com/siyuan-note/siyuan \n 本地版客户端 \n \n https://github.com/typora \n \n https://www.typora.io \n https://github.com/DiamondHunters/NodeInject_Hook_example \n \n \n https://github.com/Saul-Mirone/milkdown \n MarkPad  https://github.com/Code52/DownmarkerWPF \n Haroopad \n https://github.com/MacDownApp/macdown \n https://github.com/Zettlr/Zettlr \n https://github.com/rickstrahl/MarkdownMonster \n https://github.com/marktext/marktext \n \n https://marktext.app \n \n \n https://github.com/notable/notable \n https://github.com/nhn/tui.editor \n https://github.com/aguang-xyz/aurora-editor \n https://github.com/1943time/bluestone \n https://github.com/drl990114/MarkFlowy \n CLI  https://github.com/Textualize/frogmouth \n 笔记  https://github.com/laurent22/joplin \n https://github.com/evernote \n https://github.com/leanote \n https://github.com/zadam/trilium \n https://github.com/flxzt/rnote \n https://github.com/pbek/QOwnNotes \n https://github.com/usememos/memos \n https://github.com/standardnotes \n https://github.com/oleeskild/obsidian-digital-garden \n \n https://github.com/obsidianmd \n https://obsidian.md \n \n \n https://github.com/anyproto \n https://github.com/yesmore/inke \n https://github.com/streetwriters/notesnook \n https://github.com/docmost/docmost \n https://github.com/codexu/note-gen \n GitBook替代  https://github.com/lindeer/dartbook \n 临时存储  https://github.com/heyman/heynote \n 待办事项  https://github.com/go-vikunja/vikunja \n https://github.com/johannesjo/super-productivity \n 草图  https://frame0.app \n \n',createdTime:1761814324e3},{title:"书籍和博客",frontmatter:{description:"Sam Altman 给 19 岁年轻人的建议",meta:[{name:"image",content:"https://bajins.com/images/OSI-TCP_IP对照关系.png"},{name:"twitter:title",content:"书籍和博客"},{name:"twitter:description",content:"Sam Altman 给 19 岁年轻人的建议"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/OSI-TCP_IP对照关系.png"},{name:"twitter:url",content:"https://bajins.com/Other/%E4%B9%A6%E7%B1%8D%E5%92%8C%E5%8D%9A%E5%AE%A2.html"},{property:"og:type",content:"article"},{property:"og:title",content:"书籍和博客"},{property:"og:description",content:"Sam Altman 给 19 岁年轻人的建议"},{property:"og:image",content:"https://bajins.com/images/OSI-TCP_IP对照关系.png"},{property:"og:url",content:"https://bajins.com/Other/%E4%B9%A6%E7%B1%8D%E5%92%8C%E5%8D%9A%E5%AE%A2.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"书籍和博客"},{itemprop:"description",content:"Sam Altman 给 19 岁年轻人的建议"},{itemprop:"image",content:"https://bajins.com/images/OSI-TCP_IP对照关系.png"}]},regularPath:"/Other/%E4%B9%A6%E7%B1%8D%E5%92%8C%E5%8D%9A%E5%AE%A2.html",relativePath:"Other/书籍和博客.md",key:"v-54e9aaf8",path:"/Other/%E4%B9%A6%E7%B1%8D%E5%92%8C%E5%8D%9A%E5%AE%A2.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"书籍",slug:"书籍"},{level:2,title:"技术博客",slug:"技术博客"},{level:3,title:"Java",slug:"java"},{level:3,title:"Go",slug:"go"},{level:3,title:"Web",slug:"web"},{level:2,title:"其他博客",slug:"其他博客"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 书籍和博客 \n Flag 书籍 技术博客 Java Go Web 其他博客 \n Flag \n Sam Altman 给 19 岁年轻人的建议 \n \n 与聪明的人一起共事 \n 做有价值的的事 \n 承担适当的风险 \n 如果上学请确保学到有价值的东西 \n 如果加入一家公司，建议加入正在上升的创业公司 \n 不要让薪水成为主要决策因素 \n 只有在你真正热爱这个想法时才去创办公司。 \n \n \n 这篇GPU学习笔记，详细整理了其工作原理、编程模型和架构设计 \n \n 去除验证显示全文 \n \n $(\"#btw-modal-wrap, #read-more-wrap\").remove();$(\"#container,.article.article-type-post.lock\").css(\"height\", \"unset\"); \n const blogId = /blogId: '(.*)'/.exec($(\"script\").text())[1];localStorage.setItem(\"TOKEN_\" + blogId, blogId);  search  BTWPlugin \n \n localStorage.setItem(\"TOKEN_\" + btw.options.blogId, btw.options.blogId); \n \n \n \n 初学者  https://github.com/search?q=beginners \n https://github.com/topics/learning \n https://github.com/search?q=learning \n https://github.com/topics/education \n https://github.com/topics/tutorials \n https://github.com/topics/curriculum \n https://github.com/topics/snippets \n https://github.com/search?q=awesome \n https://github.com/topics/awesome \n https://github.com/topics/awesome-list \n https://github.com/topics/leetcode \n https://github.com/cloudcommunity/Free-Certifications \n https://github.com/shadowwalker/next-pwa \n https://github.com/rumca-js/Internet-Places-Database \n https://github.com/maguowei/today \n 中文教材  https://github.com/TapXWorld/ChinaTextbook \n https://github.com/happycola233/tchMaterial-parser \n 中小学语文示范诵读  https://github.com/zedex/mandarin-reading-resource \n 书籍 \n \n https://github.com/search?q=Books \n https://github.com/topics/hacktoberfest \n https://github.com/royeo/awesome-programming-books \n https://github.com/justjavac/free-programming-books-zh_CN \n https://github.com/EbookFoundation/free-programming-books \n https://github.com/PacktPublishing \n https://github.com/CodingDocs \n https://github.com/programthink \n https://github.com/marcojakob/code.makery.ch \n https://github.com/imarvinle/awesome-cs-books \n https://github.com/xitu/gold-miner \n https://github.com/coding-fans \n \n \n https://github.com/alexanderqiu/ebooks \n https://github.com/ningyu1/e-books \n 互联网上的免费书籍  https://github.com/ruanyf/free-books \n https://github.com/cs-books/influential-cs-books \n https://github.com/it-ebooks-0/geektime-books \n https://github.com/trsoliu/e-books \n https://github.com/netkiller/netkiller.github.io \n https://github.com/liyupi \n https://github.com/yuanliangding/books \n https://github.com/docs4dev \n \n https://www.docs4dev.com \n \n \n https://github.com/docshome \n Beej 的网络概念指南 \n https://github.com/jyfc/ebook \n https://github.com/dolotech/ebook \n https://github.com/phodal/growth-ebook \n https://github.com/weaiken/ebook \n https://github.com/zhangcunli/ebook \n https://github.com/BiyuHuang/DevBooks \n https://github.com/javadevbooks/books \n https://github.com/free-educa/books \n 浮点数  https://github.com/brazzy/floating-point-gui.de \n 计算机电子书  https://github.com/itdevbooks/pdf \n https://github.com/forthespada/CS-Books \n https://github.com/ossu/computer-science \n https://github.com/xiaolincoder/CS-Base \n https://github.com/lining808/CS-Ebook \n https://github.com/rogerzhu/-bgnet0-cn \n https://github.com/ForrestKnight/open-source-cs \n 高并发的哲学原理  https://github.com/johnlui/PPHC \n 计算机体系结构基础  https://github.com/foxsen/archbase \n https://github.com/missing-semester-cn/missing-semester-cn.github.io \n https://github.com/sunym1993/flash-linux0.11-talk \n https://github.com/xfenglu/everycodershouldknow \n https://github.com/pkuflyingpig \n https://github.com/OI-wiki \n https://github.com/izackwu/TeachYourselfCS-CN \n 系统设计入门  https://github.com/donnemartin/system-design-primer \n https://www.designsystemhunt.com \n https://redesigningdesign.systems \n https://github.com/Admol/SystemDesign \n https://github.com/InterviewReady/system-design-resources \n https://github.com/ByteByteGoHq/system-design-101 \n https://github.com/karanpratapsingh/system-design \n https://github.com/Coder-World04/Complete-System-Design \n https://github.com/systemdesign42/system-design \n https://github.com/ashishps1/awesome-system-design-resources \n https://github.com/ashishps1/awesome-low-level-design \n https://github.com/GrowingGit/GitHub-Chinese-Top-Charts \n https://github.com/trackawesomelist/trackawesomelist \n \n https://www.trackawesomelist.com \n \n \n https://awesomeopensource.com \n https://github.com/sindresorhus/awesome \n https://github.com/icopy-site/awesome-cn \n https://github.com/mehdihadeli/awesome-software-architecture \n 思维导图 \n https://github.com/polaris1119/awesome-cheatsheets-cn \n https://github.com/rstacruz/cheatsheets \n 学习主题清单  https://github.com/jwasham/coding-interview-university \n https://github.com/YuzheSHI/awesome-agi-cocosci \n https://github.com/tuteng/Best-websites-a-programmer-should-visit-zh \n https://github.com/practical-tutorials/project-based-learning \n https://github.com/binhnguyennus/awesome-scalability \n https://github.com/leandromoreira \n https://github.com/DataEngineer-io/data-engineer-handbook \n https://github.com/jordan-cutler/path-to-senior-engineer-handbook \n https://github.com/charlax/professional-programming \n 学习项目  https://github.com/Wechat-ggGitHub/Awesome-GitHub-Repo \n https://github.com/1c7/chinese-independent-developer \n https://github.com/php-youtubers/directory \n https://github.com/DopplerHQ/awesome-interview-questions \n https://github.com/Ayushparikh-code/Web-dev-mini-projects \n 各种技术主题  https://github.com/bregman-arie/devops-exercises \n 学习开发路线图  https://github.com/kamranahmedse/developer-roadmap \n \n https://roadmap.sh \n \n \n https://github.com/SmartKeyerror/Psyduck \n https://github.com/microsoft/Web-Dev-For-Beginners \n https://github.com/bmpi-dev \n \n https://github.com/madawei2699 \n \n \n https://github.com/braydie/HowToBeAProgrammer \n 开发人员设计资源  https://github.com/bradtraversy/design-resources-for-developers \n https://kingdee.design \n 程序员技能图谱  https://github.com/TeamStuQ/skill-map \n https://github.com/codecrafters-io \n https://github.com/girliemac/a-picture-is-worth-a-1000-words \n https://github.com/trigaten/Learn_Prompting \n https://github.com/mtdvio/every-programmer-should-know \n https://github.com/ddy-ddy/cs-408 \n https://github.com/ahangchen/HowToBeAProgrammer \n https://wizardzines.com \n IT技术知识开源图谱  https://gitcode.net/dev-roadmap \n https://github.com/codecrafters-io/build-your-own-x \n https://github.com/marchof/javabubble \n https://github.com/PKUanonym/REKCARC-TSC-UHT \n https://github.com/QSCTech/zju-icicles \n https://feishuhub.com \n https://github.com/Jacob-Hegy/CCNA-Notes \n 综合逆向工程教程  https://github.com/mytechnotalent/Reverse-Engineering \n https://github.com/0xinfection/reversing \n Google的软件工程  https://qiangmzsx.github.io/Software-Engineering-at-Google \n 自动化软件测试  https://github.com/uds-se/fuzzingbook \n 数据工程课程  https://github.com/DataTalksClub/data-engineering-zoomcamp \n https://github.com/DataExpert-io/data-engineer-handbook \n https://github.com/ghislainfourny/big-data-textbook \n 分布式系统模式  https://github.com/dreamhead/patterns-of-distributed-systems \n 编程语言学习片段  https://programming-idioms.org/all-idioms \n Linux应用程序  https://github.com/luong-komorebi/Awesome-Linux-Software \n 九十九个问题  https://github.com/shekhargulati/99-problems \n https://github.com/JosephZhu1983/java-common-mistakes \n https://github.com/danistefanovic/build-your-own-x \n 视频讲座  https://github.com/Developer-Y/cs-video-courses \n 面试题  https://github.com/0voice/campus_recruitmen_questions \n https://github.com/yangshun/tech-interview-handbook \n https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes \n \n https://github.com/linkedin-faq \n \n \n 反问面试官  https://github.com/viraptor/reverse-interview \n https://github.com/vvmdx/Sec-Interview-4-2023 \n https://github.com/yifeikong/reverse-interview-zh \n 开源替代方案  https://opensource.com/tags/alternatives \n Mac文档查询工具  https://github.com/Kapeli \n \n https://kapeli.com/dash \n https://github.com/wuudjac/godocdash \n https://github.com/technosophos/dashing \n https://github.com/Robzz/cargo-docset \n https://github.com/theasta/jsdoc-dash-template \n \n \n Windows和Linux文档查询工具  https://github.com/zealdocs/zeal \n https://velocity.silverlakesoftware.com \n 代码浏览器  https://github.com/KDAB/codebrowser \n \n https://blog.weghos.com \n \n \n Java考试系统  https://github.com/lsgwr/spring-boot-online-exam \n Python考试系统  https://github.com/xingxingzaixian/django-drf-online-exam \n \n \n 设计数据密集型应用  https://github.com/Vonng/ddia \n 云计算技术与应用学习教程 \n https://github.com/0voice/audio_video_streaming \n 静态程序分析  https://github.com/RangerNJU/Static-Program-Analysis-Book \n \n \n 书栈网  https://github.com/TruthHun/BookStack \n \n https://www.bookstack.cn \n \n \n http://shouce.jb51.net \n https://www.topgoer.cn \n 天赋好书  https://cntofu.com \n 码农之家（计算机电子书下载）  http://www.xz577.com \n 鸠摩搜书  http://www.jiumodiary.com \n 云海电子图书馆  http://www.pdfbook.cn \n 周读（书籍搜索）  http://ireadweek.com \n 知轩藏书  http://www.zxcs.me \n 脚本之家电子书下载  https://www.jb51.net/books \n 搜书VIP-电子书搜索  http://www.soshuvip.com/all.html \n 书格（在线古籍图书馆）  https://new.shuge.org \n caj云阅读  http://cajviewer.cnki.net/cajcloud \n 必看网（人生必看的书籍）  https://www.biikan.com \n 极客学院Wiki - IT 技术图文教程库 \n 野桃子教程 \n C语言中文网  http://c.biancheng.net \n https://www.cjavapy.com \n 教程相关-蒲公英云 \n 首页 - 廖雪峰的官方网站 \n \n https://github.com/michaelliao \n \n \n LearnKu 终身编程者的知识社区 \n wizardforcel (@wizardforcel) on GitBook · GitBook (Legacy) \n 代码拾遗 - 高质量的代码教程 \n https://www.w3schools.com \n https://www.w3cschool.cn \n http://codingdict.com/tutorials \n http://www.allitebooks.org \n https://mm.edrawsoft.cn/community/15/1 \n 一些软件或系统的官方手册  https://www.haiyun.me/doc.html \n https://cloud.tencent.com/developer/devdocs \n 极客教程  https://geek-docs.com \n https://www.freeaihub.com \n http://www.semlinker.com \n https://www.journaldev.com \n 蝴蝶教程  https://www.jc2182.com \n 云海天教程，超详细的免费教程网站！  https://www.yht7.com \n 广场· 看云  https://www.kancloud.cn/explore \n 印记中文 -前端开发文档  https://docschina.org \n https://github.com/MrAlex6204/Books \n https://developer.aliyun.com/topic/promotion-ebook \n https://developer.aliyun.com/ebook \n https://developer.huawei.com \n \n https://developer.huaweicloud.com \n \n \n https://www.orchome.com \n https://www.shouce.ren/api/book \n https://www.learnfk.com \n https://luboke.com \n https://github.com/qyuhen/book \n https://github.com/kekeqy/ebook \n https://github.com/SSHeRun/CS-Xmind-Note \n https://github.com/MarkerHub/JavaIndex \n 产品设计  https://rpdc.xiaohongshu.com/52-design-principles \n https://www.meiye.art \n https://supercreative.design \n https://mockups-design.com \n 区块链黑暗森林自救手册  https://github.com/slowmist/Blockchain-dark-forest-selfguard-handbook \n \n \n B站「你管这破玩意叫网络？」视频 \n 技术博客 \n \n https://github.com/timqian/chinese-independent-blogs \n https://github.com/peterc/engblogs \n https://daily-blog.chlinlearn.top \n https://engineering.fyi \n \n \n 有赞权限系统(SAM) \n 美团技术团队 \n 。思索 - 博客园 \n Categories \n 归档 | hoxis' blog \n Archive | Haoxiang's Tech Blog \n 归档 | rxliuli blog \n categories | Tonny's Blog \n 守望的个人博客 - 编程珠玑 \n mojotv.cn \n 文章分类-TMaize Blog \n categories | 骏马金龙 \n 归档 | Whyvv Blog \n 归档|OhYee's Blog \n Archives - SAUCERMAN \n 归档 | nmask's Blog \n 归档 | 个人技术分享 \n XStar's Wiki 站点地图 \n 归档 | HelloDog \n 归档 | Huoty's Blog \n kevin \n 技术杂谈 | 静觅 \n jvm123-java技术分享站 \n 归档 | StarryLand \n zgao's blog – 一个搞渗透的student \n https://www.dazhuanlan.com \n 归档 - 憶の年 \n 友链links - 倾心博客 \n 归档 | MonkeyWie's Blog \n python  归档 | 春江暮客 \n 归档 – 云原生实验室 - Kubernetes|Docker|Istio|Envoy|Hugo|Golang|云原生 \n https://magiclen.org \n tianyunperfect/田云的博客 \n 文章列表 | LFhacks.com \n https://github.com/rgb-24bit \n \n https://rgb-24bit.github.io \n \n \n 归档 - 朱小厮的博客 \n 归档 - SoulChild随笔记 \n Archive | Verne in GitHub \n https://github.com/Ashiamd/docsify-notes \n https://github.com/csy512889371/learnDoc \n Archive | Verne in GitHub \n https://github.com/bfengj/CTF \n https://gitbook.dounine.com \n 归档 | 拾荒志 \n 携程技术 - 知乎 \n 网易云音乐技术团队 - 掘金 \n https://github.com/hoochanlon \n https://github.com/cj1128 \n https://www.mszlu.com \n https://hellogitlab.com \n https://gitee.com/crazymaker/SimpleCrayIM \n https://www.lzskyline.com \n https://github.com/isno/theByteBook \n https://github.com/jbranchaud/til \n https://netflixtechblog.com \n https://github.com/kilimchoi/engineering-blogs \n https://github.com/abruzzi \n \n https://icodeit.org/archives \n \n \n https://ljdd520.github.io/archives \n https://herbertograca.com \n https://elizarov.medium.com \n https://github.com/eryajf/eryajf.github.io \n https://github.com/wujie1993/gitbook-index \n https://github.com/Jace-Yang/Full-Stack_Data-Analyst \n https://justyy.com/archives-of-pagesposts \n https://github.com/rd2coding/Road2Coding \n https://github.com/RunAtWorld/runatworld.github.io \n \n https://runatworld.gitbook.io/dev \n \n \n https://www.panziye.com \n https://baoyu.io \n https://buffaloboyhlh.github.io/it-handbooks \n https://paper.seebug.org \n \n \n 国际化设计指南 \n Java \n \n HollisChuang's Blog-Java干货集散地 \n Spring-WebSocket · essay-note \n Java技术栈 \n \n https://github.com/javastacks/spring-boot-best-practice \n \n \n archives - 纯洁的微笑博客 \n 程序猿DD | Java | Spring Boot | Spring Cloud | 最新干货分享 \n https://github.com/hengboy \n \n https://gitee.com/hengboy \n 程序员恒宇少年 | SpringBoot | SpringCloud | Java - 个人博客 \n \n \n Java知音-一个专注于技术分享的网站 \n Archive | crossoverJie's Blog \n Java入门基础教程_Java开发学习书籍-极客学院Wiki \n CS-Notes \n Archives | 一只程序猿的博客 \n 芋道源码 —— 纯源码解析博客 \n 归档 | Otokaze's Blog \n 薛勤的博客 \n 简单之美 | 简单之美，难得简单，享受简单的唯美。 \n 归档 | Emil`s Blog \n Java网络爬虫教程 - 一只会思考的猪 \n MonkeyWie's Blog \n 归档 | Liuye Blog \n Spring Security | Spring Boot | Spring Cloud | https://felord.cn 码农小胖哥的博客 \n Introduction · Essential Java.《Java 编程要点》 \n 归档 | Joze's Blog \n 归档 | oKong | 趔趄的猿 \n 归档 | 我没有三颗心脏的博客 \n 归档 | MrBird \n http://muggle.javaboy.org \n 归档 · 弥枳 \n 文章归档 - 拧螺丝的博客 \n 归档 | gentlezuo的博客 \n 归档集 -  我爱吃土豆 \n https://lihhz.gitee.io/post/ \n 古拉里的脑图小书 \n 归档 - 柒's Blog \n Java技术驿站-一个专注于 Java 技术分享的精品博客 \n Twocups，Java、算法 \n 文章归档-HollisChuang's Blog \n archives - 沉默王二博客 \n 归档 - 江南一点雨 \n 所有文章 | 闷瓜蛋子的BLOG \n archives - 匠心零度博客 \n Lovnx_CSDN博客-J2SE,Spring Cloud,Spring Cloud领域博主 \n 归档 | Keep Coding \n 归档 | Code Life \n 大东Daniel - 博客园 \n 归档栏 - 宋子宪博客 \n 归档 | AI Developers Geeks \n 归档 | Stephanie Tang's Blog \n 码农小胖哥 \n if年少有为 \n 归档 | 程序员果果 \n 归档 | 程序员果果的博客 \n 归档 | HJW's Blog \n Mkyong.com-学习Java和Spring。 \n 归档 | Dinghui.Ye Online \n Archives - 空夜's Blog \n AlgerFan | Blog \n Java技术栈,分享最新最主流的Java技术 \n Archives - 彭超 | Blog \n archives - 沉默王二博客 \n archives - bugstack虫洞栈 \n 归档 | IT宅-arthinking's blog \n 归档 | 张振伟的博客 \n JMCui - 博客园 \n Archives | 三秋 \n 归档 | 在码圈 \n 疯狂创客圈 \n 归档 | 张攀钦 \n 橘子味儿的猫 - 博客园 \n https://moyu-zc.github.io \n \n https://www.moyuzc.cn \n https://moyu-zc.gitee.io \n \n \n https://github.com/yourbatman/yourbatman.github.io \n 归档 · 树下魅狐 \n https://github.com/pfmiles/pfmiles.github.com \n \n https://pfmiles.github.io/blog/archives \n \n \n https://github.com/jaskey \n \n https://jaskey.github.io \n \n \n 归档 | 阿牛的博客 \n https://996geek.com \n \n https://binarylife.icu \n \n \n https://github.com/pangjian/blog_system \n \n https://www.pangjian.me \n \n \n Archives - 白菜不是菜 \n https://github.com/zq99299/repository-summary \n https://github.com/moxi624/LearningNotes \n https://github.com/2227324689 \n \n https://2227324689.github.io \n \n \n https://xiaoflyfish.cn \n 归档|Nanyin's Blog \n 归档 | gudqs7's note \n jackssybin 的个人博客 \n \n https://github.com/jackssybin \n \n \n 归档 - 一灰灰Blog \n 小马的笔记 文章归档 \n https://github.com/CoderGeshu/blogs \n Greycode's Blog \n \n https://github.com/greycodee \n \n \n 归档 | 健程之道 \n GoogTech的每日博客 \n https://github.com/ddean2009/www.flydean.com \n https://www.pomit.cn/blog.html \n https://github.com/vanilla-java \n https://yourbatman.github.io \n https://xue8.github.io \n https://github.com/realpdai/tech-arch-doc-comments \n \n https://pdai.tech \n \n \n https://github.com/heibaiying/Full-Stack-Notes \n https://eoccc.gitee.io \n https://github.com/spring2go \n https://javadoop.com \n https://alphahinex.github.io \n https://github.com/Cryin/Paper \n https://github.com/haidragon \n \n https://www.cnblogs.com/haidragon \n \n \n https://github.com/chengdedeng \n https://ninuxgithub.github.io/archive \n https://mikechen.cc/6713.html \n https://github.com/intxzt/intxzt.github.io \n https://coolbeevip.github.io/posts \n https://yuanwai.github.io/archives \n \n https://luxiangdong.com \n \n \n https://jakubdziworski.github.io \n 死磕Java - 一站式Java学习平台 \n https://www.javaedit.com \n \n https://github.com/xiaoguyu \n \n \n https://www.letianbiji.com \n https://blog.xygalaxy.com \n https://github.com/mzlogin \n \n 归档 — 码志 \n Go \n \n Go语言充电站 \n Golang | 飞雪无情的博客 \n golang 构建工具之 Makefile | hatlonely的小站 \n 第1章 语言基础 · Go语言高级编程 \n jobbole/awesome-go-cn \n Go标准库中文文档 \n developer-learning/learning-golang \n Golang笔记 \n Go语言-时间处理 | Casstiel \n 存档 - step by step \n Go语言中文网博客 \n https://polarisxu.studygolang.com/posts \n \n https://github.com/polaris1119 \n \n \n Code talks \n 分类 | Razeen`s Blog \n 分类 | Akkuman Blog \n 归档 | Konica 的自留地 \n Xuanwo's Blog \n 欢迎来到Flyingon的博客 | Flyinon的博客 \n 归档 | Go语言充电站 \n 小袁取经 - 博客园 \n Archives-阳明的博客|Kubernetes|Istio|Prometheus|Python|Golang|云原生 \n 归档 - 大俊的博客 \n \n https://github.com/darjun/go-daily-lib \n \n \n 归档 | Pure White \n Archives | 鸟窝 \n \n https://github.com/smallnest \n \n \n Articles (cn-zh)ArthurChiao's Blog \n \n https://github.com/ArthurChiao \n \n \n 酷 壳 – COOLSHELL \n 程序员麻辣烫的blog  https://github.com/shidawuhen/shidawuhen.github.io \n 归档 | Djaigo blog \n https://github.com/wweir/wweir.github.io \n 归档 | 李文周的博客 \n https://github.com/cyningsun/cyningsun.github.io \n \n https://www.cyningsun.com/archives \n \n \n 归档 | 阿然的博客 \n \n https://github.com/chinaran \n \n \n 文章归档 - Rehtt's Blog \n \n https://github.com/Rehtt \n \n \n https://www.xargin.com \n \n https://github.com/cch123 \n \n \n https://asong.cloud/posts \n \n https://github.com/asong2020 \n \n \n https://hitzhangjie.github.io \n https://github.com/xiaobaiTech/golang-full-stack \n \n https://golangguide.top \n Web \n \n CNode Node.js专业中文社区 \n JavaScript 基础知识 \n Welcome | 临水照影的博客 \n w3school 在线教程 \n https://www.w3cplus.com \n https://www.w3school.com.cn \n https://www.runoob.com \n 阿西河前端教程丨一个助你成为全栈开发的公益网站 \n JS变量和数据类型及其转化 - Coding_Changes_LIfe - 博客园 \n https://github.com/justjavac/justjavac.github.com \n https://github.com/SHERlocked93/blog \n 时光机 - FuocaのBlog \n https://www.lanmper.cn \n https://github.com/woai3c/Front-end-articles \n 归档 | EVE | 暴风雨前夕 \n 英文  2ality – JavaScript and more \n 蓝色帅-橙子哥 - 博客园 \n Timeline | Jioho 的博客 \n 速冻鱼blog \n https://github.com/lxchuan12 \n https://github.com/zxuqian/zxuqian.cn \n https://github.com/dunizb \n \n 归档 | 程序员张张 \n \n \n https://github.com/qq449245884/xiaozhi \n \n https://segmentfault.com/u/minnanitkong \n \n \n https://github.com/QDMarkMan/CodeBlog \n https://github.com/jaywcjlove/handbook \n https://github.com/zhongxia245/blog \n Archive | Nico Niconi  \n https://seven777777.github.io/myblog \n https://github.com/ljianshu/Blog \n https://github.com/forthealllight/blog \n https://github.com/wtto00/Blog \n https://github.com/foreveryouyou \n \n https://www.qinwg.cn \n \n \n https://github.com/wenyuan/fedbook \n https://github.com/campcc/blog \n https://github.com/think2011/think2011.github.io \n 纯爱掌门人的个人主页-掘金 \n https://cfour-hi.github.io/archives \n https://github.com/shfshanyue/blog \n https://github.com/FrontEndGitHub \n https://hughfenghen.github.io/posts \n https://github.com/husky-dot/xiaozhi \n https://shenqiuhui.github.io/archives \n https://github.com/Wscats/articles \n https://github.com/Spike-Leung/taxodium \n https://github.com/xy-sea/blog \n https://couriourc.github.io/archives \n https://github.com/shangwenhe/shangwenhe.github.io \n 其他博客 \n \n pumpkin.best  https://github.com/superdzj/navi.github.io \n 拿着 Api 去玩耍 \n 归档栏 - Rats Blog \n 萌咖 | MoeClub.org \n 归档 - 喵斯基部落 \n mzr.me \n SaoDaye \n 代码浏览 - 94imm - zxy_coding \n 归档 - P3TERX ZONE - Zhuangbility & Technology \n https://www.emengweb.com/archives \n 第2页 - Lucien's Blog - 因为孤独是人之常态，所以陪伴才显得尤为珍贵。 \n 时间归档 - R 酱小窝 \n 3款免费企业域名邮箱Mail.ru，Yandex，Zoho申请和使用教程 \n Archive | ChrAlpha | ONE Blog \n Beauty Directory Lister \n 文章归档 | 孟坤博客 \n Archive | Verne in GitHub \n 如有乐享 \n 归档 | 学无止境 \n Senraの小窝 | 初闻天籁之音，未使心之将来。 \n 文章归档 - 独自等待'S Blog \n 归档栏 - Xcnte' s Blog \n 归档 | INFORX \n 沧水的博客 – 网页制作|运维开发|游戏娱乐|资源分享|生活随写 \n 大佬们 - 犬's Blog \n 归档 - XYSK - 分享你的活动线报 \n 归档 | YouForever \n G Suite items - 关于 G Suite 的一些探索 \n 归档 - LOGI \n 567899.xyz \n 木子:  https://muzi502.github.io \n LocMJJ博客 \n https://github.com/FFRaycoder/blog-built   归档 \n 时间轴 | Coder_桜 \n 时光机 - Shu's Garden \n 归档 | 蓝蓝博客 \n 时光の轴 – 苍穹の下 \n Qiantigers \n 归档 | Eicky Blog \n 趣乐子 – 快乐源于分享 \n 线工具秘籍  https://github.com/zhaoolee/OnlineToolsBook \n https://github.com/BlueSkyXN \n \n https://www.blueskyxn.com \n \n \n 归档 – Luminous' Home \n Archives | Jiang LiHeng \n 所有文章-次世代BUG池 \n 归档 | 守望的个人博客 \n \n https://github.com/yanbinghu \n \n \n C# - 夸克之书 \n https://chenyukang.github.io \n https://chenfengyanyu.github.io \n Posts | MinCodes \n 归档 | 木鸟杂记 \n \n",createdTime:1761814324e3},{title:"Other",frontmatter:{description:"https://github.com/No-Github/Digital-Privacy\nIP库 https://db-ip.com\n谷歌全球IP地址库 https://github.com/justjavac/Google-IPs\n公共手册 https://handbook.opencoreventures.com\nhttps://gitlab.com/gitlab-com/content-sites/handbook\nhttps://github.com/formbricks/formbricks\n日程安排 https://github.com/calcom/cal.com\n股票 https://github.com/Rockyzsu/stock\nhttps://github.com/mootdx/mootdx\n投资干货合集 https://news.futunn.com/news-topics/127\n人体系统调优 https://github.com/zijie0/HumanSystemOptimization",meta:[{name:"image",content:"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png"},{name:"twitter:title",content:"Other"},{name:"twitter:description",content:"https://github.com/No-Github/Digital-Privacy\nIP库 https://db-ip.com\n谷歌全球IP地址库 https://github.com/justjavac/Google-IPs\n公共手册 https://handbook.opencoreventures.com\nhttps://gitlab.com/gitlab-com/content-sites/handbook\nhttps://github.com/formbricks/formbricks\n日程安排 https://github.com/calcom/cal.com\n股票 https://github.com/Rockyzsu/stock\nhttps://github.com/mootdx/mootdx\n投资干货合集 https://news.futunn.com/news-topics/127\n人体系统调优 https://github.com/zijie0/HumanSystemOptimization"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png"},{name:"twitter:url",content:"https://bajins.com/Other/"},{property:"og:type",content:"article"},{property:"og:title",content:"Other"},{property:"og:description",content:"https://github.com/No-Github/Digital-Privacy\nIP库 https://db-ip.com\n谷歌全球IP地址库 https://github.com/justjavac/Google-IPs\n公共手册 https://handbook.opencoreventures.com\nhttps://gitlab.com/gitlab-com/content-sites/handbook\nhttps://github.com/formbricks/formbricks\n日程安排 https://github.com/calcom/cal.com\n股票 https://github.com/Rockyzsu/stock\nhttps://github.com/mootdx/mootdx\n投资干货合集 https://news.futunn.com/news-topics/127\n人体系统调优 https://github.com/zijie0/HumanSystemOptimization"},{property:"og:image",content:"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png"},{property:"og:url",content:"https://bajins.com/Other/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Other"},{itemprop:"description",content:"https://github.com/No-Github/Digital-Privacy\nIP库 https://db-ip.com\n谷歌全球IP地址库 https://github.com/justjavac/Google-IPs\n公共手册 https://handbook.opencoreventures.com\nhttps://gitlab.com/gitlab-com/content-sites/handbook\nhttps://github.com/formbricks/formbricks\n日程安排 https://github.com/calcom/cal.com\n股票 https://github.com/Rockyzsu/stock\nhttps://github.com/mootdx/mootdx\n投资干货合集 https://news.futunn.com/news-topics/127\n人体系统调优 https://github.com/zijie0/HumanSystemOptimization"},{itemprop:"image",content:"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png"}]},regularPath:"/Other/",relativePath:"Other/README.md",key:"v-44529e28",path:"/Other/",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"免费可商用字体",slug:"免费可商用字体"},{level:2,title:"通用镜像",slug:"通用镜像"},{level:3,title:"教育网镜像站",slug:"教育网镜像站"},{level:2,title:"Wikipedia",slug:"wikipedia"},{level:2,title:"临时邮箱",slug:"临时邮箱"},{level:2,title:"在线接收短信",slug:"在线接收短信"},{level:2,title:"身份和信用卡",slug:"身份和信用卡"},{level:2,title:"小说项目",slug:"小说项目"},{level:3,title:"vue",slug:"vue"},{level:3,title:"PHP",slug:"php"},{level:3,title:"golang",slug:"golang"},{level:3,title:"Android",slug:"android"},{level:3,title:"IOS",slug:"ios"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Other \n Flag 免费可商用字体 通用镜像 教育网镜像站 Wikipedia 临时邮箱 在线接收短信 身份和信用卡 小说项目 vue PHP golang Android IOS \n Flag \n \n https://github.com/No-Github/Digital-Privacy \n IP库  https://db-ip.com \n 谷歌全球IP地址库  https://github.com/justjavac/Google-IPs \n 公共手册  https://handbook.opencoreventures.com \n https://gitlab.com/gitlab-com/content-sites/handbook \n https://github.com/formbricks/formbricks \n 日程安排  https://github.com/calcom/cal.com \n 股票  https://github.com/Rockyzsu/stock \n https://github.com/mootdx/mootdx \n 投资干货合集  https://news.futunn.com/news-topics/127 \n 人体系统调优  https://github.com/zijie0/HumanSystemOptimization \n \n 赞赏/赞助/打赏 \n \n https://github.com/opensourcemaintenancefee \n https://mianbaoduo.com/o/lab \n \n https://dun.mianbaoduo.com \n https://mianbaoduo.com/help/#/lightning \n \n \n https://afdian.net \n https://stripe.com/zh-cn-us/payments/payment-methods-guide#wechat-pay \n https://github.com/biezhi/profit/wiki \n https://github.com/topics/donate \n \n 博客赞赏插件  https://github.com/isArtJay/simple-zanshang \n https://github.com/Kaiyuan/sponsor-page \n https://github.com/ihoey/Playing-reward \n https://github.com/nooldey/sponsor \n \n \n \n https://opencollective.com \n https://www.patreon.com \n https://liberapay.com \n https://www.paypal.com/paypalme \n \n https://paypal.me \n \n \n https://www.paypal.com/donate \n https://ko-fi.com \n https://flattr.com \n \n 消息通知/消息推送 \n \n https://github.com/topics/push-notifications \n https://github.com/topics/notifications \n https://github.com/topics/push \n https://github.com/topics/mipush \n \n \n https://github.com/CaoMeiYouRen/push-all-in-one \n https://github.com/songquanpeng \n https://github.com/Finb/Bark \n \n https://github.com/Finb/bark-server \n \n \n https://github.com/wahao/Bark-MP-helper \n https://github.com/caronc/apprise \n https://github.com/chanify/chanify \n https://github.com/LeslieLeung/heimdallr \n https://github.com/easychen \n \n http://sc.ftqq.com \n https://github.com/saucer-man/wepush \n https://www.indiehackers.com \n \n \n https://ifttt.com/maker_webhooks \n https://www.pushplus.plus \n https://pushplus.hxtrip.com \n https://healthchecks.io \n https://github.com/wxpusher \n https://github.com/MiPushFramework/MiPushFramework \n https://github.com/chinuno-usami/server_tan \n https://github.com/OneSignal \n https://github.com/novuhq/novu \n https://github.com/binwiederhier/ntfy \n https://github.com/beilunyang/moepush \n https://github.com/songquanpeng/message-pusher \n \n \n https://github.com/guanguans/notify \n https://github.com/pppscn/SmsForwarder \n https://github.com/Gomaxx/android-notification-forwarder \n \n \n https://github.com/engigu/Message-Push-Nest \n https://github.com/DanceJJJ/go-dingtalk \n https://github.com/goodking-bq/timing-clock-in-dingding \n https://github.com/zhaoyunxing92/dingtalk \n https://github.com/daixianceng/cron_dingding \n https://github.com/cloverzrg/wechat-work-message-push-go \n https://github.com/xinjiayu/NoticeServices \n 免费可商用字体 \n \n https://fonts.zeoseven.com \n https://www.monotype.com/fonts \n https://www.myfonts.com \n https://learn.microsoft.com/zh-cn/typography/font-list \n https://fonts.adobe.com/fonts \n https://www.gnu.org/software/freefont \n https://wiki.archlinux.org/title/Fonts \n https://savannah.gnu.org/projects/freefont \n https://www.cssfontstack.com \n \n \n https://github.com/jaywcjlove/free-font \n https://github.com/wordshub/free-font \n https://github.com/KonghaYao/chinese-free-web-font-storage \n https://github.com/lxgw/LxgwWenKai \n https://github.com/jsntn/webfonts \n https://github.com/JetBrains/JetBrainsMono \n \n https://github.com/SpaceTimee/Fusion-JetBrainsMapleMono \n \n \n https://github.com/ayaka14732/FanWunHak \n https://github.com/Buernia/Zhudou-Sans \n https://github.com/cmiscm/leonsans \n https://github.com/intel/intel-one-mono \n https://github.com/atelier-anchor/smiley-sans \n https://www.alibabafonts.com \n 思源黑体  https://github.com/adobe-fonts/source-han-sans \n https://github.com/google/fonts \n \n https://github.com/googlefonts \n https://fonts.google.com/noto \n https://developers.google.cn/fonts \n https://pub.flutter-io.cn/packages/google_fonts \n http://www.googlefonts.net \n https://github.com/notofonts/noto-cjk \n https://github.com/simonsmh/notocjk \n \n \n https://github.com/dejavu-fonts/dejavu-fonts \n https://github.com/deepin-community/fonts-wqy-zenhei \n \n https://sourceforge.net/projects/wqy \n \n \n https://github.com/subframe7536/maple-font \n https://github.com/dejavu-fonts/dejavu-fonts \n https://github.com/fontello \n https://github.com/TrionesType/zhuque \n https://github.com/Chenyu-otf/chenyuluoyan_thin \n https://github.com/chawyehsu/lxgw-wenkai-webfont \n https://github.com/vercel/geist-font \n https://github.com/githubnext/monaspace \n https://github.com/tonsky/FiraCode \n https://github.com/rsms/inter \n https://github.com/be5invis/Iosevka \n https://github.com/IBM/plex \n https://www.freefaces.gallery \n 高辨识度字体  https://brailleinstitute.org/freefont \n 位图编程字体  https://github.com/slavfox/Cozette \n 京華老宋体 \n https://github.com/i-tu/Hasklig \n https://github.com/madmalik/mononoki \n https://github.com/skosch/Crimson \n https://github.com/octaviopardo/EBGaramond12 \n \n \n https://cofonts.org \n https://www.miao3.cn \n 字体编辑器  https://github.com/fontforge/fontforge \n https://github.com/adobe-type-tools \n https://www.ai.zitijia.com \n https://github.com/fontworks-fonts \n https://github.com/fonttools/fonttools \n 字体呈现  https://gitlab.gnome.org/GNOME/pango \n https://www.fontsquirrel.com/tools/webfont-generator \n 通用镜像 \n \n https://developer.aliyun.com/mirror \n \n https://mirrors.aliyun.com \n \n \n https://mirrors.cloud.tencent.com \n https://mirrors.huaweicloud.com \n https://github.com/kaiyuanshe \n \n https://mirror.azure.cn \n \n \n http://mirrors.sohu.com \n https://mirrors.163.com \n 教育网镜像站 \n \n https://github.com/zzh1996/USTC-Network-Resources \n https://github.com/ideal/mirror \n https://github.com/opencas \n https://github.com/mirrorz-org \n \n https://mirrors.cernet.edu.cn \n \n \n https://github.com/isrc-cas \n https://gdgshanghai.com \n \n 东北大学 \n \n IPv4&IPv6  http://mirror.neu.edu.cn \n \n 大连理工大学 \n \n IPv4&IPv6  http://mirror.dlut.edu.cn \n \n 大连东软信息学院 \n \n https://mirrors.neusoft.edu.cn \n \n 哈尔滨工业大学 \n \n https://github.com/hitlug \n IPv4&IPv6  http://mirrors.hit.edu.cn \n \n 清华大学 \n \n https://github.com/tuna \n IPv4&IPv6  https://mirrors.tuna.tsinghua.edu.cn \n IPv4  https://mirrors4.tuna.tsinghua.edu.cn \n IPv6  https://mirrors6.tuna.tsinghua.edu.cn \n \n 北京外国语大学 \n \n IPv4&IPv6  https://mirrors.bfsu.edu.cn \n IPv4  https://mirrors4.bfsu.edu.cn \n IPv6  https://mirrors6.bfsu.edu.cn \n \n 北京交通大学 \n \n https://github.com/bjtulug \n IPv4&IPv6  https://mirror.bjtu.edu.cn \n \n 南京大学电子科学中心 \n \n https://github.com/nju-lug \n IPv4&IPv6  https://mirrors.nju.edu.cn \n \n 中国科学技术大学 \n \n https://github.com/ustclug \n IPv4&IPv6  https://mirrors.ustc.edu.cn \n IPv4  https://ipv4.mirrors.ustc.edu.cn \n IPv6  https://ipv6.mirrors.ustc.edu.cn \n \n 华中科技大学 \n \n IPv4  http://mirrors.hust.edu.cn \n \n 上海交通大学 \n \n https://github.com/sjtug \n IPv4  https://mirror.sjtu.edu.cn \n https://mirrors.sjtug.sjtu.edu.cn \n \n 浙江大学 \n \n IPv4  http://mirrors.zju.edu.cn \n \n 兰州大学 \n \n https://github.com/LZUOSS \n IPv4&IPv6  http://mirror.lzu.edu.cn \n \n 重庆大学 \n \n https://github.com/cqumirror \n IPv4  https://mirrors.cqu.edu.cn \n \n 重庆邮电大学 \n \n https://github.com/CQUPTMirror \n \n 南阳理工学院开源镜像站 \n \n https://github.com/NYIST-CIPS \n IPv4&IPv6  https://mirror.nyist.edu.cn \n IPv4  https://mirror4.nyist.edu.cn \n IPv6  https://mirror6.nyist.edu.cn \n \n 南方科技大学 \n \n https://github.com/sustech-cra \n \n 山东大学 \n \n https://github.com/SDU-Mirrors \n \n 齐鲁工业大学 \n \n https://github.com/qlu-mirrors \n \n 浙江大学 \n \n https://github.com/zjusct \n \n 吉林大学 \n \n https://github.com/JLULUG \n \n 北京邮电大学 \n \n https://github.com/BYRIO \n \n 荆楚理工学院 \n \n https://github.com/JCIOTeam \n \n 北京大学 \n \n https://github.com/PKUOSC \n \n 上海交通大学/上海科技大学 \n \n https://github.com/sjtug \n https://github.com/ShanghaitechGeekPie \n \n 电子科技大学 \n \n https://github.com/uestclug \n https://gitlab.com/uestclug \n Wikipedia \n \n 维基百科:维基百科拷贝网站 \n https://github.com/upupming/Mirror \n https://github.com/imlinhanchao/ngx_proxy_wiki \n Wikipedia全域恢复访问指南 \n https://kfd.me \n http://www.zgc261.com/wikipedia.html \n https://www.jinzhao.pro/wikipedia-mirror \n https://www.v2ex.com/t/623109 \n 临时邮箱 \n \n https://smpp.org \n https://github.com/topics/disposable-emails \n https://github.com/topics/disposable-email \n https://github.com/topics/temporary-email \n https://github.com/topics/tempmail \n https://github.com/topics/trashmail \n https://github.com/topics/10minutemail \n https://github.com/resend/react-email \n 一次性邮件列表  https://github.com/Fcmam5/jelban-js \n https://github.com/CH563/fakemail \n 发送邮件  http://tool.chacuo.net/mailsend \n 邮件测试  https://github.com/axllent/mailpit \n 电子邮件加密指南  https://emailselfdefense.fsf.org/zh-hans \n \n \n https://github.com/KevCui/1secmail \n \n https://www.1secmail.com/api \n https://getnada.com \n https://inboxes.com \n https://temp-mail.org/zh \n https://tempr.email \n \n \n https://github.com/ccbikai \n \n https://email.ml \n https://tempmail.best \n \n \n https://github.com/beilunyang/moemail \n \n \n https://smailpro.com \n \n https://smailpro.com/temp-gmail \n \n \n https://mail.tm \n \n https://mail.gw \n https://github.com/msuny-c/mailtm \n https://github.com/felixstrobel/mailtm \n \n \n https://www.linshiyouxiang.net \n http://24mail.chacuo.net \n \n https://github.com/Xavier-Lam/24mail \n \n \n https://www.guerrillamail.com/zh \n https://www.moakt.com/zh \n https://rootsh.com \n http://www.yopmail.com/zh \n https://10minutemail.com \n https://github.com/Zaczero/10MinuteMail.net \n \n https://10minutemail.net \n \n \n https://www.minuteinbox.com \n http://mailcatch.com/en/disposable-email \n https://www.mintemail.com \n https://mail.td \n http://www.mailinator.com \n https://www.crazymailing.com/zh \n https://www.tempmailbox.net \n https://www.fakemail.net \n https://www.disposablemail.com \n https://tempmail.net \n https://mailpoof.com \n https://www.emailondeck.com \n https://adguard.com/zh_cn/adguard-temp-mail/overview.html \n https://22.do \n https://www.emailnator.com \n https://m.kuku.lu \n https://tempmail100.com \n https://minmail.app \n https://cs.email/zh \n https://thundermail.com \n 在线接收短信 \n 国外 \n \n https://sms24.me \n https://receive-sms.cc \n https://receive-sms-online.com \n https://getfreesmsnumber.com \n http://7sim.net \n https://receive-sms-free.net \n https://ch.freephonenum.com \n https://zh.mytrashmobile.com \n https://receiveasms.com \n http://receivefreesms.com \n https://www.receivesmsonline.net \n https://www.freeonlinephone.org \n https://us-phone-number.com \n https://temporary-phone-number.com \n https://www.receivesms.co \n https://www.smstibo.com \n https://pingme.tel/receive-sms-online-cn \n http://receivefreesms.net \n http://receivesmsonline.in \n https://sms-receive.net \n https://www.receivesms.net \n http://www.z-sms.com \n https://www.zusms.com/phone/all \n ReceivingSms： https://www.receivingsms.com \n \n https://www.visitorsms.com \n \n \n blacktel： https://www.blacktel.io \n spoofBox： http://www.spoofbox.com \n SmsReceiver： https://sms.ndtan.net \n OnlineSIM： http://onlinesim.ru \n SELLAITE： http://sms.sellaite.com \n Receive SMS Online： http://receive-sms-online.com \n Receive-SMS： https://receive-sms.com \n Receive SMS online for Free： https://sms-online.co/receive-free-sms \n Receive a SMS Online： https://receive-a-sms.com \n Receive SMS Online for FREE： https://www.receive-sms-online.info \n SMSReceiveFree： https://smsreceivefree.com \n \n 国内 \n \n 超级云短信：  http://www.bfkdim.com \n 隐私短信： https://www.yinsiduanxin.com \n 云短信：  https://www.storytrain.info \n 在线短信： http://www.smszk.com \n 游客短信： https://www.visitorsms.com/cn \n 免费接码： https://www.becmd.com \n 接码平台： http://www.114sim.com \n 免费接码： http://z-sms.com \n 云短信： https://www.zusms.com \n 免费接码： https://www.shejiinn.com \n 云接码： https://yunjiema.net \n 免费接码： https://www.mffac.com \n 接码科技免费平台： https://f4.work \n 主站： http://jiema.tech \n 接码号： https://jiemahao.com \n 免费接码：  https://mianfeijiema.com \n 小鸟接码平台：  http://www.xnsms.com \n zero接码平台：  https://xinghai.party \n LotHelper：  https://www.lothelper.com/cn \n 免费接码平台：  http://www.zsrq.net \n 免费接收短信验证码： https://www.we39.cn \n KaKa接码平台： http://www.kakasms.com \n 随用随弃： https://www.suiyongsuiqi.com \n 身份和信用卡 \n \n 申请虚拟信用卡的40个不同渠道 \n 全球付虚拟信用卡申请教程 \n 虚拟信用卡 \n \n 易购卡(easypayx) \n \n 美国虚拟信用卡开卡平台：EasyPay易购卡(522490，428813) \n \n \n \n \n \n 国家代码，电话代码，拨号代码，电话代码，ISO国家代码:  https://countrycode.org \n \n 生成完整用户信息 \n \n （有生成数量限制）支持美国、日本、德国、英国等多国身份 \n \n \n https://www.usaddrgen.com \n 中文站： http://www.haoweichi.com \n 英文站： https://www.fakenamegenerator.com \n 英文站： https://www.fakeaddressgenerator.com \n 台湾/香港/韩国身份信息生成： https://tw.51240.com \n 台湾身份证生成： https://people.debian.org/~paulliu/ROCid.html \n \n https://www.csie.ntu.edu.tw/~b90057/use/ROCid.html \n \n \n \n 生成虚拟信息 \n \n 批量生成，自定义规则，支持假身份、完整的联系信息、信用卡、建立信用卡、北美地址、北美城市、电子邮件地址、街道清单、美国城市清单 \n \n \n https://names.igopaygo.com \n \n \n https://www.ssnregistry.org \n https://www.ssn-verify.com \n \n 可生成信用卡图片支持万事达/VISA/运通卡 \n \n http://card-generator.com/q_free-credit-card-generator-with-cvv.htm \n \n 生成信用卡信息，支持定义规则 \n \n https://cc.namsopro.com \n https://www.bestcreditcardgenerator.com \n https://www.bingenerator.net \n 信用卡卡号生成器及验证器 \n \n 随机生成 \n \n https://www.randomlists.com \n https://randomprofile.com \n https://fakedetail.com \n \n GitHub \n \n https://github.com/search?q=faker \n https://pypi.org/search/?q=Faker \n \n \n https://github.com/philipperemy/name-dataset \n \n \n https://github.com/faker-js/faker \n \n https://github.com/lestoni/faker-cli \n \n \n https://github.com/RandomAPI/Randomuser.me-Node \n https://github.com/benkeen/generatedata \n https://github.com/dmgk/faker \n https://github.com/arakelian/faker \n https://github.com/travishorn/fake-identity \n https://github.com/corbanworks \n https://github.com/MrKinauJr/FakeNameGenerator \n https://github.com/faker-ruby/faker \n https://github.com/fzaninotto/Faker \n https://github.com/joke2k/faker \n \n faker - 测试数据生成 | Tonny's Blog \n faker_examples.py \n \n \n https://github.com/brianvoe/gofakeit \n 电话号码信息收集  https://github.com/sundowndev/phoneinfoga \n 小说项目 \n \n GitHub搜索 \n https://github.com/tickmao/book_fairy \n https://github.com/AlannnnnnL/moyuba \n https://github.com/boo-boom/zssq \n https://github.com/zx648383079/Vue-Reader \n https://github.com/qq674785876/novel \n https://github.com/ma6254/FictionDown \n https://github.com/ClawHub/mini-book-search \n https://github.com/ShangSky/novel_spider \n https://github.com/RenYanlong/Zhuishu-Vue \n https://github.com/mrgang/MRead \n https://github.com/ggapsong/novel \n https://github.com/yan1301965076/NovelWeb-pc \n https://github.com/cruiseding/tushu-novel \n https://github.com/linDdongZ/Xfiction \n https://github.com/EsunR/Novel-System \n https://github.com/howie6879/owllook \n https://github.com/jaceyi/book \n https://github.com/460623395/bookStore \n https://github.com/rrcgat/novel-info \n https://github.com/cruiseding/java-novel-collect \n https://github.com/dengzemiao/DZMeBookRead \n https://github.com/jianhui1012/bookreader/wiki/API-%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3 \n https://github.com/ptcms/RuleApi \n https://github.com/lzh-kf/novel \n https://github.com/zhangweijiang/thinkphp-novel \n https://github.com/hiliqi/xiaoshuo \n https://github.com/zhongyu911/novel \n AnyView阅读-未开源 \n https://github.com/kaixin1995/HappyReading \n https://github.com/natee/tampermonkey-plugin \n https://github.com/ywzhaiqi/userscript \n https://github.com/kovidgoyal/calibre \n \n https://calibre-ebook.com \n https://github.com/janeczku/calibre-web \n \n \n https://github.com/Librum-Reader/Librum \n https://github.com/201206030/novel \n Epub  https://github.com/pacexy/flow \n \n \n 脚本  https://github.com/lingo34/novel-crawler-cli \n https://github.com/gofreeing/qidian-hamibot \n https://github.com/pzx521521/qidian_AutoLookAD \n https://github.com/BowenZ217/novel-downloader \n https://github.com/dammu/QidianAutoJs \n https://github.com/BowenZ217/qidian-decryptor \n https://github.com/YsielX/qidian-crawler \n vue \n \n https://github.com/zgsnbtl/vue-guapi \n https://github.com/moxier/Book-WebApp \n PHP \n \n https://github.com/asdf1258598558/tkbooks \n https://github.com/lanpangzhi/novel-vue \n https://github.com/zhu1979/getnovel \n https://github.com/IceInTheFire/timotaoshu \n golang \n \n https://github.com/vckai/novel \n Android \n \n https://github.com/hectorqin/reader \n https://github.com/huanxsd/flutter_shuqi \n 阅读  https://github.com/gedoor \n \n https://www.coolapk.com/apk/io.legado.app.release \n https://shuyuan.yiove.com \n \n \n https://github.com/koreader/koreader \n https://github.com/ZhangQinhao/MONKOVEL \n https://github.com/zas023/CocoBook \n https://github.com/tianlongfei/story_android \n https://github.com/zhou129311/NetBook \n https://github.com/wangnan1082-icloud/HHReader \n https://github.com/qq446887609/july_android \n https://github.com/AoEiuV020/PaNovel \n https://github.com/Zzzia/EasyBook \n https://github.com/cildhdi/clreader \n https://github.com/MagiCiAn1/FanTuanBooks \n https://github.com/ya-b/NetNovelReader \n https://github.com/jmxiawei/juzinovel \n https://github.com/newbiechen1024/NovelReader \n https://github.com/z-chu/FriendBook \n https://github.com/hexingbo/treader \n https://github.com/bifan-wei/HwTxtReader \n https://github.com/smuyyh/BookReader \n https://github.com/newbiechen1024/NovelReader \n https://github.com/gmathi/NovelLibrary \n IOS \n \n https://github.com/is0bnd/Books \n \n",createdTime:1761814324e3},{title:"C",frontmatter:{description:"学习 https://github.com/gatieme/AderXCoding\nhttps://github.com/tangtangcoding/C-C-\nhttps://github.com/SolerHo/CprimerPlus-6e-Notes\nhttps://www.tutorialspoint.com/cprogramming\nC语言手册 https://github.com/VernonGrant/gnu-c-language-manual\nhttps://github.com/getiot/linux-c-functions",meta:[{name:"twitter:title",content:"C"},{name:"twitter:description",content:"学习 https://github.com/gatieme/AderXCoding\nhttps://github.com/tangtangcoding/C-C-\nhttps://github.com/SolerHo/CprimerPlus-6e-Notes\nhttps://www.tutorialspoint.com/cprogramming\nC语言手册 https://github.com/VernonGrant/gnu-c-language-manual\nhttps://github.com/getiot/linux-c-functions"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/C.html"},{property:"og:type",content:"article"},{property:"og:title",content:"C"},{property:"og:description",content:"学习 https://github.com/gatieme/AderXCoding\nhttps://github.com/tangtangcoding/C-C-\nhttps://github.com/SolerHo/CprimerPlus-6e-Notes\nhttps://www.tutorialspoint.com/cprogramming\nC语言手册 https://github.com/VernonGrant/gnu-c-language-manual\nhttps://github.com/getiot/linux-c-functions"},{property:"og:url",content:"https://bajins.com/PL/C.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"C"},{itemprop:"description",content:"学习 https://github.com/gatieme/AderXCoding\nhttps://github.com/tangtangcoding/C-C-\nhttps://github.com/SolerHo/CprimerPlus-6e-Notes\nhttps://www.tutorialspoint.com/cprogramming\nC语言手册 https://github.com/VernonGrant/gnu-c-language-manual\nhttps://github.com/getiot/linux-c-functions"}]},regularPath:"/PL/C.html",relativePath:"PL/C.md",key:"v-16e8b8b9",path:"/PL/C.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"编译器",slug:"编译器"},{level:2,title:"第三方依赖",slug:"第三方依赖"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" C \n Flag 编译器 第三方依赖 \n Flag \n \n https://github.com/topics/c \n \n \n 包管理器  https://github.com/clibs \n C/C++包管理器  https://github.com/conan-io/conan \n 学习  https://github.com/gatieme/AderXCoding \n https://github.com/tangtangcoding/C-C- \n https://github.com/SolerHo/CprimerPlus-6e-Notes \n https://www.tutorialspoint.com/cprogramming \n C语言手册  https://github.com/VernonGrant/gnu-c-language-manual \n https://github.com/getiot/linux-c-functions \n \n \n C语言内存泄露很严重，如何应对？ \n C语言串口通信，自动连接设备 \n C 串口通迅（COM Serial TEST） \n C语言实现串口通信 \n http://www.teuniz.net/RS-232 \n C/C++编程学习殿堂 \n 实现一个shell \n 编译器 \n \n GCC ,Clang 与 make,cmake 一览 \n \n \n https://github.com/theicfire/makefiletutorial \n https://www.gnu.org/software/make \n \n 输出项目帮助信息  https://github.com/mitjafelicijan/makext \n \n \n https://github.com/Kitware/CMake \n \n https://cmake.org/download \n https://gitlab.kitware.com/cmake/cmake \n \n \n https://github.com/llvm/llvm-project \n https://github.com/mstorsjo/llvm-mingw \n https://github.com/clangd/clangd \n https://github.com/gcc-mirror/gcc \n https://github.com/Rust-GCC \n https://github.com/ninja-build/ninja \n https://github.com/mesonbuild/meson \n https://pandolia.net/tinyc \n https://bellard.org/tcc \n https://github.com/jmeubank/tdm-gcc \n https://github.com/rr-debugger/rr \n https://github.com/sifive \n https://github.com/universal-ctags/ctags \n 通用构建工具  https://github.com/autotools-mirror/automake \n https://github.com/SCons/scons \n 自动构建  https://github.com/buildbot/buildbot \n 静态分析  https://sourceforge.net/projects/cppcheck \n x86汇编  https://github.com/netwide-assembler/nasm \n 反汇编  https://github.com/capstone-engine/capstone \n \n \n Dev-C++ \n Turbo C \n Mingw \n WIN-TC \n Cygwin \n Visual stdudio \n Visual c++6.0 \n Code::Blocks \n C-Free \n Tiny cc \n Borland C++ \n WaTCom C++ \n GNU DJGPP C++ \n Lccwin32 C Compiler3.1 \n High C \n My Tc \n \n \n GCC日志查看  https://github.com/jake-arkinstall/gcc-explorer \n 第三方依赖 \n \n https://github.com/embecosm \n https://github.com/iqiyi \n https://github.com/floooh \n \n \n https://github.com/nothings/stb \n https://github.com/KaisenAmin/c_std \n https://github.com/ImpulseAdventure/GUIslice-Builder \n \n https://github.com/ImpulseAdventure/GUIslice \n \n \n https://github.com/DaveGamble/cJSON \n 压缩  https://github.com/inikep/lzbench \n https://github.com/conor42 \n https://github.com/libarchive \n https://github.com/madler/zlib \n https://github.com/gdraheim/zziplib \n https://github.com/lemire/simdcomp \n http://gailly.net \n https://zlib.net \n https://github.com/zlib-ng/zlib-ng \n https://sourceforge.net/projects/libpng \n \n https://www.libpng.org \n \n \n https://github.com/pnggroup/libpng \n https://sourceforge.net/projects/png-mng \n http://www.winimage.com/zLibDll \n https://www.gnu.org/software/gzip \n https://sourceforge.net/projects/infozip \n https://github.com/facebook/zstd \n https://github.com/Cyan4973/FiniteStateEntropy \n https://github.com/lz4/lz4 \n https://github.com/tukaani-project/xz \n https://www.sourceware.org/bzip2 \n https://sourceforge.net/projects/bzip2 \n https://github.com/kspalaiologos/bzip3 \n https://github.com/nih-at/libzip \n 标准库  https://musl.libc.org \n \n https://github.com/seL4/musllibc \n https://github.com/richfelker \n https://musl.cc \n \n \n https://github.com/topics/libc \n https://github.com/bminor/glibc \n https://github.com/zpl-c/zpl \n 钩子  https://github.com/jmpews/Dobby \n https://github.com/canonical/raft \n 提高分辨率  https://github.com/GPUOpen-Effects/FidelityFX-FSR \n https://github.com/ithewei/libhv \n https://github.com/libevent/libevent \n https://github.com/enki/libev \n https://github.com/libuv/libuv \n OpenGL  https://github.com/anholt/libepoxy \n https://github.com/libsdl-org/SDL \n https://github.com/raysan5/raylib \n https://github.com/glfw/glfw \n 2D  https://www.cairographics.org \n 3D  https://github.com/blender \n \n https://github.com/sobotka/blender \n https://github.com/blender-for-science \n https://gitlab.onelab.info/gmsh/gmsh \n \n \n https://github.com/ebassi/graphene \n 图片处理  https://github.com/kohler/gifsicle \n https://github.com/libjpeg-turbo \n http://ijg.org \n https://github.com/phoboslab/qoi \n https://sourceforge.net/projects/giflib \n https://sourceforge.net/projects/apng \n https://gitlab.com/libtiff \n \n http://www.libtiff.org \n \n \n https://sourceforge.net/projects/gnuwin32 \n https://github.com/libvips/libvips \n https://github.com/jcupitt/vipsdisp \n https://github.com/tjko/jpegoptim \n https://jpegclub.org/jpegtran \n https://sourceforge.net/projects/pmt \n https://www.ijg.org \n https://github.com/DanBloomberg/leptonica \n PCI  https://github.com/pciutils/pciutils \n HTTP  https://github.com/mirror/wget \n \n https://gitlab.com/gnuwget/wget2 \n https://github.com/rockdaboot/wget2 \n \n \n https://github.com/curl/curl \n \n https://github.com/bagder/everything-curl \n HTTP  https://curl.se/libcurl \n https://github.com/search?q=libcurl \n https://github.com/lexiforest/curl-impersonate \n \n \n https://github.com/ngtcp2 \n \n https://github.com/tatsuhiro-t \n \n \n https://github.com/lwip-tcpip/lwip \n https://github.com/openucx/ucx \n https://github.com/warmcat/libwebsockets \n 实时传输协议  https://github.com/cisco/libsrtp \n https://github.com/sctplab/usrsctp \n https://libwebsockets.org \n https://github.com/freeswitch/sofia-sip \n Markdown  https://github.com/commonmark/cmark \n https://github.com/MDeiml/tree-sitter-markdown \n PDF  https://github.com/ArtifexSoftware \n https://ghostscript.com \n 加密  https://github.com/bitcoin-core/secp256k1 \n https://github.com/apache/apr \n https://github.com/B-Con/crypto-algorithms \n https://github.com/cryspen/libcrux \n https://github.com/BelledonneCommunications/bzrtp \n https://github.com/Mbed-TLS \n https://github.com/gnutls \n \n https://gitlab.com/gnutls/gnutls \n \n \n https://github.com/topics/nacl \n \n https://github.com/jedisct1/libsodium \n \n \n 抗量子  https://github.com/open-quantum-safe \n Base64  https://github.com/jwerle/b64.c \n GUI  https://github.com/nicbarker/clay \n 嵌入式GUI  https://github.com/lvgl \n https://github.com/SiliconLabs \n https://gitlab.com/lambdachip \n emWin  www.segger.com/products/user-interface/emwin \n TouchGFX  https://www.st.com/content/st_com/zh/ecosystems/stm32-graphic-user-interface.html \n MiniGUI  https://github.com/VincentWei \n https://gitee.com/rtthread \n https://github.com/fltk \n https://github.com/ghaerr/microwindows \n USB/HID  https://github.com/libusb \n https://sourceforge.net/projects/libusbk \n https://sourceforge.net/projects/libusb-win32 \n https://github.com/pbatard \n https://github.com/kevinmehall \n 代码搜索工具  https://github.com/ggreer/the_silver_searcher \n 解析xml  https://github.com/libexpat/libexpat \n https://gitlab.gnome.org/GNOME/libxml2 \n JSON  https://github.com/json-parser/json-parser \n https://github.com/Barenboim/json-parser \n https://github.com/akheron/jansson \n 沙盒技术  https://github.com/plsyssec \n 哈希表  https://github.com/tidwall/hashmap.c \n 键盘映射  https://github.com/xkbcommon/libxkbcommon \n 抓包  https://github.com/ehids/ecapture \n 配置文件  https://github.com/vstakhov/libucl \n https://github.com/hyperrealm/libconfig \n 集合  https://github.com/ivanseidel/LinkedList \n 测试  https://github.com/mortie/snow \n 缓冲区  https://github.com/MaJerle/lwrb \n eBPF  https://github.com/gojue/ecapture \n 串行Flash通用驱动  https://github.com/armink/SFUD \n SSH  https://github.com/libssh2/libssh2 \n 布隆过滤器  https://github.com/upbit/bloomfilter \n \n https://llimllib.github.io/bloomfilter-tutorial/zh_CN \n \n \n 流媒体  https://github.com/GStreamer/gstreamer \n SVG  https://github.com/TinyVG \n https://github.com/uclouvain/openjpeg \n https://github.com/sekrit-twc/zimg \n 图形可视化  https://gitlab.com/graphviz/graphviz \n \n https://github.com/ellson/MOTHBALLED-graphviz \n \n \n godot游戏引擎支持JS  https://github.com/Geequlim/ECMAScript \n 游戏框架  https://github.com/cloudwu/skynet \n https://github.com/ejoy/ant \n 呈现字体  https://freetype.org \n https://github.com/cacalabs/libcaca \n 英特尔媒体调度  https://github.com/lu-zero/mfx_dispatch \n Windows通用更新程序  https://github.com/gup4win/wingup \n \n https://github.com/gupwin32/gupwin32.github.io \n \n \n https://github.com/risacher/sunwait \n 文件分页  https://github.com/gwsw/less \n 文件类型猜测  https://github.com/file/file \n FFI  https://dyncall.org \n https://sourceforge.net/projects/swig \n \n https://github.com/swig \n \n \n Windows API Hook  https://github.com/TsudaKageyu/minhook \n 正则表达式  https://github.com/PCRE2Project/pcre2 \n 消息总线  https://github.com/bus1/dbus-broker \n \n https://uyha.github.io/technical/dbus-systemd.html \n \n \n 动态加载链库  https://github.com/fancycode/MemoryModule \n \n 媒体处理 \n \n https://github.com/topics/fft \n https://github.com/topics/ffmpeg \n https://github.com/topics/mpeg \n https://github.com/topics/mp4 \n \n \n https://github.com/webmproject \n https://www.videolan.org/projects \n 音乐可视化  https://github.com/projectM-visualizer/projectm \n https://github.com/FFmpeg/FFmpeg \n \n https://ffmpeg.org \n https://ffmpeg.guide \n https://github.com/jeanslack/Videomass \n https://github.com/wang-bin \n https://github.com/BtbN/FFmpeg-Builds \n https://www.gyan.dev/ffmpeg/builds/ \n \n \n https://github.com/ShiftMediaProject/FFmpeg \n https://github.com/ashellunts/ffmpeg-to-webrtc \n https://github.com/AO-Yumi/vorbis_aotuv \n https://www.quut.com/gsm \n https://sourceforge.net/projects/lame \n https://github.com/MediaArea \n https://github.com/fribidi/fribidi \n https://github.com/yasm/yasm \n https://github.com/njh/twolame \n https://github.com/libass/libass \n https://www.xvid.com \n https://sourceforge.net/projects/soxr \n https://sourceforge.net/projects/modplug-xmms \n https://github.com/georgmartius/vid.stab \n https://gitlab.freedesktop.org/gstreamer/gstreamer \n https://medlexo.ml/cn.php \n https://github.com/HandBrake/HandBrake \n https://github.com/eibol/ffmpeg_batch \n \n https://sourceforge.net/projects/ffmpeg-batch \n \n \n 跨平台音乐制作  https://github.com/LMMS/lmms \n https://github.com/free-audio/clap \n 音频编辑器  https://github.com/audacity/audacity \n 音频分割器  https://github.com/idlesign/deflacue \n https://github.com/taglib/taglib \n https://github.com/awwbees/BespokeSynth \n https://github.com/smasherprog/screen_capture_lite \n 音频和视频流  https://github.com/RidgeRun/gstd-1.x \n https://github.com/xiph/ogg \n \n https://www.xiph.org \n \n \n https://github.com/mackron/miniaudio \n OTT编码打包  https://github.com/cannonbeach/ott-packager \n 解码  https://github.com/kn007/silk-v3-decoder \n https://opus-codec.org \n https://sourceforge.net/projects/xavs \n https://xiph.org/vorbis \n 视频转码  https://github.com/HandBrake/HandBrake \n 数码相机访问  https://github.com/gphoto \n \n https://sourceforge.net/projects/gphoto \n https://dechifro.org/dcraw \n \n \n \n 其他 \n \n 反汇编： C32asm、MYCCL、OD、IDA、softICE、WinDbg \n https://github.com/x64dbg/x64dbg \n \n https://github.com/horsicq/x64dbg-Plugin-Manager \n \n \n https://github.com/jas502n/IDA_Pro_7.2 \n https://github.com/gaasedelen/lighthouse \n 内存调试  https://github.com/ArtifexSoftware/memento \n 性能工具  https://github.com/HPCToolkit/hpctoolkit \n https://github.com/jonasmr/microprofile \n 模糊测试  https://github.com/AFLplusplus/AFLplusplus \n https://github.com/google/honggfuzz \n https://github.com/google/AFL \n HTTP测试  https://github.com/wg/wrk \n 超级马里奥64  https://github.com/n64decomp \n 塞尔达传说时之笛  https://github.com/zeldaret \n https://github.com/PCSX2/pcsx2 \n 密码恢复工具  https://github.com/hashcat/hashcat \n 跨平台运行  https://github.com/jart/cosmopolitan \n \n \n C语言的编译器有很多种，不同的平台下有不同的编译器 \n \n \n 第三方针对各种不同系统制作的GCC安装包 \n 主流C语言编译器有哪些？ \n \n \n Windows 下常用的是微软开发的 Visual C++（MSVC）、Clang、CMake 或 MS Build； \n Linux 下常用的是 GUN 组织开发的 GCC，很多 Linux 发行版都自带 GCC； \n Mac 下常用的是 LLVM/Clang，它被集成在 Xcode 中（Xcode 以前集成的是 GCC，后来由于 GCC 的不配合才改为 LLVM/Clang，LLVM/Clang 的性能比 GCC 更加强大）。 \n \n \n Visual C++（简称 MSVC）是由微软开发的，只能用于 Windows 操作系统；GCC 和 LLVM Clang 除了可用于 Windows 操作系统之外，主要用于 Unix/Linux 操作系统。 \n \n",createdTime:1761814324e3},{title:"CPlusPlus",frontmatter:{description:"【学习笔记】STL学习总结",meta:[{name:"twitter:title",content:"CPlusPlus"},{name:"twitter:description",content:"【学习笔记】STL学习总结"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/CPlusPlus.html"},{property:"og:type",content:"article"},{property:"og:title",content:"CPlusPlus"},{property:"og:description",content:"【学习笔记】STL学习总结"},{property:"og:url",content:"https://bajins.com/PL/CPlusPlus.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"CPlusPlus"},{itemprop:"description",content:"【学习笔记】STL学习总结"}]},regularPath:"/PL/CPlusPlus.html",relativePath:"PL/CPlusPlus.md",key:"v-032b2ad1",path:"/PL/CPlusPlus.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"第三方依赖",slug:"第三方依赖"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" CPlusPlus \n Flag 第三方依赖 \n Flag \n \n C++ \n \n \n https://github.com/topics/cpp \n https://github.com/fffaraz/awesome-cpp \n \n \n http://www.cplusplus.com \n https://zh.cppreference.com \n 开放标准  https://www.open-std.org \n https://github.com/microsoft/STL \n \n https://learn.microsoft.com/zh-cn/cpp \n \n \n https://www.stroustrup.com \n https://www.boost.org \n 哈希函数质量和速度测试  https://github.com/rurban/smhasher \n \n \n https://github.com/jermp/pthash \n \n \n C++那些事  https://github.com/Light-City/CPlusPlusThings \n https://isocpp.org \n https://www.reddit.com/r/cpp \n 基础知识  https://github.com/huihut/interview \n https://github.com/isocpp/CppCoreGuidelines \n https://github.com/changkun/modern-cpp-tutorial \n https://github.com/Alinshans/MyTinySTL \n https://github.com/Changhe160/cplusplus2020-2021-2 \n https://github.com/lkimuk \n https://github.com/cpp-tutor \n 学习路线图  https://github.com/salmer/CppDeveloperRoadmap \n https://github.com/CDDSCLab/training-plan \n https://github.com/changgyhub/leetcode_101 \n https://github.com/soulmachine/leetcode \n https://github.com/0voice/cpp_new_features \n https://github.com/AnthonyCalandra/modern-cpp-features \n https://github.com/google/cpu_features \n https://github.com/federico-busato/Modern-CPP-Programming \n https://elesos.github.io/archives \n https://www.adacpp.com \n 代码优化方案  https://github.com/ibogosavljevic/johnysswlab \n 互斥锁  https://github.com/skarupke/two_bit_mutex \n 30天自制C++服务器  https://github.com/yuesong-feng/30dayMakeCppServer \n https://learnmoderncpp.com \n C/C++串口通信原理及读写与操作 \n 浅谈The C++ Executors \n 【学习笔记】STL学习总结 \n \n \n IDE  https://www.jetbrains.com/zh-cn/products/#lang=cpp \n https://sourceforge.net/projects/codeblocks \n https://sourceforge.net/projects/codelite \n \n https://github.com/eranif/codelite \n \n \n https://github.com/qt-creator/qt-creator \n https://projects.eclipse.org/projects/tools.cdt \n https://www.codeblocks.org \n 第三方依赖 \n \n https://github.com/kdab \n https://github.com/jamboree \n https://github.com/ThePhD \n \n \n 标准库  https://github.com/boostorg \n https://github.com/VcDevel \n https://github.com/abseil/abseil-cpp \n https://github.com/alaingalvan \n https://github.com/vectorclass \n https://github.com/electronicarts \n 内存分配  https://github.com/foonathan/memory \n 微服务  https://github.com/TarsCloud \n 包管理  https://github.com/microsoft/vcpkg \n \n 适用于Windows，Linux和MacOS的C ++库管理器 \n \n \n https://github.com/ericniebler/range-v3 \n UI  https://github.com/ocornut/imgui \n https://github.com/cimgui/cimgui \n https://github.com/KDAB \n https://github.com/woboq \n https://github.com/LanceMoe/ToyBrowser \n https://github.com/Bringer-of-Light/Qt-Nice-Frameless-Window \n https://gitlab.com/mattbas/Qt-Color-Widgets \n https://github.com/topics/directui \n \n https://github.com/duilib/duilib \n https://github.com/qdtroy/DuiLib_Ultimate \n https://github.com/netease-im/NIM_Duilib_Framework \n https://github.com/xfcanyue/DuiLib_DuiEditor \n \n \n https://github.com/AcademySoftwareFoundation/openvdb \n https://sourceforge.net/projects/wtl \n 并行编程标准  https://github.com/OpenCL \n https://github.com/GPUOpen-LibrariesAndSDKs \n Vulkan  https://github.com/KhronosGroup \n \n https://www.opengl.org \n \n \n https://github.com/KhronosGroup/Vulkan-Headers \n https://github.com/baldurk/renderdoc \n OpenCV  https://github.com/opencv \n \n https://github.com/skvark/opencv-python \n https://github.com/makelove/OpenCV-Python-Tutorial \n \n \n https://github.com/xianyi/OpenBLAS \n https://github.com/UrielCh/opencv4nodejs \n OpenAL  https://github.com/kcat/openal-soft \n 美颜滤镜  https://github.com/pixpark/gpupixel \n 2D和3D跨平台  https://github.com/godotengine/godot \n https://github.com/cocos2d/cocos2d-x \n 3D  https://github.com/FlaxEngine/FlaxEngine \n https://github.com/o3de/o3de \n https://github.com/CRYTEK/CRYENGINE_ReadMe \n https://github.com/assimp/assimp \n https://github.com/OGRECave/ogre \n https://github.com/RavEngine/RavEngine \n 2D/PDF  https://github.com/google/skia \n \n https://github.com/JetBrains/skiko \n \n \n https://github.com/JoeyDeVries/LearnOpenGL \n https://github.com/TheCherno/Hazel \n 图像元数据  https://github.com/Exiv2/exiv2 \n https://github.com/LibRaw \n https://github.com/lensfun/lensfun \n https://github.com/bulletphysics/bullet3 \n https://github.com/ros-perception/image_pipeline \n PNG  https://github.com/lvandeve/lodepng \n https://github.com/Ravbug/BatchCompress \n JSON  https://github.com/miloyip/nativejson-benchmark \n https://github.com/simdjson/simdjson \n https://github.com/nlohmann/json \n https://github.com/MistEO/meojson \n https://github.com/Tencent/rapidjson \n https://github.com/open-source-parsers/jsoncpp \n \n https://sourceforge.net/projects/jsoncpp \n \n \n XML  https://github.com/zeux/pugixml \n HTML  https://github.com/csb6/html-plus-plus \n web  https://github.com/qinguoyi/TinyWebServer \n https://github.com/sogou \n https://github.com/jpbarrette/curlpp \n https://github.com/elnormous/HTTPRequest \n https://gitee.com/ldcsaa/HP-Socket \n https://github.com/cesanta/mongoose \n https://github.com/yhirose/cpp-httplib \n URL解析  https://github.com/ada-url/ada \n 分布式网络框架  https://github.com/Bwar/Nebula \n 分析调试测试器  https://github.com/dfeneyrou/palanteer \n 实时视频  https://github.com/ossrs/srs \n 流媒体  https://github.com/rgaufman/live555 \n https://github.com/Kurento/kurento-media-server \n https://github.com/ZLMediaKit/ZLMediaKit \n 音频识别  https://github.com/acoustid \n 音频编辑  https://github.com/Ardour/ardour \n 视频编辑  https://github.com/axiomatic-systems/Bento4 \n https://github.com/MPEGGroup/isobmff \n https://github.com/DigiDNA/ISOBMFF \n https://github.com/gpac/gpac \n https://github.com/wez/atomicparsley \n https://github.com/enzo1982/mp4v2 \n https://github.com/cisco/openh264 \n https://github.com/lemenkov/libyuv \n 单元测试  https://github.com/catchorg/Catch2 \n https://github.com/google/googletest \n \n https://github.com/kinow/gtest-tap-listener \n https://github.com/google/gtest-parallel \n \n \n https://github.com/doctest/doctest \n 压缩  https://github.com/lemire/SIMDCompressionAndIntersection \n https://github.com/lemire/FastPFor \n https://github.com/mapbox/gzip-hpp \n https://github.com/stachenov/quazip \n https://github.com/rikyoz/bit7z \n https://github.com/aawc/unrar \n 加密  https://github.com/weidai11/cryptopp \n https://github.com/ReneNyffenegger/cpp-base64 \n https://github.com/kroma-network/tachyon \n 正则  https://github.com/google/re2 \n 格式化  https://github.com/fmtlib \n Windows托盘图标  https://github.com/mceSystems/node-windows-trayicon \n grep替代  https://github.com/Genivia/ugrep \n 运算符解析  https://github.com/kimwalisch/calculator \n 参数解析  https://github.com/p-ranav/argparse \n https://github.com/muellan/clipp \n 字体参考线  https://github.com/google/woff2 \n 拼写检查  https://github.com/hunspell \n 捕获音频  https://github.com/bozbez/win-capture-audio \n 跨平台QT USB  https://github.com/fpoussin/QtUsb \n 配置文件  https://github.com/Nomango/configor \n 文件监视器  https://github.com/facebook/watchman \n Windows控制台程序通信  https://github.com/rprichard/winpty \n SQL查询  https://github.com/anse1/sqlsmith \n 嵌入式  https://github.com/sblantipodi \n 地理空间  https://github.com/osgeo \n https://github.com/postgis \n https://github.com/valhalla/valhalla \n 地理位置  https://github.com/qgis/QGIS \n 编码检测  https://github.com/freedesktop/uchardet \n https://github.com/simdutf/simdutf \n 游戏引擎  https://github.com/minetest/minetest \n https://github.com/Tencent/puerts \n \n https://github.com/puerts \n \n \n 图片编解码  Codec comparison \n \n https://jpeg.org \n \n \n https://github.com/AOMediaCodec/libavif \n \n https://aomedia.googlesource.com/aom \n \n \n https://github.com/mirrorer/libbpg \n https://github.com/strukturag/libheif \n https://github.com/libjxl/libjxl \n https://gitlab.com/wg1/jpeg-xl \n https://chromium.googlesource.com/codecs/libwebp2 \n https://chromium.googlesource.com/webm/libwebp \n \n https://www.webmproject.org \n \n \n https://github.com/mozilla/mozjpeg \n https://chromium.googlesource.com/libyuv/libyuv \n https://github.com/Netflix/vmaf \n https://github.com/eclipseo/image-comparison-sources \n https://github.com/kornelski/dssim \n https://github.com/cloudinary/ssimulacra \n https://github.com/cloudinary/ssimulacra2 \n 日志  https://github.com/gabime/spdlog \n 文本形状  https://github.com/harfbuzz/harfbuzz \n 数学运算  https://gmplib.org \n 提权  https://github.com/M2Team/NanaRun \n https://github.com/M2TeamArchived/NSudo \n URL解析  https://github.com/ada-url/ada \n 线性优化  https://github.com/ERGO-Code/HiGHS \n 点云  https://github.com/PDAL/PDAL \n 不可变  https://github.com/arximboldi/immer \n 日期时间  https://github.com/HowardHinnant/date \n 范围  https://github.com/ericniebler/range-v3 \n 队列  https://github.com/cameron314/concurrentqueue \n 编码检测  https://github.com/BYVoid/uchardet \n 代码高亮  https://github.com/TelegramMessenger/libprisma \n \n \n 管理安装和更新Windows应用  https://github.com/Squirrel/Squirrel.Windows \n 单元测试  https://github.com/banditcpp/bandit \n https://github.com/catchorg/Catch2 \n 构建语言运行时  https://github.com/eclipse/omr \n HTML转换为PDF  https://github.com/wkhtmltopdf \n 分析器  https://github.com/bombomby/optick \n NTLM中继工具  https://github.com/CCob/lsarelayx \n 无线电应用  https://github.com/cjcliffe \n https://github.com/pothosware \n Python绑定  https://github.com/pybind \n 自动驾驶  https://gitlab.com/autowarefoundation/autoware.auto \n https://github.com/chipsalliance \n 查找和替换文本  https://github.com/lionello/fart-it \n 模拟天文  https://github.com/Stellarium/stellarium \n 复制弹窗文本  https://github.com/m417z/Textify \n 代码审计  https://github.com/trailofbits/multiplier \n \n",createdTime:1761814324e3},{title:"免费服务",frontmatter:{description:"https://github.com/public-apis/public-apis\nhttps://github.com/public-api-lists\nhttps://github.com/hongyangAndroid/wanandroid\nhttps://github.com/Binaryify/NeteaseCloudMusicApi\nhttps://github.com/hitokoto-osc\n    https://developer.hitokoto.cn\n    https://api.imjad.cn\nhttps://github.com/Exifly/ApiVault",meta:[{name:"image",content:"https://vercel.com/button"},{name:"twitter:title",content:"免费服务"},{name:"twitter:description",content:"https://github.com/public-apis/public-apis\nhttps://github.com/public-api-lists\nhttps://github.com/hongyangAndroid/wanandroid\nhttps://github.com/Binaryify/NeteaseCloudMusicApi\nhttps://github.com/hitokoto-osc\n    https://developer.hitokoto.cn\n    https://api.imjad.cn\nhttps://github.com/Exifly/ApiVault"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://vercel.com/button"},{name:"twitter:url",content:"https://bajins.com/Other/%E5%85%8D%E8%B4%B9%E6%9C%8D%E5%8A%A1.html"},{property:"og:type",content:"article"},{property:"og:title",content:"免费服务"},{property:"og:description",content:"https://github.com/public-apis/public-apis\nhttps://github.com/public-api-lists\nhttps://github.com/hongyangAndroid/wanandroid\nhttps://github.com/Binaryify/NeteaseCloudMusicApi\nhttps://github.com/hitokoto-osc\n    https://developer.hitokoto.cn\n    https://api.imjad.cn\nhttps://github.com/Exifly/ApiVault"},{property:"og:image",content:"https://vercel.com/button"},{property:"og:url",content:"https://bajins.com/Other/%E5%85%8D%E8%B4%B9%E6%9C%8D%E5%8A%A1.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"免费服务"},{itemprop:"description",content:"https://github.com/public-apis/public-apis\nhttps://github.com/public-api-lists\nhttps://github.com/hongyangAndroid/wanandroid\nhttps://github.com/Binaryify/NeteaseCloudMusicApi\nhttps://github.com/hitokoto-osc\n    https://developer.hitokoto.cn\n    https://api.imjad.cn\nhttps://github.com/Exifly/ApiVault"},{itemprop:"image",content:"https://vercel.com/button"}]},regularPath:"/Other/%E5%85%8D%E8%B4%B9%E6%9C%8D%E5%8A%A1.html",relativePath:"Other/免费服务.md",key:"v-171fdc9e",path:"/Other/%E5%85%8D%E8%B4%B9%E6%9C%8D%E5%8A%A1.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"免费数据库",slug:"免费数据库"},{level:2,title:"免费域名",slug:"免费域名"},{level:2,title:"免费DNS",slug:"免费dns"},{level:2,title:"云平台",slug:"云平台"},{level:3,title:"Cloud Shell",slug:"cloud-shell"},{level:3,title:"容器服务器",slug:"容器服务器"},{level:3,title:"Jupyter Notebook",slug:"jupyter-notebook"},{level:3,title:"WebIDE",slug:"webide"},{level:3,title:"CloudFlare",slug:"cloudflare"},{level:2,title:"匿名分享",slug:"匿名分享"},{level:2,title:"天气",slug:"天气"},{level:2,title:"图片",slug:"图片"},{level:3,title:"Bing",slug:"bing"},{level:3,title:"360wallpaper",slug:"_360wallpaper"},{level:3,title:"unsplash",slug:"unsplash"},{level:3,title:"wallhaven",slug:"wallhaven"},{level:3,title:"pexels",slug:"pexels"},{level:3,title:"alphacoders",slug:"alphacoders"},{level:3,title:"icons8",slug:"icons8"},{level:3,title:"二次元图片",slug:"二次元图片"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' 免费服务 \n Flag 免费数据库 免费域名 免费DNS 云平台 Cloud Shell 容器服务器 Jupyter Notebook WebIDE CloudFlare 匿名分享 天气 图片 Bing 360wallpaper unsplash wallhaven pexels alphacoders icons8 二次元图片 \n Flag \n \n https://github.com/public-apis/public-apis \n https://github.com/public-api-lists \n https://github.com/hongyangAndroid/wanandroid \n https://github.com/Binaryify/NeteaseCloudMusicApi \n https://github.com/hitokoto-osc \n \n https://developer.hitokoto.cn \n https://api.imjad.cn \n \n \n https://github.com/Exifly/ApiVault \n \n \n https://publicapis.io \n https://api.apiopen.top/api.html \n https://github.com/huanghui0906/API \n https://github.com/fangzesheng/free-api \n https://github.com/vikiboss/60s \n https://github.com/insoxin/API \n https://github.com/wangpinpin/devtools-server \n https://github.com/SocialSisterYi/bilibili-API-collect \n 狗屁不通文章  https://github.com/menzi11/BullshitGenerator \n \n https://github.com/suulnnka/BullshitGenerator \n \n \n https://github.com/egotong/nows \n https://github.com/zhaoolee/ChineseBQB \n https://github.com/wangpinpin/devtools-server \n 词库  https://github.com/iDvel/rime-ice \n 最全中华古诗词  https://github.com/chinese-poetry \n https://github.com/NiuTrans/Classical-Modern \n https://github.com/meetqy/aspoem \n https://github.com/hefengbao/jingmo \n 做饭  https://github.com/Anduin2017/HowToCook \n https://github.com/YunYouJun/cook \n 中文歌词  https://github.com/dengxiuqi/ChineseLyrics \n 翻译  https://github.com/transifex \n \n https://explore.transifex.com \n \n \n 送礼  https://github.com/KKKyrie/giftie \n 免费可商用音效  https://taira-komori.jpn.org/freesoundcn.html \n 语法检查  https://github.com/languagetool-org/languagetool \n 昆虫高清效果图  http://microsculpture.net \n IP库  https://ipinfo.io/developers/ip-to-country-asn-database \n https://ipapi.is/geolocation.html \n 头像  https://github.com/gfriends/gfriends \n 家谱  https://jiapu.library.sh.cn \n 行政区域  https://github.com/TangSY/echarts-map-demo \n 雅虎财经  https://github.com/ranaroussi/yfinance \n https://github.com/sngyai/Sequoia \n 法定节假日  https://github.com/ayuan2025/bill \n https://github.com/cg-zhou/holiday-calendar \n https://www.jiejiariapi.com \n https://appworlds.cn/holiday \n \n \n 在线浏览器  https://hyperbeam.com \n \n Hyperbeam 免费在线的国外浏览器，单次用6小时，不限次数使用！ \n \n \n https://www.adspower.com \n \n 创建自己的免费网站 \n \n https://carrd.co \n https://neocities.org \n 免费数据库 \n MySQL \n \n https://remotemysql.com \n https://www.db4free.net \n \n SQLServer \n \n https://www.gearhost.com \n \n PostgresqlSQL \n \n https://www.elephantsql.com \n https://memfiredb.com \n https://pgplayground.com \n \n Redis \n \n https://redislabs.com/redis-enterprise-deployment \n 免费域名 \n \n https://www.freenom.com \n \n https://github.com/luolongfei/freenom \n \n \n https://nic.eu.org \n https://www.nom.za \n \n 免费申请南非 NOM.za 免费域名 \n \n \n https://names.co.uk \n https://www.dynu.com/zh-CN/ControlPanel/DDNS \n \n \n 免费域名 - 如有乐享 \n 如何正确绕开备案使用国内机器 \n 免费DNS \n \n https://www.dnsperf.com/dns-providers-list \n \n \n https://dnspod.com \n https://messwithdns.net \n 云平台 \n \n 虚拟化与云计算有什么区别？ \n \n \n 云服务器（VM，VIRTUAL MACHINE，IAAS）：是在一组集群物理服务器上虚拟出多个类似独立主机的部分，集群中每个主机上都有云主机的一个镜像，\n从而大大提高了虚拟主机的安全稳定性。 \n \n \n 虚拟专用服务器（VPS，VIRTUAL专用服务器，VDS）：采用虚拟软件，VZ或VM在一台物理服务器上虚拟出多个类似独立主机的部分，\n能够实现单机多用户，每个部分都可以做单独的操作系统，管理方法同主机一样。 \n \n 修改为root登录 \n \n https://github.com/iAmCorey/devtoolset \n SaaS、PaaS和IaaS  https://github.com/ripienaar/free-for-dev \n \n https://www.deta.sh \n \n \n https://github.com/awesome-selfhosted/awesome-selfhosted-data \n https://github.com/trimstray/the-book-of-secret-knowledge \n https://github.com/sdmg15/Best-websites-a-programmer-should-visit \n https://github.com/lmmentel/awesome-time-series \n https://github.com/zstackio \n Faas  https://opendev.org/x/picasso \n \n \n GCP (Google Cloud Platform)  https://github.com/GoogleCloudPlatform \n \n https://cloud.google.com/free \n 谷歌云搭建免费服务器并翻墙 | Levon\'s Blog \n \n \n Oracle  https://www.oracle.com/cn/cloud/free \n \n https://ocistatus.oraclecloud.com \n Always Free Resources \n https://cloud.oracle.com/usage/reports \n https://cloud.oracle.com/limits \n https://51.ruyo.net/tag/oracle-cloud \n Oracle Cloud 甲骨文云中给 VPS 添加新的块存储（CentOS 8.3.2011 磁盘分区和扩容）过程记录 \n 不建议使用用Oracle Linux镜像，无法设置root密码登录 \n https://github.com/layou233/NeverIdle \n https://devin.com/lookbusy \n https://github.com/spiritLHLS/Oracle-server-keep-alive-script \n 甲骨文云(Oracle Cloud)要清理闲置实例资源，附保活教程 \n 甲骨文实例netboot重装系统  https://linuxoops.com/2022/04/usenetbootcustomvps \n \n https://github.com/leesheen/leesheen.github.io \n \n \n https://iweec.com/731.html \n https://mtlynch.io/notes/nix-oracle-cloud \n https://blog.makese.cn/168.html \n https://wkings.blog/archives/1391 \n https://netboot.xyz/docs/kb/providers/oci \n移除或禁用后台监控 \nyum remove oracle-cloud-agent\nsnap remove oracle-cloud-agent\n\nsystemctl stop oracle-cloud-agent\nsystemctl disable oracle-cloud-agent\nsystemctl stop oracle-cloud-agent-updater\nsystemctl disable oracle-cloud-agent-updater\n\nsystemctl stop snap.oracle-cloud-agent.oracle-cloud-agent-updater.service\nsystemctl disable snap.oracle-cloud-agent.oracle-cloud-agent-updater.service\nsystemctl stop snap.oracle-cloud-agent.oracle-cloud-agent.service\nsystemctl disable snap.oracle-cloud-agent.oracle-cloud-agent.service\n \n \n Azure  https://azure.microsoft.com/free \n \n https://portal.azure.com \n 申请微软Azure服务免费12个月+$200 额度+永久免费(25+项服务) \n 免费试用微软2个月Windows 365云桌面，4核心+16G内存+128SSD \n https://windows365.microsoft.com \n 无限免费使用2小时微软Windows云桌面 \n \n \n AWS 免费套餐  https://console.aws.amazon.com/billing/home#/freetier \n \n https://www.cloudping.info \n 手把手教你撸12个月亚马逊（AWS）的云服务器 \n SSH 密钥对丢失时连接到 Amazon EC2 实例 \n 如果丢失私钥，连接到Linux实例 \n 对连接到实例进行故障排除 \n 如何重试失败的付款？ \n \n \n Vultr  https://www.vultr.com/free-tier-program \n Digital Ocean \n https://www.serv00.com \n 网易云电脑  http://cg.163.com \n https://rs1.es \n \n RS1.ES 免费Linux云服务器，单次使用3小时 \n 使用hyperbeam.com来白嫖rs1.es \n \n \n https://vps.apponfly.com \n \n 无限免费试用30分钟的Windows Server服务器 \n \n \n https://www.onworks.net \n https://hax.co.id \n \n 白嫖hax的1C512M免费VPS，让您实现白嫖VPS之梦 \n \n \n 无影云桌面  https://eds.aliyun.com \n 在线试用Linux  https://distrosea.com \n \n \n 自动限流  https://github.com/ypq123456789/TrafficCop \n 监控  https://instatus.com \n Cloud Shell \n \n http://ide.cloud.google.com \n \n https://ssh.cloud.google.com \n https://shell.cloud.google.com \n https://cloud.google.com/shell/docs \n \n \n https://cloud.ibm.com/shell \n https://cloud.oracle.com/?cloudshell=true \n \n https://console.us-<region>-1.oraclecloud.com/a/<tenancy>?cloudshell=true \n \n \n https://github.com/Azure/CloudShell \n \n http://shell.azure.com \n \n \n https://console.aws.amazon.com/cloudshell \n https://shell.aliyun.com \n https://www.katacoda.com \n \n https://www.katacoda.com/courses/ubuntu/playground \n https://www.katacoda.com/courses/ubuntu/playground1804 \n https://www.katacoda.com/courses/ubuntu/playground1904 \n https://www.katacoda.com/courses/ubuntu/playground2004 \n \n \n \n \n 腾讯云动手实验室  https://cloud.tencent.com/developer/labs \n 阿里云体验实验室  https://developer.aliyun.com/adc/labs \n 阿里云知行实验室  https://start.aliyun.com \n 华为云沙箱实验室  https://lab.huaweicloud.com \n 容器服务器 \n \n https://console.cloud.google.com/appengine \n https://cloud.google.com/container-registry \n \n https://github.com/GoogleContainerTools \n \n \n https://cloud.ibm.com/cloudfoundry/overview \n \n http://cli.cloudfoundry.org/zh-Hans/cf \n \n \n 使用ssh部署代码是错误的。正确做法是先进入  ibmcloud target --cf  使用  ibmcloud cf push 命令\n \n ibmcloud cf push 容器名 -b php_buildpack -m 256M -c "ls && ce /home" \n \n \n 在push的代码目录里创建.bp-config配置文件，可以修改app的启动行为、可以修改 php.ini 等。否则你的container和其他服务做链接时就会被刷回原始状态。 \n 10天是指开发行为，必须是类似于 ibm cloud cf restart 或者 cf push 这样的行为，可以用纯shell脚本实现。 \n \n \n https://github.com/CCChieh/IBMYes \n \n \n https://github.com/codefresh-io \n \n https://codefresh.io \n \n \n https://github.com/kubesail \n \n https://kubesail.com \n \n \n https://azure.microsoft.com/zh-cn/services/devops/pipelines \n https://github.com/containerum \n 樱花  https://arukas.io \n Oracle  https://app.wercker.com \n \n Functions \n \n https://www.altogic.com \n https://www.val.town \n \n 可部署博客 \n \n 具有免费许可证的所有平台的Heroku替代方案 \n \n https://github.com/caprover \n https://www.heliohost.org \n https://github.com/hasura \n \n \n \n \n \n \n https://github.com/Dokploy/dokploy \n https://www.netlify.com \n \n 示例： https://bajins.netlify.app \n \n \n https://docs.travis-ci.com/user/tutorial \n https://github.com/zeit \n \n 示例： https://bajins.now.sh \n \n \n https://github.com/vercel \n \n https://vercel.com   \n \n \n https://github.com/railwayapp \n \n https://railway.app   \n \n \n https://github.com/renderinc \n \n https://render.com   \n \n \n https://github.com/zeabur \n https://github.com/netlify \n \n \n https://github.com/heroku \n https://github.com/heroku/heroku-buildpack-static \n 在  https://t.me/nf_share  搜索 验证卡 或 heroku \n 示例： https://woetu.herokuapp.com \n \n \n https://github.com/coollabsio/coolify \n https://github.com/elestio \n https://www.bmob.cn \n https://fast.io \n \n 示例： https://bajins.imfast.io \n \n \n https://www.appveyor.com \n https://kubesail.com \n https://azure.microsoft.com/zh-cn/services/devops/pipelines \n https://app.buddy.works \n https://cloudbase.net \n \n \n 命令行  https://github.com/sintaxi/surge \n \n https://surge.sh \n \n \n 产品用户沟通答疑  https://www.tawk.to \n Jupyter Notebook \n \n https://github.com/Kaggle \n \n https://www.kaggle.com \n https://github.com/Kaggle/kaggle-api#installation \n https://github.com/Kaggle/kaggle-api#kernels \n 资源默认分配 \n GitHub等海外大文件快速中转下载 \n \n \n https://github.com/googlecolab \n \n https://colab.research.google.com \n https://github.com/PradyumnaKrishna/Colab-Hacks \n \n \n https://devcloud.intel.com/zh/edge \n \n https://devcloud.intel.com/zh/edge/advanced/connect_and_create \n https://academic.edge.devcloud.intel.com \n https://notebooks.edge.devcloud.intel.com \n 申请英特尔(Intel DevCloud) 80核心 256G内存 免费云服务器 \n \n \n CoCalc  https://cocalc.com \n Azure Notebooks  https://notebooks.azure.com \n \n Azure Notebooks 预览版概述 \n \n \n https://deepnote.com \n https://datalore.jetbrains.com \n https://www.floydhub.com \n https://github.com/rstudio \n \n https://rstudio.cloud/plans/free \n \n \n 阿里天池大数据  https://tianchi.aliyun.com \n 科赛和鲸 K-lab  https://www.kesci.com \n https://aistudio.baidu.com \n https://momodel.cn \n https://www.huaweicloud.com/product/modelarts.html \n WebIDE \n \n https://github.dev  在仓库按点 . 键 \n https://vscode.dev \n https://github.com/codespaces \n https://gitlab.com/-/ide/project \n https://github.com/conwnet/github1s \n \n https://github1s.com \n https://github.com/surfcodes/surf \n \n \n https://github.com/replit \n \n https://github.com/ReplAPI-it \n https://replit.com \n \n \n https://github.com/stackblitz \n \n https://stackblitz.com \n \n \n https://github.com/sourcegraph/sourcegraph \n \n https://github.com/bobheadxi/raycast-sourcegraph \n \n \n https://ide.goorm.io \n https://github.com/codesandbox \n \n https://codesandbox.io \n \n \n https://glitch.com \n https://aws.amazon.com/cn/cloud9 \n https://github.com/eclipse/dirigible \n https://github.com/eclipse/che \n \n https://github.com/fabric8-launcher \n https://www.eclipse.org/che/getting-started/cloud \n https://che.openshift.io/dashboard/#/load-factory/?url=https://github.com/账户名/仓库名 \n https://che.openshift.io \n https://manage.openshift.com \n \n \n https://github.com/eclipse/orion.server \n https://github.com/eclipse/orion.client \n https://github.com/gitpod-io/gitpod \n \n https://gitpod.io/#https://github.com/账户名/仓库名 \n \n \n \n https://github.com/loft-sh/devpod \n https://github.com/features/codespaces \n https://github.com/ekzhang/rustpad \n coding  https://github.com/Coding/WebIDE \n \n https://cloudstudio.net \n \n \n https://codeup.aliyun.com \n \n https://ide.aliyun.com \n CloudFlare \n \n https://github.com/topics/cloudflare \n https://github.com/zhuima/awesome-cloudflare \n https://github.com/cloudflare \n \n 静态部署  https://pages.cloudflare.com \n \n 示例  https://bajins-github-io.pages.dev \n \n \n 注意：在自定义域中和在DNS中如果配置了 @ ，会导致Workers自定义域名无法访问，只配置 www 即可 \n https://www.cloudflare.com/zh-cn/analytics \n https://www.cloudflare.com/zh-cn/web-analytics \n https://www.cloudflare.com/zh-cn/ssl \n https://www.cloudflare.com/zh-cn/cdn \n \n \n \n \n https://github.com/BlueSkyXN/CFIP \n https://github.com/yuantuo666/cfip \n https://github.com/MortezaBashsiz/CFScanner \n 获取最快IP  https://github.com/XIU2/CloudflareSpeedTest \n 短链接  https://github.com/oiov/wr.do \n 文件转Markdown  https://github.com/xxnuo/serverless-markdown-convertor \n 图床  https://github.com/MarSeventh/CloudFlare-ImgBed \n \n \n https://github.com/TencentEdgeOne \n \n https://pages.edgeone.ai/zh \n Workers \n \n https://workers.cloudflare.com \n https://github.com/cloudflare/wrangler \n https://github.com/search?q=Cloudflare+Workers \n https://github.com/topics/cloudflare-workers \n \n \n DNS： AAAA 子域名 100:: 或 CNAME 子域名 项目名.子域.workers.dev 不论workers.dev子域是否关闭都可使用 \n Cloudflare CNAME接入  https://github.com/ZE3kr/Cloudflare-CNAME-Setup \n https://subdomainfinder.c99.nl  搜索框输入 workers.dev 点击 Start Scan ，再按 Ctrl  +  f  输入 github \n 用Cloudflare CDN 如何自定义节点（CF自选IP）/撸CloudFlare Pro \n \n \n Docker镜像代理  https://github.com/cmliu/CF-Workers-docker.io \n 在线分享工具  https://github.com/xiadd/pastebin-worker \n 动态博客系统  https://github.com/kasuganosoras/cloudflare-worker-blog \n https://github.com/OXeu/Rin \n 个人导航网站  https://github.com/sleepwood/CF-Worker-Dir \n 一个极简风格的短网址转换  https://github.com/Closty/duanwangzhi \n 短链接  https://github.com/ccbikai/Sink \n AI  https://github.com/Jazee6/cloudflare-ai-web \n 邮箱  https://github.com/bestK/email_worker_parser \n Google镜像  https://github.com/1jia1/520js-google \n 基于 Telegraf 框架的 Telegram Bot \n 使用CloudFlare Workers搭建网站状态监控 \n 查询DNS  https://github.com/ccbikai/DNS.Surf \n 短链  https://github.com/xxnuo/serverless-qrcode-hub \n 网站统计  https://github.com/benvinegar/counterscale \n \n 代理 \n \n https://github.com/search?q=reverse-proxy+cloudflare-workers \n https://github.com/search?q=proxy+cloudflare-workers \n https://github.com/topics/reverse-proxy \n \n \n https://github.com/EtherDream/jsproxy \n https://github.com/xiaoyang-liu-cs/booster.js \n \n https://github.com/yenpou/Workers-Proxy \n \n \n https://github.com/netnr/workers \n \n \n https://github.com/emadda/worker-tabserve-reverse-proxy \n https://github.com/aploium/zmirror \n \n \n https://github.com/ryanking13/cors \n https://github.com/AlejandroAkbal/Cloudflare-Worker-Cors-Proxy \n Warp \n \n https://github.com/topics/warp \n \n \n https://github.com/ViRb3/wgcf \n https://github.com/navaneethkm004/warp-plus \n https://github.com/YG-tsj/Oracle-warp \n https://github.com/TunMax/canal \n 匿名分享 \n \n https://github.com/LucienShui/PasteMe \n https://github.com/PasteUs/PasteMeGoBackend \n https://github.com/vastsa/FileCodeBox \n \n 图床 \n \n http://img.wang \n 即刻图床  http://jiketuchuang.com \n 图壳  https://imgkr.com \n 开源图床  https://imgurl.org \n https://github.com/icret/easyImages2.0 \n \n 简单图床  https://img.545141.com \n \n \n SM.MS  https://sm.ms \n 牛图网  https://www.niupic.com \n 路过图床  https://imgchr.com \n https://lookimg.com \n https://img.cy \n https://imgur.com \n https://github.com/cf-pages/Telegraph-Image \n \n 文件分享 \n \n https://www.file.io \n https://uplovd.com \n https://anonfiles.com \n https://uptobox.com \n https://www.mediafire.com \n 天气 \n \n http://tianqi.2345.com/plugin \n http://m.weather.com.cn/m/pn11/weather.htm \n http://i.tianqi.com/index.php?c=code&id=55 \n http://cdn.weather.hao.360.cn/sed_api_weather_info.php?app=360chrome&code=【地区编码】&_jsonp=【jsonp回调函数】 \n https://github.com/alexander0042/pirateweather \n 图片 \n \n https://pixabay.com/zh \n https://visualhunt.com \n https://stocksnap.io \n https://kaboompics.com \n https://www.wallpaperup.com \n https://www.splitshire.com \n https://magdeleine.co \n http://cupcake.nilssonlee.se \n http://lorempixel.com/1920/1080 \n https://www.lifeofpix.com/page/1 \n https://isorepublic.com/photos \n https://pxhere.com \n https://www.hippopx.com \n https://foter.com \n https://negativespace.co \n http://photopin.com \n https://gratisography.com \n https://shotstash.com \n https://picography.co \n https://wallpaperhub.app \n http://www.netbian.com \n https://ss.netnr.com/wallpaper \n https://apod.nasa.gov/apod \n https://www.skypixel.com/topics/people \n https://wallpaperscraft.com/catalog/nature \n https://free4kwallpapers.com \n https://wallspic.com \n https://uhdwallpapers.org \n https://shipin520.com/shipin-tp/0-1329-0-0-0-0-0-0-0-1.html \n https://github.com/jinghu-moon/typora-see-yue-theme \n https://github.com/sambecker/exif-photo-blog \n https://github.com/HarshaVardhanNakkina/go-wallpaper \n https://github.com/thevinter/styli.sh \n https://github.com/shravanasati/iris \n \n \n https://image.baidu.com/search/down?tn=download&word=download&ie=utf8&fr=detail&url=  用于下载图片的api地址 \n Bing \n \n https://assets.msn.cn/resolver/api/resolve/v3/config/?expType=AppConfig&expInstance=default&apptype=edgeChromium&v=20240301.545\n \n BackgroundImageWC/default properties.cmsImage \n ntp-diagnostics、data-client-settings \n \n \n https://arc.msn.com/v3/Delivery/Placement?pid=209567&fmt=json&cdm=1&pl=zh-CN&lc=zh-CN&ctry=CN\n \n https://api.qzink.me/spotlight \n \n \n http://cn.bing.com/HPImageArchive.aspx?format=js&idx=0&n=1\n \n n，必要参数。这是输出信息的数量。比如n=1，即为1条，以此类推，至多输出8条。 \n format，返回结果的格式，不存在或者等于xml时，输出为xml格式，等于js时，输出json格式 \n idx，不存在或者等于0时，输出当天的图片，-1为已经预备用于明天显示的信息，1则为昨天的图片，以此类推，idx最多获取到前16天的图片信息 \n \n \n \n \n https://github.com/qinyuanpei/WallPaper \n https://github.com/planet0104/apod \n https://github.com/Qzincs/Spotlight \n 360wallpaper \n \n https://www.yuluoge.com/api/index.php \n https://api.zwho.me/image/360 \n https://github.com/mengkunsoft/wallpaper \n \n \n 获取最近更新的壁纸 \n \n \n http://wallpaper.apc.360.cn/index.php?c=WallPaper&a=getAppsByOrder&order=create_time&start=【偏移量，从0开始】&count=【加载张数】 \n http://cdn.apc.360.cn/index.php?c=WallPaper&a=getAppsByOrder&order=create_time&start=【偏移量，从0开始】&count=【加载张数】 \n \n \n 获取壁纸类别 \n \n \n http://wallpaper.apc.360.cn/index.php?c=WallPaperAndroid&a=getAllCategories \n http://cdn.apc.360.cn/index.php?c=WallPaperAndroid&a=getAllCategories \n \n \n a 参数有： getAllCategories 和 getAllCategoriesV2 \n http://wallpaper.apc.360.cn/index.php?c=WallPaper&a=getAllCategoriesV2 \n http://cdn.apc.360.cn/index.php?c=WallPaper&a=getAllCategoriesV2 \n \n \n 获取某类别下的壁纸 \n \n \n http://wallpaper.apc.360.cn/index.php?c=WallPaperAndroid&a=getAppsByCategory&cid=【分类ID】&start=【偏移量，从0开始】&count=【加载张数】 \n http://cdn.apc.360.cn/index.php?c=WallPaperAndroid&a=getAppsByCategory&cid=【分类ID】&start=【偏移量，从0开始】&count=【加载张数】 \n \n \n http://wallpaper.apc.360.cn/index.php?c=WallPaper&a=getAppsByCategory&cid=【分类ID】&start=【偏移量，从0开始】&count=【每次加载的数量】 \n http://cdn.apc.360.cn/index.php?c=WallPaper&a=getAppsByCategory&cid=【分类ID】&start=【偏移量，从0开始】&count=【每次加载的数量】 \n \n \n 按关键字搜索壁纸 \n \n \n http://wallpaper.apc.360.cn/index.php?c=WallPaperAndroid&a=search&start=【偏移量，从0开始】&count=【每次加载的数量】&kw=【关键字】 \n \n \n http://wallpaper.apc.360.cn/index.php?c=WallPaper&a=search&start=【偏移量，从0开始】&count=【每次加载的数量】&kw=【关键字】 \n \n \n 获取今日热门搜索 \n \n \n http://openbox.mobilem.360.cn/html/api/wallpaperhot.html \n unsplash \n \n https://unsplash.com/documentation#photos \n \n \n 参数per_page为获取数量，最大值30 \n \n \n 获取最新 \n \n \n https://unsplash.com/napi/photos?page=页数&per_page=30&order_by=latest \n \n \n 图片下载 \n \n \n https://unsplash.com/photos/图片ID/download \n \n \n 获取集合（也就是标签）下的图片 \n \n \n https://unsplash.com/napi/search/photos?query=night&xp=search-cervantes-v1%3Aexperiment&per_page=30&page=页数 \n \n \n 所有壁纸 \n \n \n https://unsplash.com/napi/collections/1065976?page=1&per_page=30&order_by=latest \n \n \n 桌面壁纸 \n \n \n https://unsplash.com/napi/collections/1065396/photos?page=1&per_page=30&order_by=latest \n wallhaven \n \n 搜索 https://wallhaven.cc/search?q=id%3A标签的ID&page=页数 \n 最新 https://wallhaven.cc/latest?page=2 \n 标签 https://wallhaven.cc/tags \n 保存 https://w.wallhaven.cc/full/图片编号前两位/wallhaven-图片编号前两位.后缀 \n \n 图片详情 \n \n https://wallhaven.cc/w/图片编号 \n \n \n 标签在 a class="tagname" rel="tag" 页面元素的文本内容 \n pexels \n \n https://www.pexels.com/zh-cn \n https://www.pexels.com/api \n \n 获取最新 \n \n html \n \n \n https://www.pexels.com/zh-cn/new-photos/?page=1 \n \n \n https://www.pexels.com/zh-cn/new-photos/?format=html&page=1 \n \n \n js \n \n \n https://www.pexels.com/zh-cn/new-photos/?format=js&page=1 \n \n \n seed 参数值需要从js中获取 \n https://www.pexels.com/zh-cn/new-photos/?format=js&seed=2019-10-16+06:03:11+UTC&page=1&type= \n \n 保存 \n \n 图片编号以 10000 为起始位置 \n \n \n https://www.pexels.com/photo/图片编号/download/ \n 此链接也是返回下面的链接进行下载文件，请看 Response Headers 中的 location 参数 \n \n \n https://images.pexels.com/photos/图片编号/pexels-photo-图片编号.jpeg?dl=图片编号.jpg \n \n 不带参数就是预览 \n 参数 dl 的值为文件名 \n \n \n 图片详细信息 \n \n https://www.pexels.com/zh-cn/photo/图片编号 \n \n \n 标签在 meta name="keywords" 页面元素的 content 属性值 \n 或者为 a class="rd__tag" data-track-action="medium-related-tags" data-track-label="tag" 页面元素的文本内容 \n alphacoders \n \n https://alphacoders.com/newest-wallpapers \n https://wall.alphacoders.com \n https://alphacoders.com/nature-4k-wallpapers \n 精选 https://wall.alphacoders.com/featured.php?page=1 \n 保存 https://initiate.alphacoders.com/download/images6/图片编号/png \n icons8 \n \n https://photos.icons8.cn \n \n \n 获取图片下载链接 https://photos.icons8.com/api/frontend/v1/images/图片id/download-url?width=1913&height=3400 \n 二次元图片 \n img.xjh.me \n \n 获取随机图片 \n \n https://img.xjh.me/random_img.php?return=302 \n \n 带参数API \n \n https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302 \n \n 适用于手机端壁纸 \n \n https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302&device=mobile \n api.ixiaowai.cn \n \n 二次元动漫图片 \n \n https://api.ixiaowai.cn/api/api.php \n \n menhear酱 \n \n https://api.ixiaowai.cn/mcapi/mcapi.php \n \n 风景 \n \n https://api.ixiaowai.cn/mcapi/mcapi.php \n',createdTime:1761814324e3},{title:"CSharp",frontmatter:{description:"C",meta:[{name:"twitter:title",content:"CSharp"},{name:"twitter:description",content:"C"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/CSharp.html"},{property:"og:type",content:"article"},{property:"og:title",content:"CSharp"},{property:"og:description",content:"C"},{property:"og:url",content:"https://bajins.com/PL/CSharp.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"CSharp"},{itemprop:"description",content:"C"}]},regularPath:"/PL/CSharp.html",relativePath:"PL/CSharp.md",key:"v-8dac8fa6",path:"/PL/CSharp.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"IDE",slug:"ide"},{level:2,title:"第三方依赖",slug:"第三方依赖"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" CSharp \n Flag IDE 第三方依赖 \n Flag \n \n C# \n \n \n https://github.com/dotnet-foundation \n \n https://dotnetfoundation.org/projects \n \n \n https://github.com/dotnet \n \n https://dotnet.microsoft.com \n https://dotnet.microsoft.com/download/dotnet-framework \n 包管理  https://docs.microsoft.com/zh-cn/nuget \n https://github.com/NuGetPackageExplorer \n https://github.com/microsoft/WindowsAppSDK \n \n \n https://github.com/dotnetcore \n https://github.com/AdrienTorris/awesome-blazor \n https://referencesource.microsoft.com \n http://www.symbolsource.org/Public \n https://gitee.com/dotnetchina \n https://github.com/dotnet-smartcomponents \n \n \n https://github.com/MicrosoftDocs \n https://docs.microsoft.com/zh-cn/documentation \n https://developer.microsoft.com/zh-cn \n https://www.microsoft.com/en-us/research \n https://docs.microsoft.com/zh-cn/dotnet \n \n 异步编程模式 \n \n \n https://docs.microsoft.com/zh-cn/windows/apps/winui \n \n Windows 11之现代Windows桌面应用开发 - Windows UI Library (WinUI) \n \n \n https://docs.microsoft.com/zh-cn/windows/apps/windows-app-sdk \n https://docs.microsoft.com/zh-cn/dotnet/desktop/wpf \n https://docs.microsoft.com/zh-cn/dotnet/desktop/winforms \n https://docs.microsoft.com/zh-cn/windows/win32 \n https://docs.microsoft.com/zh-cn/windows/win32/apiindex/windows-api-list \n \n 任务计划  https://learn.microsoft.com/zh-cn/windows/win32/TaskSchd \n https://learn.microsoft.com/zh-cn/windows/win32/api/_taskschd \n 事件  https://docs.microsoft.com/zh-cn/windows/win32/events/windows-events \n https://docs.microsoft.com/zh-cn/previous-versions/aa385231(v=vs.85) \n https://docs.microsoft.com/zh-cn/windows/win32/wes/windows-event-log \n \n \n https://www.microsoft.com/design \n https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor \n https://docs.microsoft.com/zh-cn/aspnet \n https://docs.microsoft.com/zh-cn/cpp \n 系统错误代码  https://docs.microsoft.com/zh-cn/windows/win32/debug/system-error-codes \n 会影响兼容性的变更  https://docs.microsoft.com/zh-cn/dotnet/core/compatibility \n 线路图  https://dotnet.microsoft.com/platform/support/policy/dotnet-core \n https://github.com/Elfocrash/.NET-Backend-Developer-Roadmap \n https://github.com/dotnet9/TerminalMACS.ManagerForWPF \n https://github.com/yangzhongke/NETBookMaterials \n https://www.dotnetperls.com \n https://github.com/milanm/DotNet-Developer-Roadmap \n https://github.com/YSGStudyHards/DotNetGuide \n https://github.com/qinyuanpei/blog.yuanpei.me \n 领域驱动设计  https://github.com/kgrzybek/modular-monolith-with-ddd \n 后台管理系统  https://github.com/izhaorui/Zr.Admin.NET \n https://github.com/coder-edisonzhou \n \n \n services  https://docs.microsoft.com/zh-cn/windows/win32/services \n \n 参考  golang.org/x/sys/windows/svc/security.go \n \n \n https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regsetkeysecurity \n https://github.com/microsoft/Windows-universal-samples \n UI  https://github.com/microsoft/microsoft-ui-xaml \n MFC \n WinForms(2001) \n WPF(Windows Presentation Doundation，2006，MVVM UI) \n WinUI \n MAUI \n win32 \n UWP(Universal Windows Platform) \n PWA \n xaml \n maui \n Blazor \n ReactiveUI \n Windows cummunity toolkit \n Windows Template Studio \n https://github.com/dotnet/maui \n \n https://docs.microsoft.com/zh-cn/dotnet/maui \n \n \n A/B  https://github.com/thebookisclosed/ViVe \n USB  https://docs.microsoft.com/zh-cn/windows-hardware/drivers/usbcon \n 签名  https://github.com/Jemmy1228/HookSigntool \n https://github.com/hzqst/FuckCertVerifyTimeValidity \n \n \n https://www.v2ex.com/t/814028 https://v2ex.com/t/801891  .net框架和Csharp 简介 \n \n \n System.Data.DbType与各类数据库的数据类型的映射关系 \n IDE \n \n https://github.com/OmniSharp \n https://github.com/Samsung/netcoredbg \n https://learn.microsoft.com/zh-cn/sysinternals \n \n https://github.com/Sysinternals \n https://github.com/MicrosoftDocs/sysinternals \n \n \n https://visualstudio.microsoft.com/zh-hans/vs 2022 Enterprise（企业版）\nVHF9H-NXBBB-638P6-6JHCY-88JWH\n2022 Professional（专业版）\nTD244-P4NB7-YQ6XK-Y8MMM-YWV2J\n2019 Enterprise（企业版）\nBF8Y8-GN2QH-T84XB-QVY3B-RC4DF\n2019 Professional（专业版）\nNYWVH-HT4XC-R2WYW-9Y3CM-X4V3Y\n2017 Enterprise（企业版）\nNJVYC-BMHX2-G77MM-4XJMR-6Q8QF\n2019 Professional（专业版）\nKBJFW-NXHK6-W4WJM-CRMQB-G3CDH\n2015 Enterprise（企业版）\nHM6NR-QXX7C-DFW2Y-8B82K-WTYJV\n2015 Professional （专业版）\nHMGNV-WCYXV-X7G9W-YCX63-B98R2\n2013 Ultimate（旗舰版）\nBWG7X-J98B3-W34RT-33B3R-JVYW9\n2013 Premium（高级版）\nFBJVC-3CMTX-D8DVP-RTQCT-92494\n2013 Professional（专业版）\nXDM3T-W3T3V-MGJWK-8BFVD-GVPKY\n2012 Ultimate（旗舰版）\nYKCW6-BPFPF-BT8C9-7DCTH-QXGWC\n2012 Premium（高级版）\nMH2FR-BC9R2-84433-47M63-KQVWC\n2012 Professional（专业版）\n4D974-9QX42-9Y43G-YJ7JG-JDYBP\nVS2010旗舰版、专业版和高级版\nYCFHQ-9DWCY-DKV88-T2TMH-G7BHP\n \n \n https://www.jetbrains.com/zh-cn/products/#tech=dotnet \n https://learn.microsoft.com/zh-cn/windows/dev-environment \n https://visualstudio.microsoft.com/zh-hans/visual-cpp-build-tools \n \n https://visualstudio.microsoft.com/zh-hans/thank-you-downloading-visual-studio/?sku=BuildTools \n https://visualstudio.microsoft.com/zh-hans/downloads/?q=build%20tools#pickertool-windows \n https://my.visualstudio.com/Downloads?q=build%20tools \n \n \n 运行库MSVC Microsoft Visual C++ \n \n https://github.com/abbodi1406/vcredist \n https://hub.fastgit.org/abbodi1406/vcredist \n https://github.wuyanzheshui.workers.dev/abbodi1406/vcredist \n https://pan.lanzoui.com/b0f1dlg3a \n \n \n 代码风格  https://github.com/DotNetAnalyzers/StyleCopAnalyzers \n https://github.com/luoyunchong/lin-cms-dotnetcore \n https://github.com/WilliamXu96/ABP-MicroService \n 反编译  https://github.com/dnSpy/dnSpy \n \n https://github.com/icsharpcode/ILSpy \n https://github.com/0xd4d/dnlib \n https://github.com/de4dot/de4dot \n https://github.com/dnSpyEx \n \n https://github.com/sailro/Reflexil \n \n \n \n \n dotPeekn  https://www.jetbrains.com/decompiler/download \n https://www.red-gate.com/products/dotnet-development/reflector \n https://github.com/icedland/iced \n 反混淆  https://github.com/SychicBoy/NetReactorSlayer \n 混淆工具  https://www.red-gate.com/products/smartassembly \n http://www.vgrsoft.net/Products/ILProtector \n https://github.com/yck1509/ConfuserEx \n \n https://github.com/wwh1004/ConfuserExTools \n \n \n 加壳 themida  https://www.oreans.com \n https://www.eziriz.com/dotnet_reactor.htm \n https://www.preemptive.com/products/dotfuscator \n DNGuard  http://www.dnguard.net \n https://vmpsoft.com \n https://github.com/eaglx/VMPROTECT \n 拦截系统时间API  https://github.com/malaohu/RunAsDate \n \n https://www.nirsoft.net/utils/run_as_date.html \n 第三方依赖 \n \n https://github.com/Cysharp \n https://github.com/iron-software \n https://github.com/aaronpowell \n https://github.com/MonkSoul \n https://github.com/novotnyllc \n https://github.com/reactiveui \n https://github.com/xunit \n https://github.com/adamralph \n https://github.com/aspinsiders \n https://github.com/CommunityToolkit \n https://github.com/clairernovotny \n https://github.com/withsalt \n https://github.com/davidfowl \n 测试  https://github.com/rahulrathore44/RestSharpFramework \n https://github.com/TestStack \n https://github.com/FlaUI \n https://github.com/nunit/nunit \n 权限  https://github.com/IdentityServer/IdentityServer4 \n https://github.com/AzureAD \n 断言  https://github.com/fluentassertions \n 导入导出  https://github.com/dotnetcore/Magicodes.IE \n HTTP  https://github.com/reactiveui/refit \n https://github.com/restsharp/RestSharp \n https://github.com/hiram3512/HiSocket \n https://github.com/kerryjiang/SuperSocket \n https://github.com/SteamRE/SteamKit \n https://github.com/bezzad/Downloader \n https://github.com/RevenantX/LiteNetLib \n 工具  https://github.com/bing-framework/Bing.NetCore \n https://github.com/Senparc/Senparc.CO2NET \n https://github.com/icsharpcode \n https://github.com/ldqk/Masuit.Tools \n Web框架  https://github.com/abpframework/abp \n \n https://github.com/EasyAbp \n \n \n https://github.com/ModernFlyouts-Community/ModernFlyouts \n https://github.com/openhardwaremonitor/openhardwaremonitor \n https://github.com/exceptionless \n https://github.com/ardalis/CleanArchitecture \n https://github.com/ServiceStack/ServiceStack \n \n https://github.com/ServiceStackV3 \n \n \n https://github.com/fullstackhero/dotnet-starter-kit \n 微服务  https://github.com/AlphaYu/Adnc \n https://github.com/dotnet-architecture/eShopOnDapr \n WPF控件  https://github.com/topics/wpf-ui \n https://github.com/HandyOrg/HandyControl \n https://github.com/AFei19911012/HandyControl \n https://github.com/1217950746/Arthas-WPFUI \n https://github.com/canton7/Stylet \n https://github.com/ghost1372/HandyControls \n UI  https://github.com/Accelerider \n https://github.com/MaterialDesignInXAML \n https://github.com/ScottPlot/ScottPlot \n https://github.com/yhuse/SunnyUI \n https://github.com/NetDimension/NanUI \n https://github.com/qmlnet/qmlnet \n https://github.com/kwwwvagaa/NetWinformControl \n https://github.com/mellinoe/ImGui.NET \n https://github.com/IgnaceMaes/MaterialSkin \n 深色模式  https://github.com/Aldaviva/DarkNet \n 图表  https://github.com/Live-Charts/Live-Charts \n https://github.com/beto-rodriguez/LiveCharts2 \n 3D  https://github.com/mellinoe/veldrid \n 检测热键点击  https://github.com/gmamaladze/globalmousekeyhook \n npoi  https://github.com/joshcomley/Npoi.Core \n https://github.com/nissl-lab/npoi \n 爬虫  https://github.com/zhupingqi/RuiJi.Net \n https://github.com/BaristaLabs/chrome-dev-tools \n SPA  https://github.com/jasontaylordev/CleanArchitecture \n JSON  https://github.com/JamesNK/Newtonsoft.Json \n https://github.com/ysharplanguage/FastJsonParser \n https://github.com/gregsdennis/json-everything \n 验证  https://github.com/VerifyTests/Verify \n 定时任务  https://github.com/quartznet \n https://github.com/HangfireIO/Hangfire \n https://github.com/fluentscheduler/FluentScheduler \n HTML解析  https://github.com/zzzprojects/html-agility-pack \n IOC  https://github.com/autofac/Autofac \n 操作Word  https://github.com/xceedsoftware/DocX \n ORM  https://github.com/DapperLib/Dapper \n \n https://github.com/tmsmith/Dapper-Extensions \n https://github.com/phnx47/dapper-repositories \n \n \n https://github.com/fluentmigrator/fluentmigrator \n https://github.com/DotNetNext/SqlSugar \n 二维码  https://github.com/micjahn/ZXing.Net \n https://github.com/codebude/QRCoder \n 捕获数据包  https://github.com/dotpcap \n 软件更新  https://github.com/NetSparkleUpdater/NetSparkle \n 图片处理  https://github.com/imazen \n https://github.com/dlemstra/Magick.NET \n 数学计算  https://github.com/codingseb/ExpressionEvaluator \n 日志  https://github.com/serilog/serilog \n https://github.com/IzyPro/WatchDog \n Windows任务计划  https://github.com/dahall/TaskScheduler \n \n https://github.com/jnqpblc/SharpTask \n \n \n https://github.com/fireeye/SharPersist \n Unity3D  https://github.com/egametang/ET \n 日期和时间  https://github.com/nodatime/nodatime \n 代理  https://github.com/ekonbenefits/impromptu-interface \n https://github.com/DapperLib/Dapper \n https://github.com/postsharp \n https://github.com/castleproject \n 压缩  https://github.com/adamhathcock/sharpcompress \n 工作流  https://github.com/dotnet-state-machine/stateless \n \n \n https://github.com/yswenli \n https://github.com/WilliamXu96/ABP-MicroService \n 任意窗口放大  https://github.com/Blinue/Magpie \n 中文姓名  https://github.com/wainshine/Chinese-Names-Corpus \n 任务栏奔跑的猫  https://github.com/Kyome22/RunCat_for_windows \n 微信SDK  https://github.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat \n https://github.com/ldqk/Masuit.MyBlogs \n 节奏游戏  https://github.com/ppy/osu \n https://github.com/jynew/jynew \n https://github.com/Unity-Technologies/Graphics \n \n https://github.com/openupm/openupm \n \n \n 显示语法树  https://github.com/KirillOsenkov/RoslynQuoter \n 虚拟桌面  https://github.com/newlooper/VirtualSpace \n 远程桌面会话  https://github.com/geissbuehler/TermsrvPatcher \n 权限检查  https://github.com/falahati/UACHelper \n 整洁架构开发模板  https://github.com/ardalis/CleanArchitecture \n \n",createdTime:1761814324e3},{title:"ProgrammingLanguage",frontmatter:{description:"千万不要尝试用记忆力去替代自己的理解力！\n> 代码不是靠死记硬背，而是不停的写、不停的思考，在反复的练习中熟练掌握的。\n>\n> 编程需要学习记住的是：不同的场景中一些实现方式的原理机制、思维方式，如：设计模式、排序算法、数据结构等，而不是具体的代码。",meta:[{name:"twitter:title",content:"ProgrammingLanguage"},{name:"twitter:description",content:"千万不要尝试用记忆力去替代自己的理解力！\n> 代码不是靠死记硬背，而是不停的写、不停的思考，在反复的练习中熟练掌握的。\n>\n> 编程需要学习记住的是：不同的场景中一些实现方式的原理机制、思维方式，如：设计模式、排序算法、数据结构等，而不是具体的代码。"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/"},{property:"og:type",content:"article"},{property:"og:title",content:"ProgrammingLanguage"},{property:"og:description",content:"千万不要尝试用记忆力去替代自己的理解力！\n> 代码不是靠死记硬背，而是不停的写、不停的思考，在反复的练习中熟练掌握的。\n>\n> 编程需要学习记住的是：不同的场景中一些实现方式的原理机制、思维方式，如：设计模式、排序算法、数据结构等，而不是具体的代码。"},{property:"og:url",content:"https://bajins.com/PL/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"ProgrammingLanguage"},{itemprop:"description",content:"千万不要尝试用记忆力去替代自己的理解力！\n> 代码不是靠死记硬背，而是不停的写、不停的思考，在反复的练习中熟练掌握的。\n>\n> 编程需要学习记住的是：不同的场景中一些实现方式的原理机制、思维方式，如：设计模式、排序算法、数据结构等，而不是具体的代码。"}]},regularPath:"/PL/",relativePath:"PL/README.md",key:"v-5a49a05e",path:"/PL/",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"工具套件",slug:"工具套件"},{level:2,title:"语词法解析器",slug:"语词法解析器"},{level:2,title:"其他语言",slug:"其他语言"},{level:2,title:"Scala",slug:"scala"},{level:2,title:"TypeScript",slug:"typescript"},{level:2,title:"WebAssembly",slug:"webassembly"},{level:2,title:"Lua",slug:"lua"},{level:2,title:"Haskell",slug:"haskell"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" ProgrammingLanguage \n Flag 工具套件 语词法解析器 其他语言 Scala TypeScript WebAssembly Lua Haskell \n Flag \n 千万不要尝试用记忆力去替代自己的理解力！ \n \n 代码不是靠死记硬背，而是不停的写、不停的思考，在反复的练习中熟练掌握的。 \n 编程需要学习记住的是：不同的场景中一些实现方式的原理机制、思维方式，如：设计模式、排序算法、数据结构等，而不是具体的代码。 \n \n \n 我在 20 年的软件工程师生涯中学到的事情 \n 自学编程的八大误区！克服它！ \n https://github.com/easychen/stack-roadmap \n https://github.com/easychen/lean-side-bussiness \n https://github.com/easychen/one-person-businesses-methodology \n https://github.com/easychen/howto-make-more-money \n 程序员考公务员  https://github.com/coder2gwy/coder2gwy \n https://github.com/The-Run-Philosophy-Organization/run \n https://github.com/AnsonZnl/RehabilitationGuide \n https://github.com/i0Ek3/work-and-life-in-system \n 副业  https://github.com/bleedline/aimoneyhunter \n Solo 独立开发者社区 \n 独立开发的100个想法 \n https://javayhu.com \n https://github.com/yaolifeng0629/Awesome-independent-tools \n https://github.com/said7388/developer-portfolio \n https://github.com/weijunext/indie-hacker-tools \n https://github.com/shengxinjing/programmer-job-blacklist \n https://indiehackertools.net \n https://github.com/lukasz-madon/awesome-remote-job \n https://github.com/FujiwaraChoki/MoneyPrinterV2 \n AppStore 首页推荐后，依然月入不足 3000，独立开发两年血泪复盘 \n 离职后，我的第一个出海产品上线了 \n 推广渠道  https://github.com/naxiaoduo/1000UserGuide \n Sam Altman的创业手册 \n 硬地骇客  https://github.com/hardhackerlabs/book \n 以前靠信息不对称赚钱，现在靠什么赚钱？ \n 软考  https://github.com/search?q=ruankao \n https://github.com/topics/ruankao \n https://github.com/i0Ek3/cs-ruankao \n https://github.com/ruankaodaren/ruankao \n https://github.com/Rasrea/RuanKao \n https://github.com/xiaomabenten/ruankao_itpm \n 架构师软考  https://github.com/xxlllq/system_architect \n \n https://github.com/jerrylususu/jerrylususu.github.io \n \n \n https://github.com/lisahust/FDExam_Note \n https://github.com/guanshilong/SystemArchitect \n 编程十年的感悟  https://ramsayleung.github.io/zh/archives \n 梳理情绪  https://github.com/zhangchenchen/self-consistent-coder \n \n https://self-consistent-coder.readthedocs.io/zh-cn/latest/ \n \n \n \n \n https://en.wikipedia.org/wiki/History_of_programming_languages \n \n 七十年编程语言发展漫谈 \n \n \n https://github.com/MunGell/awesome-for-beginners \n https://github.com/topics/high-performance \n https://github.com/topics/barcode \n https://github.com/topics/qrcode \n https://github.com/topics/qrcode-generator \n 编程语言排行  https://www.tiobe.com/tiobe-index \n https://octoverse.github.com/#top-languages \n https://github.com/libhunt \n \n https://www.libhunt.com \n \n \n 各大产品生命周期  https://github.com/endoflife-date/endoflife.date \n 测试编程速度  https://github.com/webdevcody/code-racer \n 了解延迟时间  https://github.com/colin-scott/interactive_latencies \n 游戏开发技术图谱  https://github.com/gonglei007/GameDevMind \n WEB框架基准测试  https://github.com/TechEmpower/FrameworkBenchmarks \n https://github.com/the-benchmarker/web-frameworks \n 10亿行性能测试  https://github.com/gunnarmorling/1brc \n https://github.com/lehuyduc/1brc-simd \n https://github.com/buybackoff/1brc \n https://github.com/RagnarGrootKoerkamp/1brc \n \n https://curiouscoding.nl/posts/1brc \n \n \n 一些规范软件历史  https://blog.brachiosoft.com/posts \n \n \n python、java、c、go执行速度对比 \n https://en.wikipedia.org/wiki/Type_system \n 弱类型、强类型、动态类型、静态类型语言的区别是什么？ \n 通俗的方式理解动态类型，静态类型；强类型，弱类型 \n 类型正在向右移动 \n \n \n 动态类型语言：运行时确定数据类型。 \n 静态类型语言：编译时确定数据类型。 \n 强类型语言：不允许隐式转换。 \n 弱类型语言：允许隐式转换。 \n \n 插件化 \n \n 插件化开发探索与实践 \n Rust 实现动态库加载和基于此功能实现的插件管理 \n 掌握Rust中间件开发：提升性能与安全性 \n 【Rust】插件机制实现 \n Dynamic Loading & Plugins \n 反射机制，热更新，插件化  \n SpringBoot 插件化开发模式，强烈推荐！ \n \n 开源组织 \n \n 免费学习编码  https://github.com/freeCodeCamp \n https://github.com/apache \n \n http://www.apache.org/index.html#projects-list \n \n \n https://github.com/google \n \n https://github.com/googleapis \n https://github.com/GoogleChromeLabs \n https://opensource.google \n \n \n https://github.com/Netflix \n https://github.com/alibaba \n \n https://tech.taobao.org/open-source \n \n \n https://github.com/alipay \n https://github.com/tencent \n https://github.com/bytedance \n https://github.com/huawei \n https://github.com/jd-opensource \n https://github.com/ctripcorp \n https://github.com/vipshop \n https://github.com/mdn \n \n https://developer.mozilla.org \n https://github.com/openwebdocs \n \n \n https://github.com/Qihoo360 \n https://github.com/IBM \n \n https://www.ibm.com/opensource/open-projects \n \n \n https://github.com/uber \n https://github.com/oracle \n \n https://oss.oracle.com \n https://developer.oracle.com/open-source.html \n \n \n https://github.com/square \n https://github.com/aws-samples \n \n https://github.com/awsdocs \n \n \n https://github.com/hashicorp \n https://tanzu.vmware.com/cn/open-source \n https://opensource.samsung.com \n https://github.com/amzn \n https://github.com/openstack \n https://opensource.adobe.com \n \n https://github.com/adobe \n https://www.adobe.io/open \n \n \n https://github.com/redhatofficial \n \n https://redhatofficial.github.io \n \n \n https://github.com/airbnb \n https://github.com/nytimes \n https://github.com/jpmorganchase \n https://github.com/teslamotors \n \n \n https://github.com/TogetherOS \n https://github.com/lets-blade \n 各种非常棒的学习项目  https://github.com/jobbole \n https://github.com/doocs \n https://github.com/apachecn \n https://github.com/need-to-know \n https://github.com/DevotionZhu \n https://github.com/huihoo \n \n 基金会 \n \n https://www.linuxfoundation.org/projects \n \n https://github.com/cncf \n https://www.cncf.io/projects \n https://www.cncf.io/sandbox-projects \n https://devstats.cncf.io \n \n \n https://www.fsf.org/resources \n https://projects.ow2.org \n https://www.openstack.org/software \n OpenInfra Foundation  https://openinfra.dev/projects \n https://github.com/yahoo \n https://github.com/adobe \n https://github.com/eclipse \n \n https://projects.eclipse.org \n \n \n OpenJS基金会  https://github.com/openjs-foundation \n \n https://openjsf.org/projects \n \n \n https://sfconservancy.org/projects/current \n https://github.com/openeuler-mirror \n https://lfaidata.foundation/projects \n https://github.com/girlscript/winter-of-contributing \n https://github.com/hardenedlinux \n \n https://gitlab.com/hardenedlinux \n https://github.com/NalaGinrut \n https://gitlab.com/NalaGinrut \n \n \n https://nlnet.nl/project \n https://github.com/opentffoundation \n https://github.com/commonhaus/foundation \n \n 开源个人 \n \n https://github.com/wangdoc \n \n https://wangdoc.com \n \n \n https://github.com/tj \n https://github.com/qinxuewu \n https://github.com/judasn \n https://github.com/TiantianUpup \n https://github.com/cicadasmile \n https://github.com/brianway \n https://github.com/Blankj \n https://github.com/ityouknow \n https://github.com/eugenp \n \n https://www.baeldung.com \n \n \n https://github.com/lltx \n https://github.com/Ovilia \n https://github.com/halfrost \n https://github.com/changkun \n https://github.com/chinanf-boy \n https://github.com/waylau \n \n Archive | waylau.com \n Books | waylau.com \n https://legacy.gitbook.com/@waylau \n \n \n https://github.com/lionsoul2014 \n https://github.com/mitsuhiko \n \n https://lucumr.pocoo.org/projects \n \n \n \n \n https://github.com/hoochanlon \n https://github.com/ttys3 \n 工具套件 \n \n API文档  https://github.com/freeCodeCamp/devdocs \n \n \n 调试器  https://github.com/cs01/gdbgui \n https://github.com/rizinorg/cutter \n 二维码生成  https://github.com/nayuki/QR-Code-generator \n CPU仿真器框架  https://github.com/unicorn-engine/unicorn \n \n https://github.com/hzqst/unicorn_pe \n https://github.com/DarthTon/Blackbone \n \n \n 开发CA证书  https://github.com/topics/certificates \n https://github.com/FiloSottile/mkcert \n https://github.com/smallstep \n https://github.com/openxpki/openxpki \n https://github.com/dogtagpki/pki \n https://github.com/jsha/minica \n https://github.com/selfcertificationhub/selfcertificationhub \n 域名本地别名  https://github.com/peterldowns/localias \n 软件逆向工程框架  https://github.com/NationalSecurityAgency/ghidra \n 编码转换器  https://github.com/gchq/CyberChef \n https://github.com/mattnotmax/cyberchef-recipes \n 近似成员过滤器  https://github.com/FastFilter \n 软件开发套件管理器  https://github.com/sdkman \n \n https://sdkman.io \n \n \n https://github.com/hashicorp/vagrant \n \n https://app.vagrantup.com/boxes/search \n \n \n https://github.com/elasticdog/salt-sandbox \n https://github.com/devcontainers \n https://github.com/devonfw/ide \n https://github.com/skeeto/w64devkit \n https://github.com/lando/lando \n https://github.com/cashapp/hermit \n https://github.com/gvcgo/version-manager \n https://github.com/version-fox/vfox \n https://github.com/asdf-vm/asdf \n \n https://github.com/halcyon/asdf-java \n https://github.com/danhper/asdf-python \n \n \n https://github.com/daytonaio/daytona \n https://github.com/basecamp/omarchy \n 包管理器  http://win-builds.org \n https://github.com/eryajf/Thanks-Mirror \n https://github.com/renovatebot/renovate \n https://github.com/NoCLin/LightMirrors \n Linux开发Windows程序环境  https://midipix.org \n \n https://dev.midipix.org \n https://github.com/lalbornoz/midipix_build \n \n \n 云原生构建包  https://github.com/buildpacks \n https://github.com/defenseunicorns/zarf \n 微服务开发工具  https://github.com/eko/monday \n 构建应用程序  https://github.com/paketo-buildpacks \n https://github.com/topics/build \n https://github.com/topics/build-tool \n https://github.com/topics/build-system \n https://github.com/topics/bazel \n \n https://github.com/bazelbuild \n https://github.com/salesforce/bazel-eclipse \n \n \n https://github.com/nrwl \n https://github.com/TraceMachina/nativelink \n https://github.com/facebook/buck2 \n https://github.com/temporalio/temporal \n https://github.com/moghtech/komodo \n 部署工具  https://github.com/mina-deploy/mina \n https://github.com/capistrano/capistrano \n https://github.com/piku/piku \n https://github.com/tektoncd \n https://github.com/GoogleContainerTools/skaffold \n https://github.com/dreamans/syncd \n 在线手册API  https://www.matools.com/api \n 环境设置  https://github.com/josean-dev/dev-environment-files \n 游戏多语言实现  https://github.com/coding-horror/basic-computer-games \n 查看二进制文件  https://binvis.io \n 工具箱  https://github.com/CorentinTh/it-tools \n \n \n https://github.com/florinpop17/app-ideas \n https://github.com/hilmanski/freeStuffDev \n \n https://allinone.tools \n \n \n https://github.com/jaywcjlove/reference \n 语词法解析器 \n \n AST(Abstract Syntax Tree)-抽象语法树：抽象地将源代码根据语法生成对应的树状结构。 \n \n \n https://en.wikipedia.org/wiki/Lexical_analysis \n \n \n JAVA  https://github.com/topics/javacc \n https://github.com/javacc/javacc \n \n https://github.com/javacc21/javacc21 \n JavaCC官方入门指南-概述 \n https://github.com/ftomassetti/JavaCC2ANTLR \n \n \n https://github.com/Elzawawy/java-bytecode-generator \n https://github.com/javaparser \n https://github.com/antlr \n \n ANTLR(ANother Tool for Language Recognition ) 是一种语言工具 \n \n \n https://github.com/jflex-de \n https://sourceforge.net/projects/byaccj \n https://www.cs.princeton.edu/~appel/modern/java \n https://github.com/SableCC/sablecc \n \n https://sourceforge.net/projects/sablecc \n \n \n https://github.com/jhipster/prettier-java \n C++  https://github.com/westes/flex \n https://github.com/mingodad/lalr-parser-test \n JS  https://github.com/estools/escodegen \n https://github.com/acornjs \n https://github.com/foysavas/babelon \n https://github.com/millermedeiros/esformatter \n https://github.com/Chevrotain/chevrotain \n C#  https://github.com/CXuesong/MwParserFromScratch \n MLSQL  https://github.com/byzer-org \n \n https://www.mlsql.tech \n https://github.com/allwefantasy/mlsql-lang-vscode-plugin \n \n \n AST浏览器  https://github.com/fkling/astexplorer \n \n https://astexplorer.net \n \n \n https://github.com/gen-codes/astql \n https://github.com/codemirror \n https://github.com/pbkit/pbkit \n 语法增量解析  https://github.com/tree-sitter/tree-sitter \n \n https://tree-sitter.github.io/tree-sitter \n https://github.com/serenadeai/java-tree-sitter \n \n \n HTML  https://github.com/jaytaph/gosub-browser \n \n \n Lex与YACC详解 \n https://github.com/search?q=yacc \n https://github.com/topics/yacc \n Pisa-Proxy SQL 解析之 Lex & Yacc \n \n \n Lex（A Lexical Analyzer Generator）用于生成词法分析器，用于把输入分割成一个个有意义的词块（称为token） \n Yacc（Yet Another Compiler-Compiler）用于生成语法解析器，用于确定上述分隔好的token之间的关联 \n Flex是由Vern Paxon实现的一个Lex，Bison则是GNU版本的YACC \n 其他语言 \n \n 嵌入式脚本语言  https://github.com/dbohdan/embedded-scripting-languages \n \n \n https://github.com/JuliaLang/julia \n https://github.com/nim-lang/Nim \n \n https://nim-lang.org \n https://github.com/xmonader/nimdays \n \n \n https://github.com/dlang \n TXL  https://www.txl.ca \n \n 软件克隆检测  https://www.txl.ca/txl-nicaddownload.html \n \n \n JVM动态脚本语言  https://github.com/apache/groovy \n \n https://github.com/groovy \n \n 静态代码分析  https://github.com/CodeNarc/CodeNarc \n \n \n https://groovy-lang.org/syntax.html \n https://github.com/grails \n https://github.com/jruby/jruby \n \n \n Ruby  https://github.com/rails/rails \n \n https://github.com/ruby-formatter/rufo \n https://github.com/standardrb/standard \n https://github.com/ruby-concurrency/concurrent-ruby \n https://github.com/ruboto \n https://github.com/redcar \n https://github.com/AndyObtiva/glimmer \n https://github.com/headius \n https://github.com/caxlsx/caxlsx \n https://github.com/rack/rack \n https://github.com/basecamp \n https://github.com/test-unit/test-unit \n 手写签字  https://github.com/docusealco/docuseal \n \n \n Erlang  https://github.com/erlang \n \n https://github.com/WhatsApp/erlfmt \n https://github.com/terry-xiaoyu/learn-erlang-in-30-mins \n https://github.com/joearms \n \n \n https://github.com/ziglang \n \n https://github.com/learnzig/learnzig \n https://github.com/SpexGuy/Zig-ImGui \n https://github.com/zigcc \n https://github.com/star-tek-mb/zig-tray \n https://github.com/n0s4/flags \n \n \n https://github.com/elixir-lang/elixir \n \n https://github.com/elixirschool \n https://github.com/phoenixframework/phoenix \n https://github.com/philss/floki \n \n \n https://github.com/gleam-lang \n https://www.angelcode.com \n \n \n DSL(Domain Specification Language)领域语言，使用EBNF(Extended Backus–Naur Form)扩展巴斯科范式来描述语法 \n \n \n DSL 领域特定语言 \n 动态脚本语言解析  https://gitee.com/tenmg/dsl \n \n lowCode/noCode/低代码/零代码 \n \n https://github.com/topics/low-code \n https://github.com/topics/lowcode \n https://github.com/topics/nocode \n https://github.com/taowen/awesome-lowcode \n https://github.com/aliaszz/awesome-lowcode-component \n \n \n https://github.com/Easy-Editor/EasyEditor \n https://github.com/illacloud/illa-builder \n 企业级低代码平台  https://github.com/zhangdaiscott/jeecg-boot \n https://github.com/Yiuman/citrus \n https://github.com/baidu/amis \n https://github.com/didi/epage \n https://github.com/Tencent/APIJSON \n \n https://github.com/APIJSON/APIJSON-Demo \n https://github.com/liaozb/APIJSON.NET \n \n \n https://github.com/ToolJet/ToolJet \n https://github.com/eclipse/dirigible \n https://github.com/1024-lab/smart-admin \n https://sourceforge.net/projects/openxava \n https://github.com/skyvers/skyve \n https://github.com/saltcorn/saltcorn \n https://gitlab.com/baserow/baserow \n https://github.com/Budibase/budibase \n https://github.com/appsmithorg/appsmith \n https://github.com/teableio/teable \n https://github.com/nocobase/nocobase \n https://github.com/plasmicapp/plasmic \n Scala \n \n https://github.com/scala/scala \n https://github.com/Centaur/repox \n https://github.com/etorreborre/specs2 \n https://github.com/lampepfl/dotty \n \n \n https://github.com/plokhotnyuk/jsoniter-scala \n 静态代码分析  https://github.com/scalastyle/scalastyle \n https://github.com/scala-js/scala-js \n \n https://github.com/akka-js/akka.js \n \n \n https://github.com/akkadotnet/akka.net \n 完全实现了Reactive Streams规范  https://github.com/akka/akka \n https://github.com/akka \n \n https://github.com/akka-fusion \n https://github.com/playframework \n \n \n https://github.com/akka/akka-http \n https://github.com/sksamuel/elastic4s \n 异步运行时  https://github.com/typelevel/cats-effect \n https://github.com/twitter/twitter-server \n https://github.com/twitter/finagle \n APP爬虫  https://github.com/seveniruby/AppCrawler \n \n \n 【从入门到放弃】Scala \n https://github.com/twitter/summingbird \n MapReduce \n https://github.com/ornicar/lila \n TypeScript \n \n https://github.com/Microsoft/TypeScript \n \n lib目录下包含了所有JavaScript官方DOM API \n https://www.typescriptlang.org \n https://www.tslang.cn \n https://typeroom.cn/problems/all \n \n \n 深入理解TypeScript  https://jkchao.github.io/typescript-book-chinese \n https://github.com/basarat/typescript-book \n \n \n https://github.com/lgarron \n 类型定义  https://github.com/DefinitelyTyped/DefinitelyTyped \n 静态分析  https://github.com/kaleidawave/ezno \n https://github.com/total-typescript/ts-reset \n https://github.com/adobe/spectrum-web-components \n https://github.com/semgrep/semgrep \n \n https://github.com/0xdea/semgrep-rules \n https://github.com/dgryski/semgrep-go \n https://github.com/elttam/semgrep-rules \n https://github.com/mindedsecurity/semgrep-rules-android-security \n \n \n https://github.com/opengrep/opengrep \n IO解码/编码  https://github.com/gcanti/io-ts \n 动画  https://github.com/AriaMinaei/theatre \n 表格  https://github.com/gristlabs/grist-core \n https://github.com/rxliuli/liuli-tools \n https://github.com/dsherret/dts-minify \n 可视化图表  https://github.com/VisActor \n WebSockets  https://github.com/soketi \n DOM  https://github.com/snabbdom/snabbdom \n 数据验证  https://github.com/nvie/decoders \n https://github.com/colinhacks/zod \n 操作docx文件  https://github.com/dolanmiu/docx \n https://github.com/Siemienik/XToolset \n https://github.com/handsontable/hyperformula \n https://github.com/juanjoDiaz/json2csv \n 渐进式  https://github.com/dojo \n \n https://dojotoolkit.org \n \n \n https://github.com/trpc/trpc \n SQL查询生成  https://github.com/kysely-org/kysely \n 文件  https://github.com/hughfenghen/opfs-tools \n 3D渲染  https://github.com/Orillusion/orillusion \n TS转JS  https://github.com/bloomberg/ts-blank-space \n HTTP  https://github.com/lukeed/fetch-event-stream \n 收集事件数据  https://github.com/jitsucom/jitsu \n Node.js运行TypeScript  https://github.com/privatenumber/tsx \n \n \n TS转JS  https://github.com/JohnDeved/awesome-typescript-compilers \n https://github.com/microsoft/TypeScript-Website \n \n https://www.typescriptlang.org/zh/play \n \n \n https://github.com/ritz078/transform \n \n https://transform.tools/typescript-to-javascript \n \n \n https://github.com/evanw/esbuild \n \n https://esbuild.github.io/try \n \n \n https://github.com/babel/babel \n \n https://babeljs.io/repl \n \n \n https://github.com/oxc-project/oxc \n \n https://playground.oxc.rs \n \n \n https://github.com/swc-project/swc-playground \n \n https://play.swc.rs \n https://swc.rs/playground \n \n \n https://github.com/alangpierce/sucrase \n \n https://sucrase.io \n \n \n https://github.com/jerosoler/ts2js \n https://www.gitloop.com/tool/typescript-to-javascript \n https://extendsclass.com/typescript-to-javascript.html \n WebAssembly \n \n https://github.com/topics/wasm \n \n \n https://github.com/WebAssembly \n https://developer.mozilla.org/zh-CN/docs/WebAssembly \n https://webassembly.org \n https://www.wasm.com.cn \n \n \n https://github.com/kripken \n https://github.com/emscripten-core \n \n https://emscripten.org \n \n \n https://github.com/emscripten-ports \n https://github.com/AssemblyScript \n https://github.com/kettle11/tangle \n https://github.com/wasm3 \n https://github.com/wasmerio \n https://github.com/wasmi-labs \n https://github.com/fermyon/spin \n https://github.com/finos/perspective \n 哈希函数  https://github.com/Daninet/hash-wasm \n \n \n Mozilla：可以用 Rust + WebAssembly 作为 JavaScript 替代 \n Google：可以用 Dart + WebAssembly 作为 JavaScript 替代 \n Microsoft：可以用 TypeScript/AssemblyScript + WebAssembly 作为 JavaScript 替代 \n webAssembly--浏览器第二语言 \n 走进 WebAssembly 的世界 \n \n https://github.com/yaozhongxiao/webassembly_tech \n \n \n WebAssembly 模块化与动态链接 \n 微信小游戏  https://github.com/wechat-miniprogram \n \n \n https://github.com/ShizukuIchi/winXP \n Web容器  https://github.com/stackblitz/webcontainer-core \n https://github.com/ktock/container2wasm \n https://github.com/sebastianwessel/quickjs \n Web虚拟机  https://github.com/leaningtech/webvm \n https://github.com/WasmEdge/WasmEdge \n JVM  https://github.com/leaningtech/browsercraft \n Rust  https://github.com/copy/v86 \n https://github.com/bytecodealliance/wasmtime \n https://github.com/lumen/lumen \n https://github.com/eirproject \n https://github.com/second-state/wasmedge-bindgen \n https://github.com/rustwasm \n C  https://github.com/emscripten-core/emscripten \n https://github.com/wasdk/WasmFiddle \n https://github.com/mbebenita/WasmExplorer \n https://github.com/ffmpegwasm/ffmpeg.wasm \n go  https://github.com/JohnStarich/go-wasm \n https://github.com/tetratelabs \n python  https://github.com/pyodide/pyodide \n TypeScript  https://github.com/AssemblyScript \n Lua \n \n https://github.com/topics/lua \n https://github.com/lua/lua \n https://github.com/LuaJIT/LuaJIT \n https://luajit.org \n 包管理  https://github.com/luarocks/luarocks \n Lua 5.3 手册中文版  https://github.com/cloudwu/lua53doc \n https://github.com/hypc-pub/lua-tutorial \n Lua语言-入门语法 \n \n \n https://github.com/EmmyLua/IntelliJ-EmmyLua \n \n https://emmylua.github.io/zh_CN \n \n \n https://www.eclipse.org/ldt \n Lua正则表达式匹配 \n \n \n https://github.com/yuin/gopher-lua \n https://github.com/Shopify/go-lua \n https://github.com/mpx/lua-cjson \n https://github.com/esrrhs \n https://github.com/mkilling/lambda.lua \n https://github.com/lua-stdlib \n https://github.com/torch/threads \n 装饰房子  https://github.com/Project-Sloth/ps-housing \n \n \n 超集  https://github.com/Roblox/luau \n Haskell \n \n https://github.com/topics/haskell \n https://github.com/krispo/awesome-haskell \n https://github.com/haskell \n \n https://www.haskell.org \n \n \n https://github.com/HaskellCNOrg \n \n \n https://github.com/bitemyapp/learnhaskell \n https://github.com/kowainik/learn4haskell \n http://learnyouahaskell.com/chapters \n \n \n https://github.com/transient-haskell \n https://github.com/tensorflow/haskell \n https://github.com/commercialhaskell/stack \n https://github.com/JakeWheat/hssqlppp \n \n \n 方言  https://github.com/typelead/eta \n \n",createdTime:1761814324e3},{title:"Rust",frontmatter:{description:"https://github.com/ZhangHanDong/tao-of-rust-codes\nhttps://github.com/tomassedovic/roguelike-tutorial\nRust语言圣经 https://github.com/sunface/rust-course\nhttps://github.com/chinanf-boy/rust-cookbook-zh\nhttps://github.com/huangjj27/async-book\nhttps://github.com/studyrs/rusty-book\nhttps://github.com/mainmatter/100-exercises-to-learn-rust\nhttps://github.com/google/comprehensive-rust\nhttps://github.com/LukeMathWalker/zero-to-production\nhttps://github.com/phil-opp/blog_os\nhttps://learnku.com/rust/docs\nhttps://github.com/nnethercote/perf-book\nRust - 花落花开\nhttp://www.telihai.com\nhttps://budshome.com\nhttps://github.com/QMHTMY/RustBook\nhttps://github.com/esp-rs\n    https://github.com/Narukara/rust-on-esp-book-zh-cn\nhttps://github.com/xuesongbj/Rust-Notes\n    http://xuesong.pydevops.com\nhttps://github.com/Dhghomon/easy_rust\n练习 https://github.com/sunface/rust-by-practice\nhttps://github.com/InkSha/rust-tutorial\n异步线程比较 https://github.com/jimblandy/context-switch\nprogram - 分类 - kirito's blog\n归档 | Jackeyzhe\n一名Java开发的Rust学习笔记\nRust Cargo使用指南 | 第十四篇 | 发布配置 Profile\n三年后，我们退出了 Rust 游戏开发\n所有文章 | 从不说安全词",meta:[{name:"twitter:title",content:"Rust"},{name:"twitter:description",content:"https://github.com/ZhangHanDong/tao-of-rust-codes\nhttps://github.com/tomassedovic/roguelike-tutorial\nRust语言圣经 https://github.com/sunface/rust-course\nhttps://github.com/chinanf-boy/rust-cookbook-zh\nhttps://github.com/huangjj27/async-book\nhttps://github.com/studyrs/rusty-book\nhttps://github.com/mainmatter/100-exercises-to-learn-rust\nhttps://github.com/google/comprehensive-rust\nhttps://github.com/LukeMathWalker/zero-to-production\nhttps://github.com/phil-opp/blog_os\nhttps://learnku.com/rust/docs\nhttps://github.com/nnethercote/perf-book\nRust - 花落花开\nhttp://www.telihai.com\nhttps://budshome.com\nhttps://github.com/QMHTMY/RustBook\nhttps://github.com/esp-rs\n    https://github.com/Narukara/rust-on-esp-book-zh-cn\nhttps://github.com/xuesongbj/Rust-Notes\n    http://xuesong.pydevops.com\nhttps://github.com/Dhghomon/easy_rust\n练习 https://github.com/sunface/rust-by-practice\nhttps://github.com/InkSha/rust-tutorial\n异步线程比较 https://github.com/jimblandy/context-switch\nprogram - 分类 - kirito's blog\n归档 | Jackeyzhe\n一名Java开发的Rust学习笔记\nRust Cargo使用指南 | 第十四篇 | 发布配置 Profile\n三年后，我们退出了 Rust 游戏开发\n所有文章 | 从不说安全词"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/Rust.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Rust"},{property:"og:description",content:"https://github.com/ZhangHanDong/tao-of-rust-codes\nhttps://github.com/tomassedovic/roguelike-tutorial\nRust语言圣经 https://github.com/sunface/rust-course\nhttps://github.com/chinanf-boy/rust-cookbook-zh\nhttps://github.com/huangjj27/async-book\nhttps://github.com/studyrs/rusty-book\nhttps://github.com/mainmatter/100-exercises-to-learn-rust\nhttps://github.com/google/comprehensive-rust\nhttps://github.com/LukeMathWalker/zero-to-production\nhttps://github.com/phil-opp/blog_os\nhttps://learnku.com/rust/docs\nhttps://github.com/nnethercote/perf-book\nRust - 花落花开\nhttp://www.telihai.com\nhttps://budshome.com\nhttps://github.com/QMHTMY/RustBook\nhttps://github.com/esp-rs\n    https://github.com/Narukara/rust-on-esp-book-zh-cn\nhttps://github.com/xuesongbj/Rust-Notes\n    http://xuesong.pydevops.com\nhttps://github.com/Dhghomon/easy_rust\n练习 https://github.com/sunface/rust-by-practice\nhttps://github.com/InkSha/rust-tutorial\n异步线程比较 https://github.com/jimblandy/context-switch\nprogram - 分类 - kirito's blog\n归档 | Jackeyzhe\n一名Java开发的Rust学习笔记\nRust Cargo使用指南 | 第十四篇 | 发布配置 Profile\n三年后，我们退出了 Rust 游戏开发\n所有文章 | 从不说安全词"},{property:"og:url",content:"https://bajins.com/PL/Rust.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Rust"},{itemprop:"description",content:"https://github.com/ZhangHanDong/tao-of-rust-codes\nhttps://github.com/tomassedovic/roguelike-tutorial\nRust语言圣经 https://github.com/sunface/rust-course\nhttps://github.com/chinanf-boy/rust-cookbook-zh\nhttps://github.com/huangjj27/async-book\nhttps://github.com/studyrs/rusty-book\nhttps://github.com/mainmatter/100-exercises-to-learn-rust\nhttps://github.com/google/comprehensive-rust\nhttps://github.com/LukeMathWalker/zero-to-production\nhttps://github.com/phil-opp/blog_os\nhttps://learnku.com/rust/docs\nhttps://github.com/nnethercote/perf-book\nRust - 花落花开\nhttp://www.telihai.com\nhttps://budshome.com\nhttps://github.com/QMHTMY/RustBook\nhttps://github.com/esp-rs\n    https://github.com/Narukara/rust-on-esp-book-zh-cn\nhttps://github.com/xuesongbj/Rust-Notes\n    http://xuesong.pydevops.com\nhttps://github.com/Dhghomon/easy_rust\n练习 https://github.com/sunface/rust-by-practice\nhttps://github.com/InkSha/rust-tutorial\n异步线程比较 https://github.com/jimblandy/context-switch\nprogram - 分类 - kirito's blog\n归档 | Jackeyzhe\n一名Java开发的Rust学习笔记\nRust Cargo使用指南 | 第十四篇 | 发布配置 Profile\n三年后，我们退出了 Rust 游戏开发\n所有文章 | 从不说安全词"}]},regularPath:"/PL/Rust.html",relativePath:"PL/Rust.md",key:"v-15c96366",path:"/PL/Rust.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"镜像代理",slug:"镜像代理"},{level:3,title:"Rustup镜像",slug:"rustup镜像"},{level:3,title:"crates.io镜像",slug:"crates-io镜像"},{level:2,title:"第三方依赖",slug:"第三方依赖"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Rust \n Flag 镜像代理 Rustup镜像 crates.io镜像 第三方依赖 \n Flag \n \n https://github.com/topics/rust \n https://github.com/awesome-rust-com \n https://github.com/rust-unofficial/awesome-rust \n https://github.com/zzy/awesome-rust-zh-cn \n https://github.com/rust-lang \n \n http://www.rust-lang.org \n https://github.com/kaisery/trpl-zh-cn \n http://doc.rust-lang.org \n https://docs.rs \n https://rustup.rs \n https://github.com/anowell/are-we-learning-yet \n https://github.com/areweguiyet/areweguiyet \n https://github.com/rust-gamedev/arewegameyet \n https://github.com/rust9x/rust \n \n \n https://github.com/rust-lang-cn \n https://github.com/rust-lang-nursery \n \n https://rust-lang-nursery.github.io/rust-cookbook \n \n \n https://github.com/rust-embedded \n https://github.com/integer32llc \n \n https://gitlab.com/integer32llc \n https://play.rust-lang.org \n https://play.integer32.com \n \n \n https://github.com/rust-zh/faq \n https://github.com/longfangsong/rustc-dev-guide-cn \n https://github.com/rust-hosted-langs \n https://github.com/jondot/rust-how-do-i-start \n https://github.com/fung-hwang/CS110L-2020spr \n https://github.com/roc-lang/roc \n \n \n https://github.com/ZhangHanDong/tao-of-rust-codes \n https://github.com/tomassedovic/roguelike-tutorial \n Rust语言圣经  https://github.com/sunface/rust-course \n https://github.com/chinanf-boy/rust-cookbook-zh \n https://github.com/huangjj27/async-book \n https://github.com/studyrs/rusty-book \n https://github.com/mainmatter/100-exercises-to-learn-rust \n https://github.com/google/comprehensive-rust \n https://github.com/LukeMathWalker/zero-to-production \n https://github.com/phil-opp/blog_os \n https://learnku.com/rust/docs \n https://github.com/nnethercote/perf-book \n Rust - 花落花开 \n http://www.telihai.com \n https://budshome.com \n https://github.com/QMHTMY/RustBook \n https://github.com/esp-rs \n \n https://github.com/Narukara/rust-on-esp-book-zh-cn \n \n \n https://github.com/xuesongbj/Rust-Notes \n \n http://xuesong.pydevops.com \n \n \n https://github.com/Dhghomon/easy_rust \n 练习  https://github.com/sunface/rust-by-practice \n https://github.com/InkSha/rust-tutorial \n 异步线程比较  https://github.com/jimblandy/context-switch \n program - 分类 - kirito\'s blog \n 归档 | Jackeyzhe \n 一名Java开发的Rust学习笔记 \n Rust Cargo使用指南 | 第十四篇 | 发布配置 Profile \n 三年后，我们退出了 Rust 游戏开发 \n 所有文章 | 从不说安全词 \n \n \n IDE  https://github.com/intellij-rust \n https://github.com/vadimcn/codelldb \n Rust 如何实现单例模式？ \n 异步 HTTP \n 桌面程序参考  https://github.com/jwenjian/coverfun \n \n 不显示控制台窗口 \n \n https://rust-lang.github.io/rfcs/1665-windows-subsystem.html \n https://learn.microsoft.com/zh-cn/cpp/build/reference/subsystem-specify-subsystem \n https://stackoverflow.com/questions/74847732/can-you-make-a-windows-desktop-app-in-rust-and-winapi \n https://stackoverflow.com/questions/29763647/how-to-make-a-program-that-does-not-display-the-console-window \n \n cargo  tree  --edges = features  --package =   --invert \nMSVC \n cargo  rustc  --release  -- -Clink-args = "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup" \nGCC  \n cargo  rustc  --release  -- -Clink-args = "-Wl,--subsystem,windows" \n \n \n rustup default stable-x86_64-pc-windows-gnu  使gnu（依赖于GNU/MinGW-w64）成为默认工具链 \n 镜像代理 \n \n https://github.com/cloudwego \n \n https://rsproxy.cn \n \n \n https://developer.aliyun.com/mirror/rustup \n https://mirrors.tuna.tsinghua.edu.cn/help/crates.io-index.git \n https://mirrors.sjtug.sjtu.edu.cn/docs/crates.io \n https://github.com/chanchancl/How-to-build-a-develop-environment-for-rust \n Rustup镜像 \n \n Linux \n设置系统级环境变量 \n export   RUSTUP_DIST_SERVER = https://mirrors.aliyun.com/rustup\n export   RUSTUP_UPDATE_ROOT = https://mirrors.aliyun.com/rustup/rustup\n \n \n Windows \n设置系统级环境变量 \n [Environment] ::SetEnvironmentvariable ( "RUSTUP_DIST_SERVER" ,   "https://mirrors.aliyun.com/rustup" ,   "Machine" ) \n [Environment] ::SetEnvironmentvariable ( "RUSTUP_UPDATE_ROOT" ,   "https://mirrors.aliyun.com/rustup/rustup" ,   "Machine" ) \n Set-ItemProperty   - Path  "Registry::HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment" \\\n  - Name  "RUSTUP_DIST_SERVER"   - Value  "https://mirrors.aliyun.com/rustup" \n Set-ItemProperty   - Path  "Registry::HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment" \\\n  - Name  "RUSTUP_UPDATE_ROOT"   - Value  "https://mirrors.aliyun.com/rustup/rustup" \n设置用户级环境变量 \n New-Item   - Path  "Env:\\RUSTUP_DIST_SERVER"   - Value  "https://mirrors.aliyun.com/rustup"   - Force\n New-Item   - Path  "Env:\\RUSTUP_UPDATE_ROOT"   - Value  "https://mirrors.aliyun.com/rustup/rustup"   - Force\n New-Item   - Path  "Env:\\"   - Name  "RUSTUP_DIST_SERVER"   - Value  "https://mirrors.aliyun.com/rustup"   - Force\n New-Item   - Path  "Env:\\"   - Name  "RUSTUP_UPDATE_ROOT"   - Value  "https://mirrors.aliyun.com/rustup/rustup"   - Force\n Set-ItemProperty   - Path  "Registry::HKEY_CURRENT_USER\\Environment"   - Name  "RUSTUP_DIST_SERVER"   - Value  "https://mirrors.aliyun.com/rustup" \n Set-ItemProperty   - Path  "Registry::HKEY_CURRENT_USER\\Environment"   - Name  "RUSTUP_UPDATE_ROOT"   - Value  "https://mirrors.aliyun.com/rustup/rustup" \n crates.io镜像 \n \n Cargo配置 \n~/.cargo/config\n%USERPROFILE%\\.cargo\\config\n[source.crates-io]\n源码地址\nregistry = "https://github.com/rust-lang/crates.io-index"\n指定镜像\n#replace-with = \'sjtu\'\n#replace-with = \'ustc\'\nreplace-with = \'rsproxy-sparse\'\n字节跳动\n[source.rsproxy]\nregistry = "https://rsproxy.cn/crates.io-index"\n[source.rsproxy-sparse]\nregistry = "sparse+https://rsproxy.cn/index/"\n[registries.rsproxy]\nindex = "https://rsproxy.cn/crates.io-index"\n清华大学\n[source.tuna]\n#registry = "https://mirrors.tuna.tsinghua.edu.cn/git/crates.io-index.git"\nregistry = "sparse+https://mirrors.tuna.tsinghua.edu.cn/crates.io-index/"\n[registries.tuna]\nindex = "sparse+https://mirrors.tuna.tsinghua.edu.cn/crates.io-index/"\n中国科学技术大学\n[source.ustc]\nregistry = "https://mirrors.ustc.edu.cn/crates.io-index"\n#registry = "git://mirrors.ustc.edu.cn/crates.io-index"\n上海交通大学\n[source.sjtu]\nregistry = "sparse+https://mirrors.sjtug.sjtu.edu.cn/crates.io-index"\n阿里云\n[source.aliyun]\nregistry = "sparse+https://mirrors.aliyun.com/crates.io-index/"\n[net]\ngit-fetch-with-cli=true\n[http]\ncheck-revoke = false\n 第三方依赖 \n \n https://crates.io/crates \n https://github.com/kennykerr \n https://gitlab.com/crates.rs \n https://github.com/rust-analyzer \n https://github.com/rustcc/awesome-rust \n https://github.com/rust-fuzz \n https://github.com/redox-os \n https://github.com/servo \n https://github.com/unicode-rs \n https://github.com/Manishearth \n https://github.com/dtolnay \n https://github.com/ferrous-systems \n HTTP  https://github.com/abonander \n 数据结构  https://github.com/serde-rs \n https://github.com/erickt \n 时间  https://github.com/time-rs \n https://github.com/chronotope/chrono \n WEB  https://github.com/nickel-org \n https://github.com/marshallpierce \n https://github.com/leptos-rs/leptos \n 渲染  https://github.com/gfx-rs \n \n https://github.com/lucacasonato/deno_s3 \n \n \n https://github.com/EmbarkStudios \n https://github.com/spacejam \n https://github.com/flamegraph-rs \n https://github.com/void-rs \n https://github.com/smol-rs \n https://github.com/knurling-rs \n https://github.com/probe-rs \n https://github.com/stm32-rs \n https://github.com/stepfunc \n https://github.com/rust-iot \n https://github.com/nix-rust \n https://github.com/AmbiML \n https://github.com/tweedegolf \n https://github.com/tremor-rs \n https://github.com/RustRobotics \n https://github.com/RustVis \n https://github.com/gimli-rs \n https://github.com/magiclen \n \n \n https://github.com/Amanieu/parking_lot \n https://github.com/mesalock-linux/mesalink \n https://github.com/ctz/rustls \n https://github.com/briansmith/webpki \n https://github.com/briansmith/ring \n 国际化i18n  https://github.com/unicode-org/icu4x \n https://github.com/atroche/rust-headless-chrome \n https://github.com/svenstaro/miniserve \n https://github.com/local-group \n https://github.com/staktrace/quoted-printable \n UI  https://github.com/rust-windowing \n https://github.com/imgui-rs \n https://github.com/gabdube/native-windows-gui \n https://github.com/EmbarkStudios/rust-gpu \n https://github.com/vizia/vizia \n 文件系统  https://github.com/zboxfs/zbox \n https://github.com/camino-rs/camino \n 游戏引擎  https://github.com/PistonDevelopers/piston \n https://github.com/amethyst \n https://github.com/project-slippi/Ishiiruka \n https://github.com/AmbientRun/Ambient \n https://github.com/FyroxEngine/Fyrox \n https://github.com/bevyengine/bevy \n 搜索算法  https://github.com/hora-search/hora \n https://github.com/meilisearch/MeiliSearch \n WEB  https://github.com/deislabs/wagi \n https://github.com/iron/iron \n https://github.com/longfangsong/rs-rtt \n https://github.com/actix \n https://github.com/http-rs \n https://github.com/tower-rs \n https://github.com/flibrary/sails \n https://github.com/SergioBenitez/Rocket \n https://github.com/hyperium \n https://github.com/swc-project/swc \n https://github.com/poem-web/poem \n \n https://github.com/Parrhesia-Base/poem-proxy \n \n \n https://github.com/seanmonstar/warp \n \n Rust Web框架warp使用 \n \n \n https://github.com/feather-rs \n https://github.com/alexcrichton/curl-rust \n https://github.com/oscartbeaumont/rspc \n https://github.com/smoltcp-rs/smoltcp \n https://github.com/Xuanwo/reqsign \n https://github.com/Orange-OpenSource/hurl \n https://github.com/quinn-rs/quinn \n HTML解析  https://github.com/utkarshkukreti/select.rs \n https://github.com/causal-agent/scraper \n https://github.com/servo/html5ever \n https://github.com/importcjj/nipper \n https://github.com/pulldown-cmark/pulldown-cmark \n 静态文件服务器  https://github.com/ttys3/static-server \n 媒体文件管理  https://github.com/Dusk-Labs/dim \n 直播服务器  https://github.com/harlanc/xiu \n CLI日志  https://github.com/LukeMathWalker/bunyan \n https://github.com/estk/log4rs \n 命令行  https://github.com/ndaba1/cmder \n https://github.com/rust-cli \n https://github.com/ratatui-org \n \n https://github.com/ratatui/ratatui \n \n \n Windows  https://github.com/microsoft/windows-rs \n \n https://microsoft.github.io/windows-docs-rs/doc/windows \n Win32 API描述  https://github.com/microsoft/win32metadata \n TaskScheduler  https://github.com/mattrobineau/planif \n \n \n https://github.com/retep998/winapi-rs \n https://github.com/rodrigocfd/winsafe \n https://github.com/rust-windowing \n https://github.com/mxre/winres \n https://github.com/Araxeus/tiny-native-scheduler \n SSH  https://github.com/alexcrichton/ssh2-rs \n https://github.com/1148118271/ssh-rs \n https://nest.pijul.com/pijul/thrussh \n https://github.com/XuShaohua/nc \n bash转batch  https://github.com/sagiegurari/shell2batch \n OpenSSH证书工具  https://github.com/obelisk/sshcerts \n 并发  https://github.com/ur0/lolcat \n https://github.com/Manishearth/triomphe \n https://github.com/compio-rs/compio \n https://github.com/DataDog/glommio \n https://github.com/vertexclique/nuclei \n 权限  https://github.com/w4/chartered \n 异步  https://github.com/tokio-rs \n \n https://github.com/hmwill/tokio-linux-aio \n \n \n https://github.com/async-rs \n https://github.com/smol-rs/smol \n 并发Map  https://github.com/xacrimon/dashmap \n https://github.com/rust-phf/rust-phf \n 正则搜索文件  https://github.com/BurntSushi/ripgrep \n https://github.com/robenkleene/rep-grep \n https://github.com/robenkleene/ren-find \n https://github.com/acheronfail/repgrep \n 参数解析器  https://github.com/clap-rs/clap \n https://github.com/TeXitoi/structopt \n 解析器组合器  https://github.com/rust-bakery/nom \n GPS  https://github.com/frafra/frakegps \n 配置  https://github.com/mehcode/config-rs \n 音量控制  https://github.com/prixt/soundsense-rs \n 压缩  https://github.com/Freaky/Compactor \n 随机数  https://github.com/rust-random \n 数字  https://github.com/rust-num \n 宏判断  https://github.com/alexcrichton/cfg-if \n 位枚举  https://github.com/bitflags/bitflags \n 反向代理  https://github.com/sozu-proxy \n https://github.com/cloudflare/boringtun \n 通用数组  https://github.com/fizyk20/generic-array \n ORM  https://github.com/SeaQL/sea-orm \n https://github.com/brendonovich/prisma-client-rust \n https://github.com/diesel-rs/diesel \n https://github.com/launchbadge/sqlx \n https://github.com/kurtbuilds/ormlite \n SQL缓存  https://github.com/readysettech/readyset \n SQL词法分析  https://github.com/sqlparser-rs/sqlparser-rs \n 全文搜索  https://github.com/zhihu/rucene \n 编辑器  https://github.com/xi-editor \n 分配器  https://github.com/gnzlbg/jemallocator \n https://github.com/alexcrichton/dlmalloc-rs \n https://github.com/fitzgen/bumpalo \n https://github.com/bitvecto-rs \n 哈希  https://github.com/tkaitchuck/ahash \n https://github.com/wangyi-fudan/wyhash \n 加密  https://github.com/cryptocorrosion/cryptocorrosion \n https://github.com/jedisct1/rust-siphash \n https://github.com/hacspec/hacspec \n https://github.com/RustCrypto \n https://github.com/tarcieri \n https://github.com/rustpq/pqcrypto \n TLS  https://github.com/sfackler/rust-native-tls \n https://github.com/rustls/rustls \n https://github.com/steffengy/schannel-rs \n https://github.com/kornelski/rust-security-framework \n https://github.com/sfackler/rust-openssl \n 串口  https://github.com/dcuddeback/serial-rs \n https://gitlab.com/susurrus/serialport-rs \n https://github.com/serialport \n https://github.com/berkowski/mio-serial \n https://github.com/berkowski/tokio-serial \n JSON  https://github.com/jmespath/jmespath.rs \n 轻量级单内核  https://github.com/hermitcore/rusty-hermit \n 分布式数据流  https://github.com/infinyon/fluvio \n 验证代码安全  https://github.com/spectralops \n GraphQL  https://github.com/grafbase \n 测试  https://github.com/pact-foundation \n 编码  https://github.com/hsivonen/encoding_rs \n MIME媒体类型  https://github.com/bojand/infer \n https://github.com/wravery/webview2-rs \n https://github.com/cuviper/autocfg \n https://github.com/BurntSushi/memchr \n https://github.com/rust-phf/rust-phf \n https://github.com/Amanieu/parking_lot \n https://github.com/SergioBenitez/version_check \n https://github.com/matklad/once_cell \n https://github.com/TedDriggs \n https://github.com/dguo/strsim-rs \n https://github.com/rutrum/convert-case \n https://github.com/BurntSushi/byteorder \n https://github.com/bluss/scopeguard \n https://github.com/reem \n https://github.com/Soveu/tinyvec_macros \n https://github.com/srijs/rust-crc32fast \n https://github.com/Lokathor/tinyvec \n https://github.com/BurntSushi/aho-corasick \n https://github.com/JelteF/derive_more \n https://github.com/jonasbb/serde_with \n https://github.com/bitflags/bitflags \n https://github.com/deprecrated/net2-rs \n https://github.com/upsuper/dtoa-short \n https://github.com/mmastrac/rust-ctor \n https://github.com/dropbox/rust-alloc-no-stdlib \n https://github.com/paholg/typenum \n https://github.com/taiki-e/pin-project-lite \n https://github.com/storyyeller/stable_deref_trait \n https://github.com/SimonSapin/rust-std-candidates \n https://github.com/seanmonstar/num_cpus \n https://github.com/yoshuawuyts/miow \n https://github.com/BurntSushi/winapi-util \n https://github.com/cbreeden/fxhash \n https://github.com/rust-num/num-traits \n https://github.com/fizyk20/generic-array \n https://github.com/uuid-rs/uuid \n https://github.com/carllerche/iovec \n https://github.com/heycam/thin-slice \n https://github.com/mdsteele/rust-cfb \n https://github.com/dropbox/rust-brotli-decompressor \n https://github.com/Byron/treediff-rs \n https://github.com/seanmonstar/unicase \n https://github.com/crossbeam-rs/crossbeam \n https://github.com/bbqsrc/mio-named-pipes \n https://github.com/idubrov/json-patch \n https://github.com/dropbox/rust-brotli \n https://github.com/SimonSapin/kuchiki \n https://github.com/BurntSushi/walkdir \n https://github.com/steffengy/schannel-rs \n https://github.com/rust-num/num-rational \n https://github.com/withoutboats/heck \n https://github.com/jonas-schievink/adler.git \n https://github.com/Frommi/miniz_oxide \n https://github.com/taiki-e/pin-project \n https://github.com/bluss/indexmap \n https://github.com/rust-windowing/raw-window-handle \n https://github.com/wravery/webview2-rs \n https://github.com/seanmonstar/httparse \n https://github.com/image-rs \n https://github.com/mdsteele/rust-ico \n https://github.com/cdown/icopng \n https://github.com/Lokathor/bytemuck \n https://github.com/Peternator7/strum \n https://github.com/nox/serde_urlencoded \n https://github.com/toml-rs/toml \n https://github.com/sebcrozet/instant \n https://github.com/seanmonstar/try-lock \n https://github.com/seanmonstar/want \n https://github.com/hyperium/h2 \n https://github.com/abonander/mime_guess \n https://github.com/hyperium/http-body \n https://github.com/tafia/quick-xml \n https://github.com/BurntSushi/bstr \n https://github.com/marshallpierce/rust-base64 \n https://github.com/PolyMeilex/rfd \n https://gitlab.com/kornelski/dunce \n https://github.com/pyfisch/httpdate \n https://github.com/bancek/rust-http-range.git \n https://github.com/tower-rs/tower \n https://github.com/alexcrichton/filetime \n https://gitlab.com/crates.rs/cargo_toml \n https://github.com/hyperium/hyper \n https://github.com/mxre/winres \n https://github.com/chippers/serialize-to-javascript \n https://github.com/xdg-rs/dirs/tree/master/dirs-sys \n https://github.com/Amanieu/thread_local-rs \n https://github.com/tormol/encode_unicode \n https://github.com/smol-rs/fastrand \n https://github.com/hyperium/mime \n https://github.com/console-rs/console \n https://github.com/hyperium/hyper-tls \n https://github.com/Stebalien/tempfile \n https://github.com/hoodie/notify-rust \n https://github.com/xdg-rs/dirs \n https://github.com/sbstp/attohttpc \n https://github.com/alexcrichton/tar-rs \n https://github.com/stanislav-tkach/os_info \n https://github.com/Byron/open-rs \n https://github.com/oconnor663/os_pipe.rs \n https://github.com/oconnor663/shared_child.rs \n https://github.com/gentoo90/winreg-rs \n https://github.com/ogham/rust-number-prefix \n https://github.com/SergioBenitez/state \n https://github.com/krisprice/ipnet \n https://github.com/seanmonstar/reqwest \n https://github.com/console-rs/indicatif \n https://github.com/fengzhongyun1992/download_rs \n https://github.com/Kimundi/rustc-version-rs \n https://github.com/japaric/xargo \n 视频解析  https://github.com/mindeng/nom-exif \n RPC  https://github.com/kwsc98/krpc-rust \n 模板  https://github.com/cobalt-org/liquid-rust \n https://github.com/cargo-generate/cargo-generate \n 构建脚本  https://github.com/nabijaczleweli/rust-embed-resource \n 模式匹配  https://github.com/yorickpeterse/pattern-matching-in-rust \n 文件路径  https://github.com/dirs-dev/dirs-rs \n 处理错误  https://github.com/dtolnay/anyhow \n 剪贴板  https://github.com/1Password/arboard \n 字符串搜索  https://github.com/BurntSushi/memchr \n 动态加载链库  https://github.com/nagisa/rust_libloading \n https://github.com/emoon/dynamic_reload \n https://github.com/OpenByteDev/dll-syringe \n GC  https://github.com/Manishearth/rust-gc \n \n \n https://github.com/rusthub-org \n LLVM  https://github.com/TheDan64/inkwell \n https://github.com/llvmenv \n 音乐播放器  https://github.com/jpochyla/miniaudio-rs \n 高效存储二进制  https://github.com/elfshaker/elfshaker \n Python解释器  https://github.com/RustPython \n https://github.com/a5huynh/defender-game \n https://github.com/Yinet-project \n 匿名  https://github.com/darkrenaissance/darkfi \n https://github.com/blechschmidt/tun2proxy \n 下载apk工具  https://github.com/EFForg/apkeep \n 下载网站内容  https://github.com/Skallwar/suckit \n 重命名目录或文件  https://github.com/ismaelgv/rnr \n Warp和Yew写博客  https://github.com/songday/blog-rs \n \n 使用 Rust 构建个人博客（1） - Warp 后端框架 \n 使用 Rust 构建个人博客（2） - Yew 前端框架 \n \n \n Spotify客户端  https://github.com/jpochyla/psst \n \n https://github.com/spicetify/cli \n \n \n ANSI终端上控制颜色和格式  https://github.com/ogham/rust-ansi-term \n 编程语言  https://github.com/vrtbl/passerine \n Node.js模块绑定  https://github.com/neon-bindings/neon \n 支付  https://github.com/juspay/hyperswitch \n 内存漏洞  https://github.com/Speykious/cve-rs \n FlashPlayer模拟器  https://github.com/ruffle-rs/ruffle \n \n Cargo子命令 \n \n https://github.com/rust-lang/cargo/wiki/Third-party-cargo-subcommands \n \n \n 编译  https://github.com/cross-rs/cross \n https://github.com/johnthagen/min-sized-rust \n https://github.com/Kobzol/cargo-wizard \n https://github.com/RazrFalcon/cargo-bloat \n https://github.com/rustsec/rustsec \n https://github.com/gnzlbg/cargo-asm \n https://github.com/matthiaskrgr/cargo-cache \n https://github.com/iddm/cargo-cook \n https://github.com/Manishearth/rust-clippy \n https://github.com/janlikar/cargo-clone \n https://github.com/XAMPPRocky/tokei \n https://github.com/xd009642/tarpaulin \n https://github.com/tbrand/cargo-tomlfmt \n https://github.com/watchexec/cargo-watch \n https://github.com/crate-ci/cargo-release \n https://github.com/nabijaczleweli/cargo-update \n https://github.com/deadlinks/cargo-deadlinks \n https://github.com/kbknapp/cargo-outdated \n https://github.com/killercup/cargo-edit \n https://github.com/svenstaro/cargo-profiler \n https://github.com/pwoolcoc/cargo-do \n https://github.com/kornelski/cargo-deb \n https://github.com/dtolnay/cargo-expand \n https://gitlab.com/imp/cargo-info \n https://github.com/onur/cargo-license \n https://github.com/TimNN/cargo-lipo \n https://github.com/sagiegurari/cargo-make \n https://github.com/regexident/cargo-modules \n https://github.com/kstep/cargo-pkgbuild \n https://pagure.io/fedora-rust/rust2rpm \n https://github.com/cat-in-136/cargo-generate-rpm \n https://github.com/meta-rust/cargo-bitbake \n 基准测试  https://github.com/BurntSushi/cargo-benchcmp \n \n',createdTime:1761814324e3},{title:"交互协议",frontmatter:{description:"端到端、服务到服务、端到服务之间的交互协议规范",meta:[{name:"twitter:title",content:"交互协议"},{name:"twitter:description",content:"端到端、服务到服务、端到服务之间的交互协议规范"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/%E4%BA%A4%E4%BA%92%E5%8D%8F%E8%AE%AE.html"},{property:"og:type",content:"article"},{property:"og:title",content:"交互协议"},{property:"og:description",content:"端到端、服务到服务、端到服务之间的交互协议规范"},{property:"og:url",content:"https://bajins.com/PL/%E4%BA%A4%E4%BA%92%E5%8D%8F%E8%AE%AE.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"交互协议"},{itemprop:"description",content:"端到端、服务到服务、端到服务之间的交互协议规范"}]},regularPath:"/PL/%E4%BA%A4%E4%BA%92%E5%8D%8F%E8%AE%AE.html",relativePath:"PL/交互协议.md",key:"v-15a0fa33",path:"/PL/%E4%BA%A4%E4%BA%92%E5%8D%8F%E8%AE%AE.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"数据传输模型",slug:"数据传输模型"},{level:2,title:"网络通信协议",slug:"网络通信协议"},{level:3,title:"HTTP",slug:"http"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' 交互协议 \n Flag 数据传输模型 网络通信协议 HTTP \n Flag \n \n 端到端、服务到服务、端到服务之间的交互协议规范 \n \n \n https://github.com/schemaorg \n \n https://schema.org \n \n \n OpenAPI规范  https://github.com/OAI \n \n https://github.com/OpenAPITools \n https://github.com/rookie-luochao/openapi-ui \n https://github.com/Azure/autorest \n https://github.com/otk-final/openapi-codegen \n \n \n https://github.com/graphql \n \n https://graphql.org \n https://github.com/chentsulin/awesome-graphql \n https://github.com/apollographql \n https://github.com/dotansimha/graphql-yoga \n https://github.com/n1ru4l/envelop \n https://github.com/zhnd/query-box \n \n \n C#  https://github.com/dotnet/wcf \n \n https://learn.microsoft.com/zh-cn/dotnet/framework/wcf \n \n \n Java  https://github.com/apache/cxf \n https://axis.apache.org \n \n https://github.com/bnoordhuis/axis2-c \n 数据传输模型 \n \n 该模型用于帮助人们解决应用程序与服务器传递数据的问题 \n \n \n API架构风格对比：SOAP vs REST vs GraphQL vs RPC \n REST 和 gRPC 的详细比较 \n \n https://github.com/riok/kreya \n \n \n JMS Java消息服务(Java Message Service) \n 技术概念大揭秘-RPC/Restful/HTTP/SOAP/WebService傻傻分不清楚？ \n 既然有 HTTP 请求，为什么还要用 RPC 调用？ \n \n \n Web Services 模型 (理念/领域)\n \n SOAP(Simple Object Access Protocol，简单对象访问协议)  https://www.w3.org/TR/soap\n \n WSDL (Web Services Description Language) https://www.w3.org/TR/wsdl20 描述服务接口 \n SOAP over HTTP \n SOAP over TCP \n SOAPover Message Queues \n RSS Syndication Services \n WS-Discovery \n WS-Addressing 提供消息寻址功能 \n WS-AtomicTransaction 支持分布式事务 \n WS-ReliableMessaging 确保消息的可靠传输 \n WS-Security 用于消息级的安全，包括加密、签名和身份验证 \n JAX-WS（Java API for XML-based Web services） \n UDDI (Universal Description, Discovery and Integration) \n \n \n RPC(Remote Procedure Call)模型（面向方法） https://en.wikipedia.org/wiki/Remote_procedure_call#General \n \n XML-RPC  SOAP 本质上是 XML-RPC 的升级版 \n JSON-RPC   https://www.jsonrpc.org \n JAX-RPC \n gRPC (Google Remote Procedure Call) \n \n \n REST(Representational State Transfer) 模型（面向资源）(现代 Web API 风格)\n \n REST API \n RestFul API/RESTful Web Service \n GraphQL \n \n \n Windows Communication Foundation (WCF)，以前称为Indigo \n \n \n SOA（Service Oriented Architecture）面向服务的架构 \n RCON \n CORBA (Common Object Request Broker Architecture) 分布式对象技术规范\n \n IDL (Interface Definition Language) \n IIOP (Internet Inter-ORB Protocol, TCP) \n \n \n \n \n RPC（remote procedure call，远程过程调用）：一种通过网络从远程计算机程序上跨语言跨平台的请求服务。主要是分布式式系统中应用。\n \n RPC按通信协议，可以分为：基于HTTP的、基于TCP等； \n 按报文协议可以分为：基于XML文本的、基于JSON文本的，二进制的； \n 按照是否跨平台语言，可以分为：平台专用的，平台中立的 \n \n \n SOAP(Simple Object Access Protocol，简单对象访问协议)：基于 HTTP或 SMTP等多种网络标准规约，它是向网络上的其他计算机传送 XML文档而定义标准Package结构的通信规约息。 \n WSDL (WebServices Description Language)：WEB服务描述语言，它是Web Service服务端使用说明书，说明服务端接口、方法、参数和返回值，随服务发布自动生成 \n RMI(remote method invocation，面向对象的远程方法调用) \n REST(representational state transfer，表达性状态转移) \n Restful：一种接口规范，符合这套规范编写的接口就是restful 接口 \n JMS（Java Messaging Service）Java 消息服务 \n EJB(enterprise java bean) \n JNDI（Java naming and Directory Interface） \n JRMP(Java Remote Method Protocol) \n \n \n Webservice RPC风格 SOAP,REST风格 各之间的对比 \n 什么是 RESTful ？到底 REST 和 SOAP、RPC 有何区别？ \n 正确甄别API & REST API & RESTful API & Web Service之间的差异与联系 \n 远程通信的几种选择（RPC，Webservice，RMI，JMS的区别） \n SOAP webserivce 和 RESTful webservice 对比及区别 \n 如何通俗易懂地解释什么是SOA？ \n RESTful API设计参考文献列表  https://github.com/aisuhua/restful-api-design-references \n https://zh.wikipedia.org/wiki/HATEOAS \n RESTful API设计规范  https://github.com/godruoyi/restful-api-specification \n RESTful API设计规范 \n RESTful跟WebService的区别 \n 网络通信协议 \n \n HTTP状态码  https://github.com/leonlarsson/http-raccoons \n https://evertpot.com/http \n \n 应用层 \n \n Gopher -> HTTP -> Gemini \n \n \n WebDav/CalDav/CardDav/WebCal/iCalendar \n WebDAV \n https://github.com/JackJiang2011/MobileIMSDK \n Server-Sent Events (SSE) 只支持服务端->客户端的单向通讯  Server-Sent Events 详解及实战 \n \n \n WebSocket（SignalR）支持服务端<->客户端的双向实时通讯 \n HTTP（Hypertext Transfer Protocol）超文本传输协议，显示网页，只支持客户端->服务端的单向通讯\n \n https://github.com/rednafi/httpurr \n \n \n Gemini  https://gemini.circumlunar.space \n \n https://github.com/kr1sp1n/awesome-gemini \n https://portal.mozz.us/gemini/gemini.circumlunar.space/servers \n \n \n DNS（Domain Name System）\n \n https://github.com/v2fly/v2fly-github-io/blob/master/docs/v5/config/dns.md \n https://github.com/EmilHernvall/dnsguide \n \n \n FTP（File Transfer Protocol） \n SFTP（SSH File Transfer Protocol）和FTP不一样 \n SCP（Secure copy）基于SSH \n ASCII \n Xmodem \n Ymodem \n Zmodem \n Kermit \n SSH （Secure Shell） \n SMTP（Simple Mail Transfer Protocol） \n SNMP（simple Network Management Protocol） \n Socket  是应用层与TCP/IP协议族通信的中间软件抽象层，它是一组接口。\n \n 在设计模式中，Socket其实就是一个门面模式，它把复杂的TCP/IP协议族隐藏在Socket接口后面 \n \n \n AMQP(Advanced Message Queuing Protocol,高级消息队列协议) \n XMPP(Extensible Messaging and Presence Protocol,Jabber)\n \n https://github.com/xsf/xmpp.org \n https://xmpp.org \n https://jabber.org \n https://github.com/mathiasertl/django-xmpp-server-list \n https://sourceforge.net/projects/pidgin \n \n https://imfreedom.org \n https://kb.imfreedom.org \n \n \n \n \n OTR(Off-the-Record Messaging，不留记录即时通讯协议) https://hardenedlinux.github.io/cryptography/2018/02/01/pidgin_xmpp_otr_debian.html \n OMEMO \n IMPP(Instant Messaging and Presence Protocol,即时消息和在线状态协议)\n \n https://www.trillian.im/impp \n \n \n STOMP(Streaming Text Oriented Messaging Protocol,流文本定向消息协议) \n MQTT(Message Queuing Telemetry Transport，消息队列遥测传输)：是一种基于发布/订阅（publish/subscribe）模式的"轻量级"通讯协议\n \n https://mqtt.org \n \n \n \n 通信层 \n \n TCP（Transmission Control Protocol）三次握手传输协议\n \n 详解TCP连接的“三次握手”与“四次挥手” \n \n \n UDP（User Datagram Protocol）用户数据报协议 \n mKCP\n \n https://github.com/skywind3000/kcp \n \n \n gRPC \n QUIC\n \n https://github.com/quic-go/quic-go \n https://github.com/quic-interop \n \n \n meek \n TCP、Socket、WebSocket、HTTP \n 网络编程 socket详解 TCP socket和UDP socket \n 【Socket学习】1. TCP与UDP \n socket通信 tcp协议和udp协议 C++ \n UDP 和 TCP 的 socket 分别一般用在什么地方？ \n https://wicg.github.io/direct-sockets \n https://github.com/NetAsmCom/Socketify \n \n 网络层 \n \n IP（Internet Protocol） \n ICMP（Internet Control Message Protocol，主要用于路由发送错误报告） \n IGMP \n \n 链接层 \n \n MAC（media access control） \n ARP \n RARP \n \n Proxy代理协议 \n \n VMess \n VLESS \n VLite \n Trojan \n Shadowsocks \n Socks \n HTTP \n Freedom \n Dokodemo \n Blockhole \n DNS \n Loopback \n HTTP \n \n https://github.com/topics/server \n https://github.com/topics/http-server \n https://github.com/topics/http-client \n https://github.com/search?q=WebSocket \n https://github.com/topics/websockets \n \n \n 互联网号码分配机构（IANA）官方MIME类型列表 \n 常用对照表 \n https://www.runoob.com/http/http-tutorial.html \n https://developer.mozilla.org/zh-CN/docs/Web/HTTP \n https://github.com/httpcats/http.cat \n HTTPS的工作原理  https://stephanietang.github.io/2020/04/19/how-https-works \n 图解QUIC连接  https://cangsdarm.github.io/illustrate/quic \n \n https://github.com/syncsynchalt \n \n \n 谈谈HTTP协议中的短轮询、长轮询、长连接和短连接 \n SSL为何改名为TLS \n \n \n Content-Type 只会存在于 POST 、 PATCH 、 PUT 等有请求数据实体时指定数据类型和数据字符集编码，\n而 GET 、 DELETE 、 HEAD 、 OPTIONS 、 TRACE 等没有请求数据实体 \n \n \n Content-Length 则视 Content-Type 而定，如 text/html 、 text/javascript 等请求数据没有 Content-Length \n \n \n HTTP协议中的Accept与Content-Type的区别 \n https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept \n HTTP传输编码增加了传输量，只为解决这一个问题 | 实用 HTTP \n https://zh.wikipedia.org/wiki/分块传输编码 \n \n \n POST 、 PATCH 、 PUT 等请求有请求数据实体的数据为表单参数，\n GET 、 DELETE 、 HEAD 、 OPTIONS 、 TRACE 等没有请求数据实体的查询参数拼接在URL ? 后面 \n \n',createdTime:1761814324e3},{title:"加密认证",frontmatter:{description:"零知识证明（zero-knowledge proof）或零知识协议（zero-knowledge protocol）\nhttps://cryptoservices.github.io\n    https://cryptopals.com\n    https://www.crypto101.io\nhttps://cromwell-intl.com\n加密百科 https://github.com/logto-io/auth-wiki",meta:[{name:"twitter:title",content:"加密认证"},{name:"twitter:description",content:"零知识证明（zero-knowledge proof）或零知识协议（zero-knowledge protocol）\nhttps://cryptoservices.github.io\n    https://cryptopals.com\n    https://www.crypto101.io\nhttps://cromwell-intl.com\n加密百科 https://github.com/logto-io/auth-wiki"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/%E5%8A%A0%E5%AF%86%E8%AE%A4%E8%AF%81.html"},{property:"og:type",content:"article"},{property:"og:title",content:"加密认证"},{property:"og:description",content:"零知识证明（zero-knowledge proof）或零知识协议（zero-knowledge protocol）\nhttps://cryptoservices.github.io\n    https://cryptopals.com\n    https://www.crypto101.io\nhttps://cromwell-intl.com\n加密百科 https://github.com/logto-io/auth-wiki"},{property:"og:url",content:"https://bajins.com/PL/%E5%8A%A0%E5%AF%86%E8%AE%A4%E8%AF%81.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"加密认证"},{itemprop:"description",content:"零知识证明（zero-knowledge proof）或零知识协议（zero-knowledge protocol）\nhttps://cryptoservices.github.io\n    https://cryptopals.com\n    https://www.crypto101.io\nhttps://cromwell-intl.com\n加密百科 https://github.com/logto-io/auth-wiki"}]},regularPath:"/PL/%E5%8A%A0%E5%AF%86%E8%AE%A4%E8%AF%81.html",relativePath:"PL/加密认证.md",key:"v-4c7c3c10",path:"/PL/%E5%8A%A0%E5%AF%86%E8%AE%A4%E8%AF%81.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"HTTP授权认证",slug:"http授权认证"},{level:2,title:"编码算法",slug:"编码算法"},{level:2,title:"加密算法",slug:"加密算法"},{level:2,title:"消息摘要",slug:"消息摘要"},{level:2,title:"证书格式",slug:"证书格式"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 加密认证 \n Flag HTTP授权认证 编码算法 加密算法 消息摘要 证书格式 \n Flag \n \n 零知识证明（zero-knowledge proof）或零知识协议（zero-knowledge protocol） \n https://cryptoservices.github.io \n \n https://cryptopals.com \n https://www.crypto101.io \n \n \n https://cromwell-intl.com \n 加密百科  https://github.com/logto-io/auth-wiki \n HTTP授权认证 \n \n https://github.com/topics/authorization \n https://github.com/topics/ldap-authentication \n https://github.com/topics/identity-provider \n https://github.com/topics/mfa \n https://github.com/topics/cas \n https://github.com/topics/oauth \n https://github.com/topics/rbac \n \n \n WebAuthn无密码身份验证  https://github.com/w3c/webauthn \n FIDO(Fast Identity Online)  https://github.com/fido-alliance \n \n https://fidoalliance.org \n https://github.com/passwordless-lib \n https://github.com/webauthn-open-source/fido2-lib \n https://github.com/line/line-fido2-server \n https://github.com/Yubico/python-fido2 \n \n \n https://github.com/duo-labs \n \n https://webauthn.io \n https://webauthn.guide \n \n \n https://github.com/go-webauthn \n https://github.com/webauthn4j \n https://github.com/Yubico \n https://github.com/herrjemand/awesome-webauthn \n https://github.com/teamhanko/hanko \n \n https://www.passkeys.io \n \n \n https://github.com/passkeydeveloper/passkeys.dev \n https://github.com/MasterKale/SimpleWebAuthn \n https://github.com/fusionauth \n https://github.com/unkeyed/unkey \n https://github.com/goauthentik/authentik \n https://github.com/zitadel/zitadel \n https://github.com/cerbos/cerbos \n https://github.com/openfga/openfga \n https://github.com/ValueMelody/melody-auth \n \n \n Web开发几种常用的认证机制 \n 角色访问控制模型RBAC96 \n 权限设计的杂谈 \n 详细了解RBAC（Role-Based Access Control） \n \n \n Basic Auth：这种认证直接顺应HTTP协议的无状态性，每次执行业务的时候，将username与password参数发送给服务器进行验证 \n \n \n Session：是指在客户端Cookie中存储一个Session Id。请求时携带Session Id，服务器从Session数据存储中找到对应的Session。\nNative App一般是不直接支持Cookie机制 \n \n \n Radius \n AD(Active Directory) 域\n \n https://github.com/FalconForceTeam/SOAPHound \n \n \n 什么是身份和访问管理 (IAM)？ \n 身份访问与管理(IAM) \n \n \n WebAuthn (Web Authentication)是Web标准的一部分,用于提供更安全的身份认证方法,可以使用生物识别数据、PIN码或移动设备来进行身份验证,\n而不需要密码。其目的是减少密码相关的攻击,提高安全性。 \n \n \n CTAP (Client to Authenticator Protocol)协议, 主要用于在客户端设备(如计算机或移动设备)和身份验证器(例如生物识别设备、USB密钥等)之间建立通信,\n并确保两者之间的通信安全,执行WebAuthn身份验证操作。 \n \n \n UAF (Universal Authentication Framework)规范,旨在提供更安全的身份验证方法,减少对传统密码的依赖。\n允许使用生物识别信息、PIN码等进行身份验证。其目的是创建一个标准化的身份验证框架,适配不同的Web服务和应用。 \n \n \n U2F (Universal 2nd Factor)安全标准,旨在提供双重身份验证,即使用密码以外的第二个身份验证。\n用户需要使用U2F设备(例如USB密钥)来进行身份验证。主要用于增强身份验证的安全性,而不是完全替代密码。 \n \n JWT是一种认证协议 \n \n https://github.com/auth0 \n \n https://jwt.io \n \n \n \n \n JWT（Json web token）提供了一种用于发布接入令牌（Access Token),并对发布的签名接入令牌进行验证的方法。\n令牌（Token）本身包含了一系列声明，应用程序可以根据这些声明限制用户对资源的访问。 \n \n \n 应用场景：JWT是用在前后端分离, 需要简单的对后台API进行保护时使用.(前后端分离无session, 频繁传用户密码不安全) \n 编码算法 \n \n Escape Sequences 转义序列把数据转换成指定格式的数据，可解码，一般用于处理特殊字符 \n \n \n https://github.com/topics/escape \n \n \n Base32\n \n Base32 编码说明 \n https://github.com/rubycocos/blockchain/tree/master/base32-alphabets \n \n \n Base58 \n Base64 \n Base85 \n Base91 \n quoted-printable  Percent-encoding \n Content-Transfer-Encoding \n Unicode编码(\\u开头) \n URLEncoder(%开头) \n Gzip压缩 \n UTF16编码(\\x开头) \n Hexadecimal (Hex) 十六进制编码 \n Octal 八进制 \n Binary 二进制 \n HTML entity \n ASCII \n Ascii85 \n yEnc \n \n \n Base64是一种能将任意Binary资料用64种字元组合成字串的方法，而Binary资料和字串资料彼此之间可以互相转换。\n在实际应用中，Base64除了能将Binary资料可视化之外，也常用来表示字串加密过后的内容 \n 加密算法 \n \n 使用密钥加密数据转换成指定格式的数据，可通过密钥转换还原数据 \n \n \n 公开密钥加密（public-key cryptography），也称为非对称加密（asymmetric cryptography），一种密码学算法类型，在这种密码学方法中，需要一对密钥，一个是私人密钥，另一个则是公开密钥。 \n \n \n Java开发中的加密、解密、签名、验签，密钥，证书 \n 常见对称加密 \n \n \n https://github.com/topics/eddsa \n https://github.com/topics/ed25519 \n https://github.com/topics/crypto-library \n 加密系统的ECRYPT基准测试  https://bench.cr.yp.to \n \n https://cr.yp.to \n https://microblog.cr.yp.to \n \n \n https://github.com/noiseprotocol \n https://github.com/syncsynchalt/illustrated-x25519 \n https://github.com/OpenPGP/openpgp.org \n \n https://github.com/gpg/gnupg \n https://www.gpg4win.org \n https://github.com/open-keychain/open-keychain \n \n \n https://github.com/veracrypt/VeraCrypt \n \n https://idrix.fr/VeraCrypt \n https://www.veracrypt.fr \n https://amcrypto.jp \n https://veracrypt.io \n https://veracrypt.jp \n \n \n https://sourceforge.net/projects/truecrypt \n \n https://www.truecrypt.org \n \n \n https://gitlab.com/cryptsetup/cryptsetup \n https://github.com/vgough/encfs \n https://github.com/rfjakob/gocryptfs \n \n https://github.com/maxpat78/gocryptfs-inspect \n https://github.com/bailey27/cppcryptfs \n https://codeberg.org/LGLQ/gocryptfs-create-folder \n \n \n https://github.com/cryptomator/cryptomator \n https://github.com/cryfs/cryfs \n https://github.com/idrassi/DirHash \n https://github.com/bitcoin/secp256k1 \n https://github.com/bitnami-labs/sealed-secrets \n 同态加密（HE）  https://github.com/homenc/HElib \n https://github.com/google/fully-homomorphic-encryption \n \n \n 对称加密算法\n \n 分组加密算法\n \n DES（Data Encryption Standard）\n \n 2DES \n 3DES（Triple DES/DESede） \n \n \n AES （Advanced Encryption Standard） \n TwoFish \n Blowfish \n Camellia \n CAST5 \n CAST6 \n ChaCha \n GOST28147 \n HC-128 \n HC-256 \n IDEA \n ISAAC \n Noekeon \n RC2 \n RC4 \n RC5-32 \n RC5-64 \n RC6 \n Rijndael \n Salsa20 \n SEED \n Serpent \n Skipjack \n TEA/XTEA \n Threefish \n Tnepres \n VMPC \n XSalsa20 \n ARIA \n \n \n 流式加密算法\n \n Salsa20 \n ChaCha20 \n ORYX \n SEAL \n Rabbit \n \n \n \n \n 非对称加密算法 \n \n RSA \n RSA (with blinding) \n RSA2 \n DSA(Digital Signature Algorithm) \n ECDSA \n ECC(Elliptic Curves Cryptography) \n DH \n ElGamal \n Rabin \n Merkle-Hellman（背包算法）\n \n Knapsack Algorithm \n \n \n NaccacheStern \n ECGOST3410 \n ECNR \n GOST3410 \n ISO9796d2 \n PSS \n X9.31-1998 \n \n \n 密钥交换算法\n \n DHE \n ECDHE \n Diffie-Hellman \n EC-DH \n EC-MQV \n J-PAKE \n SRP-6a \n \n \n PBE (Password Based Encryption) 口令加密算法\n \n PBEWithMD5AndDES \n PBEWithMD5AndTripeDES \n PBEWithSHA1AndDESede \n PBEWithSHA1AndRC2_40 \n PBEWithMD5AndRC2 \n PBEWithSHA1AndDES \n PBEWithSHA1AndRC2 \n PBEWithSHAAndIDEA-CBC \n PBEWithSHAAnd2-KeyTripleDES-CBC \n PBEWithSHAAnd3-KeyTripleDES-CBC \n PBEWithSHAAnd128BitRC2-CBC \n PBEWithSHAAnd40BitRC2-CBC \n PBEWithSHAAnd128BitRC4 \n PBEWithSHAAnd40BitRC4 \n PBEWithSHAAndTwofish-CBC \n PBEwithMD2 \n DES-CBC \n PBEwithMD2andRC2-CBC \n PBEwithMD5andDES-CBC \n PBEwithMD5andRC2-CBC \n PBEwithSHA1andDES-CBC \n PBEwithSHA1andRC2-CBC \n PBEwithSHA-1and128bitRC4 \n PBEwithSHA-1and40bitRC4 \n PBEwithSHA-1and3-keyDESEDE-CBC \n PBEwithSHA-1and2-keyDESEDE-CBC \n PBEwithSHA-1and128bitRC2-CBC \n PBEwithSHA-1and40bitRC2-CBC \n PBEwithHmacSHA-1 \n PBEwithHmacSHA-224 \n PBEwithHmacSHA-256 \n PBEwithHmacRIPEMD128 \n PBEwithHmacRIPEMD160 \n PBEwithHmacRIPEMD256 \n \n \n 签名算法\n \n MD2withRSA \n MD4withRSA \n MD5withRSA \n RIPEMD128withRSA \n RIPEMD160withECDSA \n RIPEMD160withRSA \n RIPEMD256withRSA \n SHA-1withRSA \n SHA-224withRSA \n SHA-256withRSAandMGF1 \n SHA-384withRSAandMGF1 \n SHA-512withRSAandMGF1 \n SHA-1withDSA \n SHA-1withECDSA \n \n \n 轻量级加密算法\n \n Ascon \n \n https://github.com/SparkDustJoe/AsconManaged \n Ascon-128 \n Ascon-XOF \n Ascon-Hash \n \n \n \n \n \n 加密模式 \n \n 加密模式ECB、CBC、CFB、OFB、CTR \n \n \n ECB（Electronic CodeBook mode）：电子密码本模式 \n CBC（Cipher Block Chaining mode）：密码分组链模式 \n CFB（Cipher FeedBack mode）：密码反馈模式 \n OFB（Output FeedBack mode）：输出反馈模式 \n CTR（CounTeR mode）：计时器模式 \n CTS \n GOFB \n OpenPGPCFB \n SIC (or CTR) \n CCM \n EAX \n GCM \n OCB \n 消息摘要 \n \n 生成数据的唯一密文，不可逆 \n \n \n 哈希 (Hash Algorithm) 散列算法，是将任意长度的数据映射为固定长度数据的算法，也称为消息摘要(主要用于数据完整性校验和加密/签名)。\n一般情况下，哈希算法有两个特点： \n \n 原始数据的细微变化（比如一个位翻转）会导致结果产生巨大差距 \n 运算过程不可逆，理论上无法从结果还原输入数据 \n \n \n \n https://github.com/topics/encoder \n https://github.com/topics/decoder \n https://github.com/topics/encode \n https://github.com/topics/decode \n \n \n 密码哈希（Password Hash） \n https://en.wikipedia.org/wiki/SipHash \n https://github.com/gravity-postquantum \n https://sphincs.org \n https://github.com/P-H-C/phc-winner-argon2 \n \n https://www.password-hashing.net \n \n \n https://www.bouncycastle.org \n \n https://github.com/bcgit \n \n \n https://github.com/Keyfactor \n \n \n xxHash\n \n https://github.com/Cyan4973/xxHash \n https://github.com/cespare/xxhash \n \n \n MD\n \n MD2 \n MD4 \n MD5\n \n https://github.com/calebstewart/md5 \n \n \n \n \n SHA\n \n SHA-0 \n SHA-1\n \n https://github.com/clibs/sha1 \n \n \n SHA-2\n \n SHA-256\n \n https://github.com/ilvn/SHA256 \n \n \n SHA-384 \n SHA-512\n \n https://github.com/RadeelAhmad/SHA-512 \n https://github.com/secworks/sha512 \n \n \n \n \n SHA-3\n \n Keccak \n \n Keccak-256 \n \n \n SHAKE128 \n SHAKE256 \n SHA3-224 \n SHA3-256\n \n https://github.com/euugenechou/sha3-256 \n \n \n SHA3-384 \n SHA3-512 \n \n \n \n \n BLAKE \n \n BLAKE-224 \n BLAKE-256 \n BLAKE-384 \n BLAKE-512 \n \n \n Blake2 \n \n https://github.com/BLAKE2/BLAKE2 \n BLAKE2b\n \n BLAKE2bp \n \n \n BLAKE2s\n \n BLAKE2sp \n \n \n \n \n BLAKE3\n \n https://github.com/BLAKE3-team/BLAKE3 \n https://github.com/oconnor663/bao \n https://github.com/zeebo/blake3 \n https://github.com/connor4312/blake3 \n \n \n RipeMD(RACE原始完整性校验讯息摘要)\n \n RipeMD128 \n RipeMD160 \n RipeMD256 \n RipeMD320Hex \n RipeMD320 \n HmacRipeMD128 \n HmacRipeMD160 \n \n \n 密码哈希函数（Password Hash）\n \n PBKDF2 \n Bcrypt \n Scrypt \n Argon2 \n \n \n MAC\n \n CBCBlockCipher \n CFBBlockCipher \n CMAC \n GMAC \n GOST28147 \n ISO9797 Alg. 3 \n Poly1305 \n SipHash \n SkeinMac \n VMPCMAC \n HMAC（Hash-based Message Authentication Code）散列消息认证码，结合一个加密密钥，通过特别计算方式之后产生的消息认证码（MAC）\n \n 从零入门HMAC-SHA256 \n \n \n \n \n CRC 循环冗余校验（Cyclic Redundancy Check）\n \n CRC32\n \n https://github.com/bakercp/CRC32 \n https://github.com/Michaelangel007/crc32 \n \n \n CRC64\n \n https://github.com/lordmulder/CRC-64 \n \n \n \n \n Tiger\n \n HmacTiger \n \n \n Whirlpool \n Gost3411 \n \n 应对普通哈希容易被破解的策略 \n \n 加盐（salt） \n \n \n 加盐就是对目标字段哈希前，拼接上另一个字段（salt）。注：盐值加到字段之前较为普遍。加盐对防彩虹表很有效。 \n \n \n 慢哈希 \n 证书格式 \n \n .DER / .CER （X.509） 文件是二进制格式，只保存证书，不保存私钥，Java 和 Windows 服务器偏向于使用这种编码格式 \n .PEM （Privacy Enhanced Mail） 一般是文本格式，可保存证书，可保存私钥，常用于 Apache 和 Nginx 服务器\n \n 一般为文本格式，以  -----BEGIN...  开头，以  -----END...  结尾，中间的内容是 BASE64 编码。 \n 这种格式可以保存证书和私钥，有时也把PEM 格式的私钥的后缀改为  .key  以区别证书与私钥 \n \n \n .CRT （Certificate） 可以是二进制格式，可以是文本格式，与  .DER  格式相同，不保存私钥。 \n .PFX / .P12 （Predecessor of PKCS#12） 二进制格式，同时包含证书和私钥，一般有密码保护。 \n .JKS （Java Key Storage） 二进制格式，同时包含证书和私钥，一般有密码保护，JAVA 专属格式，一般用于 Tomcat 服务器 \n \n",createdTime:1761814324e3},{title:"中间件",frontmatter:{description:"对象存储 https://github.com/pig-mesh/oss-spring-boot-starter\n容错分布式系统 https://github.com/atomix\n分布式时间同步 https://github.com/opencomputeproject/Time-Appliance-Project\n自动验收测试 https://github.com/cucumber\n大数据 https://github.com/apache/hadoop\n    Spark、Flink、Hive、MapReduce、Presto、Impala\n    https://github.com/apache/parquet-mr\n    https://github.com/apache/parquet-format\n    https://github.com/apache/orc\n    Parquet原理详解\nhttps://github.com/hpcc-systems\n数据处理 https://github.com/tableau\nhttps://github.com/Kanaries/Rath\nhttps://github.com/hazelcast/hazelcast\nhttps://github.com/datahub-project/datahub\nhttps://github.com/metabase/metabase\nhttps://github.com/spotify/luigi",meta:[{name:"twitter:title",content:"中间件"},{name:"twitter:description",content:"对象存储 https://github.com/pig-mesh/oss-spring-boot-starter\n容错分布式系统 https://github.com/atomix\n分布式时间同步 https://github.com/opencomputeproject/Time-Appliance-Project\n自动验收测试 https://github.com/cucumber\n大数据 https://github.com/apache/hadoop\n    Spark、Flink、Hive、MapReduce、Presto、Impala\n    https://github.com/apache/parquet-mr\n    https://github.com/apache/parquet-format\n    https://github.com/apache/orc\n    Parquet原理详解\nhttps://github.com/hpcc-systems\n数据处理 https://github.com/tableau\nhttps://github.com/Kanaries/Rath\nhttps://github.com/hazelcast/hazelcast\nhttps://github.com/datahub-project/datahub\nhttps://github.com/metabase/metabase\nhttps://github.com/spotify/luigi"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/%E4%B8%AD%E9%97%B4%E4%BB%B6.html"},{property:"og:type",content:"article"},{property:"og:title",content:"中间件"},{property:"og:description",content:"对象存储 https://github.com/pig-mesh/oss-spring-boot-starter\n容错分布式系统 https://github.com/atomix\n分布式时间同步 https://github.com/opencomputeproject/Time-Appliance-Project\n自动验收测试 https://github.com/cucumber\n大数据 https://github.com/apache/hadoop\n    Spark、Flink、Hive、MapReduce、Presto、Impala\n    https://github.com/apache/parquet-mr\n    https://github.com/apache/parquet-format\n    https://github.com/apache/orc\n    Parquet原理详解\nhttps://github.com/hpcc-systems\n数据处理 https://github.com/tableau\nhttps://github.com/Kanaries/Rath\nhttps://github.com/hazelcast/hazelcast\nhttps://github.com/datahub-project/datahub\nhttps://github.com/metabase/metabase\nhttps://github.com/spotify/luigi"},{property:"og:url",content:"https://bajins.com/PL/%E4%B8%AD%E9%97%B4%E4%BB%B6.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"中间件"},{itemprop:"description",content:"对象存储 https://github.com/pig-mesh/oss-spring-boot-starter\n容错分布式系统 https://github.com/atomix\n分布式时间同步 https://github.com/opencomputeproject/Time-Appliance-Project\n自动验收测试 https://github.com/cucumber\n大数据 https://github.com/apache/hadoop\n    Spark、Flink、Hive、MapReduce、Presto、Impala\n    https://github.com/apache/parquet-mr\n    https://github.com/apache/parquet-format\n    https://github.com/apache/orc\n    Parquet原理详解\nhttps://github.com/hpcc-systems\n数据处理 https://github.com/tableau\nhttps://github.com/Kanaries/Rath\nhttps://github.com/hazelcast/hazelcast\nhttps://github.com/datahub-project/datahub\nhttps://github.com/metabase/metabase\nhttps://github.com/spotify/luigi"}]},regularPath:"/PL/%E4%B8%AD%E9%97%B4%E4%BB%B6.html",relativePath:"PL/中间件.md",key:"v-92c85c98",path:"/PL/%E4%B8%AD%E9%97%B4%E4%BB%B6.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"搜索引擎",slug:"搜索引擎"},{level:2,title:"分布式追踪",slug:"分布式追踪"},{level:2,title:"消息队列",slug:"消息队列"},{level:2,title:"RPC",slug:"rpc"},{level:2,title:"SSO",slug:"sso"},{level:3,title:"CAS",slug:"cas"},{level:3,title:"OAuth2",slug:"oauth2"},{level:2,title:"报表看板大屏",slug:"报表看板大屏"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 中间件 \n Flag 搜索引擎 分布式追踪 消息队列 RPC SSO CAS OAuth2 报表看板大屏 \n Flag \n \n 对象存储  https://github.com/pig-mesh/oss-spring-boot-starter \n 容错分布式系统  https://github.com/atomix \n 分布式时间同步  https://github.com/opencomputeproject/Time-Appliance-Project \n 自动验收测试  https://github.com/cucumber \n 大数据  https://github.com/apache/hadoop \n \n Spark、Flink、Hive、MapReduce、Presto、Impala \n https://github.com/apache/parquet-mr \n https://github.com/apache/parquet-format \n https://github.com/apache/orc \n Parquet原理详解 \n \n \n https://github.com/hpcc-systems \n 数据处理  https://github.com/tableau \n https://github.com/Kanaries/Rath \n https://github.com/hazelcast/hazelcast \n https://github.com/datahub-project/datahub \n https://github.com/metabase/metabase \n https://github.com/spotify/luigi \n 搜索引擎 \n \n https://github.com/topics/search \n https://github.com/topics/search-engine \n https://github.com/topics/search-algorithm \n https://github.com/topics/searching-algorithms \n https://github.com/topics/fuzzy-search \n https://github.com/topics/searching \n https://github.com/topics/search-in-text \n https://github.com/topics/fulltext-search \n https://github.com/topics/full-text-search \n https://github.com/topics/text-search \n https://github.com/benbusby/whoogle-search \n \n \n https://github.com/topics/elasticsearch \n \n https://github.com/elastic/elasticsearch \n https://github.com/arkime/arkime \n https://gitee.com/consolelog/chinese_translation_of_elasticsearchjavaapi \n Web UI  https://github.com/appbaseio/dejavu \n https://github.com/deviantony/docker-elk \n https://github.com/1340691923/ElasticView \n \n \n https://github.com/opensearch-project \n \n https://github.com/dewitt/opensearch \n GUI  https://github.com/geek-fun/dockit \n 企业搜索服务器  https://github.com/codelibs/fess \n \n \n https://github.com/opendistro-for-elasticsearch \n https://github.com/quickwit-oss/tantivy \n https://github.com/zinclabs/zincsearch \n https://github.com/manticoresoftware/manticoresearch \n https://github.com/gorse-io/gorse \n 文本索引  https://github.com/blugelabs/bluge \n https://github.com/trinodb \n https://github.com/sea-team/gofound \n https://github.com/apache/lucene-solr \n https://gitee.com/jd-platform-opensource/hotkey \n https://github.com/apache/zookeeper \n https://github.com/datastax \n https://github.com/openlink/virtuoso-opensource \n 分布式追踪 \n \n 服务网格  https://github.com/servicemesher \n 分布式追踪  https://github.com/open-telemetry \n \n https://github.com/opentracing \n https://github.com/census-instrumentation \n Opentracing规范介绍 \n OpenTracing概述 \n \n \n https://github.com/hypertrace/hypertrace \n https://github.com/Tencent/bk-cmdb \n https://github.com/openzipkin/zipkin \n https://github.com/dianping/cat \n https://github.com/librato \n https://github.com/DataDog \n https://github.com/openobserve \n https://github.com/sensu/sensu-go \n https://github.com/graphite-project \n https://github.com/jaegertracing \n https://github.com/keyval-dev/odigos \n 监控度量  https://github.com/micrometer-metrics \n 指标采集  https://github.com/telegraf \n https://github.com/logtail \n https://github.com/elastic/logstash \n https://github.com/fluent/fluentd \n https://github.com/wolfpld/tracy \n https://github.com/geerlingguy/internet-pi \n https://github.com/SigNoz/signoz \n https://github.com/Lakr233/Rayon \n 集群监控  https://github.com/ganglia \n 应用监控  https://github.com/codecentric/spring-boot-admin \n https://github.com/Nepxion \n https://github.com/sohutv/mqcloud \n 日志集中管理  https://github.com/logdna \n https://github.com/allinurl/goaccess \n https://github.com/pinterest/singer \n https://github.com/hyperdxio/hyperdx \n \n 其他应用监控 \n \n https://github.com/elastic/kibana \n https://github.com/getredash/redash \n https://github.com/apache/superset \n https://makepath.com/opensource \n \n https://github.com/bokeh/bokeh \n \n \n https://github.com/cube-js/cube.js \n https://github.com/Freeboard/freeboard \n https://github.com/streamlit/streamlit \n https://github.com/altair-viz/altair \n https://github.com/treasure-data/digdag \n \n \n 日志服务>基本概念>术语表 \n SLS时序监控实战: Spring Boot应用监控最佳实践 \n 消息队列 \n \n 协议  https://www.amqp.org \n \n \n AMQP的全称为：Advanced Message Queuing Protocol（高级消息队列协议） \n STOMP是简单（或流式）文本定向消息传递协议 \n AMQP协议学习 \n AMQP基本概念 \n 史上最强消息队列MQ万字图文总结！ \n 业务消息传递(AKA Enterprise Messaging) 和 事件流（AKA Event Streaming）的区别 \n \n \n https://github.com/apache/rocketmq \n https://github.com/apache/activemq \n https://github.com/rabbitmq \n \n https://github.com/mr-ping/RabbitMQ_into_Chinese \n https://github.com/alanxz/rabbitmq-c \n \n \n https://github.com/zeromq \n \n https://github.com/booksbyus/zguide \n https://github.com/erickt/rust-zmq \n \n \n https://github.com/nanomsg/nng \n 消息数据传递  https://github.com/apache/camel \n https://github.com/solacedev \n https://github.com/apache/kafka \n \n Kafka安装及入门 \n https://github.com/confluentinc \n https://github.com/smartloli/EFAK \n https://github.com/aiven \n https://github.com/xxd763795151/kafka-console-ui \n https://github.com/kroxylicious/kroxylicious \n \n \n https://github.com/vectorizedio/redpanda \n https://github.com/apache/pulsar \n \n Pulsar消息发送、消费架构概述 \n \n \n https://github.com/pravega/pravega \n https://github.com/nats-io \n https://github.com/hatchet-dev/hatchet \n RPC \n \n https://github.com/topics/rpc \n https://github.com/topics/rpc-client \n https://github.com/topics/rpc-framework \n https://github.com/topics/oncrpc \n \n \n https://github.com/apache/thrift \n https://github.com/grpc \n \n gRPC 官方文档中文版 \n https://github.com/hashicorp/go-plugin \n https://github.com/grpc-ecosystem/grpc-gateway \n https://github.com/trpc-group/trpc-go \n https://github.com/weibocom/motan-go \n \n \n https://github.com/rpcxio \n \n https://cn.doc.rpcx.io \n https://github.com/smallnest \n \n \n https://github.com/twitchtv/twirp \n https://github.com/luxiaoxun/NettyRpc \n https://github.com/hprose \n https://sourceforge.net/projects/remotetea \n https://github.com/dCache/oncrpc4j \n https://github.com/sofastack/sofa-rpc \n https://github.com/apache/incubator-brpc \n https://github.com/bufbuild \n SSO \n \n 单点登录（Single sign-on）是在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。\n身份访问管理 (IAM) \n \n \n https://github.com/openid \n \n https://openid.net/connect \n OpenID Connect简介 \n \n \n https://github.com/topics/openid \n https://github.com/topics/openid-connect \n https://github.com/topics/sso \n https://github.com/pac4j \n https://github.com/casbin \n https://github.com/casdoor \n https://github.com/okta \n SAML  https://github.com/topics/saml \n \n https://github.com/topics/saml2 \n \n \n https://github.com/onelogin \n \n https://github.com/SAML-Toolkits \n \n https://www.samltool.com/online_tools.php \n \n \n \n \n https://github.com/ssoready/ssoready \n OpenSAML  https://github.com/OpenConext/Mujina \n https://www.shibboleth.net/products \n https://www.incommon.org/software/shibboleth \n https://shibboleth.atlassian.net/wiki/spaces/DEV \n https://github.com/authelia \n \n LDAP \n \n LDAP 是 Lightweight Directory Access Protocol 的缩写，即 轻量目录访问协议。\n它基于 X.500 标准下更简单的子集标准开发，因此有时 LDAP 也被称之为 X.500-lite，即轻量级 x.500 \n \n \n https://github.com/search?q=Ldap \n https://www.rfc-editor.org/rfc/rfc4510 \n http://www.faqs.org/rfcs/rfc2251.html \n https://wiki.mozilla.org/Mozilla_LDAP_SDK_Programmer%27s_Guide/Understanding_LDAP \n https://zh.wikipedia.org/wiki/轻型目录访问协议 \n https://zh.wikipedia.org/wiki/Active_Directory \n http://www.kingsmountain.com/ldapRoadmap.shtml \n http://www.jxplorer.org/links_ldap.html \n https://www.zytrax.com/books/ldap \n \n \n https://ldap.com \n \n https://github.com/pingidentity/ldapsdk \n https://sourceforge.net/projects/ldap-sdk \n \n \n https://www.openldap.org \n \n https://github.com/LMDB/lmdb \n https://git.openldap.org/openldap/openldap \n \n \n https://github.com/dsbenghe/Novell.Directory.Ldap.NETStandard \n \n https://github.com/yuessir/Nop.Plugin.ExternalAuth.NovellActiveDirectory \n \n \n https://github.com/Nordes/IdentityServer4.LdapExtension \n ApacheDS  https://github.com/apache/directory-server \n \n https://directory.apache.org/sources.html \n https://github.com/wso2/product-is \n \n \n 389  https://directory.fedoraproject.org \n OpenDJ  https://github.com/OpenIdentityPlatform \n \n https://github.com/OpenRock/OpenDJ \n \n \n https://github.com/longguikeji \n https://github.com/FreeRADIUS \n \n https://github.com/lirantal/daloradius \n https://github.com/pyradius/pyrad \n \n \n JOSSO  https://github.com/atricore \n Windows  https://github.com/Waffle/waffle \n https://sourceforge.net/projects/spnego \n python  https://github.com/cannatag/ldap3 \n \n https://github.com/dirkjanm/ldapdomaindump \n \n \n go  https://github.com/go-ldap \n TS  https://github.com/ldapts/ldapts \n CAS \n \n 中央认证服务（Central Authentication Service），一个基于Kerberos票据方式实现SSO单点登录的集中认证服务协议 \n \n \n 三个角色：用户/客户端（Browser），应用服务（CAS Client），单点登录服务器（CAS Server） \n \n \n 由浅入深理解Kerberos协议 \n 一文搞懂Kerberos \n \n \n https://github.com/mongodb-js/kerberos \n https://github.com/apereo/cas \n \n https://github.com/jasig \n https://github.com/bedework \n CAS和Shiro内外网双IP动态访问 \n Apereo CAS增加登录方式 \n \n \n https://github.com/xuxueli/xxl-sso \n OAuth2 \n \n https://github.com/topics/oauth2 \n \n \n https://github.com/aaronpk/oauth.net \n \n https://github.com/vouch/vouch-proxy \n https://github.com/enterprise-oss/osso \n https://github.com/curveball/a12n-server \n https://github.com/babelouest/glewlwyd \n https://github.com/keycloak/keycloak \n https://github.com/oauth-io \n https://github.com/ory \n https://github.com/simple-login/app \n https://github.com/ssqsignon \n https://github.com/caos/zitadel \n https://github.com/curityio \n https://github.com/wildfly-security/wildfly-elytron \n \n \n https://tools.ietf.org/html/rfc6749 \n 阮一峰 – 理解 OAuth 2.0 \n OAuth2 CSRF攻击 \n \n \n OAuth2是一种授权框架，提供了一套详细的授权机制（指导）。用户或应用可以通过公开的或私有的设置，授权第三方应用访问特定资源。 \n \n \n 应用场景：OAuth2用在使用第三方账号登录的情况(比如使用weibo, qq, github登录某个app) \n \n \n OAuth2是一个相对复杂的协议, 有4种授权模式： \n \n \n 授权码模式（authorization code） \n 密码模式（resource owner password credentials） \n 客户端模式（client credentials） \n 简化模式（implicit） \n 报表看板大屏 \n \n https://github.com/topics/report \n https://github.com/topics/bi \n https://github.com/topics/superset \n https://github.com/topics/data-visualization \n https://github.com/topics/business-intelligence \n https://gitee.com/gcpaas \n \n \n 开发中流行的报表工具 \n \n \n Java  https://github.com/jeecgboot \n https://github.com/pentaho/pentaho-reporting \n https://github.com/eclipse-birt/birt \n https://github.com/TIBCOSoftware \n \n https://community.jaspersoft.com \n https://sourceforge.net/projects/jaspersoft \n https://sourceforge.net/projects/jasperreports \n https://sourceforge.net/projects/jasperstarter \n JasperReport实战总结 \n \n \n https://github.com/zhangdaiscott/JimuReport \n https://gitee.com/summer-T/ureport-keep \n \n https://www.w3cschool.cn/ureport \n ureport2报表详细使用 \n SpringBoot整合Ureport2 报表 及常见使用方法 \n \n \n https://sourceforge.net/projects/dynamicreports \n https://gitee.com/sulinxiubao/skp-report \n https://github.com/TuiQiao/CBoard \n https://github.com/pentaho/pentaho-reporting \n https://sourceforge.net/projects/jfreereport \n https://github.com/tencentmusic/supersonic \n 数据可视化  https://github.com/dataease \n https://github.com/jtablesaw/tablesaw \n https://github.com/datageartech/datagear \n https://github.com/anji-plus/report \n \n https://gitee.com/anji-plus/report \n \n \n https://github.com/SHINING-TECH/EasyDisplayClient \n 实时风控引擎  https://github.com/wfh45678/radar \n C#  https://github.com/FastReports/FastReport \n https://github.com/noneday/CellReport \n https://github.com/ariacom/Seal-Report \n \n",createdTime:1761814324e3},{title:"人工智能",frontmatter:{description:"https://maeiee-garden.vercel.app\n微调 https://github.com/InternLM/xtuner",meta:[{name:"image",content:"https://ainize.ai/images/run_on_ainize_button.svg"},{name:"twitter:title",content:"人工智能"},{name:"twitter:description",content:"https://maeiee-garden.vercel.app\n微调 https://github.com/InternLM/xtuner"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://ainize.ai/images/run_on_ainize_button.svg"},{name:"twitter:url",content:"https://bajins.com/PL/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD.html"},{property:"og:type",content:"article"},{property:"og:title",content:"人工智能"},{property:"og:description",content:"https://maeiee-garden.vercel.app\n微调 https://github.com/InternLM/xtuner"},{property:"og:image",content:"https://ainize.ai/images/run_on_ainize_button.svg"},{property:"og:url",content:"https://bajins.com/PL/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"人工智能"},{itemprop:"description",content:"https://maeiee-garden.vercel.app\n微调 https://github.com/InternLM/xtuner"},{itemprop:"image",content:"https://ainize.ai/images/run_on_ainize_button.svg"}]},regularPath:"/PL/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD.html",relativePath:"PL/人工智能.md",key:"v-54151d31",path:"/PL/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"模型",slug:"模型"},{level:2,title:"JupyterNotebook",slug:"jupyternotebook"},{level:2,title:"开源实现",slug:"开源实现"},{level:2,title:"OCR",slug:"ocr"},{level:2,title:"通用聊天机器人",slug:"通用聊天机器人"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' 人工智能 \n Flag 模型 JupyterNotebook 开源实现 OCR 通用聊天机器人 \n Flag \n \n https://github.com/luban-agi/Awesome-AIGC-Tutorials \n https://github.com/BradyFU/Awesome-Multimodal-Large-Language-Models \n https://github.com/dair-ai/Prompt-Engineering-Guide \n https://github.com/Visualize-ML/Book3_Elements-of-Mathematics \n https://github.com/datawhalechina \n https://github.com/LLMBook-zh/LLMBook-zh.github.io \n https://github.com/zjhellofss/KuiperInfer \n https://github.com/cbamls/AI_Tutorial \n https://github.com/datawhalechina/leedl-tutorial \n https://github.com/ZJU-LLMs/Foundations-of-LLMs \n https://github.com/skyzh/tiny-llm \n https://github.com/chenzomi12/AISystem \n https://github.com/datawhalechina/happy-llm \n MCP  https://github.com/modelcontextprotocol \n \n https://mcpflow.io \n \n \n https://github.com/isaacphi/mcp-language-server \n https://github.com/a2aproject/A2A \n 动手学深度学习  https://github.com/d2l-ai \n https://github.com/lonePatient/awesome-pretrained-chinese-nlp-models \n https://github.com/HqWu-HITCS/Awesome-Chinese-LLM \n https://github.com/hpcaitech/ColossalAI \n https://github.com/xx025/carrot \n https://github.com/Charmve/computer-vision-in-action \n https://github.com/alexeygrigorev/mlbookcamp-code \n https://github.com/huggingface \n https://github.com/huhuhang/aibydoing-feedback \n https://github.com/google-deepmind \n https://github.com/explosion \n https://github.com/nltk \n https://github.com/tiepvupsu/ebookMLCB \n 辅助驾驶  https://github.com/commaai/openpilot \n https://github.com/OpenDriveLab \n 文档归档  https://github.com/paperless-ngx/paperless-ngx \n https://github.com/xtekky/gpt4free \n https://github.com/JoeSiu/discord-chatbot \n https://github.com/juzeon/poe-openai-proxy \n https://github.com/huanfeng123/poe-openai \n https://github.com/chathub-dev \n https://github.com/TransformerOptimus/SuperAGI \n https://github.com/sunner/ChatALL \n 语言模型漏洞  https://github.com/llm-attacks/llm-attacks \n 中文通用大模型排行  https://github.com/CLUEbenchmark/SuperCLUE \n https://github.com/open-compass/T-Eval \n https://github.com/tatsu-lab/alpaca_eval \n https://dang.ai \n https://jess3.com/projects/genaiprism \n https://www.producthunt.com/golden-kitty-awards \n https://www.stateof.ai \n https://github.com/jeinlee1991/chinese-llm-benchmark \n \n \n DALL-E 文本生成图片\n \n https://www.bing.com/images/create \n \n \n Midjourney 文本生成图片 \n OpenRead AI读论文 \n Jasper.ai 写作AI \n Synthesia 生成真人视频 \n Jenni.ai AI写论文 \n Copy.ai 写文案 \n PepperType A写邮件 \n Designs.ai 创意设计平台 \n Khroma 高质量的配色方案 \n Posemaniacs 人体3D模型 \n Aiva 创作音乐 \n Al Writer 自动生成新闻稿 \n Fireflies 将文本转换为语音 \n Repurpose 10 自动化社媒内容 \n Chatbot live 多功能聊天机器人 \n 模型调用  https://github.com/hwchase17/langchain \n https://github.com/langchain4j/langchain4j \n 金融  https://github.com/AI4Finance-Foundation/FinGPT \n \n \n https://maeiee-garden.vercel.app \n 微调  https://github.com/InternLM/xtuner \n 模型 \n \n https://github.com/topics/machine-learning \n https://github.com/topics/deep-learning \n https://github.com/topics/neural-network \n https://github.com/topics/computer-vision \n https://github.com/topics/artificial-intelligence \n ncnn推理  https://github.com/topics/ncnn \n torch推理  https://github.com/topics/pytorch \n https://github.com/topics/text-recognition \n \n \n 深度学习是神经网络的深层神经网络。强化学习是独立于机器学习之外的分支，强化学习严格来说不属于机器学习，\n机器学习的任务是通过已知的训练集来学习目标函数，而强化学习不需要训练集。 \n \n \n 机器学习：一切通过优化方法挖掘数据中规律的学科。 \n 深度学习：一切运用了神经网络作为参数结构进行优化的机器学习算法。学习过程是静态的，训练样本是有标签的 \n 强化学习：不仅能利用现有数据，还可以通过对环境的探索获得新数据，并利用新数据循环往复地更新迭代现有模型的机器学习算法。学习过程是动态的，训练是没有标签的 \n 深度强化学习：一切运用了神经网络作为参数结构进行优化的强化学习算法。 \n \n \n 机器学习模型（Machine Learning models）：包括分类器、回归器、聚类器、推荐系统等。例如：Logistic回归、深度神经网络、决策树\n \n Wide & Deep：Google开发的一种混合推荐模型，结合了线性模型（广度）和深度神经网络（深度）。 \n Neural Collaborative Filtering (NCF)：一种基于深度学习的协同过滤推荐算法。 \n DeepFM：一种结合因子分解机（FM）和深度神经网络的推荐算法。 \n \n \n 强化学习模型（Reinforcement Learning models）：使用来自环境的反馈，通过反复试验来学习实现目标的模型。例如：深度Q网络、政策梯度 \n 逻辑回归(Logistic Regression) \n K最近邻(K-Nearest Neighbors) \n 决策树(Decision Tree) \n 随机森林(Random Forest) \n 朴素贝叶斯(Naive Bayes) \n 神经网络(Neural Network)\n \n 感知机(Perceptron) \n 多层感知机(Multilayer Perceptron) \n CNN(Convolutional Neural Network) \n RNN(Recurrent Neural Network) \n LSTM(Long Short Term Memory) \n GAN(Generative Adversarial Nets) \n \n \n SVM(Support Vector Machine)\n \n 聚类(Clustering) \n K均值(K-Means) \n 高斯混合模型(Gaussian Mixture Model) \n DBSCAN \n \n \n 降维(Dimensionality Reduction)\n \n PCA(Principal Component Analysis) \n LDA(Linear Discriminant Analysis) \n -Kernel PCA \n tSNE \n \n \n 线性回归(Linear Regression) \n 极限学习机(Extreme Learning Machine) \n 隐马尔可夫模型(Hidden Markov Model) \n 支持向量聚类(Support Vector Clustering) \n 递增学习(Incremental Learning) \n 置信学习(Confidence Learning) \n 元学习(Meta Learning) \n 集成学习(Ensemble Learning)\n \n 随机森林(Random Forest) \n GBDT(Gradient Boosting Decision Tree) \n AdaBoost \n 栈式学习(Stacking) \n \n \n 迁移学习(Transfer Learning) \n 计算机视觉(Computer Vision)：用于分析图像和视频的模型。例如：对象检测器、分割模型、面部识别模型\n \n CNN(Convolutional Neural Network) \n 对象检测(Object Detection) \n semantic segmentation \n 实例分割(Instance Segmentation) \n 目标跟踪(Object Tracking) \n 行人重识别(Person Re-identification) \n 图像分类(Image Classification) \n 物体识别(Object Recognition) \n \n \n 自然语言处理(Natural Language Processing)：用于处理文本和语音的模型。例如：变形金刚、递归神经网络、单词嵌入\n \n RNN(Recurrent Neural Network) \n LSTM(Long Short Term Memory) \n GRU(Gated Recurrent Unit) \n 词向量(Word Embedding) \n 文本分类(Text Classification) \n 机器翻译(Machine Translation) \n 问答系统(QA) \n 评论分析(Sentiment Analysis) \n 词性标注(Part-of-speech Tagging) \n 命名实体识别(Named Entity Recognition) \n 依存句法分析(Dependency Parsing) \n 文本摘要(Text Summarization) \n \n \n \n \n 卷积神经网络（Convolutional Neural Networks，CNN）：图像识别、目标检测、图像分割、人脸识别等。\n \n AlexNet：2012年的ImageNet竞赛冠军，深度卷积神经网络（CNN）的开创者。 \n VGG-16 和 VGG-19：牛津大学开发的具有16层和19层的CNN，广泛应用于图像识别任务。 \n ResNet (Residual Network)：Microsoft开发的一种具有残差连接的深度CNN，解决了深度网络训练中的梯度消失问题。 \n Inception 系列（例如Inception v3 和 Inception-ResNet）：Google开发的具有多尺度卷积结构的CNN。 \n EfficientNet：一种基于自动搜索的CNN，通过调整网络宽度、深度和分辨率实现了高性能和低计算成本的平衡 \n \n \n 循环神经网络（Recurrent Neural Networks，RNN）：自然语言处理、语音识别、时间序列预测等。 \n 生成对抗网络（Generative Adversarial Networks，GAN）：图像生成、图像超分辨率（Super-Resolution Models）、图像修复、图像风格迁移等。\n \n SRCNN \n ESPCN \n EDSR \n \n \n 转换器（Transformer）：自然语言处理、文本分类、机器翻译、问答系统等。\n \n BERT (Bidirectional Encoder Representations from Transformers)：由Google开发的NLP模型，具有双向上下文识别能力。 \n GPT (Generative Pre-trained Transformer)系列：由OpenAI开发的一系列模型，包括GPT、GPT-2、GPT-3和GPT-4（即我）。 \n T5 (Text-to-Text Transfer Transformer)：由Google开发的文本生成和NLP任务的通用模型。 \n RoBERTa：Facebook AI的一种优化BERT变体，通过调整训练方法和超参数提高了性能。 \n ALBERT (A Lite BERT)：一种精简版的BERT，减少了参数数量和计算复杂度。 \n XLNet：BERT的双向替代品，结合了Transformer-XL和BERT的优势。 \n \n \n 预训练语言模型（Pretrained Language Models，PLM）：文本分类、情感分析、问答系统、机器翻译等。 \n 支持向量机（Support Vector Machine，SVM）：分类、回归、异常检测等。 \n 决策树（Decision Tree）：分类、回归等。 \n K均值聚类（K-Means Clustering）：聚类分析等。 \n YOLO \n Mask R-CNN \n BERT \n GPT \n DQN \n \n \n 清华大学唐杰：大模型与超级智能 \n JupyterNotebook \n \n https://github.com/jupyterlab/jupyterlab \n https://github.com/jupyter \n \n https://jupyter.org \n https://zh.wikipedia.org/wiki/Jupyter \n \n \n https://github.com/jupyter-java \n https://github.com/markusschanta/awesome-jupyter \n \n https://github.com/jupyterhub \n \n https://mybinder.org \n https://notebooks.gesis.org \n \n \n \n \n jupyter notebook中%与!的区别 \n https://github.com/zjffdu/zeppelin-notebook \n 开源实现 \n \n https://github.com/louisfb01/best_AI_papers_2021 \n https://github.com/pliang279/awesome-multimodal-ml \n https://github.com/roboticcam/machine-learning-notes \n \n \n https://github.com/Tencent/ncnn \n https://github.com/nv-tlabs \n https://github.com/onnx/onnx \n https://github.com/ARM-software/ComputeLibrary \n https://github.com/apache/incubator-mxnet \n https://github.com/apache/incubator-systemml \n https://github.com/tensorflow/tensorflow \n https://github.com/Dao-AILab/flash-attention \n https://github.com/Microsoft/CNTK \n https://github.com/microsoft/DeepSpeed \n https://github.com/deepmind/lab \n https://github.com/pytorch/pytorch \n https://github.com/scikit-learn/scikit-learn \n https://github.com/Theano/Theano \n https://github.com/intel/caffe \n https://github.com/BVLC/caffe \n https://github.com/torch/torch7 \n https://github.com/microsoft/lightgbm-transform \n crnn  https://github.com/meijieru/crnn.pytorch \n https://github.com/Megvii-BaseDetection/YOLOX \n Psenet  https://github.com/WenmuZhou/PSENet.pytorch \n https://github.com/pfnet/pfrl \n 语言模型实现  https://github.com/lukhy/masr \n NLP资源库  https://github.com/fighting41love/funNLP \n https://github.com/ray-project/ray \n \n 漫谈Ray（3）：对象管理 \n \n \n 实时语音克隆  https://github.com/CorentinJ/Real-Time-Voice-Cloning \n https://github.com/babysor/Realtime-Voice-Clone-Chinese \n https://github.com/babysor/MockingBird \n https://github.com/cnlinxi/book-text-to-speech \n https://github.com/haoheliu/AudioLDM \n https://github.com/Plachtaa/VALL-E-X \n https://github.com/jianchang512/clone-voice \n https://github.com/myshell-ai/OpenVoice \n https://github.com/RVC-Boss/GPT-SoVITS \n https://github.com/abus-aikorea/voice-pro \n https://github.com/megaease/easevoice-trainer \n 音频处理  https://github.com/facebookresearch/audiocraft \n https://github.com/jianchang512/vocal-separate \n https://github.com/DoMusic/Hybrid-Net \n https://github.com/Spr-Aachen/Easy-Voice-Toolkit \n 语音转文字  https://github.com/jianchang512/stt \n https://github.com/k2-fsa/sherpa-onnx \n https://github.com/winterfx/Podcast-Transcription \n https://github.com/deepakjois/podscript \n https://github.com/JuergenFleiss/aTrain \n 文本复述  https://github.com/tongchangD/text_data_enhancement_with_LaserTagger \n https://github.com/innnky/so-vits-svc \n https://github.com/34j/so-vits-svc-fork \n https://github.com/suno-ai/bark \n https://github.com/coqui-ai/TTS \n https://github.com/fishaudio/fish-speech \n https://github.com/open-mmlab/Amphion \n https://github.com/panyanyany/Awesome-ChatTTS \n https://github.com/2noise/ChatTTS \n https://github.com/KittenML/KittenTTS \n https://github.com/ElmTran/praises \n https://github.com/santinic/audiblez \n https://github.com/cosin2077/easyVoice \n 变声  https://github.com/w-okada/voice-changer \n 捕获键盘声音  https://github.com/ggerganov/kbd-audio \n Whisper  https://github.com/chidiwilliams/buzz \n https://github.com/ggerganov/whisper.cpp \n https://github.com/invoke-ai/InvokeAI \n https://github.com/omerbt/TokenFlow \n https://github.com/prompt-engineering \n https://github.com/innovatorved/subtitle \n 视频翻译  https://github.com/jianchang512/pyvideotrans \n https://github.com/buxuku/VideoSubtitleGenerator \n https://github.com/sutro-planet/easyvideotrans \n https://github.com/krillinai/KrillinAI \n https://github.com/Huanshere/VideoLingo \n 视频笔记  https://github.com/luyu0279/Ainee \n 抠图  https://github.com/PeterL1n/RobustVideoMatting \n https://github.com/senguptaumd/Background-Matting \n https://github.com/nadermx/backgroundremover \n https://github.com/ihmily/image-matting \n https://github.com/bria-ai \n https://github.com/zhbhun/rmbg \n https://github.com/lichin-lin/figma-sam \n https://ai-image.tools \n https://cutout.aiwave.cc \n https://github.com/pangxiaobin/image-matting \n 视频制作  https://github.com/elebumm/RedditVideoMakerBot \n https://github.com/mli/autocut \n https://github.com/magic-research/magic-animate \n https://github.com/gradio-app/gradio \n https://github.com/lucataco/cog-MagicAnimate \n https://github.com/PKU-YuanGroup/Open-Sora-Plan \n https://github.com/6174/comflowy \n https://github.com/alibaba-damo-academy/FunClip \n https://github.com/harry0703/MoneyPrinterTurbo \n 实时屏幕翻译  https://github.com/Danily07/Translumo \n 视频合成  https://github.com/camenduru/text-to-video-synthesis-colab \n 生成短视频  https://github.com/harry0703/MoneyPrinterTurbo \n https://github.com/alecm20/story-flicks \n https://github.com/YILS-LIN/short-video-factory \n https://github.com/wendy7756/AI-Video-Transcriber \n 提高分辨率  https://github.com/Janspiry/Image-Super-Resolution-via-Iterative-Refinement \n https://compvis.github.io/taming-transformers \n https://github.com/upscayl/upscayl \n https://github.com/Tohrusky/Final2x \n https://github.com/zhongweili/imagenie \n https://github.com/nagadomi/waifu2x \n 图片降噪  https://github.com/google-research/multinerf \n \n https://bmild.github.io/rawnerf \n \n \n https://github.com/CompVis/latent-diffusion \n https://github.com/AUTOMATIC1111/stable-diffusion-webui \n https://github.com/Nutlope/restorePhotos \n https://github.com/sczhou/CodeFormer \n \n https://github.com/Arthurzhangsheng/CodeFormer_GUI \n \n \n https://github.com/facefusion/facefusion \n https://github.com/Fanghua-Yu/SUPIR \n https://github.com/lxfater/inpaint-web \n https://github.com/Sanster/IOPaint \n https://www.topazlabs.com \n 换脸  https://github.com/iperov/DeepFaceLab \n https://github.com/dunbar12138/pix2pix3D \n https://github.com/phodal/ai-research \n https://github.com/s0md3v/roop \n https://github.com/tencent-ailab/IP-Adapter \n \n https://ip-adapter.github.io \n https://ipadapterfaceid.com \n https://github.com/xiaohu2015/IP-Adapter \n \n \n https://github.com/deepinsight/insightface \n https://github.com/Hillobar/Rope \n https://www.changeface.online \n https://github.com/hacksider/Deep-Live-Cam \n https://github.com/idootop/MagicMirror \n 人脸识别  https://github.com/ageitgey/face_recognition \n 换衣服  https://vogue-try-on.github.io \n https://github.com/IDEA-Research/Grounded-Segment-Anything \n https://github.com/modelscope/facechain \n https://github.com/HumanAIGC/OutfitAnyone \n https://github.com/damo-vilab/i2vgen-xl \n https://github.com/ihmily/outfit-anyone \n 漫画人脸检测  https://github.com/nagadomi/lbpcascade_animeface \n 卡通化  https://github.com/SystemErrorWang/White-box-Cartoonization \n 生成头像  https://github.com/leap-ai/headshots-starter \n 图片人物说话  https://github.com/Winfredy/SadTalker \n https://github.com/XingangPan/DragGAN \n https://github.com/ali-vilab/dreamtalk \n https://www.leiapix.com \n 新闻网页正文通用抽取器  https://github.com/GeneralNewsExtractor \n https://github.com/nlplab/brat \n https://github.com/whitead/paper-qa \n https://github.com/leptonai/search_with_lepton \n 解密加密  https://github.com/Ciphey/Ciphey \n 玩游戏  https://github.com/MineDojo/Voyager \n 提取视频语言  https://github.com/SevaSk/ecoute \n 图像标记  https://github.com/xinyu1205/Recognize_Anything-Tag2Text \n https://github.com/blakeblackshear/frigate \n https://github.com/Kingfish404/segment-anything-webui \n stable-diffusion  https://github.com/Fictiverse/Redream \n https://github.com/SupaGruen/StableDiffusion-CheatSheet \n https://github.com/liriliri/vivy \n https://github.com/SysCV/sam-hq \n https://github.com/fiatrete/OpenDAN-Personal-AI-OS \n https://github.com/nateraw/stable-diffusion-videos \n https://github.com/Stability-AI/generative-models \n https://github.com/lllyasviel/Fooocus \n https://github.com/rese1f/StableVideo \n https://github.com/CloudOrc/SolidUI \n https://github.com/Acly/krita-ai-diffusion \n https://github.com/menyifang/En3D \n https://github.com/Mikubill/sd-webui-controlnet \n https://github.com/InstantID/InstantID \n \n https://github.com/ZHO-ZHO-ZHO/ComfyUI-InstantID \n \n \n https://github.com/modelscope/DiffSynth-Studio \n https://civitai.com \n 中文文本纠错  https://github.com/shibing624/pycorrector \n 图像生成音乐  https://imagetomusic.top \n 音乐生成  https://github.com/gcui-art/suno-api \n https://github.com/SunoApi/SunoApi \n https://github.com/ASLP-lab/DiffRhythm \n 图像生成  https://github.com/amin2312/AI-Image-Generator \n https://github.com/okaris/omni-zero \n https://github.com/bytedance-seed/BAGEL \n \n https://demo.bagel-ai.org \n \n \n https://aistudio.google.com/prompts/new_chat?model=gemini-2.5-flash-image-preview \n \n https://github.com/PicoTrex/Awesome-Nano-Banana-images \n https://github.com/WolfSkylake/Nano-Banana-Draw-Tool \n https://openrouter.ai/settings/keys \n https://nb.snaily.top/create \n https://aiimagedit.com \n https://imini.com/tools/ai-image/text-to-image \n https://nanobananafree.ai \n https://www.imastudio.com \n \n \n MCP  https://github.com/mcp-ecosystem/mcp-gateway \n https://github.com/worryzyy/HowToCook-mcp \n \n \n https://github.com/ainize-team \n \n \n \n \n 视频感知  https://github.com/open-mmlab/mmtracking \n https://github.com/scikit-learn/scikit-learn \n https://github.com/roboflow/supervision \n https://github.com/dvlab-research/MiniGemini \n https://github.com/javpower/JavaVision \n 数据管道  https://github.com/orchest \n 数据科学Web  https://github.com/plotly/dash \n 扫描PDF  https://github.com/baicunko/scanyourpdf \n https://github.com/eosphoros-ai/DB-GPT \n https://github.com/oomol-lab/pdf-craft \n PDF翻译  https://github.com/Byaidu/PDFMathTranslate \n PDF转Markdown  https://github.com/jorben/markpdfdown \n 签名  https://github.com/SigmaHQ/sigma \n https://github.com/Alic-yuan/nlp-beginner-finish \n https://github.com/heartexlabs/label-studio \n https://github.com/YunwenTechnology/Unilm \n 手机智能机器人  https://github.com/isl-org/OpenBot \n https://github.com/imistyrain/MTCNN \n https://github.com/OpenBMB/MiniCPM-V \n 医疗  https://github.com/DengYangyong/medical_entity_recognize \n 摄像头物体识别  https://github.com/blakeblackshear/frigate \n https://github.com/we0091234/Chinese_license_plate_detection_recognition \n 眼动追踪  https://github.com/akchro/eyesite \n 相似性搜索  https://github.com/ibips/lrprev-extract \n https://github.com/harperreed/imbedding \n https://github.com/mlfoundations/open_clip \n https://github.com/ml-explore \n https://github.com/harperreed/photo-similarity-search \n https://github.com/dav/word2vec \n https://github.com/google-research/google-research \n https://github.com/frost-beta/sisi \n 爬虫  https://github.com/getmaxun/maxun \n https://github.com/mendableai/firecrawl \n https://github.com/BuilderIO/gpt-crawler \n https://github.com/coder-hxl/x-crawl \n https://github.com/browser-use/browser-use \n https://github.com/VinciGit00/Scrapegraph-ai \n https://github.com/browserbase/stagehand \n https://github.com/reworkd/tarsier \n https://github.com/normal-computing/fuji-web \n https://github.com/web-infra-dev/midscene \n \n https://github.com/bytedance/ui-tars \n \n \n https://github.com/droidrun/droidrun \n 简繁转换  https://github.com/hddhyq/opencclint \n 识别键盘敲击键位  https://github.com/ZhuoZhuoCrayon/AcousticKeyBoard-Web \n EXCEL  https://github.com/PragmaticMachineLearning/probly \n PPT生成  https://github.com/sligter/LandPPT \n 生成知识图谱  https://github.com/xerrors/Yuxi-Know \n AI数字人  https://github.com/modstart-lib/aigcpanel \n 字幕翻译  https://github.com/rockbenben/subtitle-translator \n 浏览器自动化  https://github.com/nanobrowser/nanobrowser \n 会议记录  https://github.com/latentdream/watson.ai \n Code Review  https://github.com/Gijela/CR-Mentor \n 将音视频转文档  https://github.com/hanshuaikang/AI-Media2Doc \n 系统运维AI  https://github.com/derisk-ai/OpenDerisk \n AI笔记  https://github.com/fastrepl/hyprnote \n AI桌面  https://github.com/bytebot-ai/bytebot \n GPU聚合  https://github.com/exo-explore/exo \n OCR \n \n https://github.com/topics/ocr \n https://github.com/topics/ocr-recognition \n https://github.com/search?q=ocr \n \n \n ImportError: libGL.so.1: cannot open shared object file: No such file or directory \n \n apt install libgl1-mesa-glx  debian \n yum install mesa-libGL-devel  centos \n \n \n Could not find library geos_c or load any of its variants [\'libgeos_c.so.1\', \'libgeos_c.so\'] \n \n apt install libgeos-dev  debian \n yum install geos-devel  centos \n \n \n \n \n https://github.com/PearOCR \n \n https://pearocr.com \n \n \n https://github.com/alisen39/TrWebOCR # python3 -m venv .venv \nsource .venv/bin/activate \n wget  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n bash  Miniconda3-latest-Linux-x86_64.sh\n eval   " $( /root/miniconda3/bin/conda shell.bash hook ) " \nconda init\nconda create  -n  ocr  python = 3.7   -y \nconda activate ocr\nconda  install   --yes   --file  requirements.txt\nconda deactivate  # 退出当前环境 \ndeactivate \n \n \n 百度飞桨  https://github.com/PaddlePaddle/PaddleOCR \n \n https://github.com/RapidAI/RapidOCR \n https://github.com/MyMonsterCat/RapidOcr-Java \n https://gitee.com/lc_monster/rapid-ocr-java \n \n \n https://github.com/hiroi-sora/Umi-OCR \n https://github.com/miaomiaosoft/PandaOCR \n https://github.com/WenmuZhou/PytorchOCR \n https://github.com/microsoft/unilm \n https://github.com/ocropus \n https://sourceforge.net/projects/jocr \n https://github.com/cdli-gh/Cuneiform-OCR \n https://www.gnu.org/software/ocrad \n https://github.com/tesseract-ocr/tesseract \n \n https://github.com/nguyenq/tess4j \n https://sourceforge.net/projects/tess4j \n https://github.com/bytedeco/javacpp-presets \n https://github.com/manisandro/gImageReader \n \n \n https://github.com/datalab-to/surya \n https://github.com/scribeocr/scribeocr \n https://github.com/plantree/ocr-pwa \n https://github.com/ianzhao05/textshot \n https://github.com/mittagessen/kraken \n https://github.com/ai-ng/2txt \n https://github.com/facebookresearch/nougat \n https://github.com/Greedysky/TTKOCR \n https://github.com/robbyzhaox/myocr \n https://github.com/Calamari-OCR/calamari \n https://github.com/JaidedAI/EasyOCR \n https://github.com/mindee/doctr \n https://github.com/xushengfeng/eSearch \n https://github.com/Nutlope/llama-ocr \n https://github.com/Ucas-HaoranWei/GOT-OCR2.0 \n https://github.com/OpenGVLab/InternVL \n https://github.com/allenai/olmocr \n https://github.com/getomni-ai/zerox \n https://github.com/ocrmypdf/OCRmyPDF \n https://github.com/vikParuchuri/marker \n https://github.com/open-mmlab/mmocr \n https://github.com/clovaai/donut \n https://github.com/chineseocr \n \n https://github.com/docling-project/docling \n https://github.com/breezedeus/CnOCR \n \n \n https://github.com/allenai/olmocr \n https://github.com/xyTom/snippai \n https://github.com/ouyanghuiyu/chineseocr_lite python3  -m  venv venv\n source  venv/bin/activate\npip3  install  tornado numpy opencv_python onnxruntime Shapely pyclipper Pillow libtorch wheel\npython3 backend/main.py\n \n \n 语音识别  github.com/microsoft/NeuralSpeech \n 翻译  https://github.com/HIllya51/LunaTranslator \n https://github.com/PantsuDango/Dango-Translator \n https://github.com/ZGGSONG/STranslate \n https://github.com/OpenNMT \n \n https://github.com/argosopentech/argos-translate \n https://github.com/LibreTranslate/LibreTranslate \n https://github.com/jianchang512/ott \n \n \n https://github.com/yuka-friends/Windrecorder \n https://github.com/fruitbars/transbridge \n 说图解画  https://github.com/ShurshanX/AI-Image-Description \n 通用聊天机器人 \n \n 提示语  https://github.com/linexjlin/GPTs \n https://github.com/search?q=FreeGPT \n 提示词  https://github.com/PlexPt/awesome-chatgpt-prompts-zh \n https://github.com/x1xhlol/system-prompts-and-models-of-ai-tools \n https://github.com/bleedline/Awesome-gptlike-shellsite \n https://github.com/nomic-ai/gpt4all \n https://github.com/songquanpeng/one-api \n https://github.com/lencx/Noi \n \n \n https://github.com/ollama/ollama \n \n https://github.com/nilsherzig/LLocalSearch \n https://github.com/wandb/openui \n \n \n https://github.com/jafioti/luminal \n https://github.com/mudler/LocalAI \n https://github.com/Hyk260/PureChat \n https://github.com/NitroRCr/AIaW \n https://github.com/rag-web-ui/rag-web-ui \n https://github.com/TEN-framework/TEN-Agent \n https://github.com/Richasy/Rodel.Agent \n https://github.com/APIParkLab/APIPark \n https://github.com/fifteen42/localhostai \n https://github.com/CopilotKit/CopilotKit \n https://github.com/6677-ai/tap4-ai-webui \n https://github.com/lmstudio-ai \n https://github.com/QuivrHQ/quivr \n AI群回  https://github.com/maojindao55/botgroup.chat \n ChatGPT/Claude/Sage/Dragonfly/Vicuna/Koala/Dolly/ChatGLM/Alpaca \n https://github.com/cloud804d/mirrors-pengzhile-pandora \n \n https://github.com/pandora-next/deploy \n https://github.com/rawchat \n https://github.com/PlayMcBKuwu/chinagpt-4 \n \n \n https://github.com/PawanOsman/ChatGPT \n https://github.com/coze-dev \n \n https://github.com/elaninhust/coze-beautify \n https://github.com/deanxv/coze-discord-proxy \n https://github.com/catx-feitu/Coze-Discord-Bridge \n https://github.com/oddfar/coze-discord \n https://github.com/aurorax-neo/coze-chat-proxy \n https://github.com/Feiyuyu0503/free-dall-e-proxy \n https://github.com/NiuStar/coze_api \n https://github.com/CrazyCreativeDream/Real-Coze-API \n https://github.com/xiaobili/coze-to-gpt \n https://github.com/libaxuan/dalle-proxyCozeForvercel \n \n \n https://github.com/MagicalMadoka/openai-signup-tool \n https://github.com/adams549659584/go-proxy-bingai \n \n https://github.com/Harry-zklcdc/go-proxy-bingai \n \n \n https://github.com/gngpp/ninja \n https://github.com/LiLittleCat/awesome-free-chatgpt \n https://github.com/lzwme/chatgpt-sites \n https://github.com/xxxily/hello-ai \n https://chatgptdemo.net \n https://github.com/PromtEngineer/localGPT \n https://github.com/imartinez/privateGPT \n https://github.com/labring/FastGPT \n https://github.com/langgenius/dify \n https://github.com/lm-sys/FastChat \n https://github.com/smol-ai/GodMode \n https://github.com/mylxsw/aidea \n https://github.com/QwenLM/Qwen \n \n https://github.com/Alibaba-NLP/WebAgent \n \n \n https://github.com/Nanbeige/Nanbeige \n https://github.com/InternLM/InternLM \n https://github.com/yuchenlin/LLM-Blender \n https://github.com/snorkel-team \n https://github.com/imoneoi/openchat \n https://github.com/Yidadaa/ChatGPT-Next-Web \n https://github.com/lobehub/lobe-chat \n Docker系列 基于OpenAI API和Access Token自建ChatGPT \n https://github.com/lss233/chatgpt-mirai-qq-bot \n https://github.com/aaamoon/copilot-gpt4-service \n https://github.com/Chanzhaoyu/chatgpt-web \n https://github.com/ChatGPTNextWeb \n https://github.com/chatanywhere/GPT_API_free \n 网页生成  https://github.com/Yuyz0112/vx.dev \n https://codeium.com/waitlist/gpt-4 \n https://copilot.microsoft.com \n \n https://cocopilot.org/dash \n https://gitlab.com/LaelLuo/copilot_proxy \n \n \n https://www.bing.com/chat \n PaLM  https://github.com/google/gemma.cpp \n https://github.com/babaohuang/GeminiProChat \n https://github.com/loo-y/GeminiChatUp \n https://github.com/lchh5/GeminiPro-Next-Web \n https://github.com/bclswl0827/ChatGemini \n https://github.com/antergone/palm-proxy \n https://github.com/HanaokaYuzu/Gemini-API \n https://github.com/PublicAffairs/openai-gemini \n https://github.com/snailyp/gemini-balance \n https://github.com/u14app \n https://bard.google.com/chat \n https://github.com/yeahhe365/All-Model-Chat \n \n https://api-proxy.me \nhttps://ai.google.dev/models?hl=zh-cn \nhttps://aistudio.google.com/apikey \n curl   \\ \n -H   \'Content-Type: application/json\'   \\ \n -d   \'{ "prompt": { "text": "Write a story about a magic backpack"} }\'   \\ \n "https://generativelanguage.googleapis.com/v1beta3/models/text-bison-001:generateText?key=YOUR_API_KEY" \n\n curl   \\ \n -H   \'Content-Type: application/json\'   \\ \n -d   \'{"contents":[{"parts":[{"text":"Write a story about a magic backpack"}]}]}\'   \\ \n -X  POST https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key = YOUR_API_KEY\n \n \n https://github.com/MoonshotAI \n 编程搜索  https://github.com/cocktailpeanut/dalai \n https://github.com/gtoxlili/give-advice \n https://github.com/cocktailpeanut/dalai \n https://github.com/stochasticai/xturing \n https://github.com/codefuse-ai \n 本地搜索  https://github.com/nashsu/FreeAskInternet \n https://github.com/mlc-ai/web-llm \n https://github.com/ItzCrazyKns/Perplexica \n https://github.com/rashadphz/farfalle \n https://github.com/memfreeme/memfree \n https://github.com/DiscovAI/DiscovAI-search \n https://github.com/InternLM/MindSearch \n LLaMA  https://github.com/facebookresearch/llama \n https://github.com/kennethleungty/Llama-2-Open-Source-LLM-CPU-Inference \n https://github.com/ymcui/Chinese-LLaMA-Alpaca \n https://github.com/LlamaFamily/Llama-Chinese \n https://github.com/CrazyBoyM/llama3-Chinese-chat \n https://github.com/rustformers/llama-rs \n https://github.com/karpathy/llama2.c \n \n https://github.com/liltom-eth/llama2-webui \n \n \n https://github.com/ggerganov/llama.cpp \n https://github.com/lingo34/sambanova-ai-proxy \n https://github.com/Mozilla-Ocho \n https://github.com/LinkSoul-AI/Chinese-Llama-2-7b \n https://github.com/haotian-liu/LLaVA \n https://github.com/li-plus/chatglm.cpp \n https://github.com/OptimalScale/LMFlow \n https://github.com/01-ai/Yi \n https://github.com/dvmazur/mixtral-offloading \n https://github.com/janhq/jan \n https://github.com/openchatai/OpenCopilot \n https://github.com/xai-org/grok-1 \n Excel公式  https://github.com/weijunext/smart-excel-ai \n \n \n https://github.com/chatgpt-chinese-mirror \n https://github.com/claude-chinese \n 客户端  https://github.com/lpdswing/GPTFusion \n https://github.com/Bin-Huang/chatbox \n https://github.com/vincev/coze \n https://github.com/nanbingxyz/5ire \n 客服  https://github.com/lrhh123/ChatGPT-On-CS \n 可免费使用的AI平台，含ChatGPT，GPT-4，Claude等 \n 聊天界面  https://github.com/wzc520pyfm/ant-design-x-vue \n \n',createdTime:1761814324e3},{title:"容器虚拟机",frontmatter:{description:"https://github.com/dockur/windows\nDocker进阶实用命令\nhttps://sleele.com/category/docker/\nhttps://docs.microsoft.com/zh-cn/virtualization\nhttps://developer.ibm.com/zh/technologies/containers\n随笔分类 - Docker\n容器自动化构建 https://kany.me/tags/docker\n在 Windows 10 底下不使用 Hyper-V 安裝 Docker\nhttps://docs.microsoft.com/zh-cn/virtualization/windowscontainers/quick-start/set-up-environment\nhttps://github.com/badtuxx/DescomplicandoDocker\nhttps://github.com/yeasy/docker_practice\n日志查看 https://github.com/amir20/dozzle\n脚本引擎 https://github.com/dagger/dagger\n镜像下载 https://github.com/luckfu/docker_pull\n扫描显示网络节点 https://github.com/karam-ajaj/atlas",meta:[{name:"twitter:title",content:"容器虚拟机"},{name:"twitter:description",content:"https://github.com/dockur/windows\nDocker进阶实用命令\nhttps://sleele.com/category/docker/\nhttps://docs.microsoft.com/zh-cn/virtualization\nhttps://developer.ibm.com/zh/technologies/containers\n随笔分类 - Docker\n容器自动化构建 https://kany.me/tags/docker\n在 Windows 10 底下不使用 Hyper-V 安裝 Docker\nhttps://docs.microsoft.com/zh-cn/virtualization/windowscontainers/quick-start/set-up-environment\nhttps://github.com/badtuxx/DescomplicandoDocker\nhttps://github.com/yeasy/docker_practice\n日志查看 https://github.com/amir20/dozzle\n脚本引擎 https://github.com/dagger/dagger\n镜像下载 https://github.com/luckfu/docker_pull\n扫描显示网络节点 https://github.com/karam-ajaj/atlas"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/%E5%AE%B9%E5%99%A8%E8%99%9A%E6%8B%9F%E6%9C%BA.html"},{property:"og:type",content:"article"},{property:"og:title",content:"容器虚拟机"},{property:"og:description",content:"https://github.com/dockur/windows\nDocker进阶实用命令\nhttps://sleele.com/category/docker/\nhttps://docs.microsoft.com/zh-cn/virtualization\nhttps://developer.ibm.com/zh/technologies/containers\n随笔分类 - Docker\n容器自动化构建 https://kany.me/tags/docker\n在 Windows 10 底下不使用 Hyper-V 安裝 Docker\nhttps://docs.microsoft.com/zh-cn/virtualization/windowscontainers/quick-start/set-up-environment\nhttps://github.com/badtuxx/DescomplicandoDocker\nhttps://github.com/yeasy/docker_practice\n日志查看 https://github.com/amir20/dozzle\n脚本引擎 https://github.com/dagger/dagger\n镜像下载 https://github.com/luckfu/docker_pull\n扫描显示网络节点 https://github.com/karam-ajaj/atlas"},{property:"og:url",content:"https://bajins.com/PL/%E5%AE%B9%E5%99%A8%E8%99%9A%E6%8B%9F%E6%9C%BA.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"容器虚拟机"},{itemprop:"description",content:"https://github.com/dockur/windows\nDocker进阶实用命令\nhttps://sleele.com/category/docker/\nhttps://docs.microsoft.com/zh-cn/virtualization\nhttps://developer.ibm.com/zh/technologies/containers\n随笔分类 - Docker\n容器自动化构建 https://kany.me/tags/docker\n在 Windows 10 底下不使用 Hyper-V 安裝 Docker\nhttps://docs.microsoft.com/zh-cn/virtualization/windowscontainers/quick-start/set-up-environment\nhttps://github.com/badtuxx/DescomplicandoDocker\nhttps://github.com/yeasy/docker_practice\n日志查看 https://github.com/amir20/dozzle\n脚本引擎 https://github.com/dagger/dagger\n镜像下载 https://github.com/luckfu/docker_pull\n扫描显示网络节点 https://github.com/karam-ajaj/atlas"}]},regularPath:"/PL/%E5%AE%B9%E5%99%A8%E8%99%9A%E6%8B%9F%E6%9C%BA.html",relativePath:"PL/容器虚拟机.md",key:"v-52181dea",path:"/PL/%E5%AE%B9%E5%99%A8%E8%99%9A%E6%8B%9F%E6%9C%BA.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"其他容器技术",slug:"其他容器技术"},{level:2,title:"仓库镜像",slug:"仓库镜像"},{level:2,title:"Docker命令",slug:"docker命令"},{level:2,title:"Docker compose",slug:"docker-compose"},{level:2,title:"Dockerfile",slug:"dockerfile"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' 容器虚拟机 \n Flag 其他容器技术 仓库镜像 Docker命令 Docker compose Dockerfile \n Flag \n \n https://github.com/topics/cloudnative \n https://github.com/topics/openstack \n https://github.com/docker \n \n https://www.docker.com \n https://docs.docker.com \n Windows10以下安装:  https://github.com/docker/toolbox \n \n \n https://github.com/boot2docker \n \n \n 镜像集合  https://github.com/linuxserver \n \n https://docs.linuxserver.io/images-by-category \n \n \n 管理容器  https://github.com/louislam/dockge \n \n \n https://github.com/portainer/portainer \n \n Docker及图形化管理UI Portainer的搭建 \n \n \n 利用Docker实现后台项目模板化配置部署 \n https://github.com/earthly/earthly \n https://github.com/StefanScherer/docker-cli-builder \n https://github.com/skanehira/docui \n https://github.com/jesseduffield/lazydocker \n GUI  https://github.com/DockStation/dockstation \n 转换为可执行文件  https://github.com/rzane/docker2exe \n \n \n https://github.com/dockur/windows \n Docker进阶实用命令 \n https://sleele.com/category/docker/ \n https://docs.microsoft.com/zh-cn/virtualization \n https://developer.ibm.com/zh/technologies/containers \n 随笔分类 - Docker \n 容器自动化构建  https://kany.me/tags/docker \n 在 Windows 10 底下不使用 Hyper-V 安裝 Docker \n https://docs.microsoft.com/zh-cn/virtualization/windowscontainers/quick-start/set-up-environment \n https://github.com/badtuxx/DescomplicandoDocker \n https://github.com/yeasy/docker_practice \n 日志查看  https://github.com/amir20/dozzle \n 脚本引擎  https://github.com/dagger/dagger \n 镜像下载  https://github.com/luckfu/docker_pull \n 扫描显示网络节点  https://github.com/karam-ajaj/atlas \n \n \n 自己动手写docker  https://github.com/xianlubird/mydocker \n https://github.com/weaveworks/weave \n https://github.com/jessfraz/dockerfiles \n https://github.com/sickcodes/Docker-OSX \n Go编写的迷你Docker  https://github.com/shuveb/containers-the-hard-way \n \n Docker搭建私有仓库 \n \n 企业级Registry服务器  https://github.com/goharbor/harbor \n Docker 私有仓库搭建 \n 从零搭建docker私有仓库 \n 其他容器技术 \n \n https://hub.grapps.cn \n https://github.com/topics/containers \n OCI开放容器标准  https://github.com/opencontainers \n \n https://opencontainers.org \n \n \n 云原生技术图谱  https://github.com/cncf/landscape \n OCI,CRI,CRI-O,Containerd 名词解释 \n \n \n 策略  https://github.com/open-policy-agent \n 浏览映像每一层  https://github.com/wagoodman/dive \n https://github.com/falcosecurity \n https://github.com/draios \n https://github.com/istio/istio \n 从开发者的角度比较Kubernetes和Cloud Foundry \n k8s  https://github.com/kubernetes \n \n https://github.com/kubernetes-incubator \n https://github.com/kubernetes-sigs \n https://kubernetes.io \n 存储  https://github.com/openebs/openebs \n 软件包管理器  https://github.com/helm \n 脚本安装K8S集群  https://github.com/easzlab/kubeasz \n https://github.com/armosec/kubescape \n https://github.com/fanux/sealos \n https://github.com/clusternet/clusternet \n https://github.com/genuinetools \n https://github.com/tektoncd/pipeline \n https://github.com/rancher/fleet \n https://github.com/splunk/qbec \n https://github.com/kube-rs \n https://github.com/pipekit \n https://github.com/teamcode-inc/kubeorbit \n https://github.com/chronolaw/k8s_study \n https://github.com/vmware-tanzu \n https://github.com/lightrun-platform \n https://github.com/Rapha-Borges/oke-free \n https://github.com/k8zdev/k8z \n https://github.com/NVIDIA/gpu-operator \n https://github.com/eclipse-che/che \n https://github.com/operator-framework/java-operator-sdk \n https://github.com/TencentBlueKing/bk-bcs \n 监控  https://github.com/keptn \n https://github.com/KusionStack/karpor \n 负载均衡  https://github.com/metallb/metallb \n https://github.com/kumahq/kuma \n https://github.com/merbridge/merbridge \n https://github.com/linkerd/linkerd2 \n \n \n https://github.com/openshift \n https://github.com/rook/rook \n https://github.com/lensapp/lens \n https://github.com/jenkins-x \n https://github.com/kinvolk \n https://github.com/dapr \n https://github.com/dokku \n https://github.com/cloudfoundry \n \n https://github.com/cloudfoundry-incubator \n https://www.cloudfoundry.org \n \n \n https://github.com/distribution/distribution \n cloud-foundry 的动态 - SegmentFault 思否 \n https://www.terraform.io \n https://github.com/rancher/rancher \n https://github.com/mesosphere/marathon \n Packer \n 谷歌、IBM、微软、Pivotal、SAP、SUSE、Swisscom、GE \n https://github.com/wekan/wekan \n https://github.com/google/gvisor \n https://github.com/fnproject \n https://github.com/verrazzano \n https://github.com/firecracker-microvm/firecracker \n \n \n systemd-nspawn以及container的学习 \n https://github.com/eclipseo \n https://github.com/coreos \n Linux Container  https://github.com/lxc/lxc \n \n https://linuxcontainers.org \n https://github.com/tailhook/unshare \n \n \n podman  https://github.com/containers \n \n https://github.com/lxc \n https://github.com/containernetworking/cni \n https://github.com/AdaptiveScale/lxdui \n https://github.com/iongion/container-desktop \n https://github.com/rancher-sandbox/rancher-desktop \n https://github.com/marhkb/pods \n 再见 Docker，是时候拥抱下一代容器工具了 \n podman初试-和docker对比 \n \n \n https://github.com/lxc/incus \n https://github.com/containerd/containerd \n \n \n https://github.com/bitnami/containers \n \n \n https://github.com/orbstack \n https://github.com/moby/moby \n https://github.com/coreos \n https://github.com/cri-o/cri-o \n https://github.com/kata-containers \n \n https://github.com/hyperhq \n \n https://www.hyperhq.com \n \n \n https://github.com/clearcontainers \n \n \n https://github.com/chaosblade-io/chaosblade \n https://github.com/alibaba/pouch \n https://github.com/singularity/singularity \n 集群管理器  https://github.com/apache/mesos \n \n https://github.com/mesos \n \n \n https://github.com/OpenVZ \n https://github.com/thijsvanloef/palworld-server-docker \n https://github.com/ChrispyBacon-dev/DockFlare \n \n 运行时 \n \n https://github.com/topics/oci \n \n \n https://github.com/utam0k/youki \n https://github.com/containers/crun \n https://github.com/oracle/railcar \n https://github.com/opencontainers/runc \n https://github.com/abiosoft/colima \n https://github.com/lima-vm/lima \n 仓库镜像 \n \n 查找最快的docker镜像:  https://github.com/silenceshell/docker_mirror \n \n \n Docker官方映像  https://github.com/docker-library \n https://hub.docker.com \n https://hub.daocloud.io \n \n \n https://www.daocloud.io/mirror \n https://github.com/harrisonwang/docxy \n https://github.com/you8023/docker_images_sync \n https://github.com/sky22333/hubproxy \n \n \n 以下镜像地址需要直接配置在docker中，不能通过浏览器访问 \n \n \n 阿里云  https://cr.console.aliyun.com \n \n https://alzgoonw.mirror.aliyuncs.com \n https://jvqgqnis.mirror.aliyuncs.com \n https://3laho3y3.mirror.aliyuncs.com \n https://cty6v5sm.mirror.aliyuncs.com \n \n \n ustc中国科技大学  https://docker.mirrors.ustc.edu.cn \n 网易  http://hub-mirror.c.163.com \n Docker 官方中国区  https://registry.docker-cn.com \n Azure 中国镜像  https://dockerhub.azk8s.cn \n 七牛云加速器  https://reg-mirror.qiniu.com \n 腾讯云  https://mirror.ccs.tencentyun.com \n Docker命令 \n退出docker容器 \n如果容器内部没有任何程序运行, 一旦执行exit, 退出容器时, 容器将结束运行 \n exit \n查看运行中的容器 \n docker   ps \n查看全部的容器, 包括运行中和已停止运行的容器 \n docker   ps   -a \n通过容器名称删除已经停止运行的容器(test-centos为docker run命令中给容器的命名) \n docker   rm  test-centos\n通过容器ID删除已经停止运行的容器,与上面的命令效果一样, 060e是containerID的前4位 \n docker   rm  060e\n强制删除状态为Up, 正在运行中的容器 \n docker   rm   -f  test-centos\n Docker compose \n \n Docker Compose概述 \n Compose文件参考 \n docker-compose.yml 配置文件编写详解 \n Docker Compose 详解 \n Docker Compose 配置文件详解 \n docker run 和 docker-compose 配置挂载 Volume 并运行 nginx \n https://github.com/Haxxnet/Compose-Examples \n \n \n Compose 文件是一个 YAML , 主要定义了  services , networks  和  volumes ，其默认路径是  ./docker-compose.yml \n \n \n service  定义包含了应用与每个容器的配置，很像给  docker run  传参，同样，\n network  和  volume  对于  docker network create  和  docker volume create  也类似。 \n \n \n 像在 Dockerfile （eg:  CMD  ,  EXPOSE  ,  VOLUME  ,  ENV ）可以使用的选项也可以在  docker run 参数中使用，\n这样在  docker-compose.yml  里就不需要再次指定了。 \n \n \n docker-compose.yml  里可以使用环境变量，类似  Bash  格式  ${VARIABLE} \n \n \n composer  文件格式有两种版本：\n \n version 1 : 已经废弃， 不支持 volumes  和  networks ，默认  version key  是省略的。 \n version 2 : 推荐的格式，目前是最新的，需要通过  version \'2\'  指定。 \n \n \n \n ports \n \n 暴露端口。既可以是  HOST:CONTAINER  ，也可以只用容器端口(host端口会随机选取)。\n当以  HOST:CONTAINER  的形式映射端口的时候，当容器的端口低于60的时候可能会遇到错误，\n因为YAML会解析 xx:yy 数字为60。 基于这个原因，我们推荐明确指定端口映射用字符串的形式。 \n \n volumes \n \n 挂载指定的路径或者 named volumes , 可以在主机上指定一个路径 HOST:CONTAINER ,或者一个可访问的 HOST:CONTAINER:ro 。 \n Dockerfile \n \n Dockerfile参考 \n 编写Dockerfile的最佳实践 \n Dockerfile 基本命令详解 \n Docker Dockerfile指令大全 \n \n \n 创建 Dockerfile 文件 \n \n vi  Dockerfile\n \n \n 添加内容 \n使用的基础镜像 \n FROM  centos:7 \n作者信息 \n MAINTAINER  bajins  "claer@bajins.com" \n创建目录 \n RUN  mkdir -p /data/java/jdk1.7.0_80 \n把当前目录下的jdk文件夹添加到镜像 \n ADD  jdk1.7.0_80 /data/java/jdk1.7.0_80 \n创建tomcat目录 \n RUN  mkdir -p /data/java/tomcat-8080 \n把当前目录下的tomcat文件夹添加到镜像 \n ADD  tomcat-8080 /data/java/tomcat-8080 \n添加环境变量 \n ENV  JAVA_HOME /data/java/jdk1.7.0_80 \n ENV  CATALINA_HOME /data/java/tomcat-8080 \n ENV  PATH  $PATH : $JAVA_HOME /bin: $CATALINA_HOME /bin \n暴露容器端口 \n EXPOSE  8080 \n EXPOSE  8090 \n启动时运行tomcat \n CMD  [ "/data/java/tomcat-8080/bin/catalina.sh" , "run" ] \n \n FROM  centos:7 \n\n #安装wget工具 \n RUN  yum -y install wget \n\n #下载并且安装jdk设置环境变量 \n COPY  jdk-8u201-linux-x64.rpm jdk-8u201-linux-x64.rpm \n RUN  rpm -ivh jdk-8u201-linux-x64.rpm \n ENV  JAVA_HOME /usr/java/latest/ \n ENV  PATH= $JAVA_HOME /bin: $PATH \n ENV  CLASSPATH=.: $JAVA_HOME /lib/dt.jar: $JAVA_HOME /lib/tools.jar \n RUN  rm -rf jdk-8u201-linux-x64.rpm \n\n #时区中文等处理 \n RUN  cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &&  \\ \n    echo  \'Asia/Shanghai\'  >/etc/timezone \n RUN  yum -y install kde-l10n-Chinese \n\n #配置显示中文 \n RUN  localedef -c -f UTF-8 -i zh_CN zh_CN.utf8 \n ENV  LC_ALL zh_CN.utf8 \n RUN  echo  "export LC_ALL=zh_CN.utf8"  >> /etc/profile \n \n ',createdTime:1761814324e3},{title:"技术概念",frontmatter:{description:"RESTful是一种架构风格，其核心是面向资源，更简单；而WebService底层SOAP协议，主要核心是面向活动；两个都是通过web请求调用接口",meta:[{name:"twitter:title",content:"技术概念"},{name:"twitter:description",content:"RESTful是一种架构风格，其核心是面向资源，更简单；而WebService底层SOAP协议，主要核心是面向活动；两个都是通过web请求调用接口"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/%E6%8A%80%E6%9C%AF%E6%A6%82%E5%BF%B5.html"},{property:"og:type",content:"article"},{property:"og:title",content:"技术概念"},{property:"og:description",content:"RESTful是一种架构风格，其核心是面向资源，更简单；而WebService底层SOAP协议，主要核心是面向活动；两个都是通过web请求调用接口"},{property:"og:url",content:"https://bajins.com/PL/%E6%8A%80%E6%9C%AF%E6%A6%82%E5%BF%B5.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"技术概念"},{itemprop:"description",content:"RESTful是一种架构风格，其核心是面向资源，更简单；而WebService底层SOAP协议，主要核心是面向活动；两个都是通过web请求调用接口"}]},regularPath:"/PL/%E6%8A%80%E6%9C%AF%E6%A6%82%E5%BF%B5.html",relativePath:"PL/技术概念.md",key:"v-f843628c",path:"/PL/%E6%8A%80%E6%9C%AF%E6%A6%82%E5%BF%B5.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"编程范式",slug:"编程范式"},{level:2,title:"设计模式及原则",slug:"设计模式及原则"},{level:2,title:"数据结构与算法",slug:"数据结构与算法"},{level:3,title:"算法复杂度",slug:"算法复杂度"},{level:2,title:"迭代循环遍历递归",slug:"迭代循环遍历递归"},{level:2,title:"directory和folder区别",slug:"directory和folder区别"},{level:2,title:"进程/线程/协程",slug:"进程-线程-协程"},{level:2,title:"缓存",slug:"缓存"},{level:2,title:"锁和事务",slug:"锁和事务"},{level:2,title:"定时任务",slug:"定时任务"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' 技术概念 \n Flag 编程范式 设计模式及原则 数据结构与算法 算法复杂度 迭代循环遍历递归 directory和folder区别 进程/线程/协程 缓存 锁和事务 定时任务 \n Flag \n \n RESTful是一种架构风格，其核心是面向资源，更简单；而WebService底层SOAP协议，主要核心是面向活动；两个都是通过web请求调用接口 \n \n \n 端口映射和端口转发的区别？ \n Java的lambda表达式和JavaScript的箭头函数 \n 图片与格式（上）BMP、JPEG、PNG、EXIF、RGB、色深、像素、分辨率 \n \n \n 注解(也称为元数据)就是代码中的特殊标记，为我们在代码中添加信息提供了一种形式化的方法，使我们可以在稍后某个时刻非常方便的使用这些数据。 \n \n Graceful/Gentle Exit（优雅退出）：指程序结束前，等待当前任务完成或做一些记录后再完全退出 \n 逃逸分析（Escape Analysis） \n \n 是编译器用来决定程序中值的位置的过程。编译器执行静态代码分析，以确定一个构造体的实例化值是否会逃逸到堆 \n \n \n 逃逸是指在某个方法之内创建的对象，除了在方法体之内被引用之外，还在方法体之外被其它变量引用到；\n这样带来的后果是在该方法执行完毕之后，该方法中创建的对象将无法被GC回收，由于其被其它变量引用。\n正常的方法调用中，方法体中创建的对象将在执行完毕之后，将回收其中创建的对象；故由于无法回收，即成为逃逸。 \n \n \n Java中的逃逸分析 \n 【译】Go 语言机制之逃逸分析 \n \n 微服务、Service Mesh 和 Serverless \n \n Fuction as a Service 无服务器计算，目的是希望应用不用一直运行着，只有当有请求来的时候，才快速启动这个应用\n，然后请求一走就停掉这个应用，换句话说，不让应用在背景程式持续的启动着，而是有需要的时候才开启他 \n \n \n https://github.com/devsapp \n 编程范式 \n \n 编程范型、编程范式或程序设计法（Programming Paradigm）是某种编程语言典型的编程风格或者说是编程方式 \n \n \n https://en.wikipedia.org/wiki/Programming_paradigm \n https://en.wikipedia.org/wiki/Foreign_function_interface \n https://github.com/geekxh/hello-algorithm \n \n \n 范类：强类型/弱类型，动态语言/静态语言，编译/解释 \n \n \n 过程化（命令式）编程 \n 事件驱动编程 \n 面向对象编程 \n 链式编程 \n 函数式编程 \n 并发编程 \n 约束编程 \n 数据流编程（Dataflow programming） \n 声明性编程 \n 分布式的编程 \n 泛型编程 \n 逻辑编程 \n 元编程 \n 响应式/反应式编程（Reactive programming） \n 面向方面/面向切面编程（AOP） \n 过程式编程 \n 元编程（Metaprogramming） \n 宏（Macro） \n 设计模式及原则 \n \n Java设计模式：23种设计模式全面解析（超级详细） \n https://github.com/topics/design-patterns \n https://github.com/topics/principles \n 设计模式  https://github.com/search?q=sourcemaking \n \n https://github.com/RefactoringGuru \n \n https://refactoringguru.cn/design-patterns \n \n \n https://sourcemaking.com/design_patterns \n \n \n Java实现的设计模式  https://github.com/iluwatar/java-design-patterns \n https://github.com/hiparker/tank-design \n https://github.com/ccqy66/java-design-patterns-cn \n https://github.com/gavin66/head-first-design-patterns-Java \n https://github.com/youlookwhat/DesignPattern \n C++ 设计模式  https://github.com/JakubVojvoda/design-patterns-cpp \n Go  https://github.com/mohuishou/go-design-pattern \n https://github.com/crazybber/awesome-patterns \n JS  https://github.com/ryouaki/ECMAScript2016-Design-Patterns \n \n \n 驱动领域设计  https://github.com/Sairyss/domain-driven-hexagon \n 数据结构与算法 \n \n https://github.com/topics/datastructures \n https://djhworld.github.io/hyperloglog \n \n \n 主流语言数据结构和算法学习  https://github.com/TheAlgorithms \n https://github.com/krahets \n https://github.com/liuxinyu95/AlgoXY \n https://github.com/idisfkj/daily_algorithm \n https://github.com/Py-Contributors/AlgorithmsAndDataStructure \n https://github.com/krahets/hello-algo \n https://github.com/krahets/LeetCode-Book \n Java  https://github.com/williamfiset/Algorithms \n https://github.com/Dairongpeng/algorithm-note \n https://github.com/kdn251/interviews \n https://github.com/yomorun/hashids-java \n C++/Python  https://github.com/akzare/Algorithms \n https://github.com/qingyujean/data-structure \n https://github.com/Learn-Algorithm \n Rust  https://github.com/TianyiShi2001/Algorithms \n JavaScript  https://github.com/trekhleb/javascript-algorithms \n https://github.com/chefyuan/algorithm-base \n https://github.com/XPoet/js-data-structures-and-algorithms \n https://github.com/noransu/javascript-DSAA \n https://github.com/huangyangquang/Algorithm \n Go  https://github.com/hunterhug/goa.c \n https://github.com/EndlessCheng/codeforces-go \n 概率过滤器  https://github.com/bdupras/filter-tutorial \n 算法可视化  https://github.com/selfboot/ai_gallery \n https://github.com/mszula/visual-sorting \n \n \n B 树和数据库索引 \n 必学十大经典排序算法 \n 数据结构与算法教程，数据结构C语言版教程 \n AC自动机 算法详解(图解)及模板 \n 预排序遍历树算法(MPTT) \n \n 数据结构大致包含以下几种存储结构 ： \n \n 线性表，还可细分为顺序表、链表、栈和队列； \n 树结构，包括普通树，二叉树，线索二叉树等； \n 图存储结构； \n \n \n 数组、字符串、队列、栈、链表、集合、哈希表、二叉树 \n 算法复杂度 \n \n O(1) 、  O(n) 、  O(logn) 、  O(nlogn)  可表示时间复杂度，也可以表示空间复杂度 \n \n \n O 加上 () 里面是一个函数 f() 即 O(f()) ，函数指明某个算法的耗时/耗空间与数据增长量之间的关系。其中的 n 代表输入数据的量。 \n \n \n 如果 ax=N （ a>0 ，且 a≠1 ），那么数 x 叫做以 a 为底 N 的对数，记作 x=logaN ，读作以 a 为底 N 的对数，其中 a 叫做对数的底数， N 叫做真数。 \n \n \n 算法复杂度中的O(logN)底数是什么 \n 时间复杂度o(1), o(n), o(logn), o(nlogn) \n 十大经典排序算法及比较与分析 ( 动画演示 ) ( 可视化工具 ) \n \n \n \n \n 类型 \n 意义 \n 举例 \n \n \n \n \n O(1) \n 最低复杂度，常量值也就是耗时/ 耗空间与输入数据大小无关，无论输入数据增大多少倍，耗时/耗空间都不变 \n 哈希算法就是典型的O(1)时间复杂度，无论数据规模多大，都可以在一次计算后找到目标 (不考虑冲突的话) \n \n \n O(n) \n 数据量增大几倍，耗时也增大几倍 \n 遍历算法 \n \n \n O(n^2) \n 对n个数排序，需要扫描 n x n 次 \n 冒泡排序 \n \n \n O(logn) \n 当数据增大n倍时，耗时增大logn 倍(这里的log是以2为底的，比 如，当数据增大256倍时，耗时只增大8倍, \n 二分查找就是O(logn)的算法，每找一次排除一半的可能，256个数据中查找只要找8次就可以找到目标 \n \n \n O(nlogn) \n 就是n乘以logn,当数据增大256倍 时，耗时增大256*8=2048倍。这个复杂度高于线性低于平方。 \n 归并排 序就是O(nlogn)的时间复杂度 \n \n \n \n \n \n \n 数据结构 \n 查找（平均） \n 查找（最坏） \n 插入（平均） \n 插入（最坏） \n 删除（平均） \n 删除（最坏） \n 遍历 \n \n \n \n \n 数组 \n O(N) \n O(N) \n O(N) \n O(N) \n O(N) \n O(N) \n \n \n \n 有序数组 \n O(logN) \n O(n) \n O(N) \n O(N) \n O(N) \n O(N) \n O(N) \n \n \n 链表 \n O(N) \n O(N) \n O(1) \n O(1) \n O(1) \n O(1) \n \n \n \n 有序链表 \n O(N) \n O(N) \n O(N) \n O(N) \n O(1) \n O(1) \n O(N) \n \n \n 二叉查找树 \n O(logN) \n O(N) \n O(logN) \n O(N) \n O(logN) \n O(N) \n O(N) \n \n \n 红黑树 \n O(logN) \n O(logN) \n O(logN) \n O(logN) \n O(logN) \n O(logN) \n O(N) \n \n \n 平衡树 \n O(logN) \n O(logN) \n O(logN) \n O(logN) \n O(logN) \n O(logN) \n O(N) \n \n \n 二叉堆 优先队列 \n O(1) \n O(1) \n O(logN) \n O(logN) \n O(logN) \n O(logN) \n O(N) \n \n \n 哈希表 \n O(1) \n O(1) \n O(1) \n O(1) \n O(1) \n O(1) \n O(N) \n \n \n \n \n https://github.com/labuladong/fucking-algorithm \n https://github.com/maemual/raft-zh_cn \n \n \n 排序、双指针、查找、分治、动态规划、递归、回溯、贪心、位运算、DFS、BFS、图 \n 迭代循环遍历递归 \n \n 循环（loop），指的是在满足条件的情况下，重复执行同一段代码。比如，while语句。\n \n 循环则即能对应集合，列表，数组等，也能对执行代码进行操作。 \n \n \n 遍历（traversal），指的是按照一定的规则访问树形结构中的每个节点，而且每个节点都只访问一次。\n \n 遍历同迭代一样，也不能对执行代码进行遍历。 \n \n \n 迭代（iterate），指的是按照某种顺序逐个访问列表中的每一项。比如，for语句。\n \n 迭代只能对应集合，列表，数组等。不能对执行代码进行迭代。 \n 环结构，从初始状态开始，每次迭代都遍历这个环，并更新状态，多次迭代直到到达结束状态 \n \n \n 递归（recursion），指的是一个函数不断调用自身的行为。比如，以编程方式输出著名的斐波纳契数列。\n \n 线性递归(单向递归)和尾递归（tail recursion）。单向递归 → 尾递归 → 迭代 \n 树结构，从字面可以其理解为重复“递推”和“回归”的过程，当“递推”到达底部时就会开始“回归”，其过程相当于树的深度优先遍历 \n \n \n \n \n 理论上递归和迭代时间复杂度方面是一样的，但实际应用中（函数调用和函数调用堆栈的开销）递归比迭代效率要低。 \n \n 将递归方案转换为迭代的方案我们通常只需要两步即可： \n \n 我们在函数中使用堆或队列数据结构，以取代系统调用栈的作用。在每一次递归出现时，我们简单地将参数作为一个新元素压入到我们创建的数据结构中，来代替递归调用。 \n 另外，我们在之前创建的数据结构上做一个循环操作。递归的调用链就被迭代的循环操作替代了。 \n directory和folder区别 \n \n directory  目录，简称  dir \n folder  文件夹 \n \n \n 两者一般情况下是可以相互通用的，都表示文件夹的意思；但是细细纠来，还是有区别的： \n \n \n Hi, please go to D:\\files\\images\\directory, and then double click and open folder "travelImg". \n \n \n 看完上面那句话，相信大家有点知道意思了： \n \n \n directory  也是一个 folder ，但是我们在说一个 directory 的时候，通常指它含有 路径 的意思在里面； \n \n \n folder  一般情况，是说某一个文件夹，通常不包含 路径 的意思，比如：双击这个文件夹，在里面找找看。 \n 进程/线程/协程 \n \n 线程安全 \n \n \n DRF-SC：无数据竞争的程序以顺序一致的方式执行 \n \n \n 通道 (编程) - 维基百科 \n 【操作系统】进程间通信 \n https://research.swtch.com/mm \n \n [译]编程语言内存模型 \n 【译文】硬件内存模型 \n 【译文】编程语言内存模型 \n 【译文】Go语言内存模型 \n \n \n 【Golang】并发编程 \n SC-DRF \n 内存屏障与内存模型 \n [译] 编程语言中的 6 种内存模型（2016） \n 利特尔定律 \n 如何理解：同步、异步、阻塞、非阻塞、BIO、NIO、AIO？ \n \n \n happens-before \n memory barrier \n \n \n 在操作系统中，线程是最小的执行单元，进程是最小的资源管理单元。进程和线程由操作系统管理，协程由应用程序管理。 \n \n \n 协程(Coroutine)编译器级的，进程(Process)和线程(Thread)操作系统级的， Process  ->  Thread  ->  Coroutine \n \n 并发 \n \n 同一时间段有几个程序都处于已经启动到运行完毕之间，并且这几个程序都在同一个处理机上运行，并发的两种关系是同步和互斥； \n \n \n 编程语言是如何实现并发的之并发模型篇 \n 编程语言是如何实现并发的之操作系统篇 \n \n \n 结构化并发（Structured Concurrency） \n \n 并行 \n \n 单处理器中进程被交替执行，表现出一种并发的外部特征；在多处理器中，进程可以交替执行，还能重叠执行，\n实现并行处理，并行就是同事发生的多个并发事件，具有并发的含义，但并发不一定是并行，也就是说事件之间不一定要同一时刻发生； \n \n 互斥 \n \n 进程之间访问临界资源时相互排斥的现象； \n \n 同步 \n \n 进程之间存在依赖关系，一个进程结束的输出作为另一个进程的输入。具有同步关系的一组并发进程之间发送的信息称为消息或者事件； \n \n 异步 \n \n 和同步相对，同步是顺序执行，而异步是彼此独立，在等待某个事件的过程中继续做自己的事，不要等待这一事件完成后再工作。\n线程是实现异步的一个方式，异步是让调用方法的主线程不需要同步等待另一个线程的完成，从而让主线程干其他事情。 \n \n \n Rust: async/await/tokio/async-std \n Go: goroutines/sync.WaitGroup \n Java: Future/CompletableFuture/parallelStream/RecursiveTask \n C#: async/await/Task/BeginInvoke/BackgroundWorker \n Python: async/await/asyncio \n Node.js: async/await/Promise \n Elixir: Task \n Erlang: spawn \n \n 异步和线程 \n \n 不是同等关系，异步是目的，线程只是实现异步的一个手段，实现异步可以采用线程技术或者交给其他进程来处理 \n \n 进程/系统进程/平台进程 \n 线程/平台线程/内核线程/系统线程 \n \n 线程 - 维基百科 \n Thread (computing) - Wikipedia \n \n \n 多线程是进程中并发运行的一段代码，能够实现线程之间的切换执行；应该被池化，利用线程池减少线程创建的开销。 \n \n \n 作用域值（Scoped Values） \n \n \n 别再纠结线程池大小/线程数量了，没有固定公式的 \n \n \n IO密集型线程数量控制 \n \n \n 线程数 = CPU核心数/(1-阻塞系数) \n \n \n Blocking Coefficient(阻塞系数)（一般为0.8~0.9之间） = 阻塞时间/(阻塞时间+使用CPU的时间) \n \n \n 计算密集型线程数量控制 \n \n \n CPU有超线程：线程数 = CPU内核线程数*2 \n CPU无超线程：线程数 = CPU核数+1 \n \n 协程/纤程/绿色线程/虚拟线程/用户线程/微线程/轻量进程 \n \n 绿色线程 - 维基百科 \n 纤程 - 维基百科 \n 协程 - 维基百科 \n Protothreads - 维基百科 \n 轻量级内核线程 - 维基百科 \n 轻量级进程 - 维基百科 \n 延续 - 维基百科 \n https://github.com/topics/coroutines \n https://github.com/topics/coroutine \n https://github.com/topics/async \n https://github.com/topics/async-await \n https://github.com/topics/asynchronous \n https://github.com/search?q=Protothreads \n \n \n 怎么理解coroutine ？ \n coroutine协程详解 \n 协程 \n 图解 Goroutine（译） \n go语言的goroutine（协程） \n go 协程(Goroutine)详解 \n goroutine \n https://www.erlang.org/doc/getting_started/conc_prog.html \n https://www.erlang.org/doc/reference_manual/processes.html \n https://github.com/taskflow/taskflow \n https://github.com/lewissbaker/cppcoro \n \n \n 协程（微线程、纤程、绿色线程、虚拟线程、用户线程、微线程）。是一种轻量级的用户态线程，实现的是非抢占式的调度，即由当前协程切换到其他协程由当前协程来控制。\n协程本身可以做在用户态，每个协程的体积比线程要小得多，因此一个进程可以容纳数量相当可观的协程 \n \n \n coroutine解决的是"协作式多任务" \n visitor（访问者）模式解决的是"对修改关闭，对扩展开放", "它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作" \n \n \n Java语言并没有对协程的原生支持，但是某些开源框架模拟出了协程的功能， Project Loom   AJDK-Wisp \n \n \n Java虚拟线程  https://openjdk.org/jeps/425 \n 虚拟线程：大规模 Java 应用的新基石 \n 异步时代-java的协程路在何方 \n 次时代Java编程（一）：Java里的协程 \n java协程框架quasar和kotlin中的协程 \n \n 信号量 \n 进程间通信之-信号量semaphore \n \n 信号量的使用主要是用来保护共享资源，使得资源在一个时刻只有一个进程（线程）所拥有。 \n \n \n 信号量的值为正的时候，说明它空闲。所测试的线程可以锁定而使用它。若为0，说明它被占用，测试的线程要进入睡眠队列中，等待被唤醒。 \n \n 上下文切换 \n 什么是进程、线程、协程 \n \n 进程的切换者是操作系统，切换时机是根据操作系统自己的切换策略，用户是无感知的。\n进程的切换内容包括页全局目录、内核栈、硬件上下文，切换内容保存在内存中。进程切换过程是由“用户态到内核态到用户态”的方式，切换效率低。 \n \n \n 线程的切换者是操作系统，切换时机是根据操作系统自己的切换策略，用户无感知。\n线程的切换内容包括内核栈和硬件上下文。线程切换内容保存在内核栈中。线程切换过程是由“用户态到内核态到用户态”， 切换效率中等。 \n \n \n 协程的切换者是用户（编程者或应用程序），切换时机是用户自己的程序所决定的。\n协程的切换内容是硬件上下文，切换内存保存在用户自己的变量（用户栈或堆）中。协程的切换过程只有用户态，即没有陷入内核态，因此切换效率高。 \n \n \n 多线程并不一定是要在多核处理器才支持的，就算是单核也是可以支持多线程的。 \n CPU 通过给每个线程分配一定的时间片，由于时间非常短通常是几十毫秒，所以 CPU 可以不停的切换线程执行任务从而达到了多线程的效果。 \n 但是由于在线程切换的时候需要保存本次执行的信息，在该线程被 CPU 剥夺时间片后又再次运行恢复上次所保存的信息的过程就称为上下文切换。 \n \n \n 上下文切换是非常耗效率的。通常有以下解决方案: \n \n \n 采用无锁编程，比如将数据按照  Hash(id)  进行取模分段，每个线程处理各自分段的数据，从而避免使用锁。 \n 采用 CAS(compare and swap) 算法，如  Atomic  包就是采用 CAS 算法。 \n 合理的创建线程，避免创建了一些线程但其中大部分都是处于  waiting  状态，因为每当从  waiting  状态切换到  running  状态都是一次上下文切换。 \n 缓存 \n \n Cache 和 Buffer 都是缓存，主要区别是什么？ \n 缓冲区(buffer)与缓存(cache) \n 缓冲和缓存 \n \n \n 缓存穿透、缓存击穿和缓存雪崩实践 \n \n \n 缓存穿透 \n \n \n 在高并发下，查询一个不存在的值时，缓存不会被命中，导致大量请求直接落到数据库上，如活动系统里面查询一个不存在的活动。 \n \n \n 缓存击穿 \n \n \n 在高并发下，对一个特定的值进行查询，但是这个时候缓存正好过期了，缓存没有命中，导致大量请求直接落到数据库上，如活动系统里面查询活动信息，但是在活动进行过程中活动缓存突然过期了。 \n \n \n 缓存雪崩 \n \n \n 在高并发下，大量的缓存key在同一时间失效，导致大量的请求落到数据库上，如活动系统里面同时进行着非常多的活动，但是在某个时间点所有的活动缓存全部过期。 \n \n \n 缓存命中率 \n \n \n 命中：直接从缓存中读取到想要的数据。 \n 不命中：缓存中没有想要的数据，还需要到数据库进行一次查询才能读取到想要的数据。 \n \n \n 缓存丢失 \n \n 常见解决方案 \n \n 直接缓存NULL值（时间不能过长，防止影响正常值） \n 过滤器（如白名单，符合某种规则等） \n 限流 \n 缓存预热 \n 分级缓存 \n 缓存永远不过期 \n \n 常见算法 \n \n Least Frequently Used (LFU) \n Least Recently Used (LRU) \n Least Recently Used2 (LRU2) \n Two Queue (2Q) \n 锁和事务 \n 锁 \n \n 单进程的系统中，存在多线程同时操作一个公共变量，此时需要加锁对变量进行同步操作，保证多线程的操作线性执行消除并发修改。\n解决的是单进程中的多线程并发问题。 \n \n 分布式锁 \n \n 只要的应用场景是在集群模式的多个相同服务，可能会部署在不同机器上，解决进程间安全问题，防止多进程同时操作一个变量或者数据库。\n解决的是多进程的并发问题。 \n \n 事务 \n \n 事物概念 \n \n \n 解决一个会话过程中，上下文的修改对所有数据库表的操作要么全部成功，要不全部失败。所以应用在service层。\n解决的是一个会话中的操作的数据一致性。 \n \n 分布式事务 \n \n 解决一个联动操作，比如一个商品的买卖分为:（1）添加商品到购物车，（2）修改商品库存-1；\n此时购物车服务和商品库存服务可能部署在两台电脑，这时候需要保证对两个服务的操作都全部成功或者全部回退。\n解决的是组合服务的数据操作的一致性问题。 \n \n \n 简单聊聊事务补偿机制 \n Paxos和Raft的前世今生 \n https://github.com/raft/raft.github.io \n \n https://github.com/ongardie/raft.tla \n http://lamport.azurewebsites.net/tla/tla.html \n Chaos 测试下的若干 NebulaGraph Raft 问题分析 \n 定时任务 \n 分布式定时任务解决方案 \n \n 分时方案：严格划分时间片，交替运行计划任务，当主系统宕机后，备用系统仍然工作，但处理初期被拉长 \n HA（High Availability）高可用方案：正常情况下主系统工作，备用系统守候，心跳检测发现主系统出现故障备用系统启动 \n 多路心跳方案：\n \n 采用多路心跳，做服务级，进程级的，IP和端口级别的心跳检测，正常情况是主系统工作，备用系统守候 \n 心跳检测主系统出现故障，备用系统启动，当再次检测到主系统工作，则将执行权交回主系统 \n \n \n 任务抢占方案：\n \n A，B两台服务器同时工作，启动需要存在一前一后，谁先启动谁率先加锁，其他服务器只能等待 \n 他们同时对互斥锁进行监控，一旦发现锁被释放，其他服务那个先抢到，那个运行，运行前加排他锁。 \n \n \n 任务轮询或任务轮询+抢占排队方案：\n \n 每个服务器首次启动时加入队列； \n 每次任务运行首先判断自己是否是当前可运行任务，如果是便运行； \n 如果不是当前运行的任务，检查自己是否在队列中，如果在，便推出，如果不在队列中，便键入队列 \n \n \n \n',createdTime:1761814324e3},{title:"文档处理",frontmatter:{description:"蚂蚁集团开源高性能多语言序列化框架 Fury",meta:[{name:"twitter:title",content:"文档处理"},{name:"twitter:description",content:"蚂蚁集团开源高性能多语言序列化框架 Fury"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86.html"},{property:"og:type",content:"article"},{property:"og:title",content:"文档处理"},{property:"og:description",content:"蚂蚁集团开源高性能多语言序列化框架 Fury"},{property:"og:url",content:"https://bajins.com/PL/%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"文档处理"},{itemprop:"description",content:"蚂蚁集团开源高性能多语言序列化框架 Fury"}]},regularPath:"/PL/%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86.html",relativePath:"PL/文档处理.md",key:"v-4f2319ea",path:"/PL/%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"yaml/json/xml/ini/conf/toml",slug:"yaml-json-xml-ini-conf-toml"},{level:2,title:"PDF",slug:"pdf"},{level:2,title:"Excel/Word",slug:"excel-word"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' 文档处理 \n Flag yaml/json/xml/ini/conf/toml PDF Excel/Word \n Flag \n \n https://opendocumentformat.org \n https://www.oasis-open.org \n \n \n CSV文件处理  https://github.com/jqnatividad/qsv \n https://sourceforge.net/projects/opencsv \n yaml/json/xml/ini/conf/toml \n \n XML: Extensible Markup Language (XML) \n JSON: JavaScript Object Notation (JSON) \n YAML: YAML Ain\'t Markup Language (YAML) \n \n \n https://github.com/cbor \n BSON(Binary Serialized Document Format)   https://bsonspec.org \n \n http://www.bjson.org \n \n \n https://github.com/json-schema-org \n \n https://json-schema.org \n \n \n https://www.json.org/json-zh.html \n \n https://github.com/SchemaStore/schemastore \n \n \n https://github.com/Cyphrme \n https://github.com/json-api/json-api \n https://github.com/garycourt/JSV \n https://github.com/toml-lang/toml \n https://github.com/yaml \n https://github.com/topics/env \n 序列化  https://github.com/protocolbuffers/protobuf \n \n https://gitlab.com/dyu \n \n \n https://github.com/google/flatbuffers \n https://github.com/msgpack \n https://github.com/apache/avro \n https://github.com/ebourg/hessian \n https://github.com/alipay/fury \n \n 蚂蚁集团开源高性能多语言序列化框架 Fury \n \n \n \n 数据及文件通常有三种类型： \n \n 配置文件型：如ini，conf，properties文件，适合存储简单变量和配置项，最多支持两层，不适合存储多层嵌套数据 \n 表格矩阵型：如csv，excel等，适合于存储大量同类数据，不适合存储层级结构的数据 \n 多层嵌套型：如XML，HTMl，JSON、YAML，TOML等，适合存储单条或少数多层嵌套数据，不适合存储大量数据 \n \n \n YAML兼容JSON格式，简洁，强大，灵活，可以很方便的构造层级数据 \n \n \n \n \n 特殊符 \n 说明 \n \n \n \n \n \\n\\ \n \\n 换行，\\后面字符串继续写 \n \n \n | \n 文中自动换行，文末新增一空行 \n \n \n |+ \n 文中自动换行，文末新增两空行 \n \n \n |- \n 文中自动换行 ，文末不新增行 \n \n \n > \n 文中不自动换行，文末新增一空行 \n \n \n >+ \n 文中不自动换行，文末新增两空行 \n \n \n >- \n 文中不自动换行，文末不新增行 \n \n \n \n XML \n \n https://sourceforge.net/projects/sax \n https://github.com/davidmegginson \n https://sourceforge.net/projects/rapidxml \n \n \n 可扩展标记语言（ Extensible Markup Language ，简称：XML）是一种标记语言。 \n 标记指 计算机 所能理解的信息符号，通过此种标记， 计算机 之间可以处理包含各种信息的文章等。 \n 如何定义这些标记，既可以选择国际通用的标记语言，比如 HTML ，也可以使用像XML这样由相关人士自由决定的标记语言，这就是语言的可扩展性。 \n XML是从 标准通用标记语言（SGML） 中简化修改出来的。\n它主要用到的有可扩展标记语言、 可扩展样式语言（XSL） 、 XBRL 和 XPath 等 \n \n \n Simple API for XML（SAX） 是个循序存取XML的解析器API，非W3C官方所提出的标准，它是事件驱动的（一种基于回调 callback 机制的程序运行方法）。\n它是除了 文档对象模型（DOM） 的另外一种流行选择，DOM需要读入整个的XML文档，然后在内存中创建DOM树，生成DOM树上的每个Node对象 \n PDF \n \n https://github.com/topics/pdf \n https://github.com/topics/pdflib \n https://github.com/topics/pdf-viewer \n https://github.com/topics/poi \n https://github.com/topics/excel \n https://github.com/topics/word \n https://github.com/search?q=PDF+Reader \n \n \n PDF解析  https://github.com/zxyle/PDF-Explained \n 解锁 PDF 文件：使用 JavaScript 和 Canvas 渲染 PDF 内容 \n \n \n PDF查看器和工具包  http://www.xpdfreader.com \n PDF阅览器  https://fsfe.org/pdfreaders/pdfreaders.zh.html \n https://zh.pdf24.org \n https://github.com/funstory-ai/BabelDOC \n PDF渲染  https://poppler.freedesktop.org \n \n https://packages.msys2.org/base/mingw-w64-poppler \n https://packages.msys2.org/package/mingw-w64-x86_64-glib2 \n \n \n C  https://github.com/ArtifexSoftware/mupdf \n https://github.com/bblanchon/pdfium-binaries \n https://github.com/paulocoutinhox/pdfium-lib \n rust  https://github.com/ajrcarey/pdfium-render \n https://github.com/wmjordan/PDFPatcher \n PDF操作  https://github.com/topics/pdfbox \n https://github.com/apache/pdfbox \n \n https://github.com/dhorions/boxable \n \n \n https://github.com/apache/tika \n https://github.com/itext \n https://github.com/iron-software/IronPDF-for-Java \n https://github.com/flyingsaucerproject/flyingsaucer \n https://github.com/openhtmltopdf/openhtmltopdf \n https://github.com/LibrePDF/OpenPDF \n https://github.com/Frooodle/Stirling-PDF \n https://github.com/ofdrw/ofdrw \n PDF生成  https://github.com/topics/pdf-creator \n https://github.com/johnfercher/maroto \n \n https://github.com/Vale-sail/maroto \n \n \n https://github.com/jung-kurt/gofpdf \n https://github.com/tiechui1994/gopdf \n https://github.com/apache/xmlgraphics-fop \n https://github.com/apache/xmlgraphics-fop-pdf-images \n https://github.com/pdfminer/pdfminer.six \n \n https://github.com/euske/pdfminer \n \n \n https://github.com/alephdata/pdflib \n https://github.com/pyx-project/pyx \n https://github.com/reingart/pyfpdf \n https://github.com/pmaupin/pdfrw \n https://github.com/wkhtmltopdf/wkhtmltopdf \n \n https://github.com/SebastiaanKlippert/go-wkhtmltopdf \n https://github.com/jhonnymertz/java-wkhtmltopdf-wrapper \n https://github.com/knennigtri/merge-markdown \n https://github.com/pdfkit/pdfkit \n https://github.com/JazzCore/python-pdfkit \n \n \n https://github.com/gotenberg/gotenberg \n https://github.com/xhtml2pdf/xhtml2pdf \n \n https://docs.reportlab.com \n https://hg.reportlab.com/hg-public \n \n \n https://github.com/Kozea/WeasyPrint \n https://github.com/plutoprint/plutoprint \n PyPDF2  https://github.com/py-pdf/pypdf \n https://github.com/pikepdf/pikepdf \n https://github.com/qpdf/qpdf \n https://github.com/ocrmypdf/OCRmyPDF \n https://github.com/pdfarranger/pdfarranger \n https://github.com/cfcurtis/pdfstitcher \n https://github.com/pymupdf/PyMuPDF \n \n https://github.com/hellowac/PyMuPDF-zh-cn \n \n \n https://github.com/jsvine/pdfplumber \n https://github.com/pdfminer/pdfminer.six \n https://github.com/pmaupin/pdfrw \n https://github.com/vvanglro/pwhtmltopdf \n https://github.com/Studiosity/grover \n https://github.com/YusukeIwaki/puppeteer-ruby \n https://github.com/prawnpdf/prawn \n https://github.com/gettalong/hexapdf \n https://github.com/tecnickcom/tc-lib-pdf \n https://github.com/dompdf/dompdf \n https://github.com/Sicos1977/ChromiumHtmlToPdf \n https://github.com/westy92/html-pdf-chrome \n https://github.com/danfickle/openhtmltopdf \n https://github.com/arachnys/athenapdf \n https://github.com/fraserxu/electron-pdf \n https://github.com/xieguigang/markdown2pdf \n https://github.com/mpdf/mpdf \n \n https://sourceforge.net/projects/html2fpdf \n \n \n https://github.com/typesetsh \n "PDF生成库"npm包对比 \n https://github.com/parallax/jsPDF \n \n https://github.com/johnnywang1994/jsPDF-html2canvas \n https://github.com/eKoopmans/html2pdf.js \n \n \n https://github.com/foliojs/pdfkit \n \n https://github.com/bpampuch/pdfmake \n \n https://github.com/Aymkdn/html-to-pdfmake \n https://github.com/pdfmake/vfs-builders \n https://github.com/tekintian/vfs_fonts.js-build-tools \n https://github.com/WindRunnerMax/BlockKit/blob/master/examples/pdf-with-outline.ts \n \n \n \n \n https://github.com/Hopding/pdf-lib \n \n https://github.com/pdfme/pdfme \n https://github.com/p-kuen/pdf-lib-builder \n \n \n https://github.com/elliotblackburn/mdpdf \n https://github.com/ArtifexSoftware/mupdf.js \n \n https://cgit.ghostscript.com/mupdf.git \n https://github.com/andytango/mupdf-js \n \n \n https://github.com/marcbachmann/node-html-pdf \n https://github.com/CSS-Paged-Media/html2pdf-tool-comparison \n https://github.com/devongovett/node-wkhtmltopdf \n https://github.com/mozilla/pdf.js \n 读取PDF  https://github.com/ledongthuc/pdf \n https://github.com/google/go-tika \n https://github.com/pdfcpu/pdfcpu \n https://github.com/wojtekmaj/react-pdf \n 免费有水印  https://github.com/unidoc \n PDF转文本  https://github.com/datalab-to/marker \n \n \n OFD  https://github.com/ofdrw/ofdrw \n \n \n https://docraptor.com \n \n https://docraptor.com/html-to-pdf-complexity \n https://docraptor.com/open-source-html-to-pdf \n https://docraptor.com/python-html-to-pdf \n https://docraptor.com/wkhtmltopdf-alternatives \n \n \n https://pdfcrowd.com/html-to-pdf \n \n https://pdfcrowd.com/save-as-pdf-addon \n \n \n https://doppio.sh \n https://pdfshift.io \n https://pdfblade.com \n Excel/Word \n \n https://github.com/rustytsuki/rust-office \n https://github.com/Api2Pdf \n \n Go \n \n excel  https://github.com/360EntSecGroup-Skylar/excelize \n https://github.com/qax-os/excelize \n https://github.com/shakinm/xlsReader \n \n Java \n \n https://github.com/plutext/docx4j \n https://github.com/jeecgboot/autopoi \n https://github.com/aspose \n Excel  https://github.com/apache/poi \n \n http://poi.apache.org/components/spreadsheet \n 导出百万级数据到Excel 文件 \n https://github.com/550690513/large-amount-data-export \n \n \n https://github.com/jxlsteam \n \n https://sourceforge.net/projects/jxls \n \n \n https://github.com/alibaba/easyexcel \n \n https://github.com/CodePhiliaX/fastexcel \n \n \n https://gitee.com/wupaas/easypoi \n https://github.com/dhatim/fastexcel \n https://sourceforge.net/projects/jexcelapi \n https://github.com/liaochong/myexcel \n https://github.com/monitorjbl/excel-streaming-reader \n https://github.com/subtlelib/poi \n https://github.com/Thomaswoood/simple-excel \n https://github.com/crealytics/spark-excel \n https://github.com/pig-mesh/excel-spring-boot-starter \n 输出word  https://github.com/Sayi/poi-tl \n https://github.com/MSPaintIDE/NewOCR \n 转换  https://github.com/documents4j/documents4j \n https://sourceforge.net/projects/csvjdbc \n https://github.com/opensagres \n https://github.com/jodconverter/jodconverter \n https://github.com/Saxonica \n https://github.com/opensagres/xdocreport \n \n https://github.com/dengyongqiang/xdocreport-user-guide \n \n \n https://github.com/aspose-words \n https://github.com/ApryseSDK \n Spire  https://www.e-iceblue.com \n \n Python \n \n https://github.com/pyexcel \n https://github.com/jmcnamara/XlsxWriter \n https://foss.heptapod.net/openpyxl/openpyxl \n \n https://openpyxl.readthedocs.io \n \n \n \n JavaScript \n \n excel  https://github.com/exceljs/exceljs \n https://github.com/dtjohnson/xlsx-populate \n \n 前端生成导出Excel \n https://www.npmjs.com/package/xlsx-populate#style-reference \n \n \n https://github.com/SheetJS \n \n https://github.com/protobi/js-xlsx \n https://github.com/Ctrl-Ling/XLSX-Style-Utils \n https://github.com/skyrocks/x-xlsx-style \n https://github.com/duhaohao/xlsx-styleable \n https://github.com/LuisEnMarroquin/json-as-xlsx \n 使用js-xlsx简单实现一个导入excel \n 操作excel的js工具库 - XLSX的使用方法 \n \n \n https://github.com/DataGridXL/DataGridXL2 \n https://github.com/d-band/better-xlsx \n https://github.com/dream-num \n \n https://gitee.com/mengshukeji \n https://gitee.com/dream-num \n \n \n https://github.com/ag-grid/ag-grid \n https://github.com/myliang/x-spreadsheet \n TableExport  https://github.com/clarketm/TableExport \n tableExport.jquery.plugin  https://github.com/hhurz/tableExport.jquery.plugin \n excellentexport  https://github.com/jmaister/excellentexport \n https://github.com/jspreadsheet \n docx-preview  https://github.com/VolodymyrBaydalka/docxjs \n 文档查看  https://github.com/webodf/ViewerJS \n \n NodeJS \n \n Excel  https://github.com/optilude/xlsx-template \n https://github.com/mgcrea/node-xlsx \n https://github.com/catamphetamine/read-excel-file \n \n',createdTime:1761814324e3},{title:"硬件交互",frontmatter:{description:"IOT：物联网，协议支持：MQTT、CoAP、LwM2M、XMPP、ZigBee、NB-IoT、LoRa、PLC、OPC UA、Modbus、http、socket、file",meta:[{name:"twitter:title",content:"硬件交互"},{name:"twitter:description",content:"IOT：物联网，协议支持：MQTT、CoAP、LwM2M、XMPP、ZigBee、NB-IoT、LoRa、PLC、OPC UA、Modbus、http、socket、file"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/%E7%A1%AC%E4%BB%B6%E4%BA%A4%E4%BA%92.html"},{property:"og:type",content:"article"},{property:"og:title",content:"硬件交互"},{property:"og:description",content:"IOT：物联网，协议支持：MQTT、CoAP、LwM2M、XMPP、ZigBee、NB-IoT、LoRa、PLC、OPC UA、Modbus、http、socket、file"},{property:"og:url",content:"https://bajins.com/PL/%E7%A1%AC%E4%BB%B6%E4%BA%A4%E4%BA%92.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"硬件交互"},{itemprop:"description",content:"IOT：物联网，协议支持：MQTT、CoAP、LwM2M、XMPP、ZigBee、NB-IoT、LoRa、PLC、OPC UA、Modbus、http、socket、file"}]},regularPath:"/PL/%E7%A1%AC%E4%BB%B6%E4%BA%A4%E4%BA%92.html",relativePath:"PL/硬件交互.md",key:"v-64363060",path:"/PL/%E7%A1%AC%E4%BB%B6%E4%BA%A4%E4%BA%92.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"OPC",slug:"opc"},{level:2,title:"SCADA",slug:"scada"},{level:2,title:"嵌入式",slug:"嵌入式"},{level:2,title:"串口",slug:"串口"},{level:2,title:"打印机",slug:"打印机"},{level:3,title:"虚拟打印机",slug:"虚拟打印机"},{level:3,title:"打印对接",slug:"打印对接"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 硬件交互 \n Flag OPC SCADA 嵌入式 串口 打印机 虚拟打印机 打印对接 \n Flag \n \n IOT：物联网，协议支持：MQTT、CoAP、LwM2M、XMPP、ZigBee、NB-IoT、LoRa、PLC、OPC UA、Modbus、http、socket、file \n \n \n 设备接入>开发设备接入>使用开放协议自主接入 \n https://github.com/getiot/getiot-kb \n https://github.com/openember/openember \n MQTT  https://github.com/mqttjs \n \n nodejs搭建mqtt服务器(Broker) \n \n \n https://github.com/eclipse/paho.mqtt.c \n https://github.com/eclipse/mosquitto \n https://github.com/vernemq/vernemq \n https://github.com/emqx \n \n https://docs.emqx.com/zh/neuronex/latest/configuration/introduction.html \n \n \n https://github.com/jiejieTop/mqttclient \n https://github.com/Wizzercn/MqttWk \n https://github.com/Koenkk/zigbee2mqtt \n https://github.com/thingsboard/thingsboard \n CoAP  https://github.com/eclipse-californium/californium \n LwM2M  https://github.com/eclipse-leshan/leshan \n https://github.com/OpenMobileAlliance \n https://github.com/sipeed \n https://github.com/RT-Thread-packages/freemodbus \n https://github.com/debevv/nanoMODBUS \n Modbus工具  https://www.modbustools.com \n https://github.com/hneemann/Digital \n https://github.com/windowsair/wireless-esp8266-dap \n https://github.com/sakumisu/CherryUSB \n 网络蓝牙规范  https://github.com/WebBluetoothCG/web-bluetooth \n 无线电  https://github.com/ExpressLRS/ExpressLRS \n \n \n 主流物联网协议选择：MQTT、CoAP 还是 LwM2M？ \n 《智能制造术语解读》-笔记 \n 《机·智：从数字化车间走向智能制造》学习笔记 \n DNC(Distributed Numeric Control分布式控制网络)系统 \n MDC(Manufacturing Data Collection生产数据采集)系统 \n NC(Numerical Control数字控制，简称数控)程序管理系统 \n OPC \n \n https://github.com/gopcua/opcua \n https://github.com/FreeOpcUa/freeopcua \n https://github.com/node-opcua \n \n \n OPC DA 到 OPC UA \n JAVA对接OPC协议-Utgard \n Java OPC 代码 \n Java OPC client开发踩坑记 \n https://github.com/luoyan35714/OPC_Client \n https://github.com/kohsuke/jinterop-proxy \n https://github.com/GreatGarlic/OpcClient \n https://github.com/codelibs/jcifs \n https://github.com/neugates/neuopc \n https://www.unified-automation.com \n SCADA \n \n SCADA(Supervisory Control and Data Acquisition)：超级控制与数据采集，即数据采集与监视控制系统 \n \n \n http://oscada.org \n https://openscada.org \n https://github.com/SCADA-LTS/Scada-LTS \n https://github.com/RapidScada \n https://github.com/ScadaBR/ScadaBR \n https://sourceforge.net/projects/proview \n https://sourceforge.net/projects/free-scad \n https://sourceforge.net/projects/indigoscada \n https://sourceforge.net/projects/opendax \n https://sourceforge.net/projects/processviewer \n https://sourceforge.net/projects/szarp \n https://sourceforge.net/projects/seer2 \n Ignition SCADA  https://inductiveautomation.com \n 嵌入式 \n \n IDE  https://github.com/arduino/Arduino \n \n https://github.com/Sloeber/arduino-eclipse-plugin \n https://www.visualmicro.com \n https://github.com/dawidchyrzynski/arduino-home-assistant \n \n \n https://github.com/platformio \n \n \n https://github.com/espruino \n https://github.com/tmk/tmk_keyboard \n https://github.com/qmk/qmk_firmware \n 串口 \n \n https://github.com/topics/serial \n https://github.com/topics/rs232 \n https://github.com/topics/rxtx \n \n \n Virtual Serial Port Driver  https://www.eltima.com \n \n https://cdn.eltima.com/download/vspdpro.exe \n https://cdn.electronic.us/products/vspd/windows/download/vspd.exe \n 关于虚拟串口驱动专业版 Eltima Virtual Serial Port Driver Pro 注册原理 \n \n \n https://www.virtual-serial-port.com \n https://freevirtualserialports.com \n https://www.aggsoft.com \n http://www.meixuannet.cn \n https://docs.ai-thinker.com/tools \n https://sourceforge.net/projects/cutecom \n https://sourceforge.net/projects/com0com \n https://github.com/QQxiaoming/virts \n https://github.com/chenxuuu/llcom \n https://github.com/szieke/ScriptCommunicator_serial-terminal \n https://github.com/qsaker/QtSwissArmyKnife \n 跨平台串口  https://github.com/itas109/CSerialPort \n \n \n https://github.com/dathlin/HslCommunication \n https://serial.xywml.com \n 雪莉蓝串口调试助手 \n 友善串口调试助手\n \n CCCCC-AAAAA-FFFFF-0E013-6EE85 \n \n \n ComHelper串口调试助手 \n 缤果串口网络蓝牙调试助手 \n https://github.com/neutree/comtool \n https://github.com/changfeng1050/SerialWizard \n https://github.com/KondeU/CommonSerialRelease \n https://github.com/itas109/CommLite \n https://github.com/rymcu/RYCOM \n https://github.com/leven99/OSDA \n https://github.com/JoaoLopesF/SerialDebug \n https://github.com/bestyize/BCom \n https://github.com/wenhuix/COMDBG \n http://www.ceiwei.com/mt \n https://www.jicesys.com \n \n Java \n \n Android  https://github.com/Shanyaliux/SerialPortSample \n https://github.com/HuRuWo/SerialPortHelper \n Java  https://github.com/Fazecast/jSerialComm \n https://github.com/rxtx/rxtx \n http://rxtx.qbang.org \n \n https://github.com/NeuronRobotics/nrjavaserial \n http://fizzed.com/oss/rxtx-for-java \n https://github.com/CMU-CREATE-Lab/commons-java \n \n \n https://github.com/openmuc/jrxtx \n https://github.com/han1396735592/spring-boot-starter-rxtx \n https://github.com/kochedykov/jlibmodbus \n https://github.com/digitalpetri/modbus \n https://github.com/RishiGupta12/SerialPundit \n \n JavaScript \n \n https://wicg.github.io/serial \n https://web.dev/serial \n https://github.com/GoogleChromeLabs/serial-terminal \n \n https://googlechromelabs.github.io/serial-terminal \n \n \n \n \n https://github.com/serialport/node-serialport \n 在线调试  https://github.com/curtion/Web-SerialPort \n https://github.com/bleskomat/bleskomat-web-serial \n https://github.com/betaflight \n https://www.microsoft.com/zh-cn/makecode \n \n C++ \n \n https://github.com/crayzeewulf/libserial \n 打印机 \n \n https://github.com/topics/printer \n https://github.com/topics/print \n https://github.com/topics/printing \n https://github.com/search?q=printer \n https://github.com/search?q=raw+print \n https://github.com/search?p=3&q=direct+print \n https://github.com/search?q=Bluetooth+printing \n https://github.com/search?q=zpl \n https://github.com/topics/ipp \n https://labelary.com \n https://developer.zebra.com/products/printers \n \n \n 打印机通信协议RAW（printer-job-language，端口9100）与LPR（Line Printer Daemon Protocol，端口515）、\n互联网打印协议(IPP；InternetPrintingProtocol，端口631)； \n \n \n 打印机控制语言\n \n Epson公司的ESC/POS命令集 \n HP公司的PCL命令集 \n Adobe公司的PostScript(简称PS)命令集 \n \n \n \n \n https://mopria.org/zh-cn \n Printer Operation / 5.8. Printing in a TCP/IP Network \n 浏览器打印方案调研 \n https://www.webprinter.cn/doc/theory \n https://gitee.com/gscloudplugin/gscloudplugin \n winspool.drv  https://docs.microsoft.com/zh-cn/windows/win32/printdocs/print-spooler-api \n https://learn.microsoft.com/zh-cn/windows/win32/printdocs/documents-and-printing \n https://docs.microsoft.com/zh-cn/troubleshoot/windows/win32/win32-raw-data-to-printer \n https://learn.microsoft.com/zh-cn/windows-hardware/drivers/devapps/print-support-app-design-guide \n \n https://learn.microsoft.com/zh-cn/windows-hardware/drivers/print \n \n \n https://learn.microsoft.com/zh-cn/windows/win32/api/wingdi \n https://learn.microsoft.com/zh-cn/windows-server/administration/windows-commands/print-command-reference \n https://www.compuphase.com/software_spool.htm \n \n \n 用于打印机语言  https://www.ghostscript.com \n https://github.com/dpavlin/Printer-Zebra \n \n \n 当您使用 Microsoft Print to PDF 驱动程序时，会发生以下情况：PDF->EMF->XPS->PDF。 关于 C++ 打印 PDF 打印及 PDF 转图片、合并 \n 虚拟打印机 \n \n pdfFactory  https://fineprint.com \n \n https://fineprint.com/release/pdf818pro.exe \n \n \n https://www.dopdf.com \n https://www.bullzip.com \n https://www.biopdf.com \n https://www.priprinter.com \n https://www.the-sz.com/products/doro \n https://www.pdfmachine.com \n https://www.adobe.com/acrobat.html \n http://www.tinypdf.com \n https://www.7-pdf.com/products/pdf-printer \n https://www.foxitsoftware.cn/function_page/18.html \n https://www.sumatrapdfreader.org \n https://pdf-xchange.eu \n \n BarTender \n \n https://www.seagullscientific.com \n https://help.seagullscientific.com/2022/en/Subsystems/ActiveX/ActiveX.htm \n https://help.seagullscientific.com/2022/en/#BTIntroduction.htm \n \n \n https://github.com/yuguansu/PrintHelper \n https://github.com/qianch/PrinterService \n https://github.com/WanManito/JBartender \n 打印对接 \n \n https://github.com/neodynamic \n \n Rust \n \n 打印协议实现  https://github.com/ancwrd1/ipp.rs \n https://github.com/LegNeato/cups-sys \n \n C/C++ \n \n 打印系统  https://github.com/OpenPrinting/cups \n https://github.com/apple/cups \n https://github.com/michaelrsweet/pappl \n https://sourceforge.net/projects/gimp-print \n https://github.com/michaelrsweet/lprint \n \n GoLang \n \n 串口通信  https://github.com/tarm/serial \n https://github.com/bugst/go-serial \n https://github.com/jacobsa/go-serial \n https://github.com/things-go/go-modbus \n https://github.com/zgwit/iot-master \n https://github.com/kenshaw/escpos \n https://github.com/google/gousb \n https://github.com/alexbrainman/printer \n \n https://github.com/jadefox10200/goprint \n \n \n https://github.com/google/cloud-print-connector \n https://github.com/Knisy/printer \n https://github.com/janftacnik/sim-printer \n https://github.com/Feggah/calculator \n COM  https://github.com/mattn/go-adodb \n https://github.com/phin1x/go-ipp \n https://github.com/SimonWaldherr/ups \n \n \n https://github.com/SimonWaldherr/zplgfa \n https://github.com/SimonWaldherr/ups \n \n dotnet(.NET)/CSharp \n \n https://github.com/lockerace/RawPrintingHTTPServer \n https://github.com/BinaryKits/BinaryKits.Zpl \n https://github.com/haraldar/QuickZebra \n https://github.com/nelsontkq/zplify \n https://github.com/sungaila/PDFtoZPL \n https://github.com/rkone/sharpzebra \n \n \n C#操作打印机 \n \n Java \n \n 打印协议实现  https://github.com/HPInc/jipp \n Java调用dll动态链接库主要的方式有三种方式：JNI、JACOB、JNA \n COM组件调用  https://github.com/freemansoft/jacob-project \n \n https://sourceforge.net/projects/jacob-project \n https://github.com/gochaorg/jacob-project \n 通过 JACOB 实现 Java 与 COM 组件的互操作 \n java-ActiveXComponent调用com组件 \n \n \n https://github.com/kohsuke/com4j \n \n Java 调用 COM 组件之 com4j 使用说明 \n \n \n OLE Automation  https://github.com/eclipse-platform/eclipse.platform.swt \n https://github.com/anastaciocintra/escpos-coffee \n https://github.com/SubLuLu/thermal_printer \n https://github.com/givengao/xsg-aggregation-printer-cloud \n https://github.com/gixxi/lambdaroyal-ws-printing-server \n https://github.com/Zhao2018Mr/webPrint \n https://github.com/w3blogfr/zebra-zpl \n \n \n 连接打印机  https://gitee.com/qnloft/thb_client \n \n JavaScript \n \n https://github.com/DoersGuild/jQuery.print \n https://github.com/crabbly/Print.js \n https://github.com/jasonday/printThis \n https://github.com/tojocky/node-printer \n \n https://github.com/thiagoelg/node-printer \n \n \n https://github.com/NielsLeenheer/EscPosEncoder \n https://github.com/bigrocs/escpos-win \n \n https://github.com/bigrocs/node-escpos-win \n \n \n https://github.com/mscdex/print \n https://github.com/etimbo/jquery-print-preview-plugin \n https://github.com/dsandor/dymojs \n https://github.com/SimonWaldherr/zplgfa \n https://github.com/clawsoftware/clawPDF \n https://github.com/jimevins/glabels-qt \n https://github.com/juesai2015/PrinterPOSDemo \n https://github.com/freedom-git/EscPosEncoder \n https://github.com/mozilla/pdfjs-dist \n https://github.com/pipwerks/PDFObject \n \n \n https://github.com/teynon/ZPL-Label-Designer \n https://github.com/DanieLeeuwner/JSZPL \n https://github.com/metafloor/zpl-image \n https://github.com/mrothenbuecher/zpl-rest \n \n Python \n \n https://github.com/cod3monk/zpl \n https://github.com/kylemacfarlane/zplgrf \n \n",createdTime:1761814324e3},{title:"编程规范",frontmatter:{description:"https://www.apiref.com\nHTTP 的业务错误码\nhttps://open.weibo.com/wiki/Error_code\n适合测试人员看的经典书籍有哪些？\n《软件测试的艺术》读书笔记\n软件测试之代码审查和代码走查\n安全评估 https://github.com/chaitin/xray\nhttps://github.com/whwlsfb/BurpCrypto\n为什么你不应该继续在文本格式中使用时间戳",meta:[{name:"image",content:"https://bajins.com/images/clean-code.png"},{name:"twitter:title",content:"编程规范"},{name:"twitter:description",content:"https://www.apiref.com\nHTTP 的业务错误码\nhttps://open.weibo.com/wiki/Error_code\n适合测试人员看的经典书籍有哪些？\n《软件测试的艺术》读书笔记\n软件测试之代码审查和代码走查\n安全评估 https://github.com/chaitin/xray\nhttps://github.com/whwlsfb/BurpCrypto\n为什么你不应该继续在文本格式中使用时间戳"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/clean-code.png"},{name:"twitter:url",content:"https://bajins.com/PL/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.html"},{property:"og:type",content:"article"},{property:"og:title",content:"编程规范"},{property:"og:description",content:"https://www.apiref.com\nHTTP 的业务错误码\nhttps://open.weibo.com/wiki/Error_code\n适合测试人员看的经典书籍有哪些？\n《软件测试的艺术》读书笔记\n软件测试之代码审查和代码走查\n安全评估 https://github.com/chaitin/xray\nhttps://github.com/whwlsfb/BurpCrypto\n为什么你不应该继续在文本格式中使用时间戳"},{property:"og:image",content:"https://bajins.com/images/clean-code.png"},{property:"og:url",content:"https://bajins.com/PL/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"编程规范"},{itemprop:"description",content:"https://www.apiref.com\nHTTP 的业务错误码\nhttps://open.weibo.com/wiki/Error_code\n适合测试人员看的经典书籍有哪些？\n《软件测试的艺术》读书笔记\n软件测试之代码审查和代码走查\n安全评估 https://github.com/chaitin/xray\nhttps://github.com/whwlsfb/BurpCrypto\n为什么你不应该继续在文本格式中使用时间戳"},{itemprop:"image",content:"https://bajins.com/images/clean-code.png"}]},regularPath:"/PL/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.html",relativePath:"PL/编程规范.md",key:"v-c1c50c00",path:"/PL/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"代码风格指南",slug:"代码风格指南"},{level:3,title:"命名规范",slug:"命名规范"},{level:3,title:"Golang",slug:"golang"},{level:3,title:"Python",slug:"python"},{level:2,title:"GNU风格版本规则",slug:"gnu风格版本规则"},{level:2,title:"Commit提交规范",slug:"commit提交规范"},{level:2,title:"switch",slug:"switch"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' 编程规范 \n Flag 代码风格指南 命名规范 Golang Python GNU风格版本规则 Commit提交规范 switch \n Flag \n \n https://github.com/topics/styleguide \n 十二要素  https://github.com/heroku/12factor \n \n https://github.com/twelve-factor/twelve-factor \n \n \n 敏捷宣言  https://agilemanifesto.org \n 贡献者契约  https://github.com/EthicalSource \n \n https://www.contributor-covenant.org \n \n \n License  https://en.wikipedia.org/wiki/Software_license \n https://github.com/github/choosealicense.com \n \n https://choosealicense.com \n \n \n https://github.com/copyleft-next/copyleft-next \n \n https://git.copyleft.org/copyleft-next \n \n \n https://github.com/fossas \n \n https://app.fossa.com \n https://fossa.com/learn/developers-guide-open-source-software-licenses \n https://open-source-license-chooser.toolsnav.top/zh \n 如何选择开源许可证？ \n 如何选择开源许可证？ \n \n \n https://spdx.org/licenses \n https://opensource.org/licenses \n \n \n https://www.gnu.org/licenses \n \n \n https://opencontent.org/openpub \n 开源指南  https://github.com/github/opensource.guide \n https://creativecommons.org \n 提问的智慧  https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way \n 如何有效地报告提Bug  https://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html \n \n \n https://www.apiref.com \n HTTP 的业务错误码 \n https://open.weibo.com/wiki/Error_code \n 适合测试人员看的经典书籍有哪些？ \n 《软件测试的艺术》读书笔记 \n 软件测试之代码审查和代码走查 \n 安全评估  https://github.com/chaitin/xray \n https://github.com/whwlsfb/BurpCrypto \n 为什么你不应该继续在文本格式中使用时间戳 \n \n UUID（Universally Unique Identifier）/GUID (Globally Unique Identifier) \n \n https://datatracker.ietf.org/doc/html/draft-peabody-dispatch-new-uuid-format \n \n \n Version 1: 基于时间戳和MAC地址，结合当前的时间戳（从格里高利历的1582年10月15日零点算起，100纳秒为单位）和计算机的MAC地址（或伪随机节点ID）。还包含一个“时钟序列”以处理时钟回拨和生成重复MAC地址的情况。 \n Version 2: 类似 Version 1，但将时间戳的高位替换为“DCE Security”域（如用户ID或组ID）。 \n Version 3: 基于命名空间和MD5散列，将一个“命名空间UUID”和一个“名称”（任意字符串）作为输入，然后通过MD5散列算法计算出。 \n Version 4: 基于随机数，大部分位由高质量的伪随机数生成器 (PRNG) 填充。只有几个位用于表示版本号和变体。 \n Version 5: 基于命名空间和SHA-1散列，类似 Version 3，但使用SHA-1散列算法代替MD5。 \n \n \n ULID（Universidally Unique Lexicographically Sortable Identifier）是一种设计用于解决传统 UUID 在数据库索引和可排序性方面缺点的新型标识符。ULID 结合了 UUID 的全球唯一性和时间戳的可排序性。 \n \n \n https://github.com/sony/sonyflake \n https://github.com/segmentio/ksuid \n https://github.com/rs/xid \n https://github.com/paralleldrive/cuid2 \n \n https://github.com/paralleldrive/cuid \n \n \n https://github.com/boundary/flake \n https://github.com/richardtallent/RT.Comb \n https://github.com/ppearcy/elasticflake \n https://github.com/T-PWK/flake-idgen \n https://github.com/uuidjs/uuid \n https://github.com/jetify-com/typeid \n 雪花算法唯一数字ID  https://github.com/yitter/IdGenerator \n https://github.com/sqids \n ULID  https://github.com/ulid \n \n ULIDs and Primary Keys \n \n \n https://github.com/geckoboard/pgulid \n https://github.com/oklog/ulid \n NanoID  https://github.com/ai/nanoid \n \n https://github.com/zelark/nano-id-cc \n \n \n 随机数  https://www.random.org \n 治理 Cloudflare 办公室里的混乱情况 \n \n https://github.com/ejcx/csprng.xyz \n https://github.com/drand/drand \n https://github.com/thibmeu/drand-rs \n https://github.com/thibmeu/tlock-worker \n https://github.com/filecoin-project \n \n \n \n \n 编程语言提供的随机数，是伪随机数，所谓伪随机数，并非真的随机，而是算法得到的。只要初始的种子值相同，算法会给出一样的结果。\n一般来说，只有通过硬件，才能得到真随机数，单纯的软件算法做不到。真随机数需要满足三个条件。 \n \n \n 无法预测。 随机数不能被猜到，所以必须非常大，否则会被暴力破解。 \n 不能重复。 每次生成的随机数，不能是一样的。 \n 均匀分布。 随机数必须平均散布在所有区间，不能集中在某些区间。 \n \n boolean \n \n bool表示布尔型变量，bai也du就是逻辑型变量的定义符，zhi以英国数学家、布尔代数的奠基人乔dao治·布尔（George Boole）命名。 \n \n \n 布尔型变量bool的取值只有false和true，0为false，非0为true。（例如-1和1都是true） \n \n 日期时间字符格式表示法 \n \n https://zh.wikipedia.org/wiki/各地日期和时间表示法 \n \n \n ISO 8601(第一版为ISO8601:1988，第二版为ISO8601:2000，第三版ISO8601:2004)：国际标准，每周从周一开始，每年的第一周至少包含4天 \n Common：通用标准，每周从周日开始，每年的第一周至少包含1天 \n 代码风格指南 \n \n naming conventions 约定大于配置 \n \n \n 可读性：程序是供人类阅读和理解的，计算机的执行只是附带的事情。 \n \n \n https://github.com/topics/coding-style \n https://github.com/topics/clean-code \n https://github.com/topics/styleguide \n https://github.com/topics/style-guide \n https://github.com/topics/formatter \n https://github.com/topics/standard \n https://github.com/topics/conventions \n \n \n https://github.com/Kristories/awesome-guidelines \n 异步API规范  https://github.com/asyncapi/spec \n Web界面开发指南  https://github.com/raunofreiberg/interfaces \n 谷歌代码风格  https://github.com/google/styleguide \n \n https://github.com/google/google-java-format \n Google CR指引, 如何推进代码评审 \n \n \n JavaScript  https://github.com/standard/standard \n https://github.com/ryanmcdermott/clean-code-javascript \n https://github.com/sivan/javascript-style-guide \n https://github.com/airbnb/javascript \n \n https://github.com/BingKui/javascript-zh \n \n \n https://github.com/arcticicestudio/styleguide-javascript \n css  https://github.com/necolas/idiomatic-css \n HTML/CSS开发规范指南  https://github.com/doyoe/html-css-guide \n https://www.oracle.com/cn/java/technologies/javase/codeconventions-contents.html \n \n https://github.com/waylau/java-code-conventions \n \n \n 阿里巴巴Java开发手册和插件  https://github.com/alibaba/p3c \n 代码安全指南  https://github.com/Tencent/secguide \n 干净的代码  https://github.com/JuanCrg90/Clean-Code-Notes \n 系统重构与迁移指南  https://github.com/phodal/migration \n https://github.com/xianweics/refator-code \n 安全编码手册  https://github.com/joswha/Secure-Coding-Handbook \n python  https://www.python.org/dev/peps/pep-0008 \n \n https://github.com/PyCQA/pycodestyle \n \n \n SQL样式指南  https://github.com/treffynnon/sqlstyle.guide \n 加密编码标准(CCS)  https://github.com/veorq/cryptocoding \n \n https://cryptocoding.net \n \n \n \n \n JavaScript 开发规范 \n shell脚本编写规范 \n 计算机编程/编码风格/最小化嵌套 \n \n \n 展开查看思维导图 \n 命名规范 \n \n 匈牙利命名法(Hungarian)：变量类型缩写+大驼峰，如int iMyAge，Windows编程常用 \n 驼峰命名法(camelCase/lowerCamelCase，小驼峰)： 首字母小写，后续每个单词首字母都大写。面向对象语言(如Java、C#)变量、方法常用 \n 帕斯卡命名法(CamelCase/PascalCase，大驼峰)： 首字母大写，后续每个单词首字母都大写。常被面向对象语言(如Java、C#)类常用 \n 下划线命名法(under_score_case/snake_case，Snake蛇形)：C、Python变量、数据库命名常用 \n 短横线命名法(kebab-case)：Web前端语言(如CSS)变量常用，HTML 特性是不区分大小写的，无法使用驼峰命名 \n 不区分大小写(case-insensitive)：Canonical 格式，一般用于HTTP Headers、URL Path \n \n \n https://github.com/topics/naming \n https://github.com/unbug/codelf \n \n Java \n \n https://www.oracle.com/cn/java/technologies/cc-java-programming-language.html \n \n \n 大小写敏感的，且只能以  字母 、 $ 、 _  开头，首字母随后的字符可以是 字母 、 数字 、 $ 、 _ \n \n \n 项目名：全部小写，可使用 - 或 _ 连接符以分割单词，且不能有空格、中文和其他特殊字符 \n 包名：全部小写，单词不需分割，且不能有空格、中文和其他特殊字符 \n 常量：全部大写，可使用 _ 连接符以分割单词 \n 变量：小驼峰式命名法，前缀应当是名词。尽量在变量名字中体现所属类型，如：length、count表示数字类型；name、title表示字符串类型 \n 函数：小驼峰式命名法，前缀应当为动词。 \n \n \n 代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。 \n 代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。注意，即使纯拼音命名方式也要避免采用。 \n 类名使用大驼峰风格，但以下情形例外：DO / BO / DTO / VO / AO / PO等。 \n 方法名、参数名、成员变量、局部变量都统一使用小驼峰风格，必须遵从小驼峰形式。 \n 常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。 \n 抽象类命名使用Abstract或Base开头。 \n 异常类命名使用Exception结尾。 \n 测试类命名以它要测试的类名开始，以Test结尾。 \n 类型与中括号紧挨相连来定义数组。 \n POJO类中布尔类型的变量，都不要加is前缀，否则部分框架解析会引起序列化错误。 \n 包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式。 \n 杜绝完全不规范的缩写，避免望文不知义。 \n 最好逐一声明每个变量而不是写在一行。 \n Java的变量声明尽量靠近变量第一次使用的地方。 \n \n \n Java开发相关命名规范 \n 史上最全的Java命名规范参考 \n Golang \n \n https://golang.google.cn/ref/spec \n https://golang.google.cn/doc/effective_go \n \n \n 可见性（访问控制）取决于其第一个字符是否为大写 \n \n \n 包名称：其他字母应该为小写单词，不要使用下划线或者混合大小写 \n 文件命名：尽量采取有意义的文件名，简短，有意义，应该为小写单词，使用下划线分隔各个单词 \n 结构体、接口、变量：使用驼峰命名法 \n 常量：全部大写字母组成，并使用下划线分词 \n 单元测试：文件名命名规范为 _test 结尾，测试用例的函数名称必须以 Test 开头 \n Python \n \n 代码风格指南  https://www.python.org/dev/peps/pep-0008 \n \n \n 文件名、包名、模块名、局部变量名、函数&方法名：全小写+下划线式驼峰 \n 类：首字母大写式驼峰。内部类可以使用额外的前导下划线 \n 函数和方法的参数\n \n 类实例方法第一个参数使用self, 类方法第一个参数使用cls \n 如果一个函数的参数名称和保留的关键字冲突，通常使用一个后缀下划线好于使用缩写或奇怪的拼写 \n \n \n 全局变量\n \n 对于from M import *导入语句，如果想阻止导入模块内的全局变量可以使用旧有的规范，在全局变量上加一个前导的下划线。 \n 全大写+下划线式驼峰，应避免使用全局变量 \n \n \n 变量\n \n 不论是类成员变量还是全局变量，均不使用 m 或 g 前缀。 \n 私有类成员使用单一下划线前缀标识，多定义公开成员，少定义私有成员。 \n 变量名不应带有类型信息，因为Python是动态类型语言，在解释的时候才确定类型 \n \n \n 常量\n \n 所有字母大写，由下划线连接各个单词 \n \n \n 异常\n \n 因为异常也是一个类，所以遵守类的命名规则。此外，如果异常实际上指代一个错误的话，应该使用 Error 做后缀 \n \n \n 缩写命名应当尽量使用全拼写的单词，缩写的情况有如下两种：\n \n 常用的缩写，如XML、ID等，在命名时也应只大写首字母，如XmlParser。 \n 命名中含有长单词，对某个单词进行缩写。这时应使用约定成俗的缩写方式。 \n \n function 缩写为 fn\ntext 缩写为 txt\nobject 缩写为 obj\ncount 缩写为 cnt\nnumber 缩写为 num\n \n \n \n 关于下划线 \n \n 一个前导下划线：表示私有。 \n 一个后缀下划线：避免关键字冲突。 \n 以单下划线开头，是弱内部使用标识，from M import * 时，将不会导入该对象（python 一切皆对象）。 \n 两个前导下划线：当命名一个类属性引起名称冲突时使用。 \n 两个前导和后缀下划线：有特殊用途的对象或者属性，例如init或者file。绝对不要创造这样的名字，而只是使用它们。 \n 以双下划线开头的变量名，主要用于类内部标识类私有，不能直接访问。 \n 双下划线开头且双下划线截尾的命名方法尽量不要用，这是标识 \n GNU风格版本规则 \n \n 语义化版本  https://github.com/semver/semver \n \n https://semver.org/lang/zh-CN \n https://github.com/vdurmont/semver4j \n https://github.com/semantic-release \n \n \n \n \n MAJOR.MINOR.PATCH 即：  主版本号.次版本号.修正版本号 \n Major.Minor.Revision 即：  主版本号.次版本号.修正版本号 \n \n \n \n Major  主版本号：表示当前APR的主版本号，它的变化通常意味着APR的巨大的变化，比如体系结构的重新设计、API的重新设计、\n重大的重构、重大的 feature 改动、重大的不兼容性的变化等等，而且这种变化通常会导致APR版本的向前不兼容。 \n \n \n Minor  次版本号：发布较大的新 feature 功能，或者较大的重构或者模块变化，或者出现不兼容性改动，会增加子版本号；\n子版本的发布会伴随着完整的 change log ，算是一个较大的版本发布，有仪式感 \n \n \n Revision / PATCH  修正版本号：往往是 bug fix ，或者增加较小的 feature ，较小的功能改进或者模块变化，\n在保证完整向后兼容的前提下，会增加修正版本号 \n \n \n 当主版本号增加时，子版本号及修正版本号置 0 \n \n \n 当子版本号增加时，修正版本号置 0 \n \n \n 按照测试过程标识 \n \n Alpha 版：预览版或内部测试版，一般不向外部发布，会有很多Bug。 \n Beta 版：公测版。 \n RC 版： Release Candidate 候选版本。也叫做 Gamma 版本。 \n Commit提交规范 \n \n linking-a-pull-request-to-an-issue-using-a-keyword \n angular.js-git-commit-guidelines \n AngularJS Git Commit Message Conventions \n 关于git提交规范 \n git commit 提交规范 \n https://github.com/commitizen \n \n \n bugfix/fix/fixed: 表示修复 bug \n feature: 表示增加新功能 \n add: 表示增加类、文件、代码块等 \n delete/del: 表示删除类、文件、代码块等 \n update: 表示对代码块、功能的更新 \n refactor: 表示对代码块、功能重构（即不是新增功能，也不是修改bug的代码变动） \n arch: 表示输出中间版本，用于测试等 \n release to v1.0.0: 表示打包输出的版本号 \n test：增加测试 \n chore：构建过程或辅助工具的变动 \n \n \n mod 修改 \n changed ( 完成的任务 ) \n rem:移除（Remove,移除功能） \n feat：新功能（feature） \n docs：文档（documentation） \n style：格式（不影响代码运行的变动） \n switch \n \n 在Python中没有 switch 语法 \n JavaScript的 switch 语法跟Java一样 \n 在Java中 \n \n \n 如果 default 不是 switch 代码块中最后一个 case ，请记得用 break; 结束默认 case 。 \n \n switch   ( "A" . toLowerCase ( ) )   { \n case   "a" : \n     System . out . println ( "a" ) ; \n     // 注意：此处如果条件满足但没有添加break，则代码会继续执行， \n     // 会无条件执行后面的语句，直到遇到break \n     //break; \n     // fall thorugh \n case   "b" : \n     System . out . println ( "b" ) ; \n     break ; \n default : \n     // 如果default写在最前面，会先执行， \n     // 但是如果没有写break;还是会无条件执行后面的语句 \n     System . out . println ( "default" ) ; \n     break ; \n } \n \n \n 在Go中 \n \n \n 左花括号 { 必须与 switch 处于同一行； \n 条件表达式不限制为常量或者整数； \n 单个 case 中，可以出现多个结果选项，以 , 分割； \n 与C语言等规则相反，Go语言不需要用 break 来明确退出一个 case ； \n 只有在 case 中明确添加 fallthrough 关键字，才会继续执行紧跟的下一个 case ； \n 可以不设定 switch 之后的条件表达式，在此种情况下，整个 switch 结构与多个 if...else... 的逻辑作用等同。 \n \n switch  strings . ToLower ( "A" )   { \n case   "a" : \n    fmt . Println ( "a" ) \n case   "b" : \n    fmt . Println ( "b" ) \n default : \n    fmt . Println ( "default" ) \n } \n \n ',createdTime:1761814324e3},{title:"表达式和编码",frontmatter:{description:"各种表达式以及编码",meta:[{name:"twitter:title",content:"表达式和编码"},{name:"twitter:description",content:"各种表达式以及编码"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E7%BC%96%E7%A0%81.html"},{property:"og:type",content:"article"},{property:"og:title",content:"表达式和编码"},{property:"og:description",content:"各种表达式以及编码"},{property:"og:url",content:"https://bajins.com/PL/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E7%BC%96%E7%A0%81.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"表达式和编码"},{itemprop:"description",content:"各种表达式以及编码"}]},regularPath:"/PL/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E7%BC%96%E7%A0%81.html",relativePath:"PL/表达式和编码.md",key:"v-56978b5f",path:"/PL/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E7%BC%96%E7%A0%81.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"进制",slug:"进制"},{level:2,title:"逻辑运算符",slug:"逻辑运算符"},{level:2,title:"字符集编码",slug:"字符集编码"},{level:3,title:"Unicode",slug:"unicode"},{level:3,title:"ASCII",slug:"ascii"},{level:2,title:"Cron表达式",slug:"cron表达式"},{level:2,title:"Glob通配符",slug:"glob通配符"},{level:2,title:"正则表达式",slug:"正则表达式"},{level:3,title:"正则转义",slug:"正则转义"},{level:3,title:"正则模式",slug:"正则模式"},{level:3,title:"正则使用",slug:"正则使用"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' 表达式和编码 \n Flag 进制 逻辑运算符 字符集编码 Unicode ASCII Cron表达式 Glob通配符 正则表达式 正则转义 正则模式 正则使用 \n Flag \n \n 各种表达式以及编码 \n \n \n 有问题的字符串  https://github.com/minimaxir/big-list-of-naughty-strings \n 零宽空格（zero-width space, ZWSP \n 进制 \n \n \n \n 进制 \n 英文 \n 范围 \n 前缀 \n 后缀 \n \n \n \n \n 二进制 \n Binary \n 0-1 \n 0b \n B \n \n \n 八进制 \n Octal \n 0-7 \n 0/0O \n O \n \n \n 十进制 \n Decimal \n 0-9 \n 无 \n D \n \n \n 十六进制 \n Hexadecimal \n 0-9, A-F \n 0x \n H \n 逻辑运算符 \n \n \n \n 运算符 \n 说明 \n \n \n \n \n AND \n 与( && ) \n \n \n NOT \n 非( ! ) \n \n \n OR \n 或( || ) \n \n \n EQ \n EQUAL等于( == ) \n \n \n NE \n NOT EQUAL不等于( != ) \n \n \n GT \n GREATER THAN大于( > ) \n \n \n GE \n GREATER THAN OR EQUAL 大于等于( >= ) \n \n \n LT \n LESS THAN小于( < ) \n \n \n LE \n LESS THAN OR EQUAL 小于等于( <= ) \n 字符集编码 \n \n 字符集（Character Set）定义“有哪些字符”，是一个抽象的字符集合，为每个字符分配一个唯一的编号（称为 码点，Code Point）。 \n \n \n 字符编码（Character Encoding）定义“这些字符怎么存成字节”，是将字符集中的码点（数字）转换为计算机可存储/传输的字节序列的规则。 \n \n \n 在 Windows 系统中，“ANSI 编码” 实际上是 对当前系统“默认本地代码页（Default Code Page）”的误称。指当前系统的默认单字节或多字节本地编码（如中文系统就是 GBK）。 \n Unicode \n \n Unicode是国际标准(字符集)，用于表示文字。Unicode使用UTF-8编码，UTF-8编码是可变长度的编码方式。 \n \n \n https://github.com/unicode-org \n https://unicode.org/reports/tr44/#GC_Values_Table \n \n unicode-categories \n \n \n https://emojipedia.org \n https://github.com/topics/emoji \n https://github.com/rotick/searchemoji \n https://github.com/hfg-gmuend/openmoji \n https://emojispark.com \n https://www.compart.com/en/unicode \n \n \n Unicode最基本的知识  https://tonsky.me/blog/unicode \n \n https://github.com/OverflowCat/blog \n \n \n UniCode编码表及部分不可见字符过滤方案 \n 正则表达式#Unicode处理 \n Unicode®字符百科 \n 统一码所有区段 \n \n \n \n \n Unicode \n 意义 \n \n \n \n \n u0024 \n $ \n \n \n u0028 \n ( \n \n \n u0029 \n ) \n \n \n u002A \n * \n \n \n u002B \n + \n \n \n u002E \n . \n \n \n u003F \n ? \n \n \n u005B \n [ \n \n \n u005C \n \\ \n \n \n u005E \n ^ \n \n \n u007B \n { \n \n \n u007C \n | \n \n \n u007D \n } \n \n \n u0009 \n t \n \n \n u000A \n n \n \n \n u000D \n r \n \n \n u0022 \n " \n \n \n u002C \n , \n \n \n u003A \n : \n \n \n \n \n GBK、GB2312等与UTF8之间都必须通过Unicode编码才能相互转换\n \n GBK、GB2312 -> Unicode -> UTF8 \n UTF8 -> Unicode -> GBK、GB2312 \n \n \n \n \n Unicode TransformationFormat-8bit，允许含BOM，但通常不含BOM。是用以解决国际上字符的一种多字节编码，\n它对英文使用8位（即一个字节），中文使用24为（三个字节）来编码。UTF-8包含全世界所有国家需要用到的字符，是国际编码，通用性强。 \n \n \n GBK是国家标准GB2312基础上扩容后兼容GB2312的标准。GBK的文字编码是用双字节来表示的，即不论中、英文字符均使用双字节来表示，\n为了区分中文，将其最高位都设定成1。GBK包含全部中文字符，是国家编码，通用性比UTF8差，不过UTF8占用的数据库比GBK大。 \n \n 零宽度字符/零宽字符 \n \n https://en.wikipedia.org/wiki/Zero-width_space \n https://emojipedia.org/zero-width-joiner \n \n \n 零宽度字符是一些不可见的，不可打印的字符。 \n \n \n 不可见且不占位置字符： \\u200D\\u202A\\u202B\\u202C\\u202D\\u202E\\u2060\\u2061\\u2062\\u2063\\u2064\\u2065\\u206A\\u206B\\u206C\\u206D\\u206E\\u206F \n \n \n https://github.com/yuanfux/zero-width-lib \n https://github.com/330k/misc_tools \n https://github.com/rover95/morse-encrypt \n \n \n 零宽度空格符 (zero-width space) U+200B : 用于较长单词的换行分隔 \n 零宽度非断空格符 (zero width no-break space) U+FEFF : 用于阻止特定位置的换行分隔 \n 零宽度连字符 (zero-width joiner) U+200D : 用于阿拉伯文与印度语系等文字中，使不会发生连字的字符间产生连字效果 \n 零宽度断字符 (zero-width non-joiner) U+200C : 用于阿拉伯文，德文，印度语系等文字中，阻止会发生连字的字符间的连字效果 \n 左至右符 (left-to-right mark) U+200E : 用于在混合文字方向的多种语言文本中（例：混合左至右书写的英语与右至左书写的希伯来语），规定排版文字书写方向为左至右 \n 右至左符 (right-to-left mark) U+200F : 用于在混合文字方向的多种语言文本中，规定排版文字书写方向为右至左 \n \n \n 零宽度字符：和谐？屏蔽？不存在的 \n ASCII \n \n https://www.ascii-code.com \n https://en.wikipedia.org/wiki/ASCII \n https://en.wikipedia.org/wiki/Extended_ASCII \n ASCII码一览表，ASCII码对照表 \n https://cloud.magiclen.org/cn/ascii \n ASCII码对照表【2022年汇总】 \n \n \n https://asciiart.website \n \n \n ASCII（American Standard Code for Information Interchange，美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统\n，是一种字符代码(UTF-8的子集)，为使计算机支持更多语言，通常使用 0x00~0x7f 范围的1 个字节来表示 1 个英文字符。\n超出此范围的使用0x80~0xFFFF来编码，即扩展的ASCII编码 \n \n \n ASCII字符集由95个可打印字符（0x20-0x7E）（可见字符）和33个控制字符（0x00-0x1F，0x7F）（不可见字符）组成 \n \n \n Windows下ASCII(ANSI)  Windows 记事本的 ANSI、Unicode、UTF-8 这三种编码模式有什么区别？ \n \n \n ASCII基本字符为： 0 ~ 127 ，共128个\n \n ASCII控制字符为： 0 ~ 31 ，共32个 \n ASCII可显示字符为： 32 ~ 127 ，共96个\n \n 数字0~9对应的ASCII码（十进制）为： 48 ~ 57 \n 大写字母A~Z对应的ASCII码（十进制）为： 65 ~ 90 \n 小写字母a~z对应的百ASCII码（十进制）为： 97 ~ 122 \n 其他为各种符号： 33 ~ 47 和 58 ~ 64 和 91 ~ 96 和 123 ~127` \n \n \n \n \n ASCII扩展字符为： 128 ~ 255 ，共128个 \n Cron表达式 \n \n 特殊符 \n \n \n *  每一(每一分) \n ?  表示不关心,任意 \n -  范围 (小时:1-12,1到12点运行) \n ,  标示多个值 (小时 1,2,3 1点2点3点运行) \n /  递增触发(0/15,从0开始每15秒运行一次) \n L  最后(日L,当月最后一天,周L周六) \n W  指定日期最近的工作日(周一到周五) \n ##  序号(表示每月的第几个周几) \n \n \n CronTrigger配置格式: [秒] [分] [小时] [日] [月] [周] [年] \n \n \n \n \n 序号 \n 说明 \n 是否必填 \n 允许填写的值 \n 允许的通配符 \n \n \n \n \n 1 \n 秒 \n 是 \n 0-59 \n , - * / \n \n \n 2 \n 分 \n 是 \n 0-59 \n , - * / \n \n \n 3 \n 小时 \n 是 \n 0-23 \n , - * / \n \n \n 4 \n 日 \n 是 \n 1-31 \n , - * ? / L W \n \n \n 5 \n 月 \n 是 \n 1-12 or JAN-DEC \n , - * / \n \n \n 6 \n 周 \n 是 \n 1-7 or SUN-SAT \n , - * ? / L ## \n \n \n 7 \n 年 \n 是 \n empty或1970-2099 \n , - * / \n Glob通配符 \n \n glob（ man 7 glob / GLOB(7) ）是shell使用的路径通配符,类似于正则表达式,但是与正则表达式不完全相同 \n \n \n glob非常强大的用途在于路径匹配，大部分的平台和开发语言都会在配置中使用glob路径匹配，其普遍性几乎使其成为一种标准。\n但是需注意的是，每个平台和开发语言所支持glob路径匹配可能不完全一样。 \n \n \n https://github.com/isaacs/node-glob \n https://rgb-24bit.github.io/blog/2018/glob.html \n 命令行通配符教程 \n \n \n *：匹配一个路径部分中0个或多个字符，注意不匹配以.开始的路径，如文件.a。 \n ?：匹配一个字符。 \n […]：匹配一系列字符，如[abc]匹配字符a, b, c，在[^…]和[!…]表示匹配不在列表中的字符，如[^abc]匹配除了a, b, c以外的字符。 \n **：匹配0个或多个子文件夹。 \n {a,b}：匹配a或则b，a和b也是通配符，可以由其他通配符组成。 \n !：排除文件，如!a.js表示排除文件a.js。 \n 正则表达式 \n \n https://github.com/topics/perl \n https://github.com/Perl \n \n https://www.perl.org \n https://github.com/perl11 \n https://github.com/StrawberryPerl \n \n \n https://github.com/PhilipHazel/pcre2 \n \n https://sourceforge.net/projects/pcre \n \n \n https://www.regular-expressions.info \n https://docs.oracle.com/javase/1.5.0/docs/api/java/util/regex/Pattern.html \n https://github.com/VerbalExpressions \n 正则备忘  https://github.com/geongeorge/i-hate-regex \n \n \n 正则表达式是如何运作的？ \n grep零宽断言 \n 正则表达式手册 \n 正则表达式参考手册 \n 正则表达式 \n 正则表达式基础知识 \n https://louiszhai.github.io/2016/06/13/regexp \n 正则表达式速查手册 \n 正则全攻略使用手册 \n \n \n 用正则表达式分析 URL \n 正则转义 \n \n Escape Sequence \n \n \n \n \n 转义字符 \n 意义 \n \n \n \n \n \\\' \n 代表一个单引号（撇号）字符 \n \n \n \\" \n 代表一个双引号字符 \n \n \n \\\\ \n 代表一个反斜线字符 \\ \n \n \n \\0 \n 空字符(NULL) \n \n \n \\b \n 退格(BS) ，将当前位置移到前一列 \n \n \n \\b \n 一个单词的边界 \n \n \n \\B \n 一个非单词的边界 \n \n \n \\d \n 数字 等价于 [0-9] \n \n \n \\D \n 非数字 等价于 [^0-9] \n \n \n \\ddd \n 1到3位八进制数所代表的任意字符 \n \n \n \\e \n Escape \n \n \n \\f \n 换页(FF)，将当前位置移到下页开头 \n \n \n \\f \n 换页符 \n \n \n \\G \n 前一个匹配的结束 \n \n \n \\n \n 换行(LF) ，将当前位置移到下一行开头 \n \n \n \\r \n 回车(CR) ，将当前位置移到本行开头 \n \n \n \\s \n 空白符号 [\\t\\n\\x0B\\f\\r] \n \n \n \\S \n 非空白符号 [^\\t\\n\\x0B\\f\\r] \n \n \n \\t \n 水平制表(HT) （跳到下一个TAB位置） \n \n \n \\uhhhh \n 1到2位十六进制所代表的任意字符 \n \n \n \\v \n 垂直制表(VT) \n \n \n \\w \n 单独字符 [a-zA-Z_0-9] \n \n \n \\W \n 非单独字符 [^a-zA-Z_0-9] \n 正则模式 \n \n \n \n 模式 \n 描述 \n \n \n \n \n ^ \n 匹配字符串的开头 \n \n \n $ \n 匹配字符串的末尾。 \n \n \n . \n 匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。 \n \n \n [...] \n 用来表示一组字符,单独列出：[amk] 匹配 \'a\'，\'m\'或\'k\' \n \n \n [^...] \n 不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。 \n \n \n re* \n 匹配0个或多个的表达式。 \n \n \n re+ \n 匹配1个或多个的表达式。 \n \n \n re? \n 匹配0个或1个由前面的正则表达式定义的片段，非贪婪方式 \n \n \n re{ n} \n 匹配n个前面表达式。例如，"o{2}"不能匹配"Bob"中的"o"，但是能匹配"food"中的两个o。 \n \n \n re{ n,} \n 精确匹配n个前面表达式。例如，"o{2,}"不能匹配"Bob"中的"o"，但能匹配"foooood"中的所有o。"o{1,}"等价于"o+"。"o{0,}"则等价于"o*"。 \n \n \n re{ n, m} \n 匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式 \n \n \n a \n b \n \n \n (re) \n 匹配括号内的表达式，也表示一个组 \n \n \n (?imx) \n 正则表达式包含三种可选标志：i, m, 或 x 。只影响括号中的区域。 \n \n \n (?-imx) \n 正则表达式关闭 i, m, 或 x 可选标志。只影响括号中的区域。 \n \n \n (?: re) \n 类似 (...), 但是不表示一个组 \n \n \n (?imx: re) \n 在括号中使用i, m, 或 x 可选标志 \n \n \n (?-imx: re) \n 在括号中不使用i, m, 或 x 可选标志 \n \n \n (?#...) \n 注释. \n \n \n (?= re) \n 前向肯定界定符。如果所含正则表达式，以 ... 表示，在当前位置成功匹配时成功，否则失败。但一旦所含表达式已经尝试，匹配引擎根本没有提高；模式的剩余部分还要尝试界定符的右边。 \n \n \n (?! re) \n 前向否定界定符。与肯定界定符相反；当所含表达式不能在字符串当前位置匹配时成功。 \n \n \n (?> re) \n 匹配的独立模式，省去回溯。 \n \n \n (?P名称) \n 分组起别名 \n \n \n (?P=name) \n 引用别名为name分组匹配到的字符串 \n \n \n \\w \n 匹配数字字母下划线 \n \n \n \\W \n 匹配非数字字母下划线 \n \n \n \\s \n 匹配任意空白字符，等价于 [\\t\\n\\r\\f]。 \n \n \n \\S \n 匹配任意非空字符 \n \n \n \\d \n 匹配任意数字，等价于 [0-9]。 \n \n \n \\D \n 匹配任意非数字 \n \n \n \\A \n 匹配字符串开始 \n \n \n \\Z \n 匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串。 \n \n \n \\z \n 匹配字符串结束 \n \n \n \\G \n 匹配最后匹配完成的位置。 \n \n \n \\b \n 匹配一个单词边界，也就是指单词和空格间的位置。例如， \'er\\b\' 可以匹配"never" 中的 \'er\'，但不能匹配 "verb" 中的 \'er\'。 \n \n \n \\B \n 匹配非单词边界。\'er\\B\' 能匹配 "verb" 中的 \'er\'，但不能匹配 "never" 中的 \'er\'。 \n \n \n \\n, \\t \n 匹配一个换行符。匹配一个制表符 \n \n \n \\1...\\9 \n 匹配第n个分组的内容。 \n \n \n \\10 \n 匹配第n个分组的内容，如果它经匹配。否则指的是八进制字符码的表达式。 \n 正则使用 \n \n 一条正则表达式同时匹配IP（含有IPv6）和域名 \n 匹配文件后缀名的正则表达式 \n 循环下的正则匹配？说说正则中的lastIndex \n \n \n $1 、 \\1 匹配获取到的值 \n \n \n .*关键字.*\\r\\n  指定关键字的行 \n ^(.*?)$\\s+?^(?=.*^\\1$)  重复行 \n 关键字之后（包含关键字本身）的所有字符\n \n (关键字)(.*?$) \n 关键字.*$ \n (关键字)([^关键字]*$) \n \n \n 关键字之前（包含关键字本身）的所有字符\n \n ^([^关键字]*)关键字 \n ^.*关键字 \n (^.*?)关键字 \n \n \n (^.*?关键字.*?)关键字  每行中的第二个关键字之前（包含关键字本身）的所有字符 \n 查找目标 ^[^\\n]*\\n([^\\n]*)  替换为 \\1   隔行删除 \n 匹配不是空行的行尾： (?!^$)(\\n) \n 匹配Markdown文档\n \n 当页跳转链接(锚点) (\\[)(.*)(\\]\\(#)(.*)(\\)) 取值 $4 \n 外链 (\\[)(.*)(\\]\\()(.*)(\\)) 取值 $4 \n \n \n \n // 匹配字母、数字及所有英文符号 \n / ^ [ a - z_A - Z0 - 9 - \\ . ! @#\\$ % \\\\\\ ^ & \\ * \\ ) \\ ( \\ += \\ { \\ } \\ [ \\ ] \\ / ",\'<>~\\·`\\?:;|]+$ / \n\n // 用户名正则，4到16位（字母，数字，下划线，减号） \n var  uPattern  =   / ^[a-zA-Z0-9_-]{4,16}$ / ; \n // 输出 true \nconsole . log ( uPattern . test ( "iFat3" ) ) ; \n //密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符 \n var  pPattern  =   / ^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$ / ; \n //输出 true \nconsole . log ( "==" + pPattern . test ( "iFat3#" ) ) ; \n //正整数正则 \n var  posPattern  =   / ^\\d+$ / ; \n //负整数正则 \n var  negPattern  =   / ^-\\d+$ / ; \n //整数正则 \n var  intPattern  =   / ^-?\\d+$ / ; \n //输出 true \nconsole . log ( posPattern . test ( "42" ) ) ; \n //输出 true \nconsole . log ( negPattern . test ( "-42" ) ) ; \n //输出 true \nconsole . log ( intPattern . test ( "-42" ) ) ; \n // 数字正则 \n // 可以是整数也可以是浮点数 \n\n //正数正则 \n var  posPattern  =   / ^\\d*\\.?\\d+$ / ; \n //负数正则 \n var  negPattern  =   / ^-\\d*\\.?\\d+$ / ; \n //数字正则 \n var  numPattern  =   / ^-?\\d*\\.?\\d+$ / ; \nconsole . log ( posPattern . test ( "42.2" ) ) ; \nconsole . log ( negPattern . test ( "-42.2" ) ) ; \nconsole . log ( numPattern . test ( "-42.2" ) ) ; \n //Email正则： \n var  ePattern  =   / ^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$ / ; \n var  ePattern  =   / ^[a-z0-9A-Z]+[-|a-z0-9A-Z._]+@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\\\.)+[a-z]{2,}$ / ; \n // 使用new RegExp()时\\， 要变成\\双斜线 \n var  reg  =   new   RegExp ( "^[a-z0-9A-Z]+[-|a-z0-9A-Z._]+@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\\\.)+[a-z]{2,}$" ) ; \nconsole . log ( / ^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$ / . test ( "test@gmail.com" ) ) ; \n const  rePass  =   new   RegExp ( \'^([a-zA-Z0-9]+[_|\\\\_|\\\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\\\_|\\\\.]?)*[a-zA-Z0-9]+\\\\.[a-zA-Z]{2,3}$\' ,   \'\' ) ; \n // 只允许英文字母、数字、下划线、英文句号、以及中划线组成 \n var  ePattern  =   / ^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$ / ; \n // 名称允许汉字、字母、数字，域名只允许英文域名 \n var  ePattern  =   / ^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$ / ; \n //输出 true \nconsole . log ( ePattern . test ( "65974040@qq.com" ) ) ; \n //手机号正则 \n var  mPattern  =   / ^[1][3][0-9]{9}$ / ; \n //输出 true \nconsole . log ( mPattern . test ( "13900000000" ) ) ; \n //身份证号（18位）正则 \n var  cP  =   / ^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$ / ; \n //输出 true \nconsole . log ( cP . test ( "11010519880605371X" ) ) ; \n // URL正则 \n var  urlP =   / ^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$ / ; \n // 输出 true \nconsole . log ( urlP . test ( "http://42du.cn" ) ) ; \n // ipv4地址正则 \n var  ipP  =   / ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$ / ; \n // 输出 true \nconsole . log ( ipP . test ( "115.28.47.26" ) ) ; \n // 十六进制颜色正则 \n // RGB Hex颜色正则 \n var  cPattern  =   / ^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$ / ; \n // 输出 true \nconsole . log ( cPattern . test ( "#b8b8b8" ) ) ; \n // 日期正则，简单判定,未做月份及日期的判定 \n var  dP1  =   / ^\\d{4}(\\-)\\d{1,2}\\1\\d{1,2}$ / ; \n // 输出 true \nconsole . log ( dP1 . test ( "2017-05-11" ) ) ; \n // 输出 true \nconsole . log ( dP1 . test ( "2017-15-11" ) ) ; \n // 日期正则，复杂判定 \n var  dP2  =   / ^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$ / ; \n // 输出 true \nconsole . log ( dP2 . test ( "2017-02-11" ) ) ; \n // 输出 false \nconsole . log ( dP2 . test ( "2017-15-11" ) ) ; \n // 输出 false \nconsole . log ( dP2 . test ( "2017-02-29" ) ) ; \n // QQ号正则，5至11位 \n var  qqPattern  =   / ^[1-9][0-9]{4,10}$ / ; \n // 输出 true \nconsole . log ( qqPattern . test ( "65974040" ) ) ; \n // 微信号正则，6至20位，以字母开头，字母，数字，减号，下划线 \n var  wxPattern  =   / ^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$ / ; \n // 输出 true \nconsole . log ( wxPattern . test ( "RuilongMao" ) ) ; \n // 车牌号正则 \n var  cPattern  =   / ^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$ / ; \n // 输出 true \nconsole . log ( cPattern . test ( "京K39006" ) ) ; \n // 包含中文正则 \n var  cnPattern  =   / [\\u4E00-\\u9FA5] / ; \n // 输出 true \nconsole . log ( cnPattern . test ( "42度" ) ) ; \n \n Regex_Phones :   / ^[0-9],$ / ,   // 数字和逗号 \n Regex_Ident :   / ^([a-zA-Z0-9]){1,50}$ / ,   //英文、数字且不能包含英文标点和特殊符号(渠道标识) \n Regex_IdentName :   / ^([\\u2E80-\\u9FFF]|[a-zA-Z0-9]){1,50}$ / ,   //中文、英文、数字且不能包含英文标点和特殊符号(渠道名称) \n Regex_MondyNum :   / ^\\d+(\\.\\d{1,2})?$ / ,   //金额，允许两位小数 \n Regex_MondyCh :   / ^[\\u4e00-\\u9fa5]+$ / ,   //只能为中文 \n Regex_PhoneNum :   / (^(([0\\+]\\d{2,3}-)?(0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$)|(^0{0,1}1[3|4|5|6|7|8|9][0-9]{9}$) / ,   //电话号码和手机 \n Regex_ZNum :   / ^[1-9]\\d*$ /   //正整数 \n Regex_Name :   / ^[a-zA-Z][a-zA-Z0-9_@]{0,30}$ / ,   // 用户名 \n Regex_NickName :   / ^[\\u4E00-\\u9FA5A-Za-z0-9_\\-]+$ / ,   // 中文/英文/数字， (昵称、组名、朋友备注名、内容名称、书名、页名)  \n Regex_Passport :   / ^1[45][0-9]{7}$|G[0-9]{8}$|P\\.[0-9]{7}$|S[0-9]{7,8}$|D[0-9]{7,8}$ / ,   // 护照 \n Regex_BizLience :   / ^([0-9a-zA-Z]{18}$|\\d{15}$) / ,   // 营业执照,三证合一的是18位 \n Regex_isExitZh : / [\\u4E00-\\u9FA5\\uF900-\\uFA2D] / ,   // 验证是否存在中文 \n Regex_price : / ^\\d+(\\.\\d{1,2})?$ /   // 数字 . 最多两位有效数字 \n Regex_EnghlishNum : / ^(?=.*\\d)(?=.*[a-z])[a-zA-Z\\d]{6,20}$ /   //6至20位英文和数字组合 \n Regex_Phone :   / ^0?(13[0-9]|15[012356789]|18[0-9]|14[57])[0-9]{8}$ / ,   // 手机号 \n Regex_Mobile :   / ^0?(13[0-9]|15[012356789]|18[0-9]|14[57])[0-9]{8}$ / ,   // 手机号 \n Regex_Card :   / \\\\d{14}[[0-9],0-9xX] / ,   // 身份证号  \n Regex_Email :   / ^[a-zA-Z0-9]+([._\\\\-]*[a-zA-Z0-9])*@([a-zA-Z0-9]+[-a-zA-Z0-9]*[a-zA-Z0-9]+.){1,63}[a-zA-Z0-9]+$ / ,   // 邮箱 \n Regex_RealName :   / ^[a-zA-Z\\u4e00-\\u9fa5]{0,}$ / ,   // 真实姓名、朋友昵称、朋友全称、组名称、组标签 \n Regex_text :   / ^[\\u4e00-\\u9fa5]{0,}$ / ,   // 地区 、省份、城市 \n Regex_NumPeriod : / ^[\\d]+.+。 / ,   //数字开头，句号结尾  \n\n Regex_NumFloat : / ^(\\-|\\+)?\\d+(\\.\\d+)?$ / ,   //正负数字 \n \n function   isUrL ( url )   { \n     var  sRegex  =   \'^((https|http|ftp|rtsp|mms)?://)\'   +   \'?(([0-9a-z_!~*\\\'().&=+$%-]+: )?[0-9a-z_!~*\\\'().&=+$%-]+@)?\'   //ftp的user@  \n         +   \'(([0-9]{1,3}.){3}[0-9]{1,3}\'   // IP形式的URL- 199.194.52.184  \n         +   \'|\'   // 允许IP和DOMAIN（域名）  \n         +   \'([0-9a-z_!~*\\\'()-]+.)*\'   // 域名- www.  \n         +   \'([0-9a-z][0-9a-z-]{0,61})?[0-9a-z].\'   // 二级域名  \n         +   \'[a-z]{2,6})\'   // first level domain- .com or .museum  \n         +   \'(:[0-9]{1,4})?\'   // 端口- :80  \n         +   \'((/?)|\'   // a slash isn\'t required if there is no file name  \n         +   \'(/[0-9a-z_!~*\\\'().;?:@&=+$,%#-]+)+/?)$\' ; \n     var  re  =   new   RegExp ( sRegex ) ; \n     //re.test()  \n     if   ( re . test ( url ) )   { \n         return   true ; \n     } \n     return   false ; \n } \n \n ',createdTime:1761814324e3},{title:"PythonGUI",frontmatter:{description:"https://github.com/pyqtgraph/pyqtgraph\n流程图 https://github.com/leon-thomm/Ryven\n自动操作GUI https://github.com/asweigart/pyautogui\n    Python自动操作GUI神器PyAutoGUI\nhttps://github.com/pywinauto/pywinauto\nhttps://github.com/willmcgugan/textual\nhttps://github.com/pygame/pygame\nhttps://github.com/PySimpleGUI\nhttps://github.com/hoffstadt/DearPyGui\nhttps://github.com/PyQwt\n跨平台 https://github.com/kivy\nhttps://github.com/beeware\n    https://github.com/pybee\nhttps://github.com/flet-dev/flet\n命令行转GUI https://github.com/chriskiehl/Gooey\n检测暗模式 https://github.com/albertosottile/darkdetect",meta:[{name:"twitter:title",content:"PythonGUI"},{name:"twitter:description",content:"https://github.com/pyqtgraph/pyqtgraph\n流程图 https://github.com/leon-thomm/Ryven\n自动操作GUI https://github.com/asweigart/pyautogui\n    Python自动操作GUI神器PyAutoGUI\nhttps://github.com/pywinauto/pywinauto\nhttps://github.com/willmcgugan/textual\nhttps://github.com/pygame/pygame\nhttps://github.com/PySimpleGUI\nhttps://github.com/hoffstadt/DearPyGui\nhttps://github.com/PyQwt\n跨平台 https://github.com/kivy\nhttps://github.com/beeware\n    https://github.com/pybee\nhttps://github.com/flet-dev/flet\n命令行转GUI https://github.com/chriskiehl/Gooey\n检测暗模式 https://github.com/albertosottile/darkdetect"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Python/PythonGUI.html"},{property:"og:type",content:"article"},{property:"og:title",content:"PythonGUI"},{property:"og:description",content:"https://github.com/pyqtgraph/pyqtgraph\n流程图 https://github.com/leon-thomm/Ryven\n自动操作GUI https://github.com/asweigart/pyautogui\n    Python自动操作GUI神器PyAutoGUI\nhttps://github.com/pywinauto/pywinauto\nhttps://github.com/willmcgugan/textual\nhttps://github.com/pygame/pygame\nhttps://github.com/PySimpleGUI\nhttps://github.com/hoffstadt/DearPyGui\nhttps://github.com/PyQwt\n跨平台 https://github.com/kivy\nhttps://github.com/beeware\n    https://github.com/pybee\nhttps://github.com/flet-dev/flet\n命令行转GUI https://github.com/chriskiehl/Gooey\n检测暗模式 https://github.com/albertosottile/darkdetect"},{property:"og:url",content:"https://bajins.com/Python/PythonGUI.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"PythonGUI"},{itemprop:"description",content:"https://github.com/pyqtgraph/pyqtgraph\n流程图 https://github.com/leon-thomm/Ryven\n自动操作GUI https://github.com/asweigart/pyautogui\n    Python自动操作GUI神器PyAutoGUI\nhttps://github.com/pywinauto/pywinauto\nhttps://github.com/willmcgugan/textual\nhttps://github.com/pygame/pygame\nhttps://github.com/PySimpleGUI\nhttps://github.com/hoffstadt/DearPyGui\nhttps://github.com/PyQwt\n跨平台 https://github.com/kivy\nhttps://github.com/beeware\n    https://github.com/pybee\nhttps://github.com/flet-dev/flet\n命令行转GUI https://github.com/chriskiehl/Gooey\n检测暗模式 https://github.com/albertosottile/darkdetect"}]},regularPath:"/Python/PythonGUI.html",relativePath:"Python/PythonGUI.md",key:"v-c5677bfe",path:"/Python/PythonGUI.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"wxPython",slug:"wxpython"},{level:3,title:"方法",slug:"方法"},{level:3,title:"wx.Event的子类",slug:"wx-event的子类"},{level:3,title:"style样式常量",slug:"style样式常量"},{level:3,title:"欢迎界面",slug:"欢迎界面"},{level:3,title:"多线程防假死与线程间传递消息",slug:"多线程防假死与线程间传递消息"},{level:2,title:"PySide",slug:"pyside"},{level:3,title:"多线程防假死动态刷新界面",slug:"多线程防假死动态刷新界面"},{level:2,title:"打包",slug:"打包"},{level:3,title:"PyInstalle",slug:"pyinstalle"},{level:3,title:"py2exe",slug:"py2exe"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' PythonGUI \n Flag wxPython 方法 wx.Event的子类 style样式常量 欢迎界面 多线程防假死与线程间传递消息 PySide 多线程防假死动态刷新界面 打包 PyInstalle py2exe \n Flag \n \n https://github.com/pyqtgraph/pyqtgraph \n 流程图  https://github.com/leon-thomm/Ryven \n 自动操作GUI  https://github.com/asweigart/pyautogui \n \n Python自动操作GUI神器PyAutoGUI \n \n \n https://github.com/pywinauto/pywinauto \n https://github.com/willmcgugan/textual \n https://github.com/pygame/pygame \n https://github.com/PySimpleGUI \n https://github.com/hoffstadt/DearPyGui \n https://github.com/PyQwt \n 跨平台  https://github.com/kivy \n https://github.com/beeware \n \n https://github.com/pybee \n \n \n https://github.com/flet-dev/flet \n 命令行转GUI  https://github.com/chriskiehl/Gooey \n 检测暗模式  https://github.com/albertosottile/darkdetect \n \n \n https://github.com/zwjjiaozhu/gitchat_download \n PDF工具箱  https://github.com/LC044/EasyBox \n \n Tkinter \n \n https://docs.python.org/zh-cn/3/library/tkinter.html \n \n \n https://sourceforge.net/projects/tcl \n https://github.com/doudoudzj/tkinter-learn \n https://github.com/doudoudzj/tkinter-examples \n https://github.com/ParthJadhav/Tkinter-Designer \n https://github.com/honghaier-game/TKinterDesigner \n \n PyQt \n \n https://github.com/qt/qt5 \n https://github.com/pyqt \n https://github.com/PyQt5/PyQt \n https://github.com/PyQt5/QtDesigner \n \n \n https://github.com/ColinDuquesnoy/QDarkStyleSheet \n https://github.com/mottosso/Qt.py \n https://github.com/zhiyiYo/PyQt-Fluent-Widgets \n 并发库  https://github.com/AresConnor/pyqt5-concurrent \n \n \n PyQt5快速开发与实战  https://github.com/cxinping/PyQt5 \n PyQt5中文教程  https://github.com/maicss/PyQt5-Chinese-tutorial \n https://github.com/maicss/PyQt-Chinese-tutorial \n Qt开发经验  https://github.com/feiyangqingyun/qtkaifajingyan \n \n \n pyqt5 参考代码 github 参考项目 \n https://github.com/songquanpeng/gofile-launcher \n \n PyGObject \n \n https://pygobject.readthedocs.io/en/latest/ \n \n \n PyGObject 是一个 Python 包，它为基于 GObject 的库提供绑定，例如 GTK 、 GStreamer 、 WebKitGTK 、 GLib 、 GIO 等等。 \n \n \n 它支持 Linux ， Windows 和 macOS ，适用于 Python2.7+ 、 Python3.5+ 、 PyPy 和 PyPy3 。 \n wxPython \n \n https://github.com/wxWidgets/Phoenix \n https://wxpython.org/pages/overview/ \n \n \n wxPython 是一个用于 Python 编程语言的跨平台 GUI 工具包。包含流行的 wxWidgets 跨平台库的 GUI 组件，该库是用 C++ 编写的。 \n \n \n 目前支持的平台是 Windows 、 Mac OS X 、 macOS 、 Linux 或其他具有 GTK2 或 GTK3 库的类 Unix 系统。 \n \n \n http://thisis.yorven.site/blog/index.php/2017/09/16/wxpython-jiaocheng-yi/ \n https://github.com/necan/wxPython-tutorial/blob/master/1.%E4%BB%8B%E7%BB%8D.md \n https://jusene.github.io/2017/12/26/wxpython/ \n https://github.com/ubbn/wxPython \n \n \n wx.Window  是一个基类，许多构件从它继承。包括 wx.Frame 构件。可以在所有的子类中使用 wx.Window 的方法。 \n wx.adv 模块包含比核心命名空间中更高级和/或更少使用的类。\n它们在单独的模块中提供，以帮助减少那些不需要任何这些类的应用程序的开销和依赖性。 \n 方法 \n \n SetTitle( string title )  设置窗口标题。只可用于框架和对话框 \n SetToolTip( wx.ToolTip tip )  为窗口添加提示 \n SetSize( wx.Size size )  设置窗口的尺寸 \n SetPosition( wx.Point pos )  设置窗口出现的位置 \n Show( show = True )  显示或隐藏窗口。其中的参数可以为 True 或 False \n Move( wx.Point pos )  将窗口移动到指定位置 \n SetCursor( wx.StockCursor id )  设置窗口的鼠标指针样式 \n Refresh  刷新窗口 \n wx.CallLater(millis, callableObj, *args, **kwargs)  最抽象的线程安全函数 \n wx.CallAfter(callable, *args, **kwargs)  该函数是在当前和待处理事件处理程序完成后调用指定的函数。 \n \n \n 这个方法是利用PostEvent()来实现的。执行这个方法后，将在主事件循环中加入一个事件，然后通过事件循环进行处理。\n这其实是一种异步的方法，适用于一个非GUI的处理过程要调用GUI的方法，或子线程调用主线程的方法，\n或在一个事件处理函数中异步调用另一个事件处理，还有就是上面的问题。这个方法使用很方便，不需要自定义事件，绑定事件，Post事件。 \n \n \n 示例： wx.CallAfter(pub.sendMessage, "update", msg=text)  订阅update主题并发送消息 \n \n \n wx.FutureCall(milliseconds, callable, *args, **kwargs)  从wx.Timer中派生出来的，它的作用是在指定时间之后执行一个方法。 \n pub.subscribe(self.update_display, "update")  发布一个叫update的主题，触发update_display函数 \n pub.sendMessage("update", msg=\'测试\', status=0) 给update主题发送消息， msg 和 status 都是自定义键值对 \n wx.Event的子类 \n \n wx.CloseEvent :框架关闭时触发，事件类型有普通框架关闭和系统关闭事件。 \n wx.CommandEvent ：与窗口部件的简单的交互都会触发此事件，如按钮单击，菜单项选择等。 \n wx.KeyEvent :按键动作。 \n wx.MouseEvent ：鼠标事件。 \n wx.PaintEvent :当窗口内容被重画时触发。 \n wx.SizeEvent :窗口大小或布局改变时触发。 \n wx.TimerEvent :由类wx.Timer创建，定期事件。 \n style样式常量 \n \n Frame \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.DEFAULT_FRAME_STYLE \n 默认的框架样式 \n \n \n \n wx.CAPTION \n 标题 \n \n \n \n wx.MINIMIZE_BOX \n 缩小 \n \n \n \n wx.MAXIMIZE_BOX \n 放大 \n \n \n \n wx.CLOSE_BOX \n 关闭 \n \n \n \n wx.SYSTEM_MENU \n 系统菜单 \n \n \n \n wx.RESIZE_BORDER \n 恢复窗口大小 \n \n \n \n wx.STAY_ON_TOP \n 固定不能移动 \n \n \n \n wx.FRAME_FLOAT_ON_PARENT \n \n \n \n \n \n \n StaticText \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.ALIGN_LEFT \n 控制标签的大小及对齐 \n \n \n \n wx.ALIGN_RIGHT \n 控制标签的大小及对齐 \n \n \n \n wx.ALIGN_CENTER \n 控制标签的大小及对齐 \n \n \n \n wx.ST_NO_AUTORESIZE \n 防止标签的自动调整大小 \n \n \n \n wx.ST_ELLIPSIZE_START \n 省略号(...)显示在开始，如果文本的大小大于标签尺寸 \n \n \n \n wx.ST_ELLIPSIZE_MIDDLE \n 省略号(...)显示在中间，如果文本的大小大于标签尺寸 \n \n \n \n wx.ST_ELLIPSIZE_END \n 省略号(...)显示在结尾，如果文本的大小大于标签尺寸 \n \n \n \n \n \n Font \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n Wx.FONTSTYLE_NORMAL \n 字体绘制不使用倾斜 \n fontfamiy参数 \n \n \n wx.FONTSTYLE_ITALIC \n 字体是斜体 \n fontfamiy参数 \n \n \n wx.FONTSTYLE_SLANT \n 字体是倾斜的，但以罗马风格形式 \n fontfamiy参数 \n \n \n Wx.FONTWEIGHT_NORMAL \n 普通字体 \n fontweight参数 \n \n \n wx.FONTWEIGHT_LIGHT \n 高亮字体 \n fontweight参数 \n \n \n wx.FONTWEIGHT_BOLD \n 粗体 \n fontweight参数 \n \n \n \n \n TextCtrl \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.TE_MULTILINE \n 文本控件允许多行，如果未指定该样式，换行字符不应该在控件中使用 \n \n \n \n wx.TE_PASSWORD \n 文本将回显星号 \n \n \n \n wx.TE_READONLY \n 文本将不可编辑 \n \n \n \n wx.TE_LEFT \n 在控件中的文本将左对齐 \n \n \n \n wx.TE_CENTER \n 在控件中的文本将居中对齐 \n \n \n \n wx.TE_RIGHT \n 在控件中的文本将居右对齐 \n \n \n \n wx.HSCROLL \n 如果文字控制元件是多行的，并且如果该样式被声明了，那么长的行将不会自动换行，并显示水平滚动条。该选项在GTK+中被忽略。 \n \n \n \n wx.TE_AUTO_URL \n 如果丰富文字选项被设定并且平台支援的话，那么当用户的鼠标位于文字中的一个URL上或在该URL上敲击时，这个样式将导致一个事件被生成。 \n \n \n \n wx.TE_DONTWRAP \n wx.HSCROLL的别名。 \n \n \n \n wx.TE_LINEWRAP \n 对于太长的行，以字元为界换行。某些操作系统可能会忽略该样式。 \n \n \n \n wx.TE_RICH \n 用于Windows下，丰富文字控制元件用作基本的视窗部件。这允许样式文字的使用。 \n \n \n \n wx.TE_RICH2 \n 用于Windows下，把最新版本的丰富文字控制元件用作基本的视窗部件。 \n \n \n \n wx.TE_WORDWRAP \n 对于太长的行，以单词为界换行。许多操作系统会忽略该样式。 \n \n \n \n \n \n CheckBox \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.CHK_2STATE \n 创建两个状态复选框，默认 \n \n \n \n wx.CHK_3STATE \n 创建三态复选框 \n \n \n \n wx.ALIGN_RIGHT \n 把一个盒子标签放在复选框的左侧 \n \n \n \n \n \n ComboBox \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.CB_SIMPLE \n 组合框与永久显示的列表 \n \n \n \n wx.CB_DROPDOWN \n 组合框与下拉列表 \n \n \n \n wx.CB_READONLY \n 选择的项目是不可编辑 \n \n \n \n wx.CB_SORT \n 列表显示按字母顺序 \n \n \n \n \n \n Guage \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.GA_HORIZONTAL \n 进度条的横向布局 \n \n \n \n wx.GA_VERTICAL \n 进度条的垂直布局 \n \n \n \n wx.GA_SMOOTH \n 平滑的进度条使用一个像素宽度的更新步骤 \n \n \n \n wx.GA_TEXT \n 显示当前值在百分比形式 \n \n \n \n \n \n Slider \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.SL_HORIZONTAL \n 水平滑块 \n \n \n \n wx.SL_VERTICAL \n 垂直滑块 \n \n \n \n wx.SL_AUTOTICKS \n 在滑块显示tickmarks \n \n \n \n wx.SL_LABELS \n 显示最小值，最大值和当前值 \n \n \n \n wx.SL_MIN_MAX_LABELS \n 显示最小值和最大值 \n \n \n \n wx.SL_VALUE_LABEL \n 只显示当前值 \n \n \n \n \n \n ToolBar \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.TB_FLAT \n 提供该工具栏平面效果 \n \n \n \n wx.TB_HORIZONTAL \n 指定水平布局(默认) \n \n \n \n wx.TB_VERTICAL \n 指定垂直布局 \n \n \n \n wx.TB_DEFAULT_STYLE \n 结合wx.TB_FLAT和wx.TB_HORIZONTAL \n \n \n \n wx.TB_DOCKABLE \n 使工具栏浮动和可停靠 \n \n \n \n wx.TB_NO_TOOLTIPS \n 当鼠标悬停在工具栏不显示简短帮助工具提示 \n \n \n \n wx.TB_NOICONS \n 指定工具栏按钮没有图标，默认显示 \n \n \n \n wx.TB_TEXT \n 显示在工具栏按钮上的文本，默认只有图标显示 \n \n \n \n \n \n Dialog \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.CAPTION \n 对话框的文字说明 \n \n \n \n wx.DEFAULT_DIALOG_STYLE \n wx.CLOSE_BOX和wx.SYSTEM_MENU的组合 \n \n \n \n wx.RESIZE_BORDER \n 显示可调整窗口的大小 \n \n \n \n wx.SYSTEM_MENU \n 显示系统菜单 \n \n \n \n wx.CLOSE_BOX \n 框架上显示关闭 \n \n \n \n wx.MAXIMIZE_BOX \n 在对话框中显示一个最大化框 \n \n \n \n wx.MINIMIZE_BOX \n 在对话框中显示一个最小化框 \n \n \n \n wx.STAY_ON_TOP \n 确保对话框停留在所有其他窗口的顶部 \n \n \n \n wx.DIALOG_NO_PARENT \n 为防止产生无看管对话框，不推荐使用模态对话框 \n \n \n \n \n \n FileDialog \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.FD_DEFAULT_STYLE \n 相当于wx.FD_OPEN \n \n \n \n wx.FD_OPEN \n 这是一个打开的对话框，该对话框的默认按钮的标签是‘打开’ \n \n \n \n wx.FD_SAVE \n 这是一个保存对话框，该对话框的默认按钮的标签是‘保存’ \n \n \n \n wx.FD_OVERWRITE_PROMPT \n 对于只保存的对话框，如果一个文件将被覆盖，提示进行确认 \n \n \n \n wx.FD_MULTIPLE \n 仅适合打开的对话框，允许选择多个文件 \n \n \n \n wx.FD_CHANGE_DIR \n 更改当前工作目录到用户选择的文件目录 \n \n \n \n \n \n SplitterWindow \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.SP_3D \n 绘制3d效果边框和窗扇 \n \n \n \n wx.SP_THIN_SASH \n 绘制一个薄窗扇 \n \n \n \n wx.SP_3DSASH \n 绘制3d效果窗扇 \n \n \n \n wx.SP_BORDER \n 绘制标准边框 \n \n \n \n wx.SP_NOBORDER \n 无边框 \n \n \n \n wx.SP_PERMIT_UNSPLIT \n 总是允许取消分割，即使采用最小的窗格大小不为零 \n \n \n \n \n \n HTMLWindow \n \n \n \n \n 参数 \n 描述 \n 说明 \n \n \n \n \n wx.HW_SCROLLBAR_NEVER \n 永远不显示滚动条，即使是页面比窗口大 \n \n \n \n wx.HW_SCROLLBAR_AUTO \n 只在页面大小超过窗口大小显示滚动条 \n \n \n \n wx.HW_NO_SELECTION \n 不要让用户选择文本 \n 欢迎界面 \n import  wx . adv\n import  time\n def   creat_splash ( ) : \ncreate a welcome screen \n    screen  =  wx . Image ( "file.png" ) . ConvertToBitmap ( ) \n参数1000代表 界面显示1s，后面添加1s延时，等欢迎界面结束后再启动主界面。 \n    wx . adv . SplashScreen ( screen ,  wx . adv . SPLASH_CENTRE_ON_SCREEN  |  wx . adv . SPLASH_TIMEOUT ,   1000 ,   None ,   - 1 ) \n    time . sleep ( 1 ) \n \n import  wx\n #自定义一个窗口类MyFrame \n class   MyFrame ( wx . Frame ) : \n     def   __init__ ( self ) : \n         super ( ) . __init__ ( parent = None , title = "下拉列表" , size = ( 400 , 130 ) ) \n        self . Center ( )   #设置窗口居中 \n         #放一个面板，用于布局其他控件 \n        panel = wx . Panel ( parent = self ) \n        hbox1 = wx . BoxSizer ( wx . HORIZONTAL ) \n         #创建静态文本 \n        statictext = wx . StaticText ( panel , label = \'选择你喜欢的编程语言：\' ) \n        list1 = [ \'Python\' , \'Java\' , "C++" ] \n        ch1 = wx . ComboBox ( panel , - 1 , value = \'C\' , choices = list1 , style = wx . CB_SORT ) \n         #添加事件处理 \n        self . Bind ( wx . EVT_COMBOBOX , self . on_combobox , ch1 ) \n\n        hbox1 . Add ( statictext , 1 , flag = wx . LEFT  | wx . RIGHT | wx . FIXED_MINSIZE , border = 5 ) \n        hbox1 . Add ( ch1 , 1 , flag = wx . LEFT  | wx . RIGHT | wx . FIXED_MINSIZE , border = 5 ) \n\n        hbox2 = wx . BoxSizer ( wx . HORIZONTAL ) \n        statictext = wx . StaticText ( panel , label = \'选择性别：\' ) \n        list2 = [ \'男\' , \'女\' ] \n        ch2 = wx . Choice ( panel , - 1 , choices = list2 ) \n        hbox2 . Add ( statictext , 1 , flag = wx . LEFT  | wx . RIGHT | wx . FIXED_MINSIZE , border = 5 ) \n        hbox2 . Add ( ch2 , 1 , flag = wx . LEFT  | wx . RIGHT | wx . FIXED_MINSIZE , border = 5 ) \n\n         #添加事件处理 \n        self . Bind ( wx . EVT_CHOICE , self . on_choice , ch2 ) \n        vbox = wx . BoxSizer ( wx . VERTICAL ) \n        vbox . Add ( hbox1 , 1 , flag = wx . ALL | wx . EXPAND , border = 5 ) \n        vbox . Add ( hbox2 , 1 , flag = wx . ALL | wx . EXPAND , border = 5 ) \n        \n\n         #ListBox类实例 wx.LB_SINGLE只能选择单个 \n        self . listbox1  =  wx . ListBox ( panel , - 1 , ( 50 , 80 ) , ( 200 ,   60 ) , list1 , wx . LB_SINGLE ) \nwx.LB_MULTIPLE多选 \n        self . listbox2  =  wx . ListBox ( panel ,   - 1 , ( 50 ,   150 ) ,   ( 200 ,   60 ) ,  list2 ,  wx . LB_MULTIPLE ) \n         #CheckListBox类实例 \n        self . listbox3  =  wx . CheckListBox ( panel , - 1 , ( 300 , 80 ) , ( 200 ,   60 ) , list1 ) \n         #Choice类实例 \n        self . listbox4  =  wx . Choice ( panel , - 1 , ( 300 , 200 ) , ( 200 ,   40 ) , list2 ) \n        self . listbox4 . Bind ( wx . EVT_CHOICE , self . One_Play ) \n         #进度条展示 \n        self . gauge1  =  wx . Gauge ( panel , - 1 , 100 , ( 50 ,   250 ) ,   ( 200 ,   60 ) ) \n        self . value  =   1 \n        self . gauge1 . SetValue ( self . value ) \n         #将wx空闲的事件绑定到进度条上 \n        self . Bind ( wx . EVT_IDLE , self . Gauge_Test ) \n         #滑块 \n        self . slider  =  wx . Slider ( panel , - 1 , 10 , 10 , 100 , ( 300 ,   350 ) ,   ( 200 ,   60 ) ) \n        self . slider . Bind ( wx . EVT_SCROLL , self . Slider_Test ) \n\n        panel . SetSizer ( vbox ) \n\n     def   on_combobox ( self , event ) : \n         print ( "选择{0}" . format ( event . GetString ( ) ) ) \n\n     def   on_choice ( self , event ) : \n         print ( "选择{0}" . format ( event . GetString ( ) ) ) \n\n #自定以一个应用程序类 \n class   App ( wx . App ) : \n     def   OnInit ( self ) : \n         #创建窗口对象 \n        frame = MyFrame ( ) \n        frame . Show ( ) \n         return   True \n     def   OnExit ( self ) : \n         print ( "应用程序退出" ) \n         return   0 \n\n if  __name__ == \'__main__\' : \n    app = App ( ) #创建自定以对象App \n    app . MainLoop ( ) \n 多线程防假死与线程间传递消息 \n \n wxpython线程安全方法 \n \n \n WxPython4.0 以后不用 wx.lib.pubsub 来做消息通讯了，改用 pubsub ，如果继续用 wx.lib.pubsub ，会有警告提示 \n \n pip  install  pypubsub\n \n \n 示例一 \n \n import  time\n import  wx\n from  threading  import  Thread\n from  pubsub  import  pub\n\n\n def   work_proc ( ) : \n     """\n    耗时长的代码\n    :return:\n    """ \n    sum_x  =   0 \n     for  i  in   range ( 1 ,   101 ) : \n        sum_x  =  sum_x  +  i\n        time . sleep ( 0.1 ) \n        pub . sendMessage ( "update" ,  msg = \'计算{} , 合计 {}\' . format ( i ,  sum_x ) ,  status = 1 ) \n     return  sum_x\n\n\n class   WorkThread ( Thread ) : \n     """\n    线程调用耗时长代码\n    """ \n\n     def   __init__ ( self ) : \n         """\n        线程实例化时立即启动\n        """ \n        Thread . __init__ ( self ) \n        self . start ( ) \n\n     def   run ( self ) : \n         """\n        线程执行的代码\n        :return:\n        """ \n        result  =  work_proc ( ) \n        time . sleep ( 2 ) \n        pub . sendMessage ( "update" ,  msg = \'计算完成，结果 {}\' . format ( result ) ,  status = 0 ) \n\n\n class   MainForm ( wx . Frame ) : \n     def   __init__ ( self ,  parent = None ) : \n        wx . Frame . __init__ ( self ,  parent ,   id = wx . ID_ANY ,  title = "Bajins工具" ,  pos = wx . DefaultPosition , \n                          style = wx . DEFAULT_FRAME_STYLE  |  wx . TAB_TRAVERSAL ) \n允许指定最小和最大窗口大小以及窗口大小增量。 \n        self . SetSizeHints ( wx . Size ( 400 ,   30 ) ,  wx . DefaultSize ,  wx . DefaultSize ) \n        self . CreateStatusBar ( ) \n        self . SetStatusText ( "启动完成!" ) \n\n        sizer2  =  wx . GridSizer ( 0 ,   3 ,   0 ,   0 ) \n        self . m_button2  =  wx . Button ( self ,  wx . ID_ANY ,   "开始计算" ,  wx . DefaultPosition ,  wx . DefaultSize ,   0 ) \n        sizer2 . Add ( self . m_button2 ,   0 ,  wx . ALL  |  wx . ALIGN_CENTER_HORIZONTAL  |  wx . ALIGN_CENTER_VERTICAL ,   5 ) \n\n        self . st  =  wx . StaticText ( self ,  label = "测试" ,  pos = ( 50 ,   50 ) ) \n        font  =  self . st . GetFont ( ) \n        font . PointSize  +=   5 \n        font  =  font . Bold ( ) \n        self . st . SetFont ( font ) \n        sizer2 . Add ( self . st ,   0 ,  wx . ALL  |  wx . ALIGN_CENTER_HORIZONTAL  |  wx . ALIGN_CENTER_VERTICAL ,   5 ) \n\n        self . SetSizer ( sizer2 ) \n        self . Layout ( ) \n        sizer2 . Fit ( self ) \n        self . Centre ( wx . BOTH ) \n        self . m_button2 . Bind ( wx . EVT_BUTTON ,  self . on_button ) \n发布一个叫update的主题，触发update_display函数 \n        pub . subscribe ( self . update_display ,   "update" ) \n\n     def   update_display ( self ,  msg ,  status ) : \n         """\n        从线程接收数据并更新显示\n        """ \n         if  status  ==   0 : \n            self . SetStatusText ( \'完成！\' ) \n启用按钮 \nself.m_button2.Enable(True) \n            self . m_button2 . Enable ( ) \n         elif  status  ==   1 : \n            self . st . SetLabel ( msg ) \n\n     def   on_button ( self ,  event ) : \n        WorkThread ( ) \n        self . SetStatusText ( \'开始计算，代码不提供中断线程语句，请等待计算结束！\' ) \n禁用按钮 \nself.m_button2.Enable(False) \n        event . GetEventObject ( ) . Disable ( ) \n\n\n if  __name__  ==   "__main__" : \n    app  =  wx . App ( ) \n    MainForm ( ) . Show ( ) \n    app . MainLoop ( ) \n\n \n \n 示例二 \n \n import  time\n import  wx\n from  threading  import  Thread\n from  pubsub  import  pub\n\n\n class   MainThread ( Thread ) : \n     def   __init__ ( self ) : \n线程实例化时立即启动 \n        Thread . __init__ ( self ) \n        self . start ( ) \n\n     def   run ( self ) : \n线程执行的代码 \n         for  i  in   range ( 101 ) : \n            time . sleep ( 0.03 ) \n订阅update主题 \n            wx . CallAfter ( pub . sendMessage ,   "update" ,  msg = i ) \n            time . sleep ( 0.5 ) \n\n\n class   MainForm ( wx . Frame ) : \n     def   __init__ ( self ,  parent = None ) : \n        wx . Frame . __init__ ( self ,  parent ,   id = wx . ID_ANY ,  title = "Bajins工具" ,  pos = wx . DefaultPosition , \n                          style = wx . DEFAULT_FRAME_STYLE  |  wx . TAB_TRAVERSAL ) \n允许指定最小和最大窗口大小以及窗口大小增量。 \n        self . SetSizeHints ( wx . Size ( 400 ,   30 ) ,  wx . DefaultSize ,  wx . DefaultSize ) \n\n        self . CreateStatusBar ( ) \n        self . SetStatusText ( "启动完成!" ) \n\n        sizer  =  wx . BoxSizer ( wx . HORIZONTAL ) \n        self . m_button2  =  wx . Button ( self ,  wx . ID_ANY ,   "执行线程" ) \n        sizer . Add ( self . m_button2 ,   0 ,  wx . ALL  |  wx . ALIGN_CENTER_HORIZONTAL  |  wx . ALIGN_CENTER_VERTICAL ,   5 ) \n\n        self . m_staticText2  =  wx . StaticText ( self ,  wx . ID_ANY ,   "0%" ) \n        self . m_staticText2 . Wrap ( - 1 ) \n        sizer . Add ( self . m_staticText2 ,   0 ,  wx . ALL  |  wx . SIZE_FORCE  |  wx . ALIGN_CENTER_VERTICAL ,   5 ) \n\n        self . m_gauge1  =  wx . Gauge ( self ,  wx . ID_ANY ,   100 ) \n        self . m_gauge1 . SetValue ( 0 ) \n        sizer . Add ( self . m_gauge1 ,   0 ,  wx . ALL  |  wx . ALIGN_CENTER_VERTICAL ,   5 ) \n\n        self . SetSizer ( sizer ) \n        self . Layout ( ) \n        sizer . Fit ( self ) \n        self . Centre ( wx . BOTH ) \n        self . m_button2 . Bind ( wx . EVT_BUTTON ,  self . on_button ) \n发布一个叫update的主题，触发update_display函数 \n        pub . subscribe ( self . update_display ,   "update" ) \n\n     def   update_display ( self ,  msg ) : \n如果是数字，说明线程正在执行，显示数字 \n         if   isinstance ( msg ,   int ) : \n            self . m_staticText2 . SetLabel ( "%s%%"   %  msg ) \n            self . m_gauge1 . SetValue ( msg ) \n         else : \n否则线程未执行，将按钮重新开启 \n            self . m_staticText2 . SetLabel ( "%s"   %  msg ) \n            self . m_button2 . Enable ( ) \n\n     def   on_button ( self ,  event ) : \n        MainThread ( ) \n        self . SetStatusText ( "线程开始" ) \n禁用按钮 \n        event . GetEventObject ( ) . Disable ( ) \n\n\n if  __name__  ==   "__main__" : \n    app  =  wx . App ( ) \n    MainForm ( ) . Show ( ) \n    app . MainLoop ( ) \n PySide \n \n Pyside 最初是为诺基亚开发的，而它是Qt技术的所有者。\n当诺基亚将Qt出售给 Digia （现在是Qt公司）时，Qt4原始 Pyside 代码的所有版权也转移到了Qt公司。 \n \n \n Qt for Python 项目旨在为 Qt5 提供 PySide 模块的完整端口。该开发于2015年5月在GitHub上开始。\n该项目设法将 Pyside 移植到 Qt5.3 , 5.4 和 5.5 。 \n \n \n 该 PySide2 模块于2018年6月中旬作为技术预览版发布（支持 Qt5.11 ）。并在同年12月支持 Qt5.12 并正式发布 \n \n \n PySide2 模块提供对 QtCore ， QtGui 等各个Qt模块的访问。还附带了 Shiboken2 、 CPython 绑定代码生成器，\n可用于为 C 或 C++ 代码生成 Python 绑定。 \n \n \n https://github.com/PySide \n https://wiki.qt.io/Qt_for_Python/zh \n https://gaianote.github.io/2018/09/15/PyQt5%E5%AD%A6%E4%B9%A0%E4%B9%8Bline-edit/ \n 一看就懂的Python图形界面开发：PyQt5/PySide2 \n PyQt5基础教程 \n 多线程防假死动态刷新界面 \n from  PyQt5  import  QtWidgets ,  QtCore\n import  sys\n from  PyQt5 . QtCore  import   * \n import  time\n继承QThread \n class   Runthread ( QtCore . QThread ) : \n 通过类成员对象定义信号对象 \n    _signal  =  pyqtSignal ( str ) \n \n     def   __init__ ( self ) : \n         super ( Runthread ,  self ) . __init__ ( ) \n \n     def   __del__ ( self ) : \n        self . wait ( ) \n \n     def   run ( self ) : \n         for  i  in   range ( 100 ) : \n            time . sleep ( 0.2 ) \n注意这里与_signal = pyqtSignal(str)中的类型相同 \n            self . _signal . emit ( str ( i ) ) \n \n \n class   Example ( QtWidgets . QWidget ) : \n \n     def   __init__ ( self ) : \n         super ( ) . __init__ ( ) \n按钮初始化 \n        self . button  =  QtWidgets . QPushButton ( \'开始\' ,  self ) \n        self . button . setToolTip ( \'这是一个 <b>QPushButton</b> widget\' ) \n        self . button . resize ( self . button . sizeHint ( ) ) \n        self . button . move ( 120 ,   80 ) \n绑定多线程触发事件 \n        self . button . clicked . connect ( self . start_login ) \n进度条设置 \n        self . pbar  =  QtWidgets . QProgressBar ( self ) \n        self . pbar . setGeometry ( 50 ,   50 ,   210 ,   25 ) \n        self . pbar . setValue ( 0 ) \n窗口初始化 \n        self . setGeometry ( 300 ,   300 ,   300 ,   200 ) \n        self . setWindowTitle ( \'OmegaXYZ.com\' ) \n        self . show ( ) \n \n        self . thread  =   None    # 初始化线程 \n \n     def   start_login ( self ) : \n创建线程 \n        self . thread  =  Runthread ( ) \n连接信号,进程连接回传到GUI的事件 \n        self . thread . _signal . connect ( self . call_backlog ) \n开始线程 \n        self . thread . start ( ) \n \n     def   call_backlog ( self ,  msg ) : \n将线程的参数传入进度条 \n        self . pbar . setValue ( int ( msg ) ) \n \n \n if  __name__  ==   "__main__" : \n    app  =  QtWidgets . QApplication ( sys . argv ) \n    myshow  =  Example ( ) \n    myshow . show ( ) \n    sys . exit ( app . exec_ ( ) ) \n 打包 \n PyInstalle \n \n PyInstaller 是一个十分有用的第三方库，可以用来打包 Python 应用程序，\n打包完的程序就可以在没有安装 Python 解释器的机器上运行了。 \n 它能够在 Windows 、 Linux 、 Mac OS X 等操作系统下将 Python 源文件打包，通过对源文件打包，\n Python 程序可以在没有安装 Python 的环境中运行，也可以作为一个独立文件方便传递和管理。 \n \n \n PyInstaller 支持 Python 2.7 和 Python 3.4 + 。可以在 Windows 、 Mac OS X 和 Linux 上使用，\n但是并不是跨平台的，而是说你要是希望打包成 .exe 文件，需要在 Windows 系统上运行 PyInstaller 进行打包工作。 \n \n \n https://github.com/pyinstaller \n https://hoxis.github.io/python-pyinstaller.html \n \n 安装 pyinstalle \n pip  install  pyinstaller\n \n 生成单文件 \n pyinstaller  -F  app.py\nwindows打包为运行不显示命令行窗口的程序 \npyinstaller  -F   -w   -n = BajinsWallpaper app.py\n \n 生成安装目录 \n \n 此方式可借用其他第三方封包工具封装为exe安装程序，比如 NSIS 、 InnoSetup \n 注意：执行命令前先将目录下 build 、 dist 目录删除，并将 spec 后缀的文件也删除 \n \n pyinstaller  -D   -w   -n = BajinsWallpaper app.py\n \n 静态文件处理 \n \n 在 .spec 后缀文件中修改 datas=[] \n \n \n 每一个文件用 (a,b) 进行描述，其中 a 是源文件， b 是目标路径\n也就是最终打包 exe 执行时，它需要把这些静态资源解压出来，那么解压到哪里呢就需要 b 来指定，它是一个文件夹 \n \n datas = [ ( \'view/imges/*\' ,  \'.\' ) ,  ( \'view/static/logo.png\' , \'view/static/\' ) ] ,\n \n \n 使用 --add-data 命令参数 \n \n \n 其实就是修改 .spec 后缀文件中的 datas=[] \n \n \n ; 前面是本地文件路径，后面是打包中所处的位置 \n \n --add-data view \\ static \\ * ; view \\ static --add-data  "list.txt;." \n \n pyinstalle 参数 \n \n https://pyinstaller.readthedocs.io/en/latest/usage.html#options \n \n \n 通用参数 \n \n \n \n \n 参数名 \n 描述 \n 说明 \n \n \n \n \n -h \n 显示帮助 \n 无 \n \n \n -v \n 显示版本号 \n 无 \n \n \n –distpath \n 生成文件放在哪里 \n 默认：当前目录的dist文件夹内 \n \n \n –workpath \n 生成过程中的中间文件放在哪里 \n 默认：当前目录的build文件夹内 \n \n \n -y \n 如果dist文件夹内已经存在生成文件，则不询问用户，直接覆盖 \n 默认：询问是否覆盖 \n \n \n –upx-dir UPX_DIR \n 指定upx工具的目录 \n 默认：execution path \n \n \n -a \n 不包含unicode支持 \n 默认：尽可能支持unicode \n \n \n –clean \n 在本次编译开始时，清空上一次编译生成的各种文件 \n 默认：不清除 \n \n \n –log-level LEVEL \n 控制编译时pyi打印的信息 \n 一共有6个等级，由低到高分别为TRACE DEBUG INFO(默认) WARN ERROR CRITICAL。也就是默认清空下，不打印TRACE和DEBUG信息 \n \n \n \n \n 与生成结果有关的参数 \n \n \n \n \n 参数名 \n 描述 \n 说明 \n \n \n \n \n -D \n 生成one-folder的程序（默认） \n 生成结果是一个目录，各种第三方依赖、资源和exe同时存储在该目录 \n \n \n -F \n 生成one-file的程序 \n 生成结果是一个exe文件，所有的第三方依赖、资源和代码均被打包进该exe内 \n \n \n –specpath \n 指定.spec文件的存储路径 \n 默认：当前目录 \n \n \n -n \n 生成的.exe文件和.spec的文件名 \n 默认：用户脚本的名称，即main.py和main.spec \n \n \n \n \n 指定打包哪些资源、代码 \n \n \n \n \n 参数名 \n 描述 \n 说明 \n \n \n \n \n –add-data \n 打包额外资源 \n 用法：pyinstaller main.py --add-data=src;dest。windows以;分割，linux以:分割 \n \n \n –add-binary \n 打包额外的代码 \n 用法：同–add-data。与–add-data不同的是，用binary添加的文件，pyi会分析它引用的文件并把它们一同添加进来 \n \n \n -p \n 指定额外的import路径，类似于使用PYTHONPATH \n 参见PYTHONPATH \n \n \n –hidden-import \n 打包额外py库 \n pyi在分析过程中，有些import没有正确分析出来，运行时会报import error，这时可以使用该参数 \n \n \n –additional-hooks-dir \n 指定用户的hook目录 \n hook用法参见其他，系统hook在PyInstaller\\hooks目录下 \n \n \n –runtime-hook \n 指定用户runtime-hook \n 如果设置了此参数，则runtime-hook会在运行main.py之前被运行 \n \n \n –exclude-module \n 需要排除的module \n pyi会分析出很多相互关联的库，但是某些库对用户来说是没用的，可以用这个参数排除这些库，有助于减少生成文件的大小 \n \n \n –key \n pyi会存储字节码，指定加密字节码的key \n 16位的字符串 \n \n \n \n \n 生成参数 \n \n \n \n \n 参数名 \n 描述 \n 说明 \n \n \n \n \n -d \n 执行生成的main.exe时，会输出pyi的一些log，有助于查错 \n 默认：不输出pyi的log \n \n \n -s \n 优化符号表 \n 原文明确表示不建议在windows上使用 \n \n \n –noupx \n 强制不使用upx \n 默认：尽可能使用。 \n \n \n \n \n 其他 \n \n \n \n \n 参数名 \n 描述 \n 说明 \n \n \n \n \n –runtime-tmpdir \n 指定运行时的临时目录 \n 默认：使用系统临时目录 \n \n \n \n \n Windows和Mac特有的参数 \n \n \n \n \n 参数名 \n 描述 \n 说明 \n \n \n \n \n -c \n 显示命令行窗口 \n 与-w相反，默认含有此参数 \n \n \n -w \n 不显示命令行窗口 \n 编写GUI程序时使用此参数有用。 \n \n \n -i \n 为main.exe指定图标 \n pyinstaller -i beauty.ico main.py \n \n \n \n \n 使用 -i 参数设置图标后，由于有缓存，需要移动一下生成的可执行程序的位置，才会显示自定义图标 \n \n \n Windows特有的参数 \n \n \n \n \n 参数名 \n 描述 \n 说明 \n \n \n \n \n –version-file \n 添加版本信息文件 \n pyinstaller --version-file ver.txt \n \n \n -m, --manifest \n 添加manifest文件 \n pyinstaller -m main.manifest \n \n \n -r RESOURCE \n 请参考原文 \n \n \n \n –uac-admin \n 请参考原文 \n \n \n \n –uac-uiaccess \n 请参考原文 \n \n \n \n \n 问题 \n \n 多进程multiprocessing，我们需要创建一个模块 \n \n import  os\n import  sys\n import  multiprocessing\nModule multiprocessing is organized differently in Python 3.4+ \n try : \nPython 3.4+ \n     if  sys . platform . startswith ( \'win\' ) : \n         import  multiprocessing . popen_spawn_win32  as  forking\n     else : \n         import  multiprocessing . popen_fork  as  forking\n except  ImportError : \n     import  multiprocessing . forking  as  forking\n \n if  sys . platform . startswith ( \'win\' ) : \nFirst define a modified version of Popen. \n     class   _Popen ( forking . Popen ) : \n         def   __init__ ( self ,   * args ,   ** kw ) : \n             if   hasattr ( sys ,   \'frozen\' ) : \nWe have to set original _MEIPASS2 value from sys._MEIPASS \nto get --onefile mode working. \n                os . putenv ( \'_MEIPASS2\' ,  sys . _MEIPASS ) \n             try : \n                 super ( _Popen ,  self ) . __init__ ( * args ,   ** kw ) \n             finally : \n                 if   hasattr ( sys ,   \'frozen\' ) : \nOn some platforms (e.g. AIX) \'os.unsetenv()\' is not \navailable. In those cases we cannot delete the variable \nbut only set it to the empty string. The bootloader \ncan handle this case. \n                     if   hasattr ( os ,   \'unsetenv\' ) : \n                        os . unsetenv ( \'_MEIPASS2\' ) \n                     else : \n                        os . putenv ( \'_MEIPASS2\' ,   \'\' ) \nSecond override \'Popen\' class with our modified version. \n    forking . Popen  =  _Popen\n py2exe \n \n http://www.py2exe.org/ \n https://hoxis.github.io/python-py2exe.html \n \n \n py2exe 是一个将 python 脚本转换成 Windows 上的可独立执行的可执行程序（ *.exe ）的工具，\n这样就可以不用装 python 而在 Windows 系统上运行这个可执行程序 \n \n \n py2exe 新版本只支持 python3.3 以上，可以使用 pip install py2exe_py2 来安装兼容 python2 版本； \n 若在 python3.6 版本下运行报错，请切换到 python3.4 尝试； \n python3 如果是 64 位 ，生成的 exe 只能在 64 位 操作系统下运行，使用 32 位   python 可以解决； \n 从 Python 3.3 ， Windows 在构建 Python 时使用的是 Visual Studio 2010 ，因此生成后，\n需要手动将 msvcr100.dll 拷到生成目录下（ dist 目录），否则最终的文件运行时可能会报错；\n或者通过 data_files=[("",["MSVCR100.dll"])] , 打包其中； \n \n setup.py \n \n from  distutils . core  import  setup\n import  py2exe\n import  sys\n允许程序通过双击的形式执行。 \nsys . argv . append ( \'py2exe\' ) \n \npy2exe_options  =   { \n需要包含的文件，这里的"sip"是PyQt程序打包时需要添加的，如果不是PyQt程序不需要此项。 \n         "includes" :   [ "sip" ] , \n需要排除的dll文件，这里的"MSVCP90.dll"文件， \n如果不排除的话会报error: MSVCP90.dll: No such file or directory错误。 \n         "dll_excludes" :   [ "MSVCP90.dll" , ] , \n为1，则压缩文件 \n         "compressed" :   1 , \n为优化级别，默认为0。 \n         "optimize" :   2 , \n不自动包含encodings和codecs。 \n         "ascii" :   0 , \n         """\n        将程序打包成单文件（同时还会生成一个zip文件，可设置zipfile = None去除）。\n        1：表示pyd和dll文件会被打包到单文件中，且不能从文件系统中加载python模块；\n        2：表示pyd和dll文件会被打包到单文件中，但是可以从文件系统中加载python模块。\n        64位的Py2exe不要添加本句。\n        """ \n         "bundle_files" :   1 , \n         } \n \nsetup ( \n      name  =   \'PyQt Demo\' , \n      version  =   \'1.0\' , \n       """\n      这里使用的是windows，即没有命令行窗口出现，如果使用console则表示有命令行窗口出现。\n      "myico.ico"是程序图标\n      """ \n      windows  =   [ {   "script" : \'wordreplace.py\' , "icon_resources" : [ ( 1 , "myico.ico" ) ] } ] ,  \n       """\n      把images目录中所有的jpg文件打包到dist/images子目录中。\n      把public目录下的test.bat文件打包到dist/static子目录中。\n      """ \n      data_files  =   [ ( \'images\' , [ \'images\\*.jpg\' ] ) , ( \'static\' , [ \'public\\\\test.bat\' ] ) ] , \n如果没有此句，会生成一个`library.zip`文件。 \n      zipfile  =   None , \n      options  =   { \'py2exe\' :  py2exe_options } \n       ) \n \n \n 执行该脚本，会得到一个build文件夹和一个dist文件夹。其中，dist文件夹，就是你得到的打包程序。 \n \n \n 如果按照上述代码执行成功，则应该dist文件夹中，只包括程序的exe文件和 w9xpopen.exe 。 w9xpopen.exe 是针对 windows9x 版本的，\n一般来说该文件并不需要。 \n \n \n 如果 bundle_files 不为 1 、 2 ，则 dist 文件夹中还会包括一些dll文件和pyd文件（ Python Dll 文件）。\n如果 bundle_files 为 2 ， dist 文件夹会包括一个 python##.dll 文件，如果为1则不会。 \n \n',createdTime:1761814324e3},{title:"Python第三方库",frontmatter:{description:"应用监控 https://github.com/SolarEdgeTech/pyctuator\nPython图像处理库—-Pillow\n基于异步库 https://github.com/aio-libs\nhttps://github.com/Tinche/aiofiles\n协程 https://github.com/python-greenlet/greenlet\n    https://github.com/gevent/gevent\n        https://greenlet.readthedocs.io\nhttps://github.com/dask/dask\nHTTP https://github.com/psf/requests\n    https://github.com/requests\n    https://github.com/not-kennethreitz\nhttps://github.com/urllib3/urllib3\nhttps://github.com/tornadoweb/tornado\n    https://www.tornadoweb.org\nhttps://github.com/twisted\nhttps://github.com/encode/httpx\nhttps://github.com/httplib2/httplib2\nhttps://github.com/gabrielfalcao/HTTPretty\nhttps://github.com/projectdiscovery/httpx\n日志 https://github.com/Delgan/loguru\nhttps://github.com/jpadilla/pyjwt\nhttps://github.com/mhammond/pywin32\n    winreg --- Windows 注册表访问\n简繁转换 https://github.com/gumblex/zhconv\n開放中文轉換 https://github.com/BYVoid/OpenCC\nhttps://github.com/pyecharts/pyecharts\n字符编码检测 https://github.com/chardet/chardet\nhttps://github.com/PyYoshi/cChardet\n分布式任务 https://github.com/celery/celery\n    https://github.com/open-source-translation/celery-cn\n    https://www.celerycn.io\nhttps://github.com/dask\nweb https://github.com/tiangolo/fastapi\nhttps://github.com/pallets/flask\n    https://dormousehole.readthedocs.io\n    https://github.com/greyli/helloflask\n    https://github.com/vincentmi/vnzmi\n    https://github.com/yuxiaoy1/chatfairy\nhttps://github.com/pywebio/PyWebIO\nhttps://github.com/AnswerDotAI/fasthtml\nhttps://github.com/reflex-dev/reflex\nhttps://github.com/Pylons\nhttps://github.com/bottlepy/bottle\nhttps://github.com/frappe/frappe\nhttps://yhbt.net/unicorn.git\nWSGI https://github.com/benoitc/gunicorn\nhttps://github.com/unbit/uwsgi\n    https://github.com/ictar/uwsgi-docs\nASGI https://github.com/django/asgiref\nhttps://github.com/encode/uvicorn\nhttps://github.com/zauberzeug/nicegui\nhttps://github.com/pynecone-io/pynecone\nhttps://github.com/reactive-python/reactpy\nhttps://github.com/ObservedObserver/streamlit-shadcn-ui\n定时任务 https://github.com/agronholm/apscheduler\n    https://apscheduler.readthedocs.io\nORM https://github.com/sqlalchemy/sqlalchemy\nhttps://github.com/ponyorm/pony\nhttps://github.com/python-gino\n打印输出为表格 https://github.com/jazzband/prettytable\nhttps://github.com/astanin/python-tabulate\nSQLModel模型 https://github.com/tiangolo/sqlmodel\n串口 https://github.com/pyserial/pyserial\n模糊测试 https://github.com/google/clusterfuzz\nhttps://github.com/jtpereyda/boofuzz\nhttps://github.com/nccgroup/fuzzowski\n图片 https://github.com/imageio/imageio\n截图 https://github.com/BoboTiG/python-mss\nMP4解析器 https://github.com/beardypig/pymp4\nhttps://github.com/chemag/pyisobmff\nhttps://github.com/kkroening/ffmpeg-python\n解析器构建器 https://github.com/construct/construct\nSQL查询日志文件 https://github.com/samuel/squawk\n编码检测 https://github.com/PyYoshi/uchardet\n加密 https://github.com/pyca/cryptography\nhttps://github.com/cunzaizhuyi/hashplate-cn\nFFI https://github.com/wlav/cppyy\nhttps://github.com/python-cffi/cffi\nhttps://github.com/eliben/pycparser\nhttps://github.com/gjcarneiro/pybindgen\nhttps://github.com/scipy/weave\n限流 https://github.com/ZhuoZhuoCrayon/throttled-py\nJSON https://github.com/simplejson/simplejson\nWindows进程内存操作 https://github.com/srounet/Pymem\n桌面用户数据目录 https://github.com/tox-dev/platformdirs",meta:[{name:"twitter:title",content:"Python第三方库"},{name:"twitter:description",content:"应用监控 https://github.com/SolarEdgeTech/pyctuator\nPython图像处理库—-Pillow\n基于异步库 https://github.com/aio-libs\nhttps://github.com/Tinche/aiofiles\n协程 https://github.com/python-greenlet/greenlet\n    https://github.com/gevent/gevent\n        https://greenlet.readthedocs.io\nhttps://github.com/dask/dask\nHTTP https://github.com/psf/requests\n    https://github.com/requests\n    https://github.com/not-kennethreitz\nhttps://github.com/urllib3/urllib3\nhttps://github.com/tornadoweb/tornado\n    https://www.tornadoweb.org\nhttps://github.com/twisted\nhttps://github.com/encode/httpx\nhttps://github.com/httplib2/httplib2\nhttps://github.com/gabrielfalcao/HTTPretty\nhttps://github.com/projectdiscovery/httpx\n日志 https://github.com/Delgan/loguru\nhttps://github.com/jpadilla/pyjwt\nhttps://github.com/mhammond/pywin32\n    winreg --- Windows 注册表访问\n简繁转换 https://github.com/gumblex/zhconv\n開放中文轉換 https://github.com/BYVoid/OpenCC\nhttps://github.com/pyecharts/pyecharts\n字符编码检测 https://github.com/chardet/chardet\nhttps://github.com/PyYoshi/cChardet\n分布式任务 https://github.com/celery/celery\n    https://github.com/open-source-translation/celery-cn\n    https://www.celerycn.io\nhttps://github.com/dask\nweb https://github.com/tiangolo/fastapi\nhttps://github.com/pallets/flask\n    https://dormousehole.readthedocs.io\n    https://github.com/greyli/helloflask\n    https://github.com/vincentmi/vnzmi\n    https://github.com/yuxiaoy1/chatfairy\nhttps://github.com/pywebio/PyWebIO\nhttps://github.com/AnswerDotAI/fasthtml\nhttps://github.com/reflex-dev/reflex\nhttps://github.com/Pylons\nhttps://github.com/bottlepy/bottle\nhttps://github.com/frappe/frappe\nhttps://yhbt.net/unicorn.git\nWSGI https://github.com/benoitc/gunicorn\nhttps://github.com/unbit/uwsgi\n    https://github.com/ictar/uwsgi-docs\nASGI https://github.com/django/asgiref\nhttps://github.com/encode/uvicorn\nhttps://github.com/zauberzeug/nicegui\nhttps://github.com/pynecone-io/pynecone\nhttps://github.com/reactive-python/reactpy\nhttps://github.com/ObservedObserver/streamlit-shadcn-ui\n定时任务 https://github.com/agronholm/apscheduler\n    https://apscheduler.readthedocs.io\nORM https://github.com/sqlalchemy/sqlalchemy\nhttps://github.com/ponyorm/pony\nhttps://github.com/python-gino\n打印输出为表格 https://github.com/jazzband/prettytable\nhttps://github.com/astanin/python-tabulate\nSQLModel模型 https://github.com/tiangolo/sqlmodel\n串口 https://github.com/pyserial/pyserial\n模糊测试 https://github.com/google/clusterfuzz\nhttps://github.com/jtpereyda/boofuzz\nhttps://github.com/nccgroup/fuzzowski\n图片 https://github.com/imageio/imageio\n截图 https://github.com/BoboTiG/python-mss\nMP4解析器 https://github.com/beardypig/pymp4\nhttps://github.com/chemag/pyisobmff\nhttps://github.com/kkroening/ffmpeg-python\n解析器构建器 https://github.com/construct/construct\nSQL查询日志文件 https://github.com/samuel/squawk\n编码检测 https://github.com/PyYoshi/uchardet\n加密 https://github.com/pyca/cryptography\nhttps://github.com/cunzaizhuyi/hashplate-cn\nFFI https://github.com/wlav/cppyy\nhttps://github.com/python-cffi/cffi\nhttps://github.com/eliben/pycparser\nhttps://github.com/gjcarneiro/pybindgen\nhttps://github.com/scipy/weave\n限流 https://github.com/ZhuoZhuoCrayon/throttled-py\nJSON https://github.com/simplejson/simplejson\nWindows进程内存操作 https://github.com/srounet/Pymem\n桌面用户数据目录 https://github.com/tox-dev/platformdirs"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Python/Python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Python第三方库"},{property:"og:description",content:"应用监控 https://github.com/SolarEdgeTech/pyctuator\nPython图像处理库—-Pillow\n基于异步库 https://github.com/aio-libs\nhttps://github.com/Tinche/aiofiles\n协程 https://github.com/python-greenlet/greenlet\n    https://github.com/gevent/gevent\n        https://greenlet.readthedocs.io\nhttps://github.com/dask/dask\nHTTP https://github.com/psf/requests\n    https://github.com/requests\n    https://github.com/not-kennethreitz\nhttps://github.com/urllib3/urllib3\nhttps://github.com/tornadoweb/tornado\n    https://www.tornadoweb.org\nhttps://github.com/twisted\nhttps://github.com/encode/httpx\nhttps://github.com/httplib2/httplib2\nhttps://github.com/gabrielfalcao/HTTPretty\nhttps://github.com/projectdiscovery/httpx\n日志 https://github.com/Delgan/loguru\nhttps://github.com/jpadilla/pyjwt\nhttps://github.com/mhammond/pywin32\n    winreg --- Windows 注册表访问\n简繁转换 https://github.com/gumblex/zhconv\n開放中文轉換 https://github.com/BYVoid/OpenCC\nhttps://github.com/pyecharts/pyecharts\n字符编码检测 https://github.com/chardet/chardet\nhttps://github.com/PyYoshi/cChardet\n分布式任务 https://github.com/celery/celery\n    https://github.com/open-source-translation/celery-cn\n    https://www.celerycn.io\nhttps://github.com/dask\nweb https://github.com/tiangolo/fastapi\nhttps://github.com/pallets/flask\n    https://dormousehole.readthedocs.io\n    https://github.com/greyli/helloflask\n    https://github.com/vincentmi/vnzmi\n    https://github.com/yuxiaoy1/chatfairy\nhttps://github.com/pywebio/PyWebIO\nhttps://github.com/AnswerDotAI/fasthtml\nhttps://github.com/reflex-dev/reflex\nhttps://github.com/Pylons\nhttps://github.com/bottlepy/bottle\nhttps://github.com/frappe/frappe\nhttps://yhbt.net/unicorn.git\nWSGI https://github.com/benoitc/gunicorn\nhttps://github.com/unbit/uwsgi\n    https://github.com/ictar/uwsgi-docs\nASGI https://github.com/django/asgiref\nhttps://github.com/encode/uvicorn\nhttps://github.com/zauberzeug/nicegui\nhttps://github.com/pynecone-io/pynecone\nhttps://github.com/reactive-python/reactpy\nhttps://github.com/ObservedObserver/streamlit-shadcn-ui\n定时任务 https://github.com/agronholm/apscheduler\n    https://apscheduler.readthedocs.io\nORM https://github.com/sqlalchemy/sqlalchemy\nhttps://github.com/ponyorm/pony\nhttps://github.com/python-gino\n打印输出为表格 https://github.com/jazzband/prettytable\nhttps://github.com/astanin/python-tabulate\nSQLModel模型 https://github.com/tiangolo/sqlmodel\n串口 https://github.com/pyserial/pyserial\n模糊测试 https://github.com/google/clusterfuzz\nhttps://github.com/jtpereyda/boofuzz\nhttps://github.com/nccgroup/fuzzowski\n图片 https://github.com/imageio/imageio\n截图 https://github.com/BoboTiG/python-mss\nMP4解析器 https://github.com/beardypig/pymp4\nhttps://github.com/chemag/pyisobmff\nhttps://github.com/kkroening/ffmpeg-python\n解析器构建器 https://github.com/construct/construct\nSQL查询日志文件 https://github.com/samuel/squawk\n编码检测 https://github.com/PyYoshi/uchardet\n加密 https://github.com/pyca/cryptography\nhttps://github.com/cunzaizhuyi/hashplate-cn\nFFI https://github.com/wlav/cppyy\nhttps://github.com/python-cffi/cffi\nhttps://github.com/eliben/pycparser\nhttps://github.com/gjcarneiro/pybindgen\nhttps://github.com/scipy/weave\n限流 https://github.com/ZhuoZhuoCrayon/throttled-py\nJSON https://github.com/simplejson/simplejson\nWindows进程内存操作 https://github.com/srounet/Pymem\n桌面用户数据目录 https://github.com/tox-dev/platformdirs"},{property:"og:url",content:"https://bajins.com/Python/Python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Python第三方库"},{itemprop:"description",content:"应用监控 https://github.com/SolarEdgeTech/pyctuator\nPython图像处理库—-Pillow\n基于异步库 https://github.com/aio-libs\nhttps://github.com/Tinche/aiofiles\n协程 https://github.com/python-greenlet/greenlet\n    https://github.com/gevent/gevent\n        https://greenlet.readthedocs.io\nhttps://github.com/dask/dask\nHTTP https://github.com/psf/requests\n    https://github.com/requests\n    https://github.com/not-kennethreitz\nhttps://github.com/urllib3/urllib3\nhttps://github.com/tornadoweb/tornado\n    https://www.tornadoweb.org\nhttps://github.com/twisted\nhttps://github.com/encode/httpx\nhttps://github.com/httplib2/httplib2\nhttps://github.com/gabrielfalcao/HTTPretty\nhttps://github.com/projectdiscovery/httpx\n日志 https://github.com/Delgan/loguru\nhttps://github.com/jpadilla/pyjwt\nhttps://github.com/mhammond/pywin32\n    winreg --- Windows 注册表访问\n简繁转换 https://github.com/gumblex/zhconv\n開放中文轉換 https://github.com/BYVoid/OpenCC\nhttps://github.com/pyecharts/pyecharts\n字符编码检测 https://github.com/chardet/chardet\nhttps://github.com/PyYoshi/cChardet\n分布式任务 https://github.com/celery/celery\n    https://github.com/open-source-translation/celery-cn\n    https://www.celerycn.io\nhttps://github.com/dask\nweb https://github.com/tiangolo/fastapi\nhttps://github.com/pallets/flask\n    https://dormousehole.readthedocs.io\n    https://github.com/greyli/helloflask\n    https://github.com/vincentmi/vnzmi\n    https://github.com/yuxiaoy1/chatfairy\nhttps://github.com/pywebio/PyWebIO\nhttps://github.com/AnswerDotAI/fasthtml\nhttps://github.com/reflex-dev/reflex\nhttps://github.com/Pylons\nhttps://github.com/bottlepy/bottle\nhttps://github.com/frappe/frappe\nhttps://yhbt.net/unicorn.git\nWSGI https://github.com/benoitc/gunicorn\nhttps://github.com/unbit/uwsgi\n    https://github.com/ictar/uwsgi-docs\nASGI https://github.com/django/asgiref\nhttps://github.com/encode/uvicorn\nhttps://github.com/zauberzeug/nicegui\nhttps://github.com/pynecone-io/pynecone\nhttps://github.com/reactive-python/reactpy\nhttps://github.com/ObservedObserver/streamlit-shadcn-ui\n定时任务 https://github.com/agronholm/apscheduler\n    https://apscheduler.readthedocs.io\nORM https://github.com/sqlalchemy/sqlalchemy\nhttps://github.com/ponyorm/pony\nhttps://github.com/python-gino\n打印输出为表格 https://github.com/jazzband/prettytable\nhttps://github.com/astanin/python-tabulate\nSQLModel模型 https://github.com/tiangolo/sqlmodel\n串口 https://github.com/pyserial/pyserial\n模糊测试 https://github.com/google/clusterfuzz\nhttps://github.com/jtpereyda/boofuzz\nhttps://github.com/nccgroup/fuzzowski\n图片 https://github.com/imageio/imageio\n截图 https://github.com/BoboTiG/python-mss\nMP4解析器 https://github.com/beardypig/pymp4\nhttps://github.com/chemag/pyisobmff\nhttps://github.com/kkroening/ffmpeg-python\n解析器构建器 https://github.com/construct/construct\nSQL查询日志文件 https://github.com/samuel/squawk\n编码检测 https://github.com/PyYoshi/uchardet\n加密 https://github.com/pyca/cryptography\nhttps://github.com/cunzaizhuyi/hashplate-cn\nFFI https://github.com/wlav/cppyy\nhttps://github.com/python-cffi/cffi\nhttps://github.com/eliben/pycparser\nhttps://github.com/gjcarneiro/pybindgen\nhttps://github.com/scipy/weave\n限流 https://github.com/ZhuoZhuoCrayon/throttled-py\nJSON https://github.com/simplejson/simplejson\nWindows进程内存操作 https://github.com/srounet/Pymem\n桌面用户数据目录 https://github.com/tox-dev/platformdirs"}]},regularPath:"/Python/Python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",relativePath:"Python/Python第三方库.md",key:"v-bdbfea88",path:"/Python/Python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",headers:[{level:2,title:"FLAG",slug:"flag"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Python第三方库 \n FLAG \n FLAG \n \n https://github.com/jobbole/awesome-python-cn \n https://github.com/vinta/awesome-python \n Python 常用的标准库以及第三方库有哪些？ \n https://github.com/MagicStack \n \n \n 应用监控  https://github.com/SolarEdgeTech/pyctuator \n Python图像处理库—-Pillow \n 基于异步库  https://github.com/aio-libs \n https://github.com/Tinche/aiofiles \n 协程  https://github.com/python-greenlet/greenlet \n \n https://github.com/gevent/gevent \n \n https://greenlet.readthedocs.io \n \n \n \n \n https://github.com/dask/dask \n HTTP  https://github.com/psf/requests \n \n https://github.com/requests \n https://github.com/not-kennethreitz \n \n \n https://github.com/urllib3/urllib3 \n https://github.com/tornadoweb/tornado \n \n https://www.tornadoweb.org \n \n \n https://github.com/twisted \n https://github.com/encode/httpx \n https://github.com/httplib2/httplib2 \n https://github.com/gabrielfalcao/HTTPretty \n https://github.com/projectdiscovery/httpx \n 日志  https://github.com/Delgan/loguru \n https://github.com/jpadilla/pyjwt \n https://github.com/mhammond/pywin32 \n \n winreg --- Windows 注册表访问 \n \n \n 简繁转换  https://github.com/gumblex/zhconv \n 開放中文轉換  https://github.com/BYVoid/OpenCC \n https://github.com/pyecharts/pyecharts \n 字符编码检测  https://github.com/chardet/chardet \n https://github.com/PyYoshi/cChardet \n 分布式任务  https://github.com/celery/celery \n \n https://github.com/open-source-translation/celery-cn \n https://www.celerycn.io \n \n \n https://github.com/dask \n web  https://github.com/tiangolo/fastapi \n https://github.com/pallets/flask \n \n https://dormousehole.readthedocs.io \n https://github.com/greyli/helloflask \n https://github.com/vincentmi/vnzmi \n https://github.com/yuxiaoy1/chatfairy \n \n \n https://github.com/pywebio/PyWebIO \n https://github.com/AnswerDotAI/fasthtml \n https://github.com/reflex-dev/reflex \n https://github.com/Pylons \n https://github.com/bottlepy/bottle \n https://github.com/frappe/frappe \n https://yhbt.net/unicorn.git \n WSGI  https://github.com/benoitc/gunicorn \n https://github.com/unbit/uwsgi \n \n https://github.com/ictar/uwsgi-docs \n \n \n ASGI  https://github.com/django/asgiref \n https://github.com/encode/uvicorn \n https://github.com/zauberzeug/nicegui \n https://github.com/pynecone-io/pynecone \n https://github.com/reactive-python/reactpy \n https://github.com/ObservedObserver/streamlit-shadcn-ui \n 定时任务  https://github.com/agronholm/apscheduler \n \n https://apscheduler.readthedocs.io \n \n \n ORM  https://github.com/sqlalchemy/sqlalchemy \n https://github.com/ponyorm/pony \n https://github.com/python-gino \n 打印输出为表格  https://github.com/jazzband/prettytable \n https://github.com/astanin/python-tabulate \n SQLModel模型  https://github.com/tiangolo/sqlmodel \n 串口  https://github.com/pyserial/pyserial \n 模糊测试  https://github.com/google/clusterfuzz \n https://github.com/jtpereyda/boofuzz \n https://github.com/nccgroup/fuzzowski \n 图片  https://github.com/imageio/imageio \n 截图  https://github.com/BoboTiG/python-mss \n MP4解析器  https://github.com/beardypig/pymp4 \n https://github.com/chemag/pyisobmff \n https://github.com/kkroening/ffmpeg-python \n 解析器构建器  https://github.com/construct/construct \n SQL查询日志文件  https://github.com/samuel/squawk \n 编码检测  https://github.com/PyYoshi/uchardet \n 加密  https://github.com/pyca/cryptography \n https://github.com/cunzaizhuyi/hashplate-cn \n FFI  https://github.com/wlav/cppyy \n https://github.com/python-cffi/cffi \n https://github.com/eliben/pycparser \n https://github.com/gjcarneiro/pybindgen \n https://github.com/scipy/weave \n 限流  https://github.com/ZhuoZhuoCrayon/throttled-py \n JSON  https://github.com/simplejson/simplejson \n Windows进程内存操作  https://github.com/srounet/Pymem \n 桌面用户数据目录  https://github.com/tox-dev/platformdirs \n \n \n https://github.com/zopefoundation \n 交互式计算  https://github.com/ipython \n 纠正以前的控制台命令中的错误  https://github.com/nvbn/thefuck \n 命令行HTTP客户端  https://github.com/jakubroztocil/httpie \n SSHv2协议  https://github.com/paramiko/paramiko \n shell  https://github.com/xonsh/xonsh \n 终端样式  https://github.com/willmcgugan/rich \n https://github.com/urwid/urwid \n https://github.com/topics/expect \n \n https://www.nist.gov/services-resources/software/expect \n https://github.com/clarkwang/sexpect \n 自动化交互式  https://github.com/pexpect/pexpect \n https://github.com/pytest-dev/pytest \n https://github.com/jacebrowning/pytest-expecter \n \n \n https://github.com/fabric \n https://github.com/pyinvoke/invoke \n https://github.com/paramiko \n https://github.com/topics/ops \n 访问java类库  https://github.com/jpype-project/jpype \n \n HTML文档解析 \n \n Beautiful Soup 4 的中文文档  https://github.com/DeronW/beautifulsoup \n \n https://beautifulsoup.readthedocs.io \n \n \n https://github.com/html5lib/html5lib-python \n 类似于jQuery的python库  https://github.com/gawel/pyquery \n https://github.com/lxml/lxml \n https://github.com/psf/requests-html \n https://github.com/scrapy/parsel \n https://github.com/edgewall/genshi \n A​​tom和RSS  https://github.com/kurtmckee/feedparser \n \n PING/TCPING \n \n https://github.com/topics/ping \n https://github.com/topics/icmp-ping \n https://github.com/topics/tcp \n https://github.com/topics/tcping \n \n \n 用Python实现PING \n \n \n https://github.com/kyan001/ping3 \n https://github.com/romana/multi-ping \n https://github.com/zhengxiaowai/tcping \n \n https://github.com/rami3l/ting \n \n \n https://github.com/alessandromaggio/pythonping \n \n",createdTime:1761814324e3},{title:"跨平台开发",frontmatter:{description:"webview绑定（macOS 上利用 WebKit，在 Windows 上利用 WebView2，在 Linux 上利用 WebKitGTK）、内嵌JS引擎、\n> 原生渲染（weex/react native、flutter、编译转码），复杂度依次降低，渲染性能依次上升",meta:[{name:"twitter:title",content:"跨平台开发"},{name:"twitter:description",content:"webview绑定（macOS 上利用 WebKit，在 Windows 上利用 WebView2，在 Linux 上利用 WebKitGTK）、内嵌JS引擎、\n> 原生渲染（weex/react native、flutter、编译转码），复杂度依次降低，渲染性能依次上升"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/PL/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91.html"},{property:"og:type",content:"article"},{property:"og:title",content:"跨平台开发"},{property:"og:description",content:"webview绑定（macOS 上利用 WebKit，在 Windows 上利用 WebView2，在 Linux 上利用 WebKitGTK）、内嵌JS引擎、\n> 原生渲染（weex/react native、flutter、编译转码），复杂度依次降低，渲染性能依次上升"},{property:"og:url",content:"https://bajins.com/PL/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"跨平台开发"},{itemprop:"description",content:"webview绑定（macOS 上利用 WebKit，在 Windows 上利用 WebView2，在 Linux 上利用 WebKitGTK）、内嵌JS引擎、\n> 原生渲染（weex/react native、flutter、编译转码），复杂度依次降低，渲染性能依次上升"}]},regularPath:"/PL/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91.html",relativePath:"PL/跨平台开发.md",key:"v-260b5d54",path:"/PL/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"桌面应用",slug:"桌面应用"},{level:3,title:"多语言UI框架",slug:"多语言ui框架"},{level:2,title:"移动应用",slug:"移动应用"},{level:2,title:"React-Native",slug:"react-native"},{level:2,title:"Flutter",slug:"flutter"},{level:3,title:"Dart",slug:"dart"},{level:2,title:"Xamarin",slug:"xamarin"},{level:2,title:"KMP",slug:"kmp"},{level:3,title:"Kotlin",slug:"kotlin"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 跨平台开发 \n Flag 桌面应用 多语言UI框架 移动应用 React-Native Flutter Dart Xamarin KMP Kotlin \n Flag \n \n https://github.com/topics/cross-platform \n 跨平台工具  https://github.com/HaxeFoundation/haxe \n \n https://github.com/haxeui \n https://github.com/haxetink \n https://github.com/haxenme/nme \n https://github.com/openfl \n https://github.com/feathersui/feathersui-openfl \n https://github.com/away3d \n https://github.com/Kode/Kha \n https://github.com/aduros/flambe \n \n \n https://github.com/googlecodelabs \n REST API抽象   https://github.com/appwrite \n 后端平台  https://github.com/firebase/firebase-tools \n \n https://console.firebase.google.com \n \n \n https://github.com/supabase/supabase \n 渗透测试  https://github.com/MobSF \n \n \n webview绑定（macOS 上利用 WebKit，在 Windows 上利用 WebView2，在 Linux 上利用 WebKitGTK）、内嵌JS引擎、\n原生渲染（weex/react native、flutter、编译转码），复杂度依次降低，渲染性能依次上升 \n \n \n Native APP  指原生App，是一个完整的App，可拓展性强，需要用户下载安装使用 \n Web APP  指采用Html5语言写出的App，生活在浏览器里的应用，不需要下载安装 \n Hybrid App  指的是半原生半Web的混合类App，需要下载安装 \n H5 手机 App 开发入门：技术篇 \n 快速打造一个套壳APP \n \n \n https://github.com/topics/gui \n https://github.com/topics/widget \n https://github.com/topics/qt5 \n \n \n https://github.com/finogeeks \n 游戏  https://github.com/coronalabs \n https://github.com/libgdx/libgdx \n \n \n 跨平台解决方案的技术分析 \n 桌面应用 \n \n https://github.com/topics/electron \n \n https://github.com/electron/electron \n https://github.com/electron-userland \n https://github.com/SimulatedGREG/electron-vue \n https://github.com/YougLin-dev/electron-async-storage \n \n \n 使用 node-ffi 构建 Electron 和 C++ Library 混合桌面应用 \n https://github.com/topics/nwjs \n \n https://github.com/nwjs/nw.js \n https://github.com/lxp135/NW.jsCnDocs \n \n \n https://github.com/Kagami/mpv.js \n https://github.com/alexflint/gallium \n https://github.com/revery-ui/revery \n \n https://github.com/reasonml/reason \n \n \n https://github.com/fltk \n https://github.com/nodegui \n Pascal  https://sourceforge.net/projects/lazarus \n \n https://sourceforge.net/projects/freepascal \n https://gitlab.com/freepascal.org \n https://freepascal.cn \n https://www.embarcadero.com/cn/free-tools \n 初识Lazarus和Free Pascal Compiler \n https://github.com/ying32/liblcl \n \n \n Rust  https://github.com/yewstack/yew \n https://github.com/iced-rs/iced \n https://github.com/fltk-rs \n https://github.com/linebender \n https://github.com/slint-ui \n https://github.com/emilk/egui \n https://github.com/libui-rs/libui \n https://github.com/Relm4/Relm4 \n C  https://github.com/webui-dev/webui \n 打包可执行文件  https://github.com/vercel/pkg \n 网页转桌面应用  https://github.com/nativefier/nativefier \n \n \n 网易云播放器  https://github.com/qier222/YesPlayMusic \n https://github.com/listen1 \n https://github.com/ciderapp/Cider \n 多语言UI框架 \n \n https://github.com/tauri-apps \n \n https://github.com/ahkohd/tauri-nspanel \n \n \n https://github.com/sciter-sdk \n \n https://github.com/c-smile/sciter-sdk \n https://github.com/c-smile/sciter-js-sdk \n https://sciter.com \n \n \n https://gitlab.gnome.org/GNOME/gtk \n \n https://www.gtk.org \n https://github.com/gtk-rs \n https://webkitgtk.org \n https://webkit.org \n https://github.com/sonnyp/Tangram \n https://github.com/topics/gtk \n https://github.com/topics/libadwaita \n https://github.com/topics/gnome \n https://github.com/GtkSharp/GtkSharp \n \n \n https://github.com/tcltk \n https://github.com/wxWidgets \n https://www.qt.io \n \n Go  https://github.com/therecipe/qt \n https://github.com/visualfc/goqt \n https://github.com/kitech/qt.go \n https://github.com/rust-qt \n https://github.com/d-e-s-o/gui \n https://github.com/redox-os/orbtk \n \n https://gitlab.redox-os.org/redox-os \n \n \n https://github.com/filcuc/DOtherSide \n \n \n webview绑定  https://github.com/webview \n \n https://github.com/Boscop/web-view \n https://github.com/alexislozano/neutrino \n https://github.com/forbesmyester/wv-linewise \n \n \n https://github.com/Nitrux \n \n https://mauikit.org \n \n \n https://github.com/DioxusLabs/dioxus \n 移动应用 \n \n iOS、Android、PWA(Progressive Web Apps) \n \n \n 移动开发技术简介-三种跨平台技术从框架角度对比 \n 从 React Native 到 Flutter，移动跨平台方案的真相 \n \n \n Java/Kotlin  https://github.com/codenameone \n \n 混合应用Hybrid \n \n WebView(Android)、WKWebView(ios) \n \n \n https://github.com/lynx-family \n https://github.com/apache/cordova \n \n https://github.com/apache/cordova-docs \n \n https://cordova.axuer.com \n \n \n https://github.com/apache/cordova-lib \n https://github.com/apache/cordova-cli \n https://github.com/apache/cordova-create \n https://github.com/apache/cordova-serve \n https://github.com/apache/cordova-js \n https://github.com/apache/cordova-android \n https://github.com/apache/cordova-ios \n https://github.com/phonegap \n \n \n https://github.com/ionic-team \n https://github.com/framework7io \n https://github.com/OnsenUI/OnsenUI \n https://github.com/monaca \n https://github.com/eclipsesource/tabris-js \n 小程序  https://github.com/didi/dimina \n \n 原生渲染 \n \n https://github.com/NativeScript \n https://github.com/sveltejs/svelte \n \n https://www.sveltejs.cn \n https://github.com/huntabyte/shadcn-svelte \n https://www.sapperjs.com \n \n \n Vue.js  https://github.com/kuaifan/eeui \n https://github.com/GeekyAnts/vue-native-core \n https://github.com/apache/incubator-weex \n \n https://github.com/apache/incubator-weex-ui \n https://github.com/apache/incubator-weex-site \n https://segmentfault.com/t/weex \n \n \n Titanium  https://github.com/appcelerator \n React-Native \n \n https://github.com/facebook/react-native \n \n https://reactnative.directory \n \n \n https://github.com/reactnativecn \n \n https://reactnative.cn \n \n \n https://github.com/react-native-elements \n \n \n https://github.com/wix \n https://github.com/wix-incubator \n https://github.com/expo/expo \n https://github.com/react-navigation \n https://github.com/wix/react-native-navigation \n https://github.com/remix-run/react-router \n https://github.com/necolas/react-native-web \n https://github.com/microsoft/react-native-macos \n https://github.com/microsoft/react-native-windows \n https://github.com/react-native-tvos \n https://github.com/valence-native \n https://snack.expo.io \n https://github.com/streamich/react-use \n https://github.com/FaridSafi/react-native-gifted-chat \n https://github.com/stoneWeb/react-native-parabolic \n https://github.com/adobe/react-spectrum \n https://github.com/infinitered \n https://github.com/palantir/blueprint \n https://github.com/software-mansion \n 通知  https://github.com/invertase/notifee \n \n \n React-Native 开发实用指南 \n Flutter \n \n https://github.com/flutter \n \n https://github.com/cfug \n \n https://flutter.cn \n https://flutter-io.cn \n \n \n https://github.com/flutterchina \n \n https://flutterchina.club \n \n \n https://docs.flutter.dev/community/china \n \n \n https://github.com/fluttercommunity \n https://github.com/material-foundation/flutter-packages \n https://github.com/flutterkit \n https://github.com/AweiLoveAndroid/Flutter-learning \n https://github.com/vandadnp/flutter-tips-and-tricks \n Flutter 入门与实战 \n Flutter开发环境与Android开发环境设置 \n \n \n Bloc、Hook、less/ful、GetX，不同的状态管理方案 \n \n \n 构建  https://github.com/fastlane/fastlane \n 状态管理  https://github.com/jonataslaw/getx \n https://github.com/gskinnerTeam \n https://github.com/OpenFlutter \n https://github.com/mitesh77/Best-Flutter-UI-Templates \n 动态化框架  https://github.com/wuba/fair \n https://github.com/ddikman/flutter-rerunnable-future-builder \n web前端  https://github.com/openkraken/kraken \n https://github.com/lvivski/start \n UI  https://github.com/Rannie/flui \n https://github.com/rive-app \n https://www.syncfusion.com/flutter-widgets \n https://github.com/ZebraDevs/zds_flutter \n Dev Tools  https://github.com/irdevp/flutter_stetho \n https://github.com/shichunlei/flutter_app \n https://github.com/qq326646683/flutter_tencentplayer \n 升级/下载插件  https://github.com/rhymelph/r_upgrade \n https://github.com/KevinZhang19870314/flutter_getx_boilerplate \n css转Flutter  https://github.com/drawcall/c2f \n https://github.com/leoafarias/fvm \n 图表  https://github.com/entronad/graphic \n 自动启动  https://github.com/leanflutter/launch_at_startup \n \n \n https://github.com/toly1994328/FlutterUnit \n 干货  https://github.com/fujianlian/GankFlutter \n https://github.com/xmcy0011/CoffeeChat \n 摸鱼  https://github.com/AlexV525/flutter_touch_fish_on_macos \n 翻译  https://github.com/biyidev/biyi_app \n https://github.com/huangruiLearn/flutter_hrlweibo \n https://github.com/sabernwj/cookiej \n https://github.com/DingMouRen/flutter_tiktok \n 音乐播放器  https://github.com/Sangwan5688/BlackHole \n https://github.com/harmonoid/harmonoid \n https://github.com/waifu-project/movie \n 逆向  https://github.com/worawit/blutter \n 仿知乎日报  https://github.com/YangSuGuo/flutter_news \n 阅读  https://github.com/Anxcye/anx-reader \n Dart \n \n https://github.com/dart-lang \n https://dartpad.dartlang.org \n https://dart.cn/tools/dart2native \n https://dartpad.cn \n \n \n https://github.com/javiercbk/json_to_dart \n web框架  https://github.com/angulardart/angular \n 多窗口  https://gitlab.com/wolfenrain/multi_window \n 不可变  https://github.com/rrousselGit/freezed \n Xamarin \n \n https://github.com/xamarin \n \n https://docs.microsoft.com/zh-cn/xamarin \n \n \n https://github.com/robloo/PublicDocs \n \n \n https://github.com/AvaloniaUI \n \n https://github.com/fsprojects/Avalonia.FuncUI \n \n \n https://github.com/mono/mono \n \n https://github.com/madewokherd/wine-mono \n \n \n https://github.com/picoe/Eto \n https://github.com/PrismLibrary/Prism \n https://github.com/ElectronNET/Electron.NET \n https://github.com/unoplatform/uno \n https://github.com/JBildstein/SpiderEye \n https://github.com/opentk/opentk \n https://github.com/tryphotino \n https://github.com/SteveSandersonMS/WebWindow \n https://github.com/Noesis \n https://github.com/syncfusion \n \n https://github.com/syncfusion-content \n KMP \n \n https://github.com/JetBrains/compose-multiplatform \n \n https://www.jetbrains.com/zh-cn/kotlin-multiplatform \n https://www.jetbrains.com/zh-cn/compose-multiplatform \n \n \n \n \n https://github.com/terrakok/kmp-awesome \n https://github.com/icerockdev/moko-resources \n https://github.com/touchlab/SKIE \n https://github.com/CocoaPods/CocoaPods \n 跨平台媒体库  https://github.com/vinceglb/FileKit \n \n \n 演示  https://github.com/Omico/picsum \n Kotlin \n \n https://github.com/Kotlin \n https://github.com/JetBrains/kotlin \n https://github.com/hltj/kotlin-web-site-cn \n \n https://www.kotlincn.net \n https://github.com/Kotlin-zh \n \n \n https://github.com/kotlinresources/kotlin-resources \n \n https://www.kotlinresources.com \n \n \n https://github.com/kotlin-hands-on \n \n \n https://klibs.io \n https://github.com/hfhbd \n https://github.com/willowtreeapps/assertk \n https://github.com/pinterest/ktlint \n https://github.com/eygraber/virtue \n 编译器插件  https://github.com/square/anvil \n 序列化  https://github.com/avro-kotlin/avro4k \n 静态代码分析  https://github.com/detekt/detekt \n https://github.com/mockk/mockk \n https://github.com/kotest/kotest \n https://github.com/appmattus/kotlinfixture \n URI  https://github.com/eygraber/uri-kmp \n https://github.com/iseki0/urikt \n WEB  https://github.com/rjaros/kvision \n 异步WEB  https://github.com/ktorio/ktor \n https://github.com/Narbase/Kunafa \n https://github.com/kotlin-orm/ktorm \n 爬虫  https://github.com/wendigo/chrome-reactive-kotlin \n https://github.com/joffrey-bion/chrome-devtools-kotlin \n 反射  https://github.com/JetBrains-Research/reflekt \n 即插即用  https://github.com/ohmae/mmupnp \n 测试  https://github.com/tschuchortdev/kotlin-compile-testing \n 命令行  https://github.com/ajalt/clikt \n SQL生成代码  https://github.com/sqldelight/sqldelight \n 波浪下划线  https://github.com/saket/extended-spans \n JNI  https://github.com/deepmedia/Knee \n \n \n 了解Kotlin协程实现原理这篇就够了 \n 揭秘kotlin协程的实现原理 \n Kotlin协程实现原理 \n Kotlin协程实现原理 \n \n",createdTime:1761814324e3},{title:"Python笔记",frontmatter:{description:"Python程序退出方式\npython：subprocess模块\npython子程序subprocess\npython之pexpect模块\npython中ConfigParse模块的用法\nPython利用ConfigParser读取配置文件",meta:[{name:"twitter:title",content:"Python笔记"},{name:"twitter:description",content:"Python程序退出方式\npython：subprocess模块\npython子程序subprocess\npython之pexpect模块\npython中ConfigParse模块的用法\nPython利用ConfigParser读取配置文件"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Python/Python%E7%AC%94%E8%AE%B0.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Python笔记"},{property:"og:description",content:"Python程序退出方式\npython：subprocess模块\npython子程序subprocess\npython之pexpect模块\npython中ConfigParse模块的用法\nPython利用ConfigParser读取配置文件"},{property:"og:url",content:"https://bajins.com/Python/Python%E7%AC%94%E8%AE%B0.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Python笔记"},{itemprop:"description",content:"Python程序退出方式\npython：subprocess模块\npython子程序subprocess\npython之pexpect模块\npython中ConfigParse模块的用法\nPython利用ConfigParser读取配置文件"}]},regularPath:"/Python/Python%E7%AC%94%E8%AE%B0.html",relativePath:"Python/Python笔记.md",key:"v-92e950d2",path:"/Python/Python%E7%AC%94%E8%AE%B0.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"字符串",slug:"字符串"},{level:2,title:"os模块",slug:"os模块"},{level:2,title:"shutil模块",slug:"shutil模块"},{level:2,title:"open方法",slug:"open方法"},{level:2,title:"进程线程协程",slug:"进程线程协程"},{level:3,title:"进程",slug:"进程"},{level:3,title:"线程",slug:"线程"},{level:3,title:"线程池",slug:"线程池"},{level:3,title:"Asyncio协程",slug:"asyncio协程"},{level:2,title:"ORM",slug:"orm"},{level:2,title:"定时任务",slug:"定时任务"},{level:2,title:"GC",slug:"gc"},{level:2,title:"HTTP",slug:"http"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Python笔记 \n Flag 字符串 os模块 shutil模块 open方法 进程线程协程 进程 线程 线程池 Asyncio协程 ORM 定时任务 GC HTTP \n Flag \n \n Python程序退出方式 \n python：subprocess模块 \n python子程序subprocess \n python之pexpect模块 \n python中ConfigParse模块的用法 \n Python利用ConfigParser读取配置文件 \n \n \n python队列的使用及总结 \n Python守护进程daemon实现 \n \n \n 列表和元组相比，可直接调用的函数更多也可以进行更改，但是元组一经定义就无法更改，所以首推列表。 \n 在python中是没有数组类型的，如果非要使用数组，可以用 numpy 库实现对数组的定义 \n \n ModuleNotFoundError: No module named \'Crypto\'解决方案 \npycrypto和crypto是同一个库，已经停止更新 \npip uninstall pycrypto crypto\npycryptodome是crypto的延伸版本，用法同crypto \npip  install  pycryptodome\n \n \n 如果上述方法仍不能解决问题，可以找到Python安装目录的 \\Lib\\site-packages 目录，手动将 crypto 改为 Crypto \n 字符串 \n \n r""  r-string表示去除转义字符，即 \\n 表示一个反斜杠字符，一个字母n，而不是换行。以r开头的字符，常用于正则表达式，对应re模块。 \n f""  f-string表示在字符串内支持大括号内的python 表达式，如果需要使用大括号字符串，则应输入连续两个大括号  {{}} 转义 \n b""  b-string表示这是一个 bytes 对象 \n u""  u-string表示后面字符串以 Unicode 格式 进行编码，一般用在中文字符串前面，防止因为源码储存格式问题，导致再次使用时出现乱码。 \n """内容"""  表示Multiline String 多行字符串、Template String 模板字符串、Text Blocks 文本块 \n os模块 \n \n os.chdir(path)  改变当前工作目录 \n os.chflags(path, flags)  设置路径的标记为数字标记。 \n os.chmod(path, mode)  更改权限 \n os.chown(path, uid, gid)  更改文件所有者 \n os.chroot(path)  改变当前进程的根目录 \n os.close(fd)  关闭文件描述符 fd \n os.closerange(fd_low, fd_high)  关闭所有文件描述符，从 fd_low (包含) 到 fd_high (不包含), 错误会忽略 \n os.dup(fd)  复制文件描述符 fd \n os.dup2(fd, fd2)  将一个文件描述符 fd 复制到另一个 fd2 \n os.fchdir(fd)  通过文件描述符改变当前工作目录 \n os.fchmod(fd, mode)  改变一个文件的访问权限，该文件由参数fd指定，参数mode是Unix下的文件访问权限。 \n os.fchown(fd, uid, gid)  修改一个文件的所有权，这个函数修改一个文件的用户ID和用户组ID，该文件由文件描述符fd指定。 \n os.fdatasync(fd)  强制将文件写入磁盘，该文件由文件描述符fd指定，但是不强制更新文件的状态信息。 \n os.fdopen(fd[, mode[, bufsize]])  通过文件描述符 fd 创建一个文件对象，并返回这个文件对象 \n os.fpathconf(fd, name)  返回一个打开的文件的系统配置信息。\n \n name为检索的系统配置的值，它也许是一个定义系统值的字符串，这些名字在很多标准中指定（POSIX.1, Unix 95, Unix 98, 和其它）。 \n \n \n os.fstat(fd)  返回文件描述符fd的状态，像stat()。 \n os.fstatvfs(fd)  返回包含文件描述符fd的文件的文件系统的信息，像  statvfs() \n os.fsync(fd)  强制将文件描述符为fd的文件写入硬盘。 \n os.ftruncate(fd, length)  裁剪文件描述符fd对应的文件, 所以它最大不能超过文件大小。 \n os.getcwd()  返回当前工作目录 \n os.getcwdu()  返回一个当前工作目录的Unicode对象 \n os.isatty(fd)  如果文件描述符fd是打开的，同时与 tty(-like) 设备相连，则返回 true , 否则 False 。 \n os.lchflags(path, flags)  设置路径的标记为数字标记，类似  chflags() ，但是没有软链接 \n os.lchmod(path, mode)  修改连接文件权限 \n os.lchown(path, uid, gid)  更改文件所有者，类似 chown，但是不追踪链接。 \n os.link(src, dst)  创建硬链接，名为参数 dst，指向参数 src \n os.listdir(path)  返回path指定的文件夹包含的文件或文件夹的名字的列表。 \n os.lseek(fd, pos, how)  设置文件描述符 fd当前位置为pos, how方式修改: SEEK_SET 或者 0 设置从文件开始的计算的pos;\n \n SEEK_CUR或者 1 则从当前位置计算; os.SEEK_END或者2则从文件尾部开始. 在unix，Windows中有效 \n \n \n os.lstat(path)  像stat(),但是没有软链接 \n os.major(device)  从原始的设备号中提取设备major号码 (使用stat中的st_dev或者st_rdev field)。 \n os.makedev(major, minor)  以major和minor设备号组成一个原始设备号 \n os.makedirs(path[, mode])  递归文件夹创建函数。像mkdir(), 但创建的所有intermediate-level文件夹需要包含子文件夹。 \n os.minor(device)  从原始的设备号中提取设备minor号码 (使用stat中的st_dev或者st_rdev field )。 \n os.mkdir(path[, mode])  以数字mode的mode创建一个名为path的文件夹.默认的 mode 是 0777 (八进制)。 \n os.mkfifo(path[, mode])  创建命名管道，mode 为数字，默认为 0666 (八进制)` \n os.mknod(filename[, mode=0600, device])  创建一个名为filename文件系统节点（文件，设备特别文件或者命名pipe）。 \n os.open(file, flags[, mode])  打开一个文件，并且设置需要的打开选项，mode参数是可选的 \n os.openpty()  打开一个新的伪终端对。返回 pty 和 tty的文件描述符。 \n os.pathconf(path, name)  返回相关文件的系统配置信息。 \n os.pipe()  创建一个管道. 返回一对文件描述符(r, w) 分别为读和写 \n os.popen(command[, mode[, bufsize]])  从一个 command 打开一个管道 \n os.read(fd, n)  从文件描述符 fd 中读取最多 n 个字节，返回包含读取字节的字符串，文件描述符 fd对应文件已达到结尾, 返回一个空字符串。 \n os.readlink(path)  返回软链接所指向的文件 \n os.remove(path)  删除路径为path的文件。如果path 是一个文件夹，将抛出OSError; 查看下面的rmdir()删除一个 directory。 \n os.removedirs(path)  递归删除目录。 \n os.rename(src, dst)  重命名文件或目录，从 src 到 dst \n os.renames(old, new)  递归地对目录进行更名，也可以对文件进行更名。 \n os.rmdir(path)  删除path指定的空目录，如果目录非空，则抛出一个OSError异常。 \n os.stat(path)  获取path指定的路径的信息，功能等同于C API中的stat()系统调用。 \n os.stat_float_times([newvalue])  决定stat_result是否以float对象显示时间戳 \n os.statvfs(path)  获取指定路径的文件系统统计信息 \n os.symlink(src, dst)  创建一个软链接 \n os.tcgetpgrp(fd)  返回与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组 \n os.tcsetpgrp(fd, pg)  设置与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组为pg。 \n os.tempnam([dir[, prefix]])  Python3 中已删除。返回唯一的路径名用于创建临时文件。 \n os.tmpfile()  Python3 中已删除。返回一个打开的模式为(w+b)的文件对象 .这文件对象没有文件夹入口，没有文件描述符，将会自动删除。 \n os.tmpnam()  Python3 中已删除。为创建一个临时文件返回一个唯一的路径 \n os.ttyname(fd)  返回一个字符串，它表示与文件描述符fd 关联的终端设备。如果fd 没有与终端设备关联，则引发一个异常。 \n os.unlink(path)  删除文件路径 \n os.utime(path, times)  返回指定的path文件的访问和修改的时间。 \n os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])  输出在文件夹中的文件名通过在树中游走，向上或者向下。 \n os.write(fd, str)  写入字符串到文件描述符 fd中. 返回实际写入的字符串长度 \n os.path  模块 获取文件的属性信息。 \n shutil模块 \n \n python模块之shutil \n从源src复制到dst中去。 如果当前的dst已存在的话就会被覆盖掉 \nshutil . copyfile (  src ,  dst ) \n移动文件或重命名 \nshutil . move (  src ,  dst ) \n只是会复制其权限其他的东西是不会被复制的 \nshutil . copymode (  src ,  dst ) \n复制权限、最后访问时间、最后修改时间 \nshutil . copystat (  src ,  dst ) \n复制一个文件到一个文件或一个目录 \nshutil . copy (  src ,  dst ) \n在copy上的基础上再复制文件最后访问时间与修改时间也复制过来了，类似于cp –p的东西 \nshutil . copy2 (  src ,  dst ) \n如果两个位置的文件系统是一样的话相当于是rename操作，只是改名；如果是不在相同的文件系统的话就是做move操作 \nshutil . copy2 (  src ,  dst ) \n把olddir拷贝一份newdir，如果第3个参数是True，则复制目录时将保持文件夹下的符号连接， \n如果第3个参数是False，则将在复制的目录下生成物理副本来替代符号连接 \nshutil . copytree (  olddir ,  newdir ,   True / Flase ) \n递归删除一个目录以及目录内的所有内容 \nshutil . rmtree (  src  ) \n open方法 \n \n \n \n 模式 \n 描述 \n \n \n \n \n r \n 以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。 \n \n \n rb \n 以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。 \n \n \n r+ \n 打开一个文件用于读写。文件指针将会放在文件的开头。 \n \n \n rb+ \n 以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。 \n \n \n w \n 打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。 \n \n \n wb \n 以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。 \n \n \n w+ \n 打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。 \n \n \n wb+ \n 以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。 \n \n \n a \n 打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。 \n \n \n ab \n 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。 \n \n \n a+ \n 打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。 \n \n \n ab+ \n 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。 \n \n \n \n \n Python3 文件 I/O 操作 \n 进程线程协程 \n 进程 \n \n multiprocessing --- 基于进程的并行 \n multiprocessing \n \n import  multiprocessing  as  mp\nthreads  =   [ ] \n for  i  in  path : \n  threads . append ( mp . Process ( target = md5sum , args = ( i , ) ) ) \n #创建一个multiprocessing.process.Process对象 \n #执行 \n for  m  in  threads : \n  m . start ( ) \n #回收 \n for  m  in  threads : \n  m . join ( ) \n \n def    test ( i ) : \n   pass \n创建一个multiprocessing.pool.Pool的对象 \np1  =  mp . Pool ( processes  = 5 ) \n #向进程池里添加任务 \n for  i  in   range ( 10 ) : \n  p1 . apply_async ( test ,  args = ( i , ) )   #func，参数（传入元组） \n关闭进程池，不再接受请求 \np1 . close ( ) \n等待所有子进程结束 \np1 . join ( ) \n 线程 \n \n 多线程 \n \n import  threading\n使用新线程执行函数 \nthreading . Thread ( target = test ,  args = ( "test" , ) ) . start ( ) \n在指定的秒数后调用一个函数 \nthreading . Timer ( 10 ,  test ,   ( "test" , ) ) . start ( ) \n 线程池 \n \n python3异步编程 \n Python 并发、并行、同步和异步 \n ThreadPoolExecutor \n \n from  concurrent . futures  import  ThreadPoolExecutor\n import  multiprocessing\npool  =  ThreadPoolExecutor ( max_workers = int ( multiprocessing . cpu_count ( )   /   ( 1   -   0.9 ) ) ) \ndone  =  pool . submit ( test ,   "test" ) \n执行完成调用函数 \ndone . add_done_callback ( thread_call_back ) \n Asyncio协程 \n \n 异步IO \n Python3.5协程学习研究 \n 协程和 asyncio \n python asyncio \n Python中协程异步IO（asyncio）详解 \n https://docs.python.org/zh-cn/3/library/asyncio.html \n Asyncio并发编程 \n aiohttp爬虫 \n python asyncio aiohttp 异步下载 完整例子 \n python 多线程与asyncio下载文件 \n python写一个多线程下载程序 \n 关于aiohttp下载大文件的方式 \n 使用 asyncio + aiohttp 并发下载 \n \n import  threading\n import  asyncio\n \n async   def   hello ( ) : \n     print ( \'Hello world! (%s)\'   %  threading . currentThread ( ) ) \n     await  asyncio . sleep ( 1 ) \n     print ( \'Hello again! (%s)\'   %  threading . currentThread ( ) ) \n \n \n try : \n    loop  =  asyncio . get_event_loop ( ) \n    tasks  =   [ hello ( )   for  i  in   range ( 1000 * 1000 * 1 ) ] \n    loop . run_until_complete ( asyncio . wait ( tasks ) ) \nloop.close() \nPython 3.7 \n     #asyncio.run(asyncio.wait(tasks)) \n except  ValueError : \n     print ( \'Async Error\' ) \n ORM \n \n Object-Relational Mapping ，把关系数据库的表结构映射到对象上。 \n \n \n Peewee \n SqlObject \n \n SQLite3 \n \n https://docs.python.org/zh-cn/3.8/library/sqlite3.html \n SQLite - Python \n Python连接SQLite数据库 \n \n SQLAlchemy \n \n https://www.sqlalchemy.org \n 使用SQLAlchemy \n \n pip install sqlalchemy\n 定时任务 \n \n Python3-定时任务五种实现方式 \n \n \n sched模块 sched.scheduler \n 循环+ time.sleep() 、 asyncio.sleep()  用的是 application scheduler \n 线程模块中Timer类 threading.Timer  用的是 system scheduler \n 第三方模块：schedule \n 定时框架：APScheduler、Celery \n GC \n \n https://docs.python.org/zh-cn/3.8/library/gc.html \n https://docs.python.org/zh-cn/3/library/tracemalloc.html \n 进程和系统实用程序  https://github.com/giampaolo/psutil \n https://github.com/pythonprofilers/memory_profiler \n https://github.com/mgedmin/objgraph \n https://github.com/pympler/pympler \n https://github.com/zhuyifei1999/guppy3 \n https://github.com/benfred/py-spy \n 一次python内存调优经历 \n \n \n 使用 sys.getsizeof 方法可以查看 python 对象的内存占用，单位：字节 (byte) \n \n #开启gc（默认） \ngc . enable ( ) \n关闭gc \ngc . disable ( ) \n判断gc是否开启 \ngc . isenabled ( ) \n执行一次垃圾回收，不管gc是否处于开启状态都能使用 \ngc . collect ( ) \n设置垃圾回收阈值 \ngc . set_threshold ( t0 ,  t1 ,  t2 )  \n获得当前的垃圾回收阈值 \ngc . get_threshold ( ) \n获取所有被垃圾回收器监控管理的对象 \ngc . get_objects ( ) \n返回obj对象直接指向的对象 \ngc . get_referents ( obj ) \n返回所有直接指向obj的对象 \ngc . get_referrers ( obj ) \n \n import  tracemalloc\n\ntracemalloc . start ( )    # 开始跟踪内存分配 \ntime1  =  tracemalloc . take_snapshow ( ) \n import  waste_memory\nx  =  waste_memory . run ( ) \ntime2  =  tracemalloc . take_snapshow ( ) \nstats  =  time2 . compare_to ( time1 ,   \'lineno\' ) \nsnapshot  =  tracemalloc . take_snapshot ( )    # 快照，当前内存分配 \ntop_stats  =  snapshot . statistics ( \'lineno\' )    # 快照对象的统计 \n [ print ( stat )   for  stat  in  top_stats ] \n HTTP \n \n urllib — URL handling modules \n http — HTTP modules \n Python3 内置http.client,urllib.request及三方库requests发送请求对比 \n Python urllib、urllib2、urllib3用法及区别 \n \n import  http . client\n建立HTTP连接 \nconn  =  http . client . HTTPConnection ( "api.github.com" ,  timeout = 30 ) \n\nUSER_AGENT  =   "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36" \n发送GET请求，制定接口路径 \nconn . request ( method = "GET" ,  url = \'/repos/rclone/rclone/releases/latest\' ,  headers = { "User-Agent" :  USER_AGENT } ) \n获取响应 \nres  =  conn . getresponse ( ) \n 解析相应.进行解码 \n print ( res . read ( ) . decode ( "utf-8" ) ) \n \n import  ssl\n如果import urllib，在使用urllib.request时会报错 \n import  urllib . request\n不验证证书，或者打开Python3文件夹, 执行 Install Certificates.command 文件 \nssl . _create_default_https_context  =  ssl . _create_unverified_context\n\nUSER_AGENT  =   "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36" \nreq  =  urllib . request . Request ( "https://api.github.com/repos/rclone/rclone/releases/latest" , \n                             headers = { "User-Agent" :  USER_AGENT } ,  method = \'GET\' ) \nres  =  urllib . request . urlopen ( req ,  timeout = 30 ) \n解析相应.进行解码 \n print ( res . read ( ) . decode ( "utf-8" ) ) \n\n ########## 下载文件 ########## \n创建一个opener对象 \nopener  =  urllib . request . build_opener ( ) \n向opener传入请求头信息 \nopener . addheaders . append ( ( \'User-agent\' ,  USER_AGENT ) ) \n将创建好的opener对象装入request \nurllib . request . install_opener ( opener ) \nfilename ,  res  =  urllib . request . urlretrieve ( "https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png" ,   "test.png" ) \n从urlretrieve调用中清理临时文件 \nurllib . request . urlcleanup ( ) \n另一种方式 \nopener = urllib.request.URLopener() \n带有我们可以处理的错误处理程序的派生类 \nopener  =  urllib . request . FancyURLopener ( ) \nopener . version  =  user_agent\nfilename  =  opener . retrieve ( "https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png" ,   "test.png" ) \n \n import  urllib3\n import  json\n \ndata  =  json . dumps ( { \'abc\' :   \'123\' } ) \nhttp  =  urllib3 . PoolManager ( num_pools = 5 ,  headers = { \'User-Agent\' :   \'ABCDE\' } ) \n使用代理来访问某个网站 \nhttp = urllib3.ProxyManager(\'http://127.0.0.1:800\', headers={\'User-Agent\': \'ABCDE\'}) \nrequest使用fields进行POST请求不需要将 data参数转换成JSON格式，GET请求不需要自己拼接url参数 \n不过特别要声明的一点是 fielder 和 body 中只能存在一个 \nresp1  =  http . request ( \'POST\' ,   \'http://www.httpbin.org/post\' ,  body = data ,  timeout = 5 ,  retries = 5 ,  fields = data ) \n #resp2 = http.urlopen(\'POST\', \'http://www.httpbin.org/post\', body=data, timeout=5, retries=5) \n \n print ( resp1 . data . decode ( ) ) \n \n 提交form-data表单 \n \n 通过 files 参数传递 form-data \n \n import  requests\n from  requests . packages . urllib3 . exceptions  import  InsecureRequestWarning\n\nUSER_AGENT  =   "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) "  \\\n              "Chrome/77.0.3865.75 Safari/537.36 " \n\n\n if  __name__  ==   \'__main__\' : \n移除不验证SSL的警告 \n    requests . packages . urllib3 . disable_warnings ( InsecureRequestWarning ) \n    data  =   { \n         "_wpcf7" :   ( None ,   "3016" ) , \n         "_wpcf7_version" :   ( None ,   "5.1.1" ) , \n         "_wpcf7_locale" :   ( None ,   "en_US" ) , \n         "_wpcf7_unit_tag" :   ( None ,   "wpcf7-f3016-p4203-o2" ) , \n     } \nverify=False移除SSL认证 \n    res  =  requests . post ( "https://www.netsarang.com/json/download/process.html" ,  files = data , \n                        headers = { "User-Agent" :  USER_AGENT } ,  verify = False ,  timeout = 600 ) \n     print ( res . text ) \n \n \n 手动组建 form-data 并加上 headers \n \n import  requests\n\nUSER_AGENT  =   "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) "  \\\n              "Chrome/77.0.3865.75 Safari/537.36 " \n\n\n if  __name__  ==   \'__main__\' : \n    data  =   { \n         "_wpcf7" :   "3016" , \n         "_wpcf7_version" :   "5.1.1" , \n         "_wpcf7_locale" :   "en_US" , \n         "_wpcf7_unit_tag" :   "wpcf7-f3016-p4203-o2" , \n     } \n    payload  =   "" \n    boundary  =   "----WebKitFormBoundary67TaDgLkWD9HrhlW" \n     for  k ,  v  in  data . items ( ) : \n        payload  +=   f"-- { boundary } \\r\\nContent-Disposition: form-data; name=\\" { k } \\"\\r\\n\\r\\n { v } \\r\\n" \n    payload  +=   f" { boundary } --" \n    res  =  requests . post ( "https://www.netsarang.com/json/download/process.html" ,  payload , \n                        headers = { "User-Agent" :  USER_AGENT , "Content-Type" :   f"multipart/form-data; boundary= { boundary } " } , \n                        verify = False ,  timeout = 600 ) \n     print ( res . text ) \n \n \n 使用 encode_multipart_formdata \n \n from  urllib3  import  encode_multipart_formdata\n import  requests\n\nUSER_AGENT  =   "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) "  \\\n              "Chrome/77.0.3865.75 Safari/537.36 " \n\n\n if  __name__  ==   \'__main__\' : \n    data  =   { \n         "_wpcf7" :   "3016" , \n         "_wpcf7_version" :   "5.1.1" , \n         "_wpcf7_locale" :   "en_US" , \n         "_wpcf7_unit_tag" :   "wpcf7-f3016-p4203-o2" , \n     } \n注意这里的 - 符号的数量，默认有两个 \n     ( payload ,  content_type )   =  encode_multipart_formdata ( data ,  boundary = \'----WebKitFormBoundary67TaDgLkWD9HrhlW\' ) \n    res  =  requests . post ( "https://www.netsarang.com/json/download/process.html" ,  payload , \n                        headers = { "User-Agent" :  HttpUtil . USER_AGENT ,   "Content-Type" :  content_type } ,  verify = False , \n                        timeout = 600 ) \n     print ( res . text ) \n \n \n 使用 requests-toolbelt \npip install requests-toolbelt \n from  requests_toolbelt  import  MultipartEncoder\n import  requests\n\nUSER_AGENT  =   "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) "  \\\n              "Chrome/77.0.3865.75 Safari/537.36 " \n\n\n if  __name__  ==   \'__main__\' : \n    me  =  MultipartEncoder ( \n        fields = { \n             "_wpcf7" :   "3016" , \n             "_wpcf7_version" :   "5.1.1" , \n             "_wpcf7_locale" :   "en_US" , \n             "_wpcf7_unit_tag" :   "wpcf7-f3016-p4203-o2" , \n         } \n     ) \n    res  =  requests . post ( "https://www.netsarang.com/json/download/process.html" ,  me , \n                        headers = { "User-Agent" :  USER_AGENT ,   "Content-Type" :  me . content_type } ,  verify = False , \n                        timeout = 600 ) \n     print ( res . text ) \n \n ',createdTime:1761814324e3},{title:"Python",frontmatter:{description:"GO-Node-Python的简单性能比较\n内置函数 https://docs.python.org/zh-cn/3/library/functions.html\n内置异常 https://docs.python.org/zh-cn/3/library/exceptions.html\nList Comprehensions\n列表显示/列表解析\nhttps://github.com/jackfrued/Python-100-Days\n内置异常和函数-LeaCoder https://lichangke.github.io/category/#python\nPython语言小册\nhttps://github.com/revolunet/PythonBooks\nhttps://github.com/robertparley/wtfpython-cn\nhttps://github.com/gto76/python-cheatsheet\n教程 https://github.com/TwoWater/Python\nhttps://github.com/xxg1413/python\nhttps://github.com/yidao620c/python3-cookbook\nhttps://github.com/eastlakeside/interpy-zh\nhttps://github.com/cloga/scipy-lecture-notes_cn\nhttps://www.junmajinlong.com/python/index\nhttps://zmister.com\nhttps://github.com/iam-veeramalla/python-for-devops\n基础教程 https://morvanzhou.github.io/tutorials/python-basic/basic\nhttps://github.com/luckrnx09/python-guide-for-javascript-engineers\nhttps://github.com/ProgrammingHero1\n设计模式和集合 https://github.com/faif/python-patterns\nhttps://hellopython.readthedocs.io\n    https://github.com/meizhaohui/vueblog\nhttps://github.com/Pierian-Data/Complete-Python-3-Bootcamp\n流式数据处理 https://github.com/sandabuliu/python-stream\nhttps://github.com/Asabeneh/30-Days-Of-Python\nhttps://github.com/cycleuser/ThinkPython-CN",meta:[{name:"twitter:title",content:"Python"},{name:"twitter:description",content:"GO-Node-Python的简单性能比较\n内置函数 https://docs.python.org/zh-cn/3/library/functions.html\n内置异常 https://docs.python.org/zh-cn/3/library/exceptions.html\nList Comprehensions\n列表显示/列表解析\nhttps://github.com/jackfrued/Python-100-Days\n内置异常和函数-LeaCoder https://lichangke.github.io/category/#python\nPython语言小册\nhttps://github.com/revolunet/PythonBooks\nhttps://github.com/robertparley/wtfpython-cn\nhttps://github.com/gto76/python-cheatsheet\n教程 https://github.com/TwoWater/Python\nhttps://github.com/xxg1413/python\nhttps://github.com/yidao620c/python3-cookbook\nhttps://github.com/eastlakeside/interpy-zh\nhttps://github.com/cloga/scipy-lecture-notes_cn\nhttps://www.junmajinlong.com/python/index\nhttps://zmister.com\nhttps://github.com/iam-veeramalla/python-for-devops\n基础教程 https://morvanzhou.github.io/tutorials/python-basic/basic\nhttps://github.com/luckrnx09/python-guide-for-javascript-engineers\nhttps://github.com/ProgrammingHero1\n设计模式和集合 https://github.com/faif/python-patterns\nhttps://hellopython.readthedocs.io\n    https://github.com/meizhaohui/vueblog\nhttps://github.com/Pierian-Data/Complete-Python-3-Bootcamp\n流式数据处理 https://github.com/sandabuliu/python-stream\nhttps://github.com/Asabeneh/30-Days-Of-Python\nhttps://github.com/cycleuser/ThinkPython-CN"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Python/"},{property:"og:type",content:"article"},{property:"og:title",content:"Python"},{property:"og:description",content:"GO-Node-Python的简单性能比较\n内置函数 https://docs.python.org/zh-cn/3/library/functions.html\n内置异常 https://docs.python.org/zh-cn/3/library/exceptions.html\nList Comprehensions\n列表显示/列表解析\nhttps://github.com/jackfrued/Python-100-Days\n内置异常和函数-LeaCoder https://lichangke.github.io/category/#python\nPython语言小册\nhttps://github.com/revolunet/PythonBooks\nhttps://github.com/robertparley/wtfpython-cn\nhttps://github.com/gto76/python-cheatsheet\n教程 https://github.com/TwoWater/Python\nhttps://github.com/xxg1413/python\nhttps://github.com/yidao620c/python3-cookbook\nhttps://github.com/eastlakeside/interpy-zh\nhttps://github.com/cloga/scipy-lecture-notes_cn\nhttps://www.junmajinlong.com/python/index\nhttps://zmister.com\nhttps://github.com/iam-veeramalla/python-for-devops\n基础教程 https://morvanzhou.github.io/tutorials/python-basic/basic\nhttps://github.com/luckrnx09/python-guide-for-javascript-engineers\nhttps://github.com/ProgrammingHero1\n设计模式和集合 https://github.com/faif/python-patterns\nhttps://hellopython.readthedocs.io\n    https://github.com/meizhaohui/vueblog\nhttps://github.com/Pierian-Data/Complete-Python-3-Bootcamp\n流式数据处理 https://github.com/sandabuliu/python-stream\nhttps://github.com/Asabeneh/30-Days-Of-Python\nhttps://github.com/cycleuser/ThinkPython-CN"},{property:"og:url",content:"https://bajins.com/Python/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Python"},{itemprop:"description",content:"GO-Node-Python的简单性能比较\n内置函数 https://docs.python.org/zh-cn/3/library/functions.html\n内置异常 https://docs.python.org/zh-cn/3/library/exceptions.html\nList Comprehensions\n列表显示/列表解析\nhttps://github.com/jackfrued/Python-100-Days\n内置异常和函数-LeaCoder https://lichangke.github.io/category/#python\nPython语言小册\nhttps://github.com/revolunet/PythonBooks\nhttps://github.com/robertparley/wtfpython-cn\nhttps://github.com/gto76/python-cheatsheet\n教程 https://github.com/TwoWater/Python\nhttps://github.com/xxg1413/python\nhttps://github.com/yidao620c/python3-cookbook\nhttps://github.com/eastlakeside/interpy-zh\nhttps://github.com/cloga/scipy-lecture-notes_cn\nhttps://www.junmajinlong.com/python/index\nhttps://zmister.com\nhttps://github.com/iam-veeramalla/python-for-devops\n基础教程 https://morvanzhou.github.io/tutorials/python-basic/basic\nhttps://github.com/luckrnx09/python-guide-for-javascript-engineers\nhttps://github.com/ProgrammingHero1\n设计模式和集合 https://github.com/faif/python-patterns\nhttps://hellopython.readthedocs.io\n    https://github.com/meizhaohui/vueblog\nhttps://github.com/Pierian-Data/Complete-Python-3-Bootcamp\n流式数据处理 https://github.com/sandabuliu/python-stream\nhttps://github.com/Asabeneh/30-Days-Of-Python\nhttps://github.com/cycleuser/ThinkPython-CN"}]},regularPath:"/Python/",relativePath:"Python/README.md",key:"v-712cb044",path:"/Python/",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"三方编译器",slug:"三方编译器"},{level:2,title:"安装新版",slug:"安装新版"},{level:3,title:"安装编译相关工具",slug:"安装编译相关工具"},{level:3,title:"下载安装包解压",slug:"下载安装包解压"},{level:3,title:"编译安装",slug:"编译安装"},{level:3,title:"创建软连接",slug:"创建软连接"},{level:3,title:"验证是否成功",slug:"验证是否成功"},{level:3,title:"安装后yum不能正常使用",slug:"安装后yum不能正常使用"},{level:2,title:"pip",slug:"pip"},{level:3,title:"虚拟环境",slug:"虚拟环境"},{level:3,title:"镜像源",slug:"镜像源"},{level:3,title:"生成依赖管理文件",slug:"生成依赖管理文件"},{level:3,title:"根据管理文件安装依赖",slug:"根据管理文件安装依赖"},{level:3,title:"更新依赖库",slug:"更新依赖库"},{level:3,title:"卸载依赖库",slug:"卸载依赖库"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Python \n Flag 三方编译器 安装新版 安装编译相关工具 下载安装包解压 编译安装 创建软连接 验证是否成功 安装后yum不能正常使用 pip 虚拟环境 镜像源 生成依赖管理文件 根据管理文件安装依赖 更新依赖库 卸载依赖库 \n Flag \n \n 由于 Python 是动态编译的语言，和 C / C++ 、 Java 或者 Kotlin 等静态语言不同，它是在运行时一句一句代码地边编译边执行的，\n而 Java 是提前将高级语言编译成了 JVM 字节码，运行时直接通过JVM和机器打交道，所以进行密集计算时运行速度远高于动态编译语言。\n但是根据 二八定律 （帕累托法则），有 80% 的计算资源只被 20% 的程序所使用，因此在大部分情况下，\n原生的 CPython 解释器已经足够满足日常编程，加上很多科学计算库底层都是 C / C++ 写的，一般不会用 Python 做密集计算。 \n \n \n https://github.com/topics/python \n https://github.com/python \n \n https://www.python.org \n https://docs.python.org/zh-cn \n https://www.python.org/ftp/python \n \n \n https://github.com/psf \n https://github.com/Python-World \n https://github.com/taichi-dev/taichi \n https://github.com/kennethreitz/pep8.org \n https://github.com/hhatto/autopep8 \n https://github.com/psf/black \n 代码格式化  https://github.com/astral-sh/ruff \n \n \n GO-Node-Python的简单性能比较 \n 内置函数  https://docs.python.org/zh-cn/3/library/functions.html \n 内置异常  https://docs.python.org/zh-cn/3/library/exceptions.html \n List Comprehensions \n 列表显示/列表解析 \n https://github.com/jackfrued/Python-100-Days \n 内置异常和函数-LeaCoder  https://lichangke.github.io/category/#python \n Python语言小册 \n https://github.com/revolunet/PythonBooks \n https://github.com/robertparley/wtfpython-cn \n https://github.com/gto76/python-cheatsheet \n 教程  https://github.com/TwoWater/Python \n https://github.com/xxg1413/python \n https://github.com/yidao620c/python3-cookbook \n https://github.com/eastlakeside/interpy-zh \n https://github.com/cloga/scipy-lecture-notes_cn \n https://www.junmajinlong.com/python/index \n https://zmister.com \n https://github.com/iam-veeramalla/python-for-devops \n 基础教程  https://morvanzhou.github.io/tutorials/python-basic/basic \n https://github.com/luckrnx09/python-guide-for-javascript-engineers \n https://github.com/ProgrammingHero1 \n 设计模式和集合  https://github.com/faif/python-patterns \n https://hellopython.readthedocs.io \n \n https://github.com/meizhaohui/vueblog \n \n \n https://github.com/Pierian-Data/Complete-Python-3-Bootcamp \n 流式数据处理  https://github.com/sandabuliu/python-stream \n https://github.com/Asabeneh/30-Days-Of-Python \n https://github.com/cycleuser/ThinkPython-CN \n \n \n FantixKing 的个人主页-掘金 \n Python中的GIL机制详解 \n 深挖python上下文管理——类的__init__、 enter 、 exit 、__del__在with下的表现 \n 深入理解 Python 中的上下文管理器 \n \n test  =  Test ( )   # 触发__del__ \n with  Test ( )   as  t :   # 触发__exit__ \n     pass \n \n 工具 \n \n 纯真IP数据库  https://github.com/animalize/qqwry-python3 \n 反编译  https://github.com/countercept/python-exe-unpacker \n 解密MS Office  https://github.com/nolze/msoffcrypto-tool \n 网站脱机下载  https://github.com/xroche/httrack \n web文件扫描  https://github.com/topics/dirbuster \n https://github.com/H4ckForJob/dirmap \n https://github.com/DIGITALCRIMINAL/OnlyFans \n WiFi扫描破解  https://github.com/TheSadError/NIVOS \n CLI工具  https://github.com/kellyjonbrazil/jc \n https://github.com/astral-sh/ruff \n 数据提取  https://github.com/opendatalab/MinerU \n 三方编译器 \n \n PyPy 使用了 JIT （即时编译）技术，混合了动态编译和静态编译的特性，仍然是一句一句编译源代码，\n但是会将翻译过的代码缓存起来以降低性能损耗。相对于静态编译代码，即时编译的代码可以处理延迟绑定并增强安全性。 \n \n \n https://github.com/python/cpython \n https://www.pypy.org \n \n https://github.com/topics/pypy \n https://github.com/mozillazg/pypy \n \n \n https://github.com/pyston/pyston \n https://github.com/stackless-dev/stackless \n https://github.com/jython/jython \n https://github.com/IronLanguages \n \n https://ironpython.net \n \n \n https://github.com/numpy \n https://github.com/faster-cpython \n \n https://github.com/markshannon/faster-cpython \n \n \n https://github.com/cython/cython \n https://github.com/numba/numba \n https://github.com/Nuitka/Nuitka \n https://github.com/Immediate-Mode-UI/Nuklear \n \n https://github.com/vurtun/nuklear \n http://github.xiaoc.cn/ghaerr/microwindows \n \n \n https://github.com/pybind \n https://github.com/wlav/cppyy \n https://github.com/ethan-funny \n 安装新版 \n \n 全部操作都在 root 用户下执行 \n 安装编译相关工具 \n yum  -y  groupinstall  \"Development tools\" \nyum  -y   install  zlib-devel bzip2-devel openssl-devel  \\ \nncurses-devel sqlite-devel readline-devel tk-devel  \\ \ngdbm-devel db4-devel libpcap-devel xz-devel libffi-devel\n 下载安装包解压 \n \n 到官网复制最新版下载地址 https://www.python.org/downloads/release \n \n wget  https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz\n解压 \n tar   -xvJf  Python-3.7.3.tar.xz\n切换到解压目录 \n cd  Python-3.7.3\n 编译安装 \n创建编译安装目录，并配置指定安装路径 \n mkdir  /usr/local/python3  &&  ./configure  --prefix = /usr/local/python3\n编译安装并把安装日志保存下来 \n make   &&   make   install   >  install.log\n 创建软连接 \n ln   -s  /usr/local/python3/bin/python3 /bin/python3\n ln   -s  /usr/local/python3/bin/pip3 /bin/pip3\n 验证是否成功 \n python3  -V   &&  pip3  -V \n 安装后yum不能正常使用 \n \n 把  #!/usr/bin/python  修改为  #!/usr/bin/python2 \n \n vi  /usr/bin/yum \n \n \n 把  #!/usr/bin/python  修改为  #!/usr/bin/python2 \n \n vi  /usr/libexec/urlgrabber-ext-down \n pip \n \n https://github.com/pypa \n \n https://pypi.org \n https://www.cnpython.com/pypi \n \n \n https://packaging.python.org/tutorials/installing-packages \n Python包管理工作流 \n 包和项目管理器  https://github.com/astral-sh/uv \n 依赖保持最新  https://github.com/jazzband/pip-tools \n \n \n sudo apt install python3-pip \n 虚拟环境 \n \n Python 3.3+ 内置 \nhttps://packaging.python.org/en/latest/tutorials/installing-packages/#creating-virtual-environments \n创建虚拟环境 \npython  -m  venv .venv\n激活 \n source  .venv/bin/activate    # Linux/macOS \n或 \n.venv \\ Scripts \\ activate        # Windows \n退出 \ndeactivate\n删除（如需） \n rm   -rf  .venv\n \n \n Miniconda3 \n \n wget  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n bash  Miniconda3-latest-Linux-x86_64.sh\n eval   \" $( /root/miniconda3/bin/conda shell.bash hook ) \" \nconda init\nconda create  -n  .conda  python = 3.7   -y \nconda activate .conda\nconda  install   --yes   --file  requirements.txt\nconda deactivate  # 退出当前环境 \n \n \n https://github.com/pyenv/pyenv \n https://github.com/pdm-project/pdm \n https://github.com/python-poetry/poetry \n https://github.com/pypa/pipenv \n https://github.com/pypa/virtualenv \n \n https://github.com/python-virtualenvwrapper/virtualenvwrapper \n https://github.com/davidmarble/virtualenvwrapper-win \n \n \n https://github.com/pypa/pipx \n Anaconda  https://github.com/ContinuumIO \n \n https://github.com/Anaconda-Platform \n \n \n Miniconda  https://github.com/conda/conda \n \n https://github.com/conda-forge/miniforge \n \n \n \n \n \n \n 工具 \n 管理 Python 版本 \n 依赖管理文件 \n 适用场景 \n \n \n \n \n venv \n ❌ 否 \n requirements.txt \n 通用项目、Python 3.3+ 内置 \n \n \n pyenv+venv \n ✅ 是 \n requirements.txt \n 多版本 Python 开发 \n \n \n virtualenv \n ❌ 否 \n requirements.txt \n 兼容旧版 Python \n \n \n pipenv \n ❌ 否 \n Pipfile \n 中小型项目 \n \n \n poetry \n ❌ 否（需配合pyenv） \n pyproject.toml \n 现代项目、开源、打包发布 \n \n \n conda \n ✅ 是 \n environment.yml \n 数据科学、机器学习 \n 镜像源 \n 更多镜像源 \n \n 阿里云  https://mirrors.aliyun.com/pypi/simple \n 百度  https://mirror.baidu.com/pypi/simple \n 中国科技大学  https://pypi.mirrors.ustc.edu.cn/simple \n 清华大学  https://pypi.tuna.tsinghua.edu.cn/simple \n \n \n 豆瓣(douban)  http://pypi.douban.com/simple \n 中国科学技术大学  http://pypi.mirrors.ustc.edu.cn/simple \n 华中理工大学  http://pypi.hustunique.com \n 山东理工大学  http://pypi.sdutlinux.org \n 上海交通大学  https://mirrors.sjtug.sjtu.edu.cn/pypi \n \n \n 安装单个库 \n使用pip参数`-i 网址`，如果不是`https`协议网址需要加--trusted-host参数\n pip  install  -i  http://pypi.douban.com /simple   --trusted-host  pypi.douban.com requests \n \n \n 使用命令全局配置 \n \n pip config  set  global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\n \n \n 编辑文件全局配置 \nLinux环境 \nvi ~/.pip/pip.conf \nwindows环境 \n%APPDATA%\\Romaing\\pip\\pip.ini\n添加或者修改 \n [ global ] \n index-url   =   http://mirrors.aliyun.com/pypi/simple/ \n [ install ] \n trusted-host = mirrors.aliyun.com \n 生成依赖管理文件 \n \n https://github.com/bndr/pipreqs \n对于没有使用虚拟环境，会把系统所有的包都导出 \npip freeze  >  requirements.txt\npipreqs则只导出当前项目依赖库，如果文件存在可以使用--force覆盖，默认不会覆盖 \npipreqs  --force   --encoding  utf-8 ./\n 根据管理文件安装依赖 \n pip  install   -r  requirements.txt\npip  install   --requirement  requirements.txt\n 更新依赖库 \n 更新pip \n python  -m  pip  install   --upgrade  pip setuptools\n \n \n 解决pip安装模块提示已经安装更高版本问题 \n \n pip3  install  --ignore-installed 模块名\n \n 查看可更新的库 \n--outdated \npip list  -o \nformat有两个选项：columns(有表头), freeze(无表头), json \npip list  --outdated   --format = columns\n \n 更新单个库 \n pip  install   --upgrade  要升级的包名\n \n 批量更新库 \n \n 使用pip升级所有包 \n linux 下升级所有 pip 过期包 \npip  install   ` pip list  --outdate   |   sed   -n   '3,$p'   |   awk   '{print $1}' `   --upgrade \npip freeze  --local   |   grep   -v   '^-e'   |   cut   -d   =   -f   1    |   xargs   -n1  pip  install   -U \npip list  -o   --format = freeze  |   cut   -d   =   -f   1    |   xargs   -n1  pip  install   -U \n安装 pip-review \npip  install  pip-review\n查看可更新的包 \npip-review\n自动更新所有包 \npip-review  --auto \n更新包，提供操作可选项：[Y]es, [N]o, [A]ll, [Q]uit \npip-review  --local   --interactive \n \n from  subprocess  import  call\n from  pip . _internal . utils . misc  import  get_installed_distributions\n\npackages  =   [ dist . project_name  for  dist  in  get_installed_distributions ( ) ] \ncall ( \"pip install --upgrade\"   +   ' ' . join ( packages ) ,  shell = True ) \n \n import  pkg_resources\n from  subprocess  import  call\n\npackages  =   [ dist . project_name  for  dist  in  pkg_resources . working_set ] \ncall ( \"pip install --upgrade\"   +   ' ' . join ( packages ) ,  shell = True ) \n 卸载依赖库 \n pip uninstall 要卸载的包名\n \n ",createdTime:1761814324e3},{title:"Python爬虫",frontmatter:{description:"https://github.com/Boris-code/feapder\nhttps://github.com/pyppeteer/pyppeteer\nhttps://github.com/autoscrape-labs/pydoll\nhttps://github.com/hyperiongray/trio-chrome-devtools-protocol\nhttps://github.com/chuckus/chromewhip\nhttps://github.com/fate0/pychrome\nhttps://github.com/fake-name/ChromeController\nhttps://github.com/N0taN3rd/chrome-remote-interface-py\nhttps://github.com/HiddenStrawberry/CrawlerIllegalCasesInChina\nxvfb可以将屏幕的图像输出给放到虚拟内存中\nhttps://github.com/scrapy/scrapy\nhttps://github.com/mouday/spider-admin-pro\n字体映射 https://github.com/lightsing/sfontmapper",meta:[{name:"twitter:title",content:"Python爬虫"},{name:"twitter:description",content:"https://github.com/Boris-code/feapder\nhttps://github.com/pyppeteer/pyppeteer\nhttps://github.com/autoscrape-labs/pydoll\nhttps://github.com/hyperiongray/trio-chrome-devtools-protocol\nhttps://github.com/chuckus/chromewhip\nhttps://github.com/fate0/pychrome\nhttps://github.com/fake-name/ChromeController\nhttps://github.com/N0taN3rd/chrome-remote-interface-py\nhttps://github.com/HiddenStrawberry/CrawlerIllegalCasesInChina\nxvfb可以将屏幕的图像输出给放到虚拟内存中\nhttps://github.com/scrapy/scrapy\nhttps://github.com/mouday/spider-admin-pro\n字体映射 https://github.com/lightsing/sfontmapper"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Python/Python%E7%88%AC%E8%99%AB.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Python爬虫"},{property:"og:description",content:"https://github.com/Boris-code/feapder\nhttps://github.com/pyppeteer/pyppeteer\nhttps://github.com/autoscrape-labs/pydoll\nhttps://github.com/hyperiongray/trio-chrome-devtools-protocol\nhttps://github.com/chuckus/chromewhip\nhttps://github.com/fate0/pychrome\nhttps://github.com/fake-name/ChromeController\nhttps://github.com/N0taN3rd/chrome-remote-interface-py\nhttps://github.com/HiddenStrawberry/CrawlerIllegalCasesInChina\nxvfb可以将屏幕的图像输出给放到虚拟内存中\nhttps://github.com/scrapy/scrapy\nhttps://github.com/mouday/spider-admin-pro\n字体映射 https://github.com/lightsing/sfontmapper"},{property:"og:url",content:"https://bajins.com/Python/Python%E7%88%AC%E8%99%AB.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Python爬虫"},{itemprop:"description",content:"https://github.com/Boris-code/feapder\nhttps://github.com/pyppeteer/pyppeteer\nhttps://github.com/autoscrape-labs/pydoll\nhttps://github.com/hyperiongray/trio-chrome-devtools-protocol\nhttps://github.com/chuckus/chromewhip\nhttps://github.com/fate0/pychrome\nhttps://github.com/fake-name/ChromeController\nhttps://github.com/N0taN3rd/chrome-remote-interface-py\nhttps://github.com/HiddenStrawberry/CrawlerIllegalCasesInChina\nxvfb可以将屏幕的图像输出给放到虚拟内存中\nhttps://github.com/scrapy/scrapy\nhttps://github.com/mouday/spider-admin-pro\n字体映射 https://github.com/lightsing/sfontmapper"}]},regularPath:"/Python/Python%E7%88%AC%E8%99%AB.html",relativePath:"Python/Python爬虫.md",key:"v-6ec03868",path:"/Python/Python%E7%88%AC%E8%99%AB.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"开源脚本",slug:"开源脚本"},{level:2,title:"selenium",slug:"selenium"},{level:3,title:"函数或变量",slug:"函数或变量"},{level:2,title:"浏览器下载设置",slug:"浏览器下载设置"},{level:3,title:"打开新标签页",slug:"打开新标签页"},{level:3,title:"执行JavaScript",slug:"执行javascript"},{level:2,title:"m3u8解析下载",slug:"m3u8解析下载"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Python爬虫 \n Flag 开源脚本 selenium 函数或变量 浏览器下载设置 打开新标签页 执行JavaScript m3u8解析下载 \n Flag \n \n https://github.com/topics/scraper \n https://github.com/topics/webscraper \n https://github.com/topics/web-scraper \n https://github.com/topics/spider \n https://github.com/topics/webscraper \n https://github.com/topics/web-scraper \n https://github.com/topics/crawler \n https://github.com/topics/webcrawler \n https://github.com/topics/web-crawler \n https://github.com/topics/automation \n \n \n https://github.com/Boris-code/feapder \n https://github.com/pyppeteer/pyppeteer \n https://github.com/autoscrape-labs/pydoll \n https://github.com/hyperiongray/trio-chrome-devtools-protocol \n https://github.com/chuckus/chromewhip \n https://github.com/fate0/pychrome \n https://github.com/fake-name/ChromeController \n https://github.com/N0taN3rd/chrome-remote-interface-py \n https://github.com/HiddenStrawberry/Crawler_Illegal_Cases_In_China \n xvfb可以将屏幕的图像输出给放到虚拟内存中 \n https://github.com/scrapy/scrapy \n https://github.com/mouday/spider-admin-pro \n 字体映射  https://github.com/lightsing/sfontmapper \n \n xpath和css选择器 \n HeadlessBrowser \n \n 关于网页referer以及破解referer反爬虫的办法 \n ReCaptcha验证码（常见为Google验证码）  https://github.com/topics/captcha-solving \n \n https://github.com/teal33t/captcha_bypass \n https://github.com/NotHassan/Python-Google-Recaptcha-v2-Solver \n https://github.com/balanceofprobability/decaptcha \n https://github.com/IshanManchanda/pyreCAPTCHA \n https://github.com/tafalk/recaptcha-token-resolver-function \n \n \n 使用HTTP拦截器来实现cloudflare请求  https://github.com/sayem314/hooman \n Hashcat破解队列系统  https://github.com/f0cker/crackq \n 电话号码的高级信息收集  https://github.com/sundowndev/PhoneInfoga \n 网页抓取查看  https://github.com/kubero-dev/ladder \n 开源脚本 \n \n https://github.com/search?q=微信公众号爬虫 \n https://github.com/search?q=WeChat+Hook \n \n \n 搜索社交账户  https://github.com/sherlock-project/sherlock \n https://github.com/DropsDevopsOrg/ECommerceCrawlers \n https://github.com/smallfawn/QLScriptPublic \n https://github.com/tinygeeker/tinyspiders \n https://github.com/Moli-X/Resources \n 咸鱼监控  https://github.com/dingyufei615/ai-goofish-monitor \n 短视频  https://github.com/Evil0ctal/Douyin_TikTok_Download_API \n \n 签到 \n \n https://github.com/Sitoi/dailycheckin \n https://github.com/leecobaby/shortcuts \n https://github.com/Wenmoux/checkbox \n \n 京东 \n \n https://github.com/search?q=茅台 \n 京东签到  https://github.com/NobyDa/Script \n https://github.com/yangtingxiao/QuantumultX \n https://github.com/chavyleung/scripts \n https://github.com/zero205/JD_tencent_scf \n https://github.com/shufflewzc/faker2 \n https://github.com/smiek2221/scripts \n \n 微信 \n \n https://weixin.qq.com/cgi-bin/readtemplate?lang=zh_CN&t=weixin_faq_list&head=true \n \n https://weixin.qq.com/updates \n \n \n https://github.com/iibob/WechatWindowsVersionHistory \n https://github.com/cscnk52/wechat-windows-versions \n https://github.com/zsbai/wechat-versions \n \n https://github.com/tom-snow/wechat-windows-versions \n \n \n \n \n HOOK  https://github.com/search?q=WxDump \n https://github.com/AdminTest0/SharpWxDump \n \n 红队攻防之PC端微信个人信息与聊天记录取证 \n 电子取证之PC版微信数据库解密 \n .\\SharpWxDump.exe | Select-String -Pattern 'WeChatKey:' | %{$_ -Replace(\".*: \", \"\")} | %{python .\\de.py -k $_ -d .\\MSG2.db} \n https://github.com/SpenserCai/GoWxDump \n https://github.com/f13T2ach/WxMsgDump \n https://github.com/xaoyaoo/PyWxDump \n https://github.com/Aeron1-bit/PyWxDump \n \n \n https://github.com/LC044/WeChatMsg/forks \n \n https://github.com/tqjason/WeChatMsg \n https://github.com/shixiaogaoya/MemoTrace \n https://github.com/Xyy-tj/WeChatMsg \n https://github.com/evergardener/WeChatMsg \n https://github.com/STDquantum/WeChatMsg \n https://github.com/icekree/WeChatMsg \n https://github.com/dfldylan/WeChatMsg \n \n \n https://github.com/sjzar/chatlog \n \n https://github.com/saucer-man/wxdump \n \n \n https://github.com/git-jiadong/wechatDataBackup \n \n https://github.com/cmluZw/WxDump \n \n \n https://github.com/ttttupup/wxhelper \n https://github.com/BlueMatthew/WechatExporter \n \n https://github.com/AngelLiang/WechatExporter-html2excel \n \n \n https://github.com/greycodee/wechat-backup \n \n https://github.com/wuyanaozi/wechat-backup \n \n \n https://github.com/Ormicron/Sharp-dumpkey \n https://github.com/L-HeliantHuS/GetWeChatDBPassword \n https://github.com/test1213145/wechat-export \n https://github.com/Ngwind/wechat-export \n \n 微信聊天记录数据解密与分析 \n 微信聊天记录解密并导出 \n \n \n https://github.com/luin/wechat-export \n https://github.com/HackerDev-Felix/WechatDecrypt \n https://github.com/saturn-opposition/wechat_analysis \n https://github.com/allen1881996/WeChat-Data-Analysis \n 公众号文章  https://github.com/wnma3mz/wechat_articles_spider \n https://github.com/LeLe86/vWeChatCrawl \n https://github.com/qiye45/wechatDownload \n https://github.com/jooooock/wechat-article-exporter \n https://github.com/xiaoguyu/wechatDownload \n https://github.com/cooderl/wewe-rss \n https://github.com/Dragocytus/wechatdownload \n https://www.52pojie.cn/thread-948652-1-1.html \n 推送转发  https://github.com/kerwin162/WeChatNotify \n https://github.com/Eric-Guo/wechat \n https://github.com/wechaty/wechaty \n 清理微信僵尸粉  https://github.com/L8426936/CleanUpWeChatZombieFans \n 防撤回  https://github.com/huiyadanli/RevokeMsgPatcher \n QQ机器人  https://github.com/Mrs4s \n 微信机器人  https://github.com/ngc660sec/NGCBot/forks \n \n https://github.com/Aabyss-Team/NGCBot \n https://github.com/lwsinclair/NGCBot \n \n \n https://github.com/wwg88888888/WeChatExt \n https://github.com/KongKong20/WeChatPCHook \n https://github.com/TonyChen56/WeChatRobot \n https://github.com/ljc545w/ComWeChatRobot \n https://github.com/cixingguangming55555/wechat-bot \n https://github.com/small-step/mikasa-wechat \n 调试PC端微信内置浏览器 \n 调试PC端微信内置浏览器 \n \"调戏\" 微信PC端浏览器内置浏览器 \n selenium \n \n https://github.com/topics/selenium \n https://github.com/topics/testing \n \n \n https://github.com/SeleniumHQ \n \n https://selenium.dev/documentation/zh-cn \n https://github.com/caoruiy/selenium-python-docs-zh \n https://selenium-python-zh.readthedocs.io \n https://wizardforcel.gitbooks.io/selenium-doc \n \n \n https://github.com/seleniumbase \n Python3-Selenium开启自动化测试 \n python+selenium 判断元素是否存在，是否可点击，是否被选中 \n EC：expected_conditions判断页面元素 \n selenium,Python3滚动到页面底部的几种解决方案 \n Python Selenium教程 - 猿人学Python \n 函数或变量 \n \n \n \n 函数或变量 \n 说明 \n \n \n \n \n def file_detector_context(self, file_detector_class, *args, **kwargs): \n \n \n \n def mobile(self): \n \n \n \n def name(self): \n \n \n \n def start_client(self): \n \n \n \n def stop_client(self): \n \n \n \n def start_session(self, capabilities, browser_profile=None): \n \n \n \n def create_web_element(self, element_id): \n \n \n \n def execute(self, driver_command, params=None): \n \n \n \n def get(self, url): \n \n \n \n def title(self): \n \n \n \n def find_element_by_id(self, id_): \n \n \n \n def find_elements_by_id(self, id_): \n \n \n \n def find_element_by_xpath(self, xpath): \n \n \n \n def find_elements_by_xpath(self, xpath): \n \n \n \n def find_element_by_link_text(self, link_text): \n \n \n \n def find_elements_by_link_text(self, text): \n \n \n \n def find_element_by_partial_link_text(self, link_text): \n \n \n \n def find_elements_by_partial_link_text(self, link_text): \n \n \n \n def find_element_by_name(self, name): \n \n \n \n def find_elements_by_name(self, name): \n \n \n \n def find_element_by_tag_name(self, name): \n \n \n \n def find_elements_by_tag_name(self, name): \n \n \n \n def find_element_by_class_name(self, name): \n \n \n \n def find_elements_by_class_name(self, name): \n \n \n \n def find_element_by_css_selector(self, css_selector): \n \n \n \n def find_elements_by_css_selector(self, css_selector): \n \n \n \n def execute_script(self, script, *args): \n \n \n \n def execute_async_script(self, script, *args): \n \n \n \n def current_url(self): \n \n \n \n def page_source(self): \n \n \n \n def close(self): \n \n \n \n def quit(self): \n \n \n \n def current_window_handle(self): \n \n \n \n def window_handles(self): \n \n \n \n def maximize_window(self): \n \n \n \n def fullscreen_window(self): \n \n \n \n def minimize_window(self): \n \n \n \n def switch_to(self): \n \n \n \n def switch_to_active_element(self): \n \n \n \n def switch_to_window(self, window_name): \n \n \n \n def switch_to_frame(self, frame_reference): \n \n \n \n def switch_to_default_content(self): \n \n \n \n def switch_to_alert(self): \n \n \n \n def back(self): \n \n \n \n def forward(self): \n \n \n \n def refresh(self): \n \n \n \n def get_cookies(self): \n \n \n \n def get_cookie(self, name): \n \n \n \n def delete_cookie(self, name): \n \n \n \n def delete_all_cookies(self): \n \n \n \n def add_cookie(self, cookie_dict): \n \n \n \n def implicitly_wait(self, time_to_wait): \n \n \n \n def set_script_timeout(self, time_to_wait): \n \n \n \n def set_page_load_timeout(self, time_to_wait): \n \n \n \n def find_element(self, by=By.ID, value=None): \n \n \n \n def find_elements(self, by=By.ID, value=None): \n \n \n \n def desired_capabilities(self): \n \n \n \n def get_screenshot_as_file(self, filename): \n \n \n \n def save_screenshot(self, filename): \n \n \n \n def get_screenshot_as_png(self): \n \n \n \n def get_screenshot_as_base64(self): \n \n \n \n def set_window_size(self, width, height, windowHandle='current'): \n \n \n \n def get_window_size(self, windowHandle='current'): \n \n \n \n def set_window_position(self, x, y, windowHandle='current'): \n \n \n \n def get_window_position(self, windowHandle='current'): \n \n \n \n def get_window_rect(self): \n \n \n \n def set_window_rect(self, x=None, y=None, width=None, height=None): \n \n \n \n def file_detector(self): \n \n \n \n def file_detector(self, detector): \n \n \n \n def orientation(self): \n \n \n \n def orientation(self, value): \n \n \n \n def application_cache(self): \n \n \n \n def log_types(self): \n \n \n \n def get_log(self, log_type): \n 浏览器下载设置 \n \n https://github.com/SeleniumHQ/selenium/issues/5722 \n https://github.com/SeleniumHQ/selenium/issues/5159 \n向Selenium Webwdriver添加对Chrome \"send_command\"的支持 \ndriver . command_executor . _commands [ \"send_command\" ]   =   ( \"POST\" ,   '/session/$sessionId/chromium/send_command' ) \nallow自动、deny禁止、default默认 \nparams  =   { 'cmd' :   'Page.setDownloadBehavior' ,   'params' :   { 'behavior' :   'deny' ,   'downloadPath' :   \"D:\\\\\" } } \ndriver . execute ( \"send_command\" ,  params ) \n \n driver . execute_cdp_cmd ( \"Page.setDownloadBehavior\" ,   { 'behavior' :   'deny' ,   'downloadPath' :   \"D:\\\\\" } ) \n 打开新标签页 \n获取主窗口句柄 \nmain_window  =  driver . current_window_handle\n通过执行js打开新标签页并访问url \ndriver . execute_script ( f\"window.open(' { url } ')\" ) \n在新选项卡中打开空白页面 \n #driver.execute_script(f\"window.open('','_blank')\") \n获取当前所有窗口句柄（窗口A、B），并切换到新标签页 \ndriver . switch_to . window ( driver . window_handles [ - 1 ] ) \n访问url \n #driver.get(url) \n关闭当前窗口。 \ndriver . close ( ) \n关闭新选项卡后回到主窗口，必须做这一步，否则会引发错误 \ndriver . switch_to . window ( main_window ) \n \n 使用组合键 \n \n 该方式在Chrome下无效 \n \n \n 在增加了设置下载路径代码后，无法打开新标签页，但是捕获到的handler是两个，可以进行切换，只是没有切换动态效果了，实际是切换了的 \n \n \n OSX 操作系统通过组合键 COMMAND  +  T 或 COMMAND  +  W 来实现选项卡的打开/关闭 \n \n \n 在其他操作系统上，可以使用 CONTROL  +  T  /  CONTROL  +  W \nwindows 用Keys.CONTROL 如同ctrl+t打开新标签页 \ndriver . find_element_by_tag_name ( 'body' ) . send_keys ( Keys . CONTROL  +   't' ) \n<CTRL> + <T>通过Action链发送 \nActionChains(driver).key_down(Keys.CONTROL).send_keys(\"t\").key_up(Keys.CONTROL).perform() \n获取当前所有窗口句柄（窗口A、B），并切换到新标签页 \ndriver . switch_to . window ( driver . window_handles [ - 1 ] ) \n访问url \ndriver . get ( url ) \nwindows 用Keys.CONTROL 如同ctrl+w关闭标签页 \n #driver.find_element_by_tag_name('body').send_keys(Keys.CONTROL + 'w') \n关闭当前窗口。 \ndriver . close ( ) \n 执行JavaScript \n通过 js 移动到最下 \ndriver . execute_script (   \"var q=document.documentElement.scrollTop=10000\"   ) \n通过 js 返回所有html \ndriver . execute_script (   \"return document.documentElement.outerHTML\"   ) \n m3u8解析下载 \n \n M3U8有两层：第一层存放的是流信息（EXT-X-STREAM-INF）和第二层的下载链接，第二层才是存放加密（EXT-X-KEY）和 ts 文件的下载地址 \n \n \n https://github.com/globocom/m3u8 \n https://github.com/canhlinh/hlsdl \n https://github.com/HeiSir2014/M3U8-Downloader \n 什么是m3u8文件 \n 加密的ts+m3u8合并 \n 关于m3u8格式的视频文件ts转mp4下载和key加密问题 \n 将TS转换为MP4 \n \n",createdTime:1761814324e3},{title:"Home",frontmatter:{home:!0,actionText:"Work-Life Balance →",actionLink:"/#命令",description:"",meta:[{name:"image",content:"https://gitpod.io/button/open-in-gitpod.svg"},{name:"twitter:title",content:""},{name:"twitter:description",content:""},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://gitpod.io/button/open-in-gitpod.svg"},{name:"twitter:url",content:"https://bajins.com/"},{property:"og:type",content:"website"},{property:"og:title",content:""},{property:"og:description",content:""},{property:"og:image",content:"https://gitpod.io/button/open-in-gitpod.svg"},{property:"og:url",content:"https://bajins.com/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:""},{itemprop:"description",content:""},{itemprop:"image",content:"https://gitpod.io/button/open-in-gitpod.svg"}]},regularPath:"/",relativePath:"README.md",key:"v-2eaedb6e",path:"/",headers:[{level:2,title:"目录结构",slug:"目录结构"},{level:2,title:"命令",slug:"命令"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 使用 \n TIP \n 基于本仓库可快速创建你自己的文档网站。\n 高亮语法支持列表 \n PrismJS Shiki \n \n TIP \n 编译时自动帮你配置菜单栏和侧边栏，最多三层目录结构。 \n \n TIP \n 非常多的热心开发者开源主题 vuepress-theme \n \n TIP \n 如果觉得使用 VuePress vitepress 不便，\n可使用静态博客写作客户端 gridea \n 目录结构 \n \n 官方标准目录结构 \n \n .\n│  .gitignore           git忽略文件\n│  package-lock.json    NPM依赖配置文件\n│  yarn.lock            yarn依赖配置文件\n│  package.json         项目配置文件\n│  README.md            首页md文件\n│  \n├─.github               GitHub配置目录\n│  └─workflows          Actions工作流目录\n│          deloy.yml    项目的Actions部署配置\n│          \n├─.vuepress             用于存放VuePress的配置、组件、静态资源等。\n│  │  config.js         VuePress配置\n│  │  nav.js            除创建的目录之外，自定义添加的导航栏\n│  │  push.js           自定义推送脚本\n│  │  utils.js          侧边栏和菜单栏自动配置工具\n│  │  \n│  ├─styles             用于存放样式相关的文件\n│  │  │  \n│  │  └─index.styl      自定义全局样式文件\n│  │  \n│  ├─public             静态资源目录\n│  │  │  CNAME          CNAME文件指定域名，防止发布时被清空\n│  │  │  manifest.json  5+App（HTML5 Plus移动App）的配置文件\n│  │  │  static.json    heroku使用buildpack静态部署配置文件\n│  │  │  \n│  │  ├─assets          css/img/js等默认的存放路径\n│  │  │   │  \n│  │  │   └─js          自定义js文件存放目录\n│  │  │  \n│  │  ├─files           可直接访问并下载的文件存放目录\n│  │  │      \n│  │  └─images          存放所有文档的图片目录\n│  │      │  \n│  │      └─icons       存放图标目录\n│  │              \n│  └─theme              主题存放目录\n│              \n├─docs                  编译后的静态资源文件输出目录\n│\n│\n......其他自己的md文档或文件夹，都会打包到docs文件夹下，md文件会编译成html\n \n 也就是你只需要遵从以上目录结构来修改你自己的文档即可使用。 \n 注意 \n 配置文件中的注释文字部分，请结合 VuePress官方文档 一定理解其意义再修改配置！ \n 命令 \n先克隆本仓库 \n git  clone https://github.com/bajins/notes-vuepress.git\n保留上面目录结构列出的文件和文件夹，其他的全部删除 \n使用前请自行安装Node.js环境 \n安装项目的全部依赖 \n npm   install \n这时创建并书写你自己的md文档 \n开始运行开发环境，然后访问窗口中的路径 \n npm  run dev\n修改.vuepress/public/CNAME中的域名 \n如果发布到GitHub请见：项目的Actions部署配置 \nActions教程：https://www.bajins.com/IDE/Git%E6%9C%8D%E5%8A%A1.html#actions \n\n \n 注意 \n 请确保你的 Node.js 版本 >= 8.6。 \n \n",createdTime:1761814324e3},{title:"PowerShell",frontmatter:{description:"PowerShell的命令叫做cmdlet(command-let), 采用了“动词-名词”的命名方式，动词部分取自于一个制定的动词集合，\n> 名词部分则描述了命令要操作的对象。例如，Get-Command就是指获取PowerShell中所有cmdlet命令。",meta:[{name:"twitter:title",content:"PowerShell"},{name:"twitter:description",content:"PowerShell的命令叫做cmdlet(command-let), 采用了“动词-名词”的命名方式，动词部分取自于一个制定的动词集合，\n> 名词部分则描述了命令要操作的对象。例如，Get-Command就是指获取PowerShell中所有cmdlet命令。"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Shell/PowerShell.html"},{property:"og:type",content:"article"},{property:"og:title",content:"PowerShell"},{property:"og:description",content:"PowerShell的命令叫做cmdlet(command-let), 采用了“动词-名词”的命名方式，动词部分取自于一个制定的动词集合，\n> 名词部分则描述了命令要操作的对象。例如，Get-Command就是指获取PowerShell中所有cmdlet命令。"},{property:"og:url",content:"https://bajins.com/Shell/PowerShell.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"PowerShell"},{itemprop:"description",content:"PowerShell的命令叫做cmdlet(command-let), 采用了“动词-名词”的命名方式，动词部分取自于一个制定的动词集合，\n> 名词部分则描述了命令要操作的对象。例如，Get-Command就是指获取PowerShell中所有cmdlet命令。"}]},regularPath:"/Shell/PowerShell.html",relativePath:"Shell/PowerShell.md",key:"v-3540e1c5",path:"/Shell/PowerShell.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"包管理",slug:"包管理"},{level:2,title:"在batch中嵌入运行",slug:"在batch中嵌入运行"},{level:2,title:"Windows10自带应用",slug:"windows10自带应用"},{level:2,title:"随机字符串",slug:"随机字符串"},{level:2,title:"HTTP服务",slug:"http服务"},{level:2,title:"弹窗",slug:"弹窗"},{level:3,title:"获取所有COM组件",slug:"获取所有com组件"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" PowerShell \n Flag 包管理 在batch中嵌入运行 Windows10自带应用 随机字符串 HTTP服务 弹窗 获取所有COM组件 \n Flag \n \n PowerShell 的命令叫做 cmdlet ( command-let ), 采用了“动词-名词”的命名方式，动词部分取自于一个制定的动词集合，\n名词部分则描述了命令要操作的对象。例如， Get-Command 就是指获取 PowerShell 中所有 cmdlet 命令。 \n \n \n PowerShell 提供对 COM （组件对象模型）和 WMI （Windows管理规范）的完全访问，具有丰富的控制与自动化的系统管理能力，\n能够轻松地做到实时、大规模的管理系统。获取本机所有 COM 组件对象脚本  Get-COM-Objects.ps1 \n \n \n https://github.com/janikvonrotz/awesome-powershell \n https://github.com/PowerShell \n \n \n PowerShell 与 cmd 有什么不同？ \n \n \n https://docs.microsoft.com/zh-cn/powershell \n PowerShell参考文档 \n PowerShell为什么强大 \n PowerShell 在线教程 \n Powershell入门指南(一)·PowerShell及CLI发展 \n PowerShell入门指南(二)·挑战CMD和Bash的PowerShell \n PowerShell入门指南(三)·一门新的编程语言 \n PowerShell提速和多线程 \n PowerShell - 随笔分类 - 门前有根大呲花 - 博客园 \n WMIC替代品  https://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.management/get-wmiobject \n https://docs.microsoft.com/zh-cn/powershell/module/cimcmdlets/get-ciminstance \n https://learn.microsoft.com/zh-cn/windows/win32/wmisdk \n https://forsenergy.com \n https://www.yiibai.com/powershell \n \n \n https://github.com/R3MRUM/PSDecode \n https://github.com/rootclay/Powershell-Attack-Guide \n https://github.com/rootclay/Windows-Access-Control \n https://github.com/setupfw/win-sf \n 包管理 \n \n https://github.com/microsoft/winget-cli \n \n https://github.com/microsoft/winget-pkgs \n https://docs.microsoft.com/zh-cn/windows/package-manager/winget \n https://github.com/marticliment/WingetUI \n \n winget upgrade  -- all\nwinget source update  -- clear-cache \nwinget cache purge\n \n \n https://github.com/oneget/oneget \n \n https://www.nuget.org \n https://www.powershellgallery.com \n \n \n https://github.com/chocolatey \n \n https://chocolatey.org \n \n \n https://github.com/lukesampson/scoop \n \n https://github.com/ScoopInstaller \n https://github.com/lukesampson/scoop-extras \n https://github.com/bjansen/scoop-apps \n \n \n https://github.com/cmderdev/cmder \n https://github.com/appget \n 在batch中嵌入运行 \n \n PowerShell常用命令及使用方法 \n \n \n 由于Power Shell默认没有开启运行脚本策略，可以以此方式解决 \n \n \n 正则表达式排除以 @ 和 : 开头的行，并将其他所有内容传递给Power Shell \n \n @ findstr   /v   \"^@.* ^:.*\"   \"%~f0\" |powershell -WindowStyle Hidden -ExecutionPolicy Bypass - & goto :eof \n<# 从这里开始是 Power Shell代码 #>\n \n \n 这里巧妙的借用Power Shell的注释把bat脚本命令包裹，把整个脚本内容传入Power Shell并执行 \n \n <# ::\n @ powershell  -WindowStyle Hidden -ExecutionPolicy Bypass -< %~f0   & goto :eof \n#>\n保存到bat文件中可以双击执行，从这里开始是Power Shell代码\n Windows10自带应用 \n \n 注意空格和英文标点 \n \n \n 查看已安装应用 \n \n Get-AppxPackage   |   Select  Name , PackageFullName\n查看Windows已装的自带应用 \n Get-AppxProvisionedPackage   - online  |   %   { \n使用清单获取安装位置 \n     $loc  =  Split-Path   (   [Environment] ::ExpandEnvironmentVariables ( $_ . InstallLocation )   )   - Parent\n     If   ( ( Split-Path   $loc   - Leaf )   - ieq  'AppxMetadata' )   { \n         $loc  =  Split-Path   $loc   - Parent\n     } \n获取查找相关文件夹的模式 \n     $matching  =  Join-Path   - Path  ( Split-Path   $loc   - Parent )   - ChildPath  \" $ ( $_ . DisplayName ) *\" \n     $size  =  \"{0:N2}MB\"   - f  ( ( \n         Get-ChildItem   $matching   - Recurse  - ErrorAction Ignore  |   Measure-Object   - Property Length  - Sum\n         ) . Sum  /  1MB ) \n将结果添加到输出 \n     $_   |   Add-Member   - NotePropertyName Size  - NotePropertyValue  $size \n     $_   |   Add-Member   - NotePropertyName InstallFolder  - NotePropertyValue  $loc \n     $_ \n }   |   Select  DisplayName ,  PackageName ,  Version ,  InstallFolder ,  Size\n \n \n 卸载应用程序 \n卸载所有账户中的应用 \n Get-AppxPackage   - AllUsers  |   Remove-AppxPackage \n从系统账户中卸载应用 \n Get-AppXProvisionedPackage   - online  |   Remove-AppxProvisionedPackage  –online\n应用商店 \n get-appxpackage   * store*  |   remove-Appxpackage \n日历、邮件 \n Get-AppxPackage  Microsoft . windowscommunicationsapps  |   Remove-AppxPackage \n get-appxpackage   * communicationsapps*  |   remove-appxpackage \n从系统账户中卸载日历、邮件应用 \n Get-AppXProvisionedPackage  –online  where-object   { $_ . packagename –like  \"*windowsmunicationsapps*\" }   |   remove-appxprovisionedpackage  –online\n人脉 \n get-appxpackage   * people*  |   remove-appxpackage \nGroove 音乐 \n get-appxpackage   * zunemusic*  |   remove-appxpackage \n电影和电视 \n get-appxpackage   * zunevideo*  |   remove-appxpackage \n财经 \n get-appxpackage   * bingfinance*  |   remove-appxpackage \n资讯 \n get-appxpackage   * bingnews*  |   remove-appxpackage \n体育 \n get-appxpackage   * bingsports*  |   remove-appxpackage \n天气 \n get-appxpackage   * bingweather*  |   remove-appxpackage \nOneNote \n get-appxpackage   * onenote*  |   remove-appxpackage \n便笺 https://onenote.com/stickynotes \n get-appxpackage   * stickynotes*  |   remove-appxpackage \nTODO https://to-do.microsoft.com \nhttps://www.microsoft.com/zh-cn/microsoft-365/microsoft-to-do-list-app \n get-appxpackage   * todo*  |   remove-appxpackage \n闹钟和时钟 \n get-appxpackage   * alarms*  |   remove-appxpackage \n计算器 \n get-appxpackage   * calculator*  |   remove-appxpackage \n相机 \n get-appxpackage   * camera*  |   remove-appxpackage \n照片 \n get-appxpackage   * photos*  |   remove-appxpackage \n地图 \n get-appxpackage   * maps*  |   remove-appxpackage \n录音机 \n get-appxpackage   * soundrecorder*  |   remove-appxpackage \nXBox \n get-appxpackage   * xbox*  |   remove-appxpackage \n \n \n 恢复应用程序 \n应用商店 \n add-appxpackage   - register  \"C:\\Program Files\\WindowsApps\\*Store*\\AppxManifest.xml\"   - disabledevelopmentmode\n计算器 \n Get-AppxPackage   * calculator*  - AllUsers |   Foreach   { `\n Add-AppxPackage   - DisableDevelopmentMode  - Register  \" $ ( $_ . InstallLocation ) \\AppXManifest.xml\" } \n日历、邮件 \n Get-AppxPackage  Microsoft . windowscommunicationsapps  - AllUsers |   Foreach   { `\n Add-AppxPackage   - DisableDevelopmentMode  - Register  \" $ ( $_ . InstallLocation ) \\AppXManifest.xml\" } \n \n \n 排除Windows Defender检查 \n \n $exclusions =@ ( \"C:\\Users\\claer\\Desktop\\desktop-wallpaper-rust.exe\" ) ;  `\n $existingExclusions = [Collections.Generic.HashSet[String]] ( Get-MpPreference ) . ExclusionProcess ;  `\n if ( $existingExclusions   -eq   $null )   {   $existingExclusions  =  New-Object  Collections . Generic . HashSet [String]   } ;  `\n $exclusionsToAdd = [Linq.Enumerable] ::ToArray ( [Linq.Enumerable] ::Where ( $exclusions , [Func[object,bool]] { param ( $ex ) ! $existingExclusions . Contains ( $ex ) } ) ) ;  `\n if ( $exclusionsToAdd . Length  -gt  0 ) {   Add-MpPreference   - ExclusionProcess  $exclusionsToAdd   } \n 随机字符串 \n \n 48..57 是数字0-9，powershell的范围操作符是 .. ， 65..90 是大写字符A到Z， 97..122 是小写字母。\n如果需要获取多有的可打印字符（包括空格）的话，范围是 32..127 。 \n \n \n [char] 把对应数字转换成字符，例如  [char](66) 就是B(大写字母B)，C语言使用的小括号来进行类型强制转换。 \n如果不指定-count参数，则前面的list有多少个字符 \nget-random就会获取多少个字符，只是顺序打乱了 \n -join ( ( 48 . . 57  +  65 . . 90  +  97 . . 122 )   |   get-random   - count 6  |   % { [char] $_ } ) \n输出19位数字字符串并在开头拼接x \n ( 0 . . 13 | Get-Random   - count 19 )   -join   $null   |   % { -join   ( \"X\" , $_ ) } \n这里的0..1024相当于循环控制，每循环一次|后面的代码执行一次， \n其中在数字字母中随机选一个字符 0..1024, like Perl, loop controller \n -join ( 0 . . 1024 | % { [char] [int] ( ( 48 . . 57  +  65 . . 90  +  97 . . 122 ) |   Get-Random ) } ) \n\n -join   ( [char[]] ( 65 . . 90+97 . . 122 )   |   Get-Random   - Count 6 ) \n\n Add-Type   - AssemblyName System . Web ; [System.Web.Security.Membership] ::GeneratePassword ( 20 ,  0 ) \n\n function   Get-RandomString ( )   { \n     param ( \n     [int] $length =10 , \n这里的[int]是类型指定 \n     [char[]] $sourcedata \n     ) \n\n     for ( $loop =1 ;   $loop  –le  $length ;   $loop ++ )   { \n             $TempPassword += ( $sourcedata   |   GET-RANDOM   |   % { [char] $_ } ) \n     } \n     return   $TempPassword \n } \n\n Get-RandomString   - length 14  - sourcedata  ( 48 . . 127 ) \n HTTP服务 \n start-job { \n    $p=\"d:\\\"\n    #$p = Get-Location.path #获取当前用户的目录\n    $H=New-Object Net.HttpListener\n    $H.Prefixes.Add(\"http://+:8889/\")\n    $H.Start()\n    While ($H.IsListening) {\n        $HC=$H.GetContext()\n        $HR=$HC.Response\n        $HR.Headers.Add(\"Content-Type\",\"text/plain\")\n\n        $file=Join-Path $p ($HC.Request).RawUrl\n        $text=[IO.File]::ReadAllText($file)\n        $text=[Text.Encoding]::UTF8.GetBytes($text)\n\n        $HR.ContentLength64 = $text.Length\n        $HR.OutputStream.Write($text,0,$text.Length)\n        $HR.Close()\n    }\n    $H.Stop()\n}\n 弹窗 \n $xaml = @\"\n<Window xmlns='http://schemas.microsoft.com/winfx/2006/xaml/presentation'>\n <Border BorderThickness='20' BorderBrush='Yellow' CornerRadius='9' Background='Red'>\n  <StackPanel>\n   <Label FontSize='50' FontFamily='Stencil' Background='Red' Foreground='White' BorderThickness='0'>\n    System will be rebooted in 15 minutes!\n   </Label>\n   <Label HorizontalAlignment='Center' FontSize='15' FontFamily='Consolas' Background='Red' Foreground='White' BorderThickness='0'>\n    Worried about losing data? Talk to your friendly help desk representative and freely share your concerns!\n   </Label>\n  </StackPanel>\n </Border>\n</Window>\n\"@;\nAdd-Type -assemblyName PresentationFramework;\n$reader = [System.XML.XMLReader]::Create([System.IO.StringReader] $xaml);\n$window = [System.Windows.Markup.XAMLReader]::Load($reader);\n$Window.AllowsTransparency = $True;\n$window.SizeToContent = 'WidthAndHeight';\n$window.ResizeMode = 'NoResize';\n$Window.Opacity = .7;\n$window.Topmost = $true;\n$window.WindowStartupLocation = 'CenterScreen';\n$window.WindowStyle = 'None';\n$null = $window.Show();\nStart-Sleep -Seconds 10;\n$window.Close();\n \n 单行输入框 \n首先，加载 System.Windows.Forms 程序集 \n Add-Type   - AssemblyName System . Windows . Forms\n创建输入框 \n $InputBox  =  New-Object  System . Windows . Forms . Form\n $InputBox . StartPosition =  'CenterScreen' \n $InputBox . Size =  New-Object  System . Drawing . Size ( 300 , 200 ) \n $InputBox . Topmost =  $True \n创建文本框并设置属性 \n $TextBox  =  New-Object  System . Windows . Forms . TextBox\n $TextBox . Location =  New-Object  System . Drawing . Point ( 10 , 10 ) \n $TextBox . Size =  New-Object  System . Drawing . Size ( 260 , 20 ) \n $InputBox . Controls . Add ( $TextBox ) \n创建确定按钮并设置属性 \n $OKButton  =  New-Object  System . Windows . Forms . Button\n $OKButton . Location =  New-Object  System . Drawing . Point ( 75 , 50 ) \n $OKButton . Size =  New-Object  System . Drawing . Size ( 75 , 25 ) \n $OKButton . Text =  \"OK\" \n $OKButton . DialogResult =  [System.Windows.Forms.DialogResult] ::OK\n $InputBox . Controls . Add ( $OKButton ) \n $InputBox . AcceptButton =  $OKButton \n显示输入框并等待用户操作 \n $Show  =  $InputBox . ShowDialog ( ) \n检查用户是否点击了确定按钮 \n if   ( $Show   -eq   [System.Windows.Forms.DialogResult] ::OK ) \n { \n用户数据在这里 \n     $UserInput  =  $TextBox . Text\n     $InputBox . Close ( ) \n     Write-Host   \"You entered:  $UserInput \" \n } \n else \n { \n     $InputBox . Close ( ) \n } \n \n 多行输入框 \n引入 System.Windows.Forms 组件 \n Add-Type   - AssemblyName System . Windows . Forms\n创建一个新的表单（窗体） \n $form  =  New-Object  System . Windows . Forms . Form\n $form . Text =  'Multi-line Input Box' \n $form . Size =  New-Object  System . Drawing . Size ( 300 , 200 ) \n $form . StartPosition =  'CenterScreen' \n创建一个 Label，用来展示信息 \n $label  =  New-Object  System . Windows . Forms . Label\n $label . Location =  New-Object  System . Drawing . Point ( 10 , 10 ) \n $label . Size =  New-Object  System . Drawing . Size ( 280 , 20 ) \n $label . Text =  'Please enter your text:' \n $form . Controls . Add ( $label ) \n创建一个 TextBox，用户可以在其中输入文字 \n $textbox  =  New-Object  System . Windows . Forms . TextBox\n $textbox . Location =  New-Object  System . Drawing . Point ( 10 , 40 ) \n $textbox . Size =  New-Object  System . Drawing . Size ( 260 , 100 ) \n $textbox . AcceptsReturn =  $true \n $textbox . Multiline =  $true \n $form . Controls . Add ( $textbox ) \n创建一个 OK 按钮来提交输入内容 \n $okButton  =  New-Object  System . Windows . Forms . Button\n $okButton . Location =  New-Object  System . Drawing . Point ( 10 , 150 ) \n $okButton . Size =  New-Object  System . Drawing . Size ( 75 , 23 ) \n $okButton . Text =  'OK' \n $okButton . DialogResult =  [System.Windows.Forms.DialogResult] ::OK\n $form . AcceptButton =  $okButton \n $form . Controls . Add ( $okButton ) \n展示表单 \n $form . Topmost =  $true \n $result  =  $form . ShowDialog ( ) \n按下 OK 按钮后获取 TextBox 中的内容 \n if   ( $result   -eq   [System.Windows.Forms.DialogResult] ::OK ) \n { \n     $input  =  $textbox . Text\n     $form . Close ( ) \n     Write-Host   \"You entered:  $input \" \n } \n 获取所有COM组件 \n gci HKLM:\\Software\\Classes -ea 0| ? {$_.PSChildName -match '^\\w+\\.\\w+$' -and (gp \"$($_.PSPath)\\CLSID\" -ea 0)} | ft PSChildName\n \n ",createdTime:1761814324e3},{title:"PowerShell命令",frontmatter:{description:"ASCII 为无BOMUTF-8编码",meta:[{name:"twitter:title",content:"PowerShell命令"},{name:"twitter:description",content:"ASCII 为无BOMUTF-8编码"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Shell/PowerShell%E5%91%BD%E4%BB%A4.html"},{property:"og:type",content:"article"},{property:"og:title",content:"PowerShell命令"},{property:"og:description",content:"ASCII 为无BOMUTF-8编码"},{property:"og:url",content:"https://bajins.com/Shell/PowerShell%E5%91%BD%E4%BB%A4.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"PowerShell命令"},{itemprop:"description",content:"ASCII 为无BOMUTF-8编码"}]},regularPath:"/Shell/PowerShell%E5%91%BD%E4%BB%A4.html",relativePath:"Shell/PowerShell命令.md",key:"v-7089e216",path:"/Shell/PowerShell%E5%91%BD%E4%BB%A4.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"基础命令",slug:"基础命令"},{level:3,title:"事件计划任务",slug:"事件计划任务"},{level:2,title:"常用命令",slug:"常用命令"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' PowerShell命令 \n Flag 基础命令 事件计划任务 常用命令 \n Flag \n \n https://www.yiibai.com/powershell \n PowerShell注册表 \n 使用注册表条目 \n 控制台暂停 \n 基础命令 \n \n ASCII  为无BOM UTF-8 编码 \n列出所有的环境变量 \n Get-ChildItem  env:\n gci  env:  |   Format-Table   - Property Name ,  Value\n dir  env:\n ls  env:\n获取环境变量的值 \n gi  env:path\n $environment [ "Path" ] \n $env :变量名\n删除环境变量 \n del  env:变量名\n更新环境变量 \n $env :变量名= "变量值" \n gci  env:  |   Where-Object   { $_ . Name  -like   "USER*" } \n.NET方法操作可以全局生效 \n修改当前用户的环境变量（永久），只对新进程有效 \n [environment] ::SetEnvironmentvariable ( "变量名" ,   "值" ,   [EnvironmentVariableTarget] ::User ) \n设置系统环境变量（永久），只对新进程有效，需要管理员权限 \n [environment] ::SetEnvironmentvariable ( "变量名" ,   "值" ,   [EnvironmentVariableTarget] ::Machine ) \ntarget 也可用字符串指定 \n [environment] ::SetEnvironmentvariable ( "变量名" ,   "值" ,   "User" ) \n [environment] ::GetEnvironmentvariable ( "变量名" ,   "变量名" ) \n查看输出的命令集 \n Get-Command   - verb out\n\n Export-Csv \n Export-CliXML \n Out-file \n Out-GridView   # 独立弹窗 \n ConvertTo-HTML   |   Out-file \n echo \n Write-Output \n out-host \n查看属性 \n Get-Member   - MemberType  * property\n Select-Object   - ExpandProperty Property\n \n \n 查看版本 \n查看Power Shell版本 \n $PSVersionTable . PSVersion\n $host . Version . Major\n查看当前PowerShell的.Net运行版本 \n $PSVersionTable . CLRVersion\n查看所有安装的.Net 版本 \n dir   \'HKLM:\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\'   |   sort-object  name  - Descending  |   select-object   - ExpandProperty PSChildName\n查看安装的.Net 客户端版本 \n ( Get-ItemProperty   \'HKLM:\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Client\'   - Name Version ) . Version\n \n \n 为本账户启用执行脚本策略 \n \n Set-ExecutionPolicy   - ExecutionPolicy RemoteSigned  - Scope CurrentUser\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms\nhttps://docs.microsoft.com/zh-tw/dotnet/api/microsoft.win32\nhttps://docs.microsoft.com/zh-cn/dotnet/api/microsoft.visualbasic\n加载引用程序集\n[void][System.Reflection.Assembly]::LoadWithPartialName(\'System.Windows.Forms\');\n$null = [System.Reflection.Assembly]::LoadWithPartialName(\'System.Windows.Forms\');\n[System.Reflection.Assembly]::LoadWithPartialName(\'System.Windows.Forms\')  | Out-Null; # 最慢\nAdd-Type -assembly "System.Windows.Forms"\nAdd-Type -AssemblyName System.Windows.Forms\n\n[void][System.Windows.Forms.MessageBox]::Show("弹窗");\n \n \n 下载代码并通过 Invoke-Expression 执行 \n \n Invoke-Expression   ( New-Object  System . Net . WebClient ) . DownloadString ( \'https://get.scoop.sh\' ) \n \n \n 下载文件 \n \n ( New-Object  System . Net . WebClient ) . DownloadFile ( \'https://git.io/JvYAg\' , \'d:\\\\7za.exe\' ) \n \n \n 实现 du -sh 统计文件夹大小 \n \n param([string]$Directory) \nget-childitem $Directory | % {\n    $f = $_ ; \n    get-childitem -r $_.FullName | \n      measure-object -property length -sum | \t\t\t\n        select @{Name="Name";Expression={$f}},\n        @{Name="Sum (MB)"; Expression={"{0:N1}" -f ($_.sum / 1MB)}}\n}\n \n \n 循环目录 \n获取子目录和文件并遍历 \n Get-ChildItem   .   |   ForEach-Object   - Process   { \n     $project_name  =  $_ . Name\n如果为子目录 \n     if   ( $_   -is   [System.IO.DirectoryInfo] )   { \n切换到子目录 \n         Set-location   $_ . FullName\n判断目录是否存在 \n         if   ( Test-Path   . git )   { \n            git remote  - v\n             Write-Host ( "" . PadLeft ( 15 ,   "*" )   +   "开始更新  $project_name  " . PadRight ( 30 ,   "*" ) ) ; \n            git pull\n         } \n         Set-Location   . . \n     } \n } \n \n \n 创建硬软连接 \n软连接SymbolicLink：支持跨分区，支持文件和目录，支持相对路径，支持跨文件系统 \n硬链接HardLink：不可跨分区，盘符修改不影响，不能为文件夹创建硬链接 \n New-Item   - ItemType SymbolicLink `\n          - Path C:\\ `\n          - Name hosts `\n          - Target  "C:\\Windows\\System32\\drivers\\etc\\hosts" \n \n \n 创建文件夹 \n \n New-Item   - ItemType directory  - Path 目录的路径\n只列出目录 \n Dir   |   Where-Object   {   $_   -is   [System.IO.DirectoryInfo]   } \n Dir   |   Where-Object   {   $_ . Attributes  -is   [System.IO.FileAttributes.Directory]   } \n Dir   |   Where-Object   {   $_ . Attributes  -match   \'Directory\'   } \n Dir   |   Where-Object   {   $_ . PSIsContainer  } \n Dir   |   Where-Object   {   $_ . Mode . Substring ( 0 , 1 )   -eq   "d"   } \n只列出文件 \n Dir   |   Where-Object   {   $_   -is   [System.IO.FileInfo]   } \n Dir   |   Where-Object   {   $_ . PSIsContainer  -eq   $false } \n Dir   |   Where-Object   {   $_ . Mode . Substring ( 0 , 1 )   -ne   "d"   } \n通过管道过滤2020年5月12日后更改过的文件 \n Dir   |   Where-Object   {   $_ . CreationTime  -gt   [datetime] ::Parse ( "May 12, 2020" )   } \n获取2周以内更改过的文件 \n Dir   |   Where-Object   {   $_ . CreationTime  -gt   ( Get-Date ) . AddDays ( - 14 )   } \n \n \n 重命名 \n \n ls -Recurse -File -Include *.war,*.jar | ForEach-Object { Rename-Item -Path $_.fullname -newname (\'test_\' + $_.name)}\nls -Recurse -File -Include *.war,*.jar | ForEach-Object { Rename-Item -Path $_.fullname -newname ($_.name -replace \'test_\',\'\')}\nls -Recurse -File -Include *.war,*.jar | ForEach-Object -Begin {$count = 1}  -Process{`\n Rename-Item -Path $_.fullname -newname "$_.basename$count$_.Extension";$count++}\n \n \n 复制文件及目录结构 \n源路径最后一个文件夹名为需要复制的目录结构的顶级文件夹名 \n Copy-Item   - Force  - Recurse 源路径 目标路径  - Filter  文件名\n.create()方法可以创建不存在的目录 \n [IO.DirectoryInfo] $to   | %   { $_ . create ( ) ;   cp   $from   $_ } \n复制多个文件到指定目录 \n get-childitem   - path  "D:\\demo"   - include @ ( \'test.java\' , \'test.js\' )   - recurse `\n |   copy-item   - destination  ( new-item   - path  " $env :HOMEPATH\\Desktop\\demo"   - type   "directory" ) \n递归复制目录结构(可指定多个文件或文件夹) \n $prjName = "demo" ; `\n $srcFolder =  join-path   "C:\\Users\\d\\Downloads"   $prjName ; `\n $descFolder =  join-path   "D:\\Users\\d\\Desktop"   $prjName ; `\n Get-ChildItem   - path  $srcFolder   - include @ ( \'test\' , \'test1\' , \'1.txt\' , \'1.xml\' )   - recurse`\n  |   ForEach-object { if ( $_PSIsContainer ) { `\n        robocopy  / ndl  / njh  / njs  / s  $_fullname   ( $_fullname   -replace   [regex] ::Escape ( $srcFolder ) , $descFolder ) `\n     } else { `\n        robocopy  / ndl  / njh  / njs  / s  $srcFolder   $descFolder   $_ . name`\n     } } \n \n \n 删除空目录 \n \n Get-ChildItem   - Path 路径  - Recurse  - Force `\n |   Where-Object   {   $_ . PSIsContainer  -and  `\n     ( Get-ChildItem   - Path  $_ . FullName  - Recurse  - Force `\n     |   Where-Object   {   ! $_ . PSIsContainer  } )   -eq   $null   }  `\n |   Remove-Item   - Force  - Recurse\n\n Get-ChildItem   - recurse  |  Where  { $_ . PSIsContainer  -and  `\n@ ( Get-ChildItem   - Lit  $_ . Fullname  - r  |  Where  { ! $_ . PSIsContainer } ) . Length  -eq  0 }  `\n |   Remove-Item   - recurse  - whatif\n\n get-childitem   - recurse  |  ?  { $_ . GetType ( )   -match "DirectoryInfo" }  `\n |  ? {   $_ . GetFiles ( ) . Count  -eq  0  -and   $_ . GetDirectories ( ) . Count  -eq  0  }   |   rm   - whatif\n\n ls   - recurse  |  where  { ! @ ( ls   - force  $_ . fullname ) }   |   rm   - whatif  - Force\n \n \n 递归删除排除之外的文件 \n \n dir   - Path 源路径  - Include  * . *   - Exclude @ ( \'test.js\' , \'test.css\' , \'a*\' )   - Recurse  |   del   - Recurse\n \n \n 删除旧文件（指定日期之前的） \n \n Get-ChildItem   - recurse  |  Where  { ! $_ . PSIsContainer  -and  `\n $_ . LastWriteTime  -lt   ( get-date ) . AddDays ( - 31 ) }   |   Remove-Item   - whatif\n\n Get-ChildItem   - Path 路径  - Recurse  - Force `\n |   Where-Object   {   ! $_ . PSIsContainer  -and   $_ . CreationTime  -lt   ( Get-Date ) . AddDays ( - 15 )   }  `\n |   Remove-Item   - Force\n\n get-childitem   - recurse  |  ?  { $_ . GetType ( )   -match "FileInfo" }  `\n |  ? {   $_ . LastWriteTime  -lt   [datetime] ::now . adddays ( - 30 )   }   |   rm   - whatif  - Force\n \n \n 格式化时间 \n \n Get-Date   - Format  \'yyy-MM-dd hh:mm:ss\' \n \n 调用DLL \n [ DllImport ( "kernel32.dll" ) ] \nprivate static extern int GetPrivateProfileSection ( string lpAppName ,  byte [ ]  lpszReturnBuffer ,  int nSize ,  string lpFileName ) ; \n\n Function   Lock-WorkStation   { \n     $signature  = @ "\n        [DllImport(" user32 . dll ", SetLastError = true)]\n        public static extern bool LockWorkStation();\n    " @\n    \n     $LockWorkStation  =  Add-Type   - memberDefinition  $signature   - name  "Win32LockWorkStation"   - namespace Win32Functions  - passthru\n     $LockWorkStation ::LockWorkStation ( )   |   Out-Null \n } \n \n 查看进程启动参数 \n查看所有进程 \nwmic  process  get caption , commandline  / value\n查看单个进程 \nwmic  process  where caption= "svchost.exe"  get caption , commandline  / value\nwmic  process  get caption , commandline  / value  |  findstr  "svchost.exe" \n \n 解压zip \n \n 压缩解压文件 \n PowerShell-压缩解压缩文件 \n \n \n PowerShell 5.0或更高版本(已预安装Windows 10和Windows Server 2016) \n \n Compress-Archive   - Path 解压到目录路径  - DestinationPath 压缩文件路径\n Expand-Archive   - Path 解压到目录路径  - DestinationPath 压缩文件路径  - Force: $Overwrite \n \n \n 需要.net 4.5以上 \n \n Add-Type   - assembly  "system.io.compression.filesystem" \n [io.compression.zipfile] ::ExtractToDirectory ( 压缩文件路径 ,  解压到目录路径 ) \n \n \n PowerShell 2.0以上 \n \n function  UnzipFile ( [string] $sourceFile ,   [string] $targetFolder ) { \n     if ( ! ( Test-Path   $targetFolder ) ) { \n        mkdir  $targetFolder \n     } \n     $shellApp  =  New-Object   - ComObject Shell . Application\n     $files  =  $shellApp . NameSpace ( $souceFile ) . Items ( ) \nforeach ($item in $files) { \n    $shell.Namespace($targetFolder).CopyHere($item) \n} \n     $shellApp . NameSpace ( $targetFolder ) . CopyHere ( $files ) \n } \n 事件计划任务 \n \n Scheduled Tasks（计划任务） \n \n 使用Get-WinEvent \n \n Get-WinEvent \n \n Get-Help   Get-WinEvent \n\n Get-WinEvent  @ { logname= \'application\' , \'system\' }   - MaxEvents 1\n列出所有事件日志 \n Get-WinEvent   - ListLog  * \npowershell管理员权限下获取安全事件日志 \n Get-WinEvent   - FilterHashtable @ { LogName= \'Security\' } \n过滤安全事件ID 4624 \n Get-WinEvent   - FilterHashtable @ { LogName= \'Security\' ; ID= \'4624\' } \n查询今天的应用和系统日志，显示前2条 \n Get-WinEvent  @ { logname= \'application\' , \'system\' ; starttime= [datetime] ::today  }   - MaxEvents 2\n根据ID查询事件 \n Get-WinEvent   - LogName Microsoft-Windows-PowerShell/Operational  |   Where-Object   { $_ . ID  -eq   "4100"   -or   $_ . ID  -eq   "4104" } \n查询指定时间内的事件 \n $StartTime = Get-Date    - Year  2020   - Month  3   - Day  1   - Hour  15   - Minute  30\n $EndTime = Get-Date    - Year  2020   - Month  3   - Day  15   - Hour  20   - Minute  00\n Get-WinEvent   - FilterHashtable @ { LogName= \'System\' ; StartTime= $StartTime ; EndTime= $EndTime } \n \n 使用Get-EventLog \n \n Get-EventLog \n PowerShell 监听事件日志 \n Powershell获取睡眠时间 \n \n Get-Help   Get-EventLog \n\n Get-EventLog   - LogName system  - Source user32\n按 EventID 将事件进行分组 \n Get-EventLog   - LogName system  - Source user32  |   group  EventID\nfl 是 Format-List 的别名 \n Get-EventLog   - LogName system  - Source user32  - Newest 1  |   fl   * \n Get-EventLog   - LogName system  - Source user32  |   Select  TimeGenerated ,  Message\n Get-EventLog   - LogName system  - Source user32  |   Select  TimeGenerated ,  Message  |   sort  message\n Get-EventLog   - LogName system  - Source user32  |   Select  TimeGenerated ,  Message  |   sort  message  |   ft   - Wrap\n \n 定时任务 \n \n 查看支持的命令 \n \n Get-Command   - Module ScheduledTasks\n此例子为每5分钟一次的定时任务，通过设置$step和$add可以实现延时执行任务。  \n function  waitsec { \n     $step =300  #设置间隔 \n     $add =0  #设置延时 \n     $t = ( get-date ) \n     $step - ( ( $t . Hour*3600+ $t . Minute*60+ $t . Second ) % $step ) + $add \n } \n \n write-host   "running...... please wait"   ( waitsec ) "S"  \n Start-Sleep   - s  ( waitsec ) \n while ( 1 ) { \n执行代码 \n     get-date \n     Start-Sleep   - s  ( waitsec ) \n } \n 常用命令 \n \n Powershell基础入门及常见用法 \n How to do what head, tail, more, less, sed do in Powershell? \n查看别名对应的真实命令 \n get-alias \n查看命名位置（类似 Linux Shell 的 which） \n get-command  xxx\ngcm xxx\n通过关键字查找 powershell 命令 \ngcm  |   select-string  <keyword>\n通过关键字查找 powershell 命令和环境变量中的程序，比较慢 \ngcm  *   |   select-string  <keyword>\n类似 linux 的 find/ls 命令 \n get-childitem   - Recurse  - Include  * . py\n gci   - r  - i  * . py\n清空终端的输出 \n clear-host \nclear\n查看文件内容 \n get-content  xx . py  |  more\n get-content  xx . py  |   out-host   - paging\n cat  xx . py\n gc  xx . py\nReadCount是指每次发送给管道的文本行数，0代表全部 \nTail只返回指定结尾行数的文本 \n-wait 一直等待监听 \n Get-Content  文件路径  - ReadCount 0  - Tail 5  - Wait\n编码转换 [System.Text.Encoding]::ASCII \n Get-Content  filename1  - encoding default  |   set-content  filename2  - encoding utf8\n gc  log . txt  |   select   - first 10  # head \n gc  log . txt  - head 10\n gc   - TotalCount 10 log . txt      # also head \n gc  log . txt  - ReadCount 5  |   % { $_ ; throw   "pipeline end!" }   # head \n gc  log . txt  |   select   - last 10   # tail \n gc   - Tail 10 log . txt            # also tail (since PSv3), also much faster than above option \n gc  log . txt  |  more              # or less if you have it installed \n gc  log . txt  |   % {   $_   -replace   \'\\d+\' ,   \'($0)\'   }   # sed Where-Object Foreach-Object Select-Object \n gc  log . txt  |   % { $num =0 ; } { $num ++ ;   if ( $num   -gt  2  -and   $num   -lt  7 ) { " $num   $_ " } }   # sed \n gc  log . txt  |   % { $num =0 ; } { $num ++ ; " $num   $_ " }   # cat -n \n字符串搜索，不能对对象使用 \n类似 linux 的 grep 命令 \n cat  xxx . log  |   select-string  <pattern>\n gci  env:  |   out-string    - stream  |   select-string  <pattern>   # 需要先使用 out-string 将对象转换成 string \n gci  env:  |   where-object   { $_ . Name  -like  <pattern> } \n计算输出的行数/对象个数 \n gci  env:  |   measure-object \n gci  env:  |   measure    # 这是缩写 \n查看所有进程 \n get-process   |  more\n ps   |  more   # 别名 \n查找某进程（替代掉 tasklist） \n get-process   - name exp* , power*   # 使用正则查找进程 \n get-process   |   select-string  <pattern>   # 效果同上 \n通过 id 杀掉某进程（替代掉 taskkill） \n也可以通过 -Name 用正则匹配进程 \n stop-process  <pid>\n kill  <pid>   # 别名 \n Get-Process   - Name 名称  |   Stop-Process \n Get-Process   - Name 名称  |   foreach-object { $_ . Kill ( ) } \n Get-WmiObject  Win32_Process  - Filter   "name = \'notepad.exe\'"   |   ForEach-Object { $_ . Terminate ( )    |   Out-Null   } \n Get-WmiObject  Win32_Process  - Filter   "name = \'notepad.exe\'"   |   Invoke-WmiMethod   - Name Terminate  |   Out-Null \n根据模块（dll）查找进程并结束进程 \n```powershell\n Get-Process   |   Where-Object   { $_ . Modules  |   Where-Object   { $_ . ModuleName  -eq   "NsCopyHook3.dll" } }   |   Stop-Process   - Force ;   Start-Process  explorer . exe\n Get-Process   |   Where-Object   { $_ . Modules . ModuleName  -contains   \'NsCopyHook3.dll\' }   |   Stop-Process   - Force ;   Start-Process  explorer . exe\n 网络相关命令 \n 1. dns 相关(dns-client) \n Clear-DnsClientCache    # 清除 dns 缓存（替换掉 `ipconfig /flushdns`） \n Get-DnsClientCache    # 查看 dns 缓存 \n Resolve-DnsName  baidu . com   # 解析域名 \n \n 2. TCP/IP 相关命令 \n Get-Command   Get-Net *    # 查看所有 TCP/IP 相关的命令 \n\n Get-NetIPAddress    # 查看 IP 地址 \n Get-NetIPInterface    # 查看 IP 接口 \n Get-NetRoute          # 查看路由表 \n Get-NetNeighbor       # 获取链路层 MAC 地址缓存 \n Get-NetTCPConnection     # 查看 TCP 连接 \n ### 也可以对 TCP/IP 的 IP 地址、接口、路由表进行增删改 \n New-NetRoute \n Remove-NetNeighbor    # 清除 MAC 地址缓存 \n关机/重启 \n stop-computer \n restart-computer \nwindows 计算 hash 值 \n功能等同于 linux 下的 sha256sum/sha1sum/sha512sum/md5sum \n Get-FileHash   - Path  / path/to/file  - Algorithm SHA256\n Get-FileHash   - Path  / path/to/file  - Algorithm SHA256   |   Format-List    # 用 format 修改格式化效果 \nbase64 编解码 \n [Convert] ::ToBase64String ( [Text.Encoding] ::UTF8 . GetBytes ( "xxx" ) )    # base64 编码 \n [Text.Encoding] ::UTF8 . GetString ( [Convert] ::FromBase64String ( "eHh4" ) )    # 解码 \n \n ',createdTime:1761814324e3},{title:"ShellScript",frontmatter:{description:"Shell脚本（shell script），是一种为Shell编写的脚本程序。\n> Shell脚本文件的名称可以任意，但为了避免被误以为是普通文件，建议将.sh后缀加上，以表示是一个脚本文件。",meta:[{name:"twitter:title",content:"ShellScript"},{name:"twitter:description",content:"Shell脚本（shell script），是一种为Shell编写的脚本程序。\n> Shell脚本文件的名称可以任意，但为了避免被误以为是普通文件，建议将.sh后缀加上，以表示是一个脚本文件。"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Shell/ShellScript.html"},{property:"og:type",content:"article"},{property:"og:title",content:"ShellScript"},{property:"og:description",content:"Shell脚本（shell script），是一种为Shell编写的脚本程序。\n> Shell脚本文件的名称可以任意，但为了避免被误以为是普通文件，建议将.sh后缀加上，以表示是一个脚本文件。"},{property:"og:url",content:"https://bajins.com/Shell/ShellScript.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"ShellScript"},{itemprop:"description",content:"Shell脚本（shell script），是一种为Shell编写的脚本程序。\n> Shell脚本文件的名称可以任意，但为了避免被误以为是普通文件，建议将.sh后缀加上，以表示是一个脚本文件。"}]},regularPath:"/Shell/ShellScript.html",relativePath:"Shell/ShellScript.md",key:"v-3dfbeeed",path:"/Shell/ShellScript.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"自动交互",slug:"自动交互"},{level:3,title:"指令有参数",slug:"指令有参数"},{level:3,title:"指令无参数",slug:"指令无参数"},{level:2,title:"清理内存",slug:"清理内存"},{level:2,title:"清理日志",slug:"清理日志"},{level:2,title:"Linux之间传输文件",slug:"linux之间传输文件"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' ShellScript \n Flag 自动交互 指令有参数 指令无参数 清理内存 清理日志 Linux之间传输文件 \n Flag \n \n Shell 脚本（ shell script ），是一种为 Shell 编写的脚本程序。\n Shell 脚本文件的名称可以任意，但为了避免被误以为是普通文件，建议将 .sh 后缀加上，以表示是一个脚本文件。 \n \n \n https://github.com/topics/bash \n https://github.com/Ph0enixKM/Amber \n 静态分析  https://github.com/koalaman/shellcheck \n \n https://www.shellcheck.net \n shellcheck 规范 \n \n \n https://github.com/ComplianceAsCode/content \n 格式化  https://github.com/mvdan/sh \n rm替代方案  https://github.com/qqAys/trash.sh \n \n \n Shell 教程 \n Linux Shell脚本学习指南 \n Shell命令脚本初步认识，Shell脚本入门 \n Shell中if的使用详解_&&与||的使用详解 \n shell-if判断 \n https://github.com/guodongxiaren/Bash \n https://github.com/oldratlee/useful-scripts \n https://github.com/chen-shang/baseshell \n \n \n 在shell脚本中，通常将 EOF 与  <<  结合使用，表示后续的输入作为子命令或子Shell的输入，直到遇到 EOF 为止，再返回到主Shell。\n EOF 只是一个分界符，当然也可以用 abcde 替换。当shell遇到 << 时，它知道下一个词是一个分界符。在该分界符以后的内容都被当作输入，\n直到shell又看到该分界符(位于单独的一行)。此分界符可以是所定义的任何字符串，其实，不一定要用 EOF ，\n只要是“内容段”中没有出现的字符串，都可以用来替代 EOF ，完全可以换成abcde之类的字符串，只是一个起始和结束的标志罢了。 \n 自动交互 \n 指令有参数 \n 重定向 \n \n shell用重定向作为标准输入的用法是： cmd<<delimiter \n shell会将分界符delimiter之后直到下一个同样的分界符之前的内容作为输入 \n \n \n 实现ftp自动登录并运行ls指令的用法如下：其中admin为用户名，password为密码 \n \n ftp   -i   -n   192.168 .21.46  << EOF  \nuser admin password\nls  \nEOF \n \n 管道 \nsudo的-S参数 \n echo   \'zjk123\'   |   sudo   -S   cp  file1 /etc/hosts\npasswd的-stdin参数 \n echo   \'password\'   |   passwd   -stdin  username\n 指令无参数 \n \n Expect 是由 Don Libes 基于 Tcl （ Tool Command Language ）的脚本语言，所以你至少要学习一下 TCL 它的语法。 \n \n \n https://github.com/search?q=expect \n \n \n https://www.tcl-lang.org/man \n \n https://www.tcl.tk/man \n \n \n Tcl教程 \n tclsh  expect手册 \n shell编程之expect用法 \n linux expect 自动交互脚本用法 \n expect 脚本使用 \n Expect学习笔记 \n \n 启用选项 \n \n \n \n 选项 \n 说明 \n \n \n \n \n -c \n 执行脚本前先执行的命令，可多次使用。 \n \n \n -d \n debug模式，可以在运行时输出一些诊断信息，与在脚本开始处使用exp_internal 1相似。 \n \n \n -D \n 启用交换调式器,可设一整数参数。 \n \n \n -f \n 从文件读取命令，仅用于使用#!时。如果文件名为"-"，则从stdin读取(使用"./-"从文件名为-的文件读取)。 \n \n \n -i \n 交互式输入命令，使用"exit"或"EOF"退出输入状态。 \n \n \n -- \n 标示选项结束(如果你需要传递与expect选项相似的参数给脚本时)，可放到#!行:#!/usr/bin/expect --。 \n \n \n -v \n 显示expect版本信息 \n \n \n \n 命令 \n \n \n \n 命令 \n 说明 \n \n \n \n \n $argc \n 参数个数 \n \n \n $argv \n 接收的所有参数数组 \n \n \n $NAME \n 使用变量 \n \n \n close \n 关闭当前进程的连接，-i选项关闭指定句柄的过程 \n \n \n debug \n 控制调试器 \n \n \n disconnect \n 断开进程连接(进程仍在后台运行) \n \n \n exit \n 退出expect \n \n \n exp_pid \n 获取当前spawn的进程号，-i选项指定spawn进程：setpid [exp_pid –i $spawn_id] \n \n \n exp_send \n 将参数输出到程序中 \n \n \n exp_continue \n 当问题不存在时继续回答下边的问题 \n \n \n exp_internal \n 调试模式，1（打开）、0（关闭）、-f file（将调试内容写入文件），放在spawn后面 \n \n \n expect eof \n 问题回答完毕等待expect进程结束，expect -timeout -1 eof \n \n \n expect -re \n 表示匹配正则表达式 \n \n \n expect \n 从进程接收字符串，expect与{之间没有空格或者TAB间隔，会报invalid command name "expect{" \n \n \n expr \n 计算 \n \n \n interact \n 执行完成后保持交互状态，否则退出 \n \n \n lindex \n 获取参数 \n \n \n puts \n 向用户终端发送提示信息 \n \n \n send_user \n 把参数输出到标准输出中 \n \n \n send_error \n 把参数输出到标准错误输出中 \n \n \n send_log \n 把内容输出到log记录文件中 \n \n \n send \n 用于向进程发送字符串 \n \n \n set NAME value \n 设置变量 \n \n \n set timeout -1 \n 超时时间，-1为永不超时 \n \n \n spawn \n expect中的监控程序，其运行会监控命令提出的交互式问题，启动新的进程 \n \n \n wait \n 等待系统主动返回eof，也就是结束信号后才关闭，wait -nowait \n \n \n log_user \n 指定输出的位置，默认值是1，表示所有输出都放在标准输出中，为0就表示不需要任何输出 \n \n \n log_file \n 将输出记录到一个文件中 \n \n \n \n \n send 命令有几个可用的参数 \n \n \n -i  指定 spawn_id ，这个参数用来向不同 spawn_id 的进程发送命令，是进行多程序控制的关键参数。 \n \n \n -s  代表 slowly ，也就是控制发送的速度，这个参数使用的时候要与 expect 中的变量 send_slow 相关联 \n \n 特殊字符 \n \n \n \n 字符 \n 说明 \n \n \n \n \n \\r \n 表示回车 \n \n \n \\n \n 表示换行 \n \n \n \\t \n 表示制表符 \n \n \n \\ \n 需转义  \\\\\\ \n \n \n } \n 需转义  \\} \n \n \n [ \n 需转义  \\[ \n \n \n $ \n 需转义  \\\\\\$ \n \n \n ` \n 需转义 \\` \n \n \n " \n 需转义  \\\\\\" \n \n \n \n \n 方式一 \n \n push_url = https://github.com/bajins/bajins.github.io.git\n push_username = admin\n push_password = admin\n检索expect是否安装 \n is_expect = ` whereis   expect   |   awk   \'{print $2}\' ` \n如果没有安装 \n if   [   !   -n   " $is_expect "   ] ;   then \n    yum  -y   install   expect   >  /dev/null  2 > &1 \n fi \n\n expect   -c   "\n超时时间-1为永不超时\nset timeout -1\nspawn将开启一个新的进程，或者使用：ssh  $user @ $host  {your_command}\n只有先进入expect环境后才可执行spawn\nspawn git push -f  ${push_url}  master\n判断运行上述命令的输出结果中是否有指定的字符串(不区分大小写)。\n若有则立即返回，否则就等待一段时间后返回，等待时长就是开头设置的timeout。\n同时向上面的进程发送字符串, 并且自动敲Enter健( \\r )\nexpect {\n   \\" *Username* \\"  {send  \\" ${push_username} \\r \\" ; exp_continue}\n   \\" *Password* \\"  {send  \\" ${push_password} \\r \\" ;}\n}\n问题回答完毕等待expect进程结束\nexpect eof\n" \n \n \n 方式二 \n \n push_url = https://github.com/bajins/bajins.github.io.git\n push_username = admin\n push_password = admin\n检索expect是否安装 \n is_expect = ` whereis   expect   |   awk   \'{print $2}\' ` \n如果没有安装 \n if   [   !   -n   " $is_expect "   ] ;   then \n    yum  -y   install   expect   >  /dev/null  2 > &1 \n fi \n\n expect   <<- EOF\n    set timeout -1\n\n    spawn git push -f  ${push_url}  master\n    \n    #expect "*Username*" {send " ${push_username} \\r "; exp_continue}\n    #expect "*Password*" {send " ${push_password} \\r "}\n    \n    expect {\n       \\" *Username* \\"  {send  \\" ${push_username} \\r \\" ; exp_continue}\n       \\" *Password* \\"  {send  \\" ${push_password} \\r \\" ;}\n    }\n    interact\n问题回答完毕等待 ` expect ` 进程结束\n    expect eof\n由于用的-EOF，这里的EOF可以有空格，tab键\nEOF \n \n \n 方式三 \n \n #!/usr/bin/expect \n\n set  push_url  "https://github.com/bajins/bajins.github.io.git" \n set  push_username  "admin" \n set  push_password  "admin" \n超时时间-1为永不超时 \n set   timeout   -1 \nspawn将开启一个新的进程，或者使用：ssh $user@$host {your_command} \n只有先进入expect环境后才可执行spawn \nspawn  git  push  -f   ${push_url}  master\n判断运行上述命令的输出结果中是否有指定的字符串(不区分大小写)。 \n若有则立即返回，否则就等待一段时间后返回，等待时长就是开头设置的timeout。 \n expect   "*Username*" \n向上面的进程发送字符串, 并且自动敲Enter健(\\r) \n-- 后面的"之间有一个空格 \nsend --  " $push_username \\n " \n\n expect   "*Password*" \n-- 后面的"之间有一个空格 \nsend --  " $push_password \\n " \n允许用户交互 \ninteract\n问题回答完毕等待expect进程结束 \n expect  eof\n \n \n 获取日期 \n \n expect   -c   "\n\nset date [ clock format [ clock seconds ] -format " %Y%m%d " ]\nset secon [  clock seconds ]\nset yestoday_secon 0\n \n#set i [expr { $i  + 1}]    #expect里的加减法\nset yestoday_secon [expr { $secon  - 86400} ]\nset yestoday [ clock format [ expr { $yestoday_secon } ] -format " %Y%m%d " ]\n \nputs " \\ n  date   =   $date "\nputs " \\ n secon  =   $secon "\nputs " \\ n yestoday_secon  =   $yestoday_secon "\nputs " \\ n yestoday  =   $yestoday "\n问题回答完毕等待expect进程结束\nexpect eof\n" \n 清理内存 \n获取到的内存配置信息若为0的话，则表示开启了缓存机制 \n cat  /proc/sys/vm/drop_caches\ndrop_caches是让系统清理内存页的缓存，从而得到更多的可用内存 \n释放网页缓存(To free pagecache) \n sync ;   echo   1   >  /proc/sys/vm/drop_caches\n释放目录项和索引(To free dentries and inodes) \n sync ;   echo   2   >  /proc/sys/vm/drop_caches\n释放网页缓存，目录项和索引（To free pagecache, dentries and inodes） \n sync ;   echo   3   >  /proc/sys/vm/drop_caches\n清理/var/cache/yum的headers \nyum clean headers\n清理/var/cache/yum下的软件包 \nyum clean packages\n清理软件源 \nyum clean metadata\n 清理日志 \n清除定时任务记录 \n sed   -i   \'1,50d\'  /var/log/cron\n清除ftp记录 \n sed   -i   \'1,50d\'  /var/log/xferlog\n清除数据库日志 \n sed   -i   \'1,50\'  /var/log/mariadb/mariadb.log\n清除sshd信息 \n sed   -i   \'1,50d\'  /var/log/secure\n sed   -i   \'1,50d\'  /var/log/firewalld\n sed   -i   \'1,50d\'  /var/log/httpd/access_log\n sed   -i   \'1,50d\'  /var/log/httpd/ssl_access_log\n sed   -i   \'1,50d\'  /var/log/httpd/ssl_error_log\n sed   -i   \'1,50d\'  /var/log/httpd/ssl_request_log\n清除系统开机发生的错误 \n sed   -i   \'1,50d\'  /var/log/messages\n sed   -i   \'1,50d\'  /var/log/tuned/tuned.log\n sed   -i   \'1,50d\'  /var/log/hawkey.log\n sed   -i   \'1,50d\'  /var/log/yum.log\n sed   -i   \'1,50d\'  /var/log/dnf.log\n sed   -i   \'1,50d\'  /var/log/dnf.rpm.log\n sed   -i   \'1,50d\'  /var/log/ntp.log\n sed   -i   \'1,50d\'  /var/log/audit/audit.log\n清除历史执行命令 \n history   -cw   &&   rm   -rf  ~/.bash_history\n清除系统登录成功的记录 \n echo   >  /var/log/wtmp\n清除系统登录失败的记录 \n echo   >  /var/log/btmp\n清除最近登录信息 \n echo   >  /var/log/lastlog\n\n rm   -fr  /var/log/*\n Linux之间传输文件 \n #!/bin/bash \n远程IP \n des_ip = 192.168 .1.1\n远程端口 \n des_port = 22 \n远程用户 \n des_user = root\n远程密码 \n des_pass = 123456 \n远程文件或文件夹路径 \n des_path = /www/wwwroot/file\n本地文件或文件夹路径 \n local_path = /www/wwwroot/file\n检索expect是否安装 \n is_expect = ` whereis   expect   |   awk   \'{print $2}\' ` \n如果没有安装 \n if   [   !   -n   " $is_expect "   ] ;   then \n    yum  -y   install   expect   >  /dev/null  2 > &1 \n fi \n\n\n expect   -c   "\n设置拷贝的时间，超时时间-1为永不超时\nset timeout -1\n本地路径在前，远程在后，是从本地上传到远端\nspawn scp -P  ${des_port}  -p -r  ${local_path}   ${des_user} @ ${des_ip} : ${des_path} \n远程在前，本地路径在后，的是从远端下载到本地\nspawn scp -P  ${des_port}  -p -r  ${des_user} @ ${des_ip} : ${des_path}   ${local_path} \n\nexpect {\n   \\" *yes/no* \\"  {send  \\" yes \\r \\" ; exp_continue}\n   \\" *password* \\"  {send  \\" ${des_pass} \\r \\" ;}\n}\n问题回答完毕等待expect进程结束\nexpect eof\n" \n exit \n\n \n ',createdTime:1761814324e3},{title:"Shell",frontmatter:{description:"https://github.com/chinanf-boy/hyperfine-zh",meta:[{name:"twitter:title",content:"Shell"},{name:"twitter:description",content:"https://github.com/chinanf-boy/hyperfine-zh"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Shell/"},{property:"og:type",content:"article"},{property:"og:title",content:"Shell"},{property:"og:description",content:"https://github.com/chinanf-boy/hyperfine-zh"},{property:"og:url",content:"https://bajins.com/Shell/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Shell"},{itemprop:"description",content:"https://github.com/chinanf-boy/hyperfine-zh"}]},regularPath:"/Shell/",relativePath:"Shell/README.md",key:"v-977a0aa8",path:"/Shell/",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"命令行助手",slug:"命令行助手"},{level:2,title:"行尾序列",slug:"行尾序列"},{level:2,title:"文件编码转换",slug:"文件编码转换"},{level:2,title:"第三方SSH",slug:"第三方ssh"},{level:3,title:"终端复用器",slug:"终端复用器"},{level:2,title:"batch与shell同义操作符",slug:"batch与shell同义操作符"},{level:2,title:"batch与shell同义命令",slug:"batch与shell同义命令"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Shell \n Flag 命令行助手 行尾序列 文件编码转换 第三方SSH 终端复用器 batch与shell同义操作符 batch与shell同义命令 \n Flag \n \n https://en.wikipedia.org/wiki/Shell_(computing) \n https://github.com/topics/shell \n https://github.com/search?q=shell \n \n \n 命令行参考大全（Linux、macOS、CMD、PowerShell、VB Script） https://ss64.com \n https://www.robvanderwoude.com \n https://github.com/jlevy/the-art-of-command-line \n https://github.com/idank/explainshell \n \n https://github.com/idank/bashlex \n \n \n https://www.shellscript.sh \n https://math.ecnu.edu.cn/~jypan/Teaching/Linux \n https://github.com/qinjx/30min_guides \n GUI  什么是X11-Forwarding \n 命令行基准测试工具  https://github.com/sharkdp/hyperfine \n \n https://github.com/chinanf-boy/hyperfine-zh \n 命令行助手 \n \n 命令补全  https://github.com/scop/bash-completion \n https://github.com/junegunn/fzf \n https://github.com/beyondgrep/ack3 \n https://sourceforge.net/projects/zsh \n https://github.com/ohmyzsh/ohmyzsh \n https://github.com/nushell/nushell \n https://github.com/zsh-users/zsh-syntax-highlighting \n https://github.com/spaceship-prompt/spaceship-prompt \n https://github.com/Bash-it/bash-it \n https://github.com/orhun/halp \n https://github.com/0dayCTF/reverse-shell-generator \n https://github.com/starship/starship \n https://github.com/fish-shell/fish-shell \n 命令执行演示  https://github.com/maaslalani/slides \n https://github.com/d0c-s4vage/lookatme \n https://github.com/chubin \n AI加持  https://github.com/emcf/engshell \n 历史导入SQLite  https://github.com/atuinsh/atuin \n 历史查找  https://github.com/YiNNx/cmd-wrapped \n 录屏  https://github.com/gvcgo/asciinema \n 词典  https://github.com/lengyijun/mdict-cli-rs \n HTTP  https://github.com/jpillora/chisel \n https://github.com/lavv17/lftp \n https://github.com/rkd77/elinks \n \n https://github.com/ericsagnes/elinks \n \n \n https://lynx.browser.org \n \n https://github.com/kurtchen/Lynx \n \n \n https://sourceforge.net/projects/w3m \n https://github.com/doxx/darkflare \n https://github.com/coder/httpjail \n 延迟监控  https://gitlab.com/dseltzer/sping \n 爬取网页  https://github.com/philippta/flyscrape \n 历史记录  https://github.com/ddworken/hishtory \n https://github.com/YiNNx/cmd-wrapped \n https://github.com/cantino/mcfly \n kill  https://github.com/jkfran/killport \n ack  https://github.com/ggreer/the_silver_searcher \n ACK  https://github.com/beyondgrep/ack3 \n agrep  https://github.com/laurikari/tre \n 终端图像查看  https://github.com/stefanhaustein/TerminalImageViewer \n https://github.com/pTinosq/Electro \n 地图  https://github.com/rastapasta/mapscii \n 电子表格  https://github.com/saulpw/visidata \n https://github.com/bgreenwell/doxx \n 逆向工程  https://github.com/radareorg/radare2 \n 查看日志文件  https://github.com/bensadeh/tailspin \n https://github.com/Textualize/toolong \n https://github.com/gwsw/less \n https://github.com/control-theory/gonzo \n cat  https://github.com/swsnr/mdcat \n https://github.com/busyloop/lolcat \n 文件管理  https://github.com/sxyazi/yazi \n https://github.com/coreutils/coreutils \n https://github.com/uutils/coreutils \n https://github.com/MidnightCommander/mc \n 磁盘分析  https://github.com/muesli/duf \n https://dev.yorhel.nl/ncdu \n \n https://github.com/rofl0r/ncdu \n https://github.com/Navot/ncdu-web \n 终端-磁盘分析工具-ncdu \n \n \n https://github.com/zevv/duc \n https://sourceforge.net/projects/gt5 \n https://sourceforge.net/projects/treesize \n https://github.com/dundee/gdu \n https://github.com/Byron/dua-cli \n https://github.com/KSXGitHub/parallel-disk-usage \n https://github.com/imsnif/diskonaut \n https://codeberg.org/201984/dut \n https://github.com/viktomas/godu \n https://github.com/josephpaul0/tdu \n https://sourceforge.net/projects/fusenrg \n https://sourceforge.net/projects/gdmap \n https://apps.kde.org/zh-cn/filelight \n https://github.com/shundhammer/qdirstat \n https://github.com/jeromerobert/k4dirstat \n https://sourceforge.net/projects/xdiskusage \n https://sourceforge.net/projects/fsv \n 搜索文件  https://github.com/BurntSushi/ripgrep \n 目录结构树  https://github.com/shiquda/treex \n 批量图片处理  https://github.com/hzbd/imagekit \n MP3播放  https://github.com/coolcode/musix \n 回收站  https://github.com/umlx5h/gtrash \n 类ls  https://github.com/yellow-footed-honeyguide/facad \n SCP  https://github.com/lengyijun/smartscp \n CP  https://github.com/tarka/xcp \n 加密  https://github.com/candiddev/rot \n JSON  https://github.com/stedolan/jq \n \n https://stedolan.github.io/jq \n https://github.com/alingse/jq-manual-cn \n \n \n https://github.com/simeji/jid \n \n https://github.com/fiatjaf/jiq \n \n \n https://github.com/wader/fq \n https://github.com/ynqa/jnv \n https://github.com/bjesus/pipet \n HTML  https://github.com/ericchiang/pup \n https://github.com/dvcoolarun/web2pdf \n https://github.com/Y2Z/monolith \n Find  https://github.com/sharkdp/fd \n 便捷运行  https://github.com/casey/just \n https://github.com/google/zx \n https://github.com/ibraheemdev/modern-unix \n https://github.com/vastutsav/command-line-quick-reference \n https://github.com/onetrueawk/awk \n https://github.com/Equationzhao/g \n https://github.com/junegunn/fzf \n https://github.com/ajeetdsouza/zoxide \n 查询nginx日志  https://github.com/facundoolano/ngtop \n 连接数据库  https://github.com/PeepDB-dev/peepdb \n 持续假输出  https://github.com/giacomo-b/rust-stakeholder \n 页面缓存  https://github.com/tobert/pcstat \n https://github.com/silenceshell/hcache \n \n \n 快捷脚本  https://github.com/hvhghv/se-script \n \n terminal 、 shell 、 tty 、 console  之间的区别 \n \n terminal 、 shell 、 tty 、 console  之间的确切区别是什么？ \n \n \n Kernel：任何现代操作系统的最内部，它直接与实际硬件交互 \n terminal：真实用户坐在它后面的东西。 可能是物理终端（罕见）或伪终端（xterm、ssh）或虚拟终端（Linux 中的 vty） \n shell：俗称壳（用来区别于核），是指“为使用者提供操作界面”的软件（命令解析器），帮助用户与系统交互的应用程序（bash、tcsh 等）。 \n tty：支持终端的终端或内核子系统。 \n console：报告状态和错误的东西 (/dev/console) 或连接到计算机的物理键盘和视频显示器。 \n \n \n terminal = tty = text input/output environment \n console = physical terminal \n shell = command line interpreter \n \n \n 终端（Terminal）是控制台（Console）设备内的软件程序。shell是终端向用户发送输入的程序。shell生成输出并将其传回终端进行显示。 \n \n sh、dash、bash、tcsh、csh、ash、bsh、ksh的区别 \n \n 文件头定义为 #!/bin/bash , 且使用 bash xx.sh 执行； 文件头定义为 #!/bin/sh , 且使用 sh xx.sh 执行遵照 POSIX 规范 \n \n \n Bourne shell (sh) \n \n \n UNIX 最初使用，且在每种 UNIX 上都可以使用。在 shell 编程方面相当优秀，但在处理与用户的交互方面做得不如其他几种shell \n \n \n C shell (csh) 一个语法上接近于C语言的shell \n Korn shell (ksh) 完全向上兼容 Bourne shell 并包含了 C shell 的很多特性 \n Bourne Again shell (bash) \n \n \n Linux默认缺省shell。即 bash 是 Bourne shell 的扩展，与 Bourne shell 完全向后兼容，包含了很多 C shell 和 Korn shell 中的优点 \n \n \n Debian Almquist Shell(dash) \n \n \n GNU/Linux 操作系统中的 /bin/sh 本是 bash (Bourne-Again Shell) 的符号链接，但鉴于 bash 过于复杂\n，有人把 bash 从 NetBSD 移植到 Linux 并更名为 dash (Debian Almquist Shell)，并建议将 /bin/sh 指向它\n，以获得更快的脚本执行速度。Dash Shell 比 Bash Shell 小的多，符合POSIX标准 \n \n 推荐所有shell脚本都使用sh实现， Windows可安装Git（集成MinGW-w64）、MinGW-w64、MSYS2、Cygwin \n Windows10下推荐使用WSL \n 行尾序列 \n \n 又叫行尾符、换行符 \n \n \n https://zh.wikipedia.org/wiki/換行 \n https://zh.wikipedia.org/wiki/控制字符 \n \n \n CR ：Carriage Return，对应ASCII十进制是 13 , 十六进制 0x0D ，转义字符 \\r ，表示回车，MacIntosh操作系统（Mac OSX 10.9之前）使用 \n LF ：Linefeed，对应ASCII十进制是 10 , 十六进制 0x0A ，转义字符 \\n ，表示换行，Unix/Linux/MacOSX使用 \n CRLF ：Carriage Return & Linefeed， \\r\\n ，表示回车并换行，Dos和Windows使用 \n \n Linux \n显示格式。\n : set   ff \n设置为unix格式，dos为windows\n : set   ff = unix\n保存\n : wq \n \n GIT处理换行符 \n 文件编码转换 \n \n 如何在 Linux 中将文件编码转换为 UTF-8 \n https://www.gnu.org/software/libiconv \n \n https://github.com/winlibs/libiconv \n https://github.com/processone/iconv \n \n \n https://github.com/qiniu/iconv \n https://github.com/ashtuchkin/iconv-lite \n \n 跨平台 \n \n \n \n 工具 \n 描述 \n \n \n \n \n iconv \n 提供标准的程序和API来进行编码转换 \n \n \n convert_encoding.py \n 基于Python的文本文件转换工具 \n \n \n decodeh.py \n 提供算法和模块来谈测字符的编码 \n \n \n \n Linux \n \n \n \n 工具 \n 描述 \n 使用 \n \n \n \n \n vim \n 转换文件编码 \n :set fileencoding=utf-8 \n \n \n recode \n 转换文件编码 \n \n \n \n Utrac \n 转换文件编码 \n \n \n \n cstocs \n 转换文件编码 \n \n \n \n convmv \n 转换文件名编码 \n convmv -f GBK -t UTF-8 --notest * -r \n \n \n enca \n 分析给定文件的编码 \n \n \n \n \n Windows \n \n \n \n 工具 \n 描述 \n \n \n \n \n cscvt \n 字符集转换工具 \n 第三方SSH \n \n Secure Shell（SSH）/bourne shell(sh或bsh)/KornShell(ksh) \n \n \n OpenSSH 私钥后缀是 pem ，PuTTY 私钥后缀是 ppk \n \n \n https://github.com/alebcay/awesome-shell \n https://github.com/topics/fish \n https://github.com/topics/terminal \n https://github.com/topics/ssh \n https://github.com/topics/ssh-client \n https://github.com/topics/ssh2 \n https://github.com/topics/ssh \n https://github.com/francoismichel/ssh3 \n https://github.com/mskyaxl/wsl-terminal \n \n 文件传输 \n \n https://github.com/topics/sftp \n https://github.com/topics/sftp-client \n https://github.com/topics/ftp-client \n \n \n https://github.com/trzsz/trzsz \n https://github.com/libfuse/sshfs \n \n SSH服务器 \n \n https://github.com/janmojzis/tinyssh \n https://github.com/mkj/dropbear \n \n WEB \n \n https://github.com/LukeGus/Termix \n https://github.com/electerm/electerm \n https://github.com/xtermjs/xterm.js \n https://github.com/huashengdun/webssh \n https://github.com/billchurch/WebSSH2 \n https://github.com/mscdex/ssh2 \n https://github.com/tsl0922/ttyd \n https://github.com/zyyzyykk/kkTerminal \n 实时协作  https://github.com/ekzhang/sshx \n \n Android \n \n SSH client for Android \n \n \n https://github.com/topics/termux \n \n https://github.com/termux \n https://github.com/hanxinhao000/ZeroTermux \n \n \n https://github.com/connectbot/connectbot \n https://github.com/nashaofu/shell360 \n https://www.juicessh.com \n https://github.com/niklas-8/RemoteFiles \n \n GUI交互 \n \n https://github.com/TermoraDev/termora \n https://github.com/kingToolbox/WindTerm \n \n https://github.com/aoyiduo/woterm \n \n \n https://gitlab.com/Remmina/Remmina \n https://github.com/xpipe-io/xpipe \n https://github.com/nxshell \n \n https://sourceforge.net/projects/nxshell \n \n \n https://github.com/HaleyWang/SpringRemote \n https://github.com/lollipopkit/flutter_server_box \n FinalShell  https://www.hostbuf.com/t/988.html \n MobaXterm  https://www.mobatek.net \n Xshell  https://www.netsarang.com \n \n https://www.xshell.com/zh/free-for-home-school \n \n \n https://termius.com/download \n \n https://github.com/ArcSurge/Termius-Pro-zh_CN \n %LOCALAPPDATA%\\Programs\\Termius\\resources \n \n \n https://www.emtec.com/zoc \n https://sysprogs.com/SmarTTY \n https://www.terminal.icu \n https://www.xterminal.cn \n https://ishell.cc/zh-CN \n https://www.hexhub.cn \n https://bitvise.com/ssh-client \n SecureCRT  https://www.vandyke.com \n https://github.com/winscp/winscp \n \n https://sourceforge.net/projects/winscp \n https://github.com/search?q=winscp \n \n \n MacOS  https://github.com/gnachman/iTerm2 \n \n https://sourceforge.net/projects/iterm \n 主题配色  https://github.com/mbadolato/iTerm2-Color-Schemes \n \n \n https://github.com/gnome-terminator/terminator \n https://github.com/shell360 \n 终端复用器 \n \n https://github.com/topics/windows \n https://github.com/topics/putty \n https://github.com/topics/kitty \n \n \n https://github.com/wavetermdev/waveterm \n https://github.com/wez/wezterm \n https://github.com/ghostty-org/ghostty \n https://github.com/openssh \n \n https://www.openssh.com \n https://github.com/openssh-rust/openssh \n https://slproweb.com/products/Win32OpenSSL.html \n \n \n https://github.com/PowerShell/openssh-portable \n \n https://github.com/PowerShell/Win32-OpenSSH/wiki \n https://sourceforge.net/projects/sshwindows \n \n \n https://github.com/microsoft/terminal \n \n https://docs.microsoft.com/zh-cn/windows/terminal \n \n \n https://github.com/felixse/FluentTerminal \n https://github.com/Maximus5/ConEmu \n https://github.com/alacritty/alacritty \n https://github.com/Eugeny/terminus \n https://github.com/Eugeny/tabby \n https://github.com/vercel/hyper \n https://github.com/nvbn/thefuck \n https://github.com/warpdotdev/Warp \n PuTTY  https://www.chiark.greenend.org.uk/~sgtatham/putty \n \n https://github.com/rhuijben/putty \n https://github.com/larryli/PuTTY \n https://github.com/jimradford/superputty \n https://github.com/NoMoreFood/putty-cac \n https://github.com/search?q=putty \n https://xstarcd.github.io/wiki/windows/PuTTY.html \n https://bdznh.github.io/2018/05/20/build-putty-step-by-step \n \n \n https://github.com/portapps/kitty-portable \n https://github.com/cyd01/KiTTY \n https://github.com/mobile-shell/mosh \n https://github.com/yaronn/blessed-contrib \n https://github.com/gizak/termui \n https://github.com/nsf/termbox-go \n https://github.com/gdamore/tcell \n https://github.com/TeraTermProject/teraterm \n WSL终端  https://github.com/mintty/wsltty \n Cygwin终端  https://github.com/mintty/mintty \n \n https://github.com/rprichard/winpty \n batch与shell同义操作符 \n \n \n \n batch \n Shell \n 作用 \n \n \n \n \n % \n $ \n 命令行参数前缀 \n \n \n / \n - \n 命令选项标记 \n \n \n \\ \n / \n 目录路径分隔符 \n \n \n == \n = \n (等于)字符串比较测试 \n \n \n !==! \n != \n (不等)字符串比较测试 \n \n \n | \n | \n 管道：前一条命令的输出，作为后一条命令参数 \n \n \n || \n || \n 前一条命令执行失败，才执行后一条命令 \n \n \n & \n & \n 前后所有命令都执行，不管成功与否 \n \n \n && \n && \n 前一个命令执行成功，才执行后一个 \n \n \n ; \n ; \n 前后所有命令都执行，不管成功与否 \n \n \n @ \n set +v \n 不打印当前命令 \n \n \n * \n * \n 文件名"通配符" \n \n \n > \n > \n 文件重定向(覆盖) \n \n \n >> \n >> \n 文件重定向(附加) \n \n \n < \n < \n 重定向stdin \n \n \n ^ \n \\ \n 命令换行执行，PowerShell为`(反引号) \n \n \n %VAR% \n $VAR \n 环境变量 \n \n \n REM \n\n 注释 \n \n \n NOT \n ! \n 取反 \n \n \n NUL \n /dev/null \n "黑洞"用来阻止命令输出 \n \n \n ECHO \n echo \n 打印(Bash中有更多选项) \n \n \n ECHO. \n echo \n 打印空行 \n \n \n ECHO OFF \n set +v \n 不打印后续的命令 \n \n \n FOR %%VAR IN (LIST) DO \n for var in [list]; do \n "for"循环 \n \n \n :LABEL \n 没有等价物(多余) \n 标签 \n \n \n GOTO \n 没有等价物(使用函数) \n 跳转到脚本的另一个位置 \n \n \n PAUSE \n sleep \n 暂停或等待一段时间 \n \n \n CHOICE \n case or select \n 菜单选择 \n \n \n IF \n if \n if条件语句 \n \n \n IF EXIST FILENAME \n if [ -e filename ] \n 测试文件是否存在 \n \n \n IF !%N==! \n if [ -z "$N" ] \n 参数"N"是否存在 \n \n \n CALL \n source命令或.(点操作符) \n "include"另一个脚本 \n \n \n COMMAND /C \n source命令或.(点操作符) \n "include"另一个脚本(与CALL相同) \n \n \n SET \n export \n 设置一个环境变量 \n \n \n SHIFT \n shift \n 左移命令行参数列表 \n \n \n SGN \n -lt或-gt \n (整形)符号 \n \n \n ERRORLEVEL \n $? \n 退出状态 \n \n \n CON \n stdin \n "控制台"(stdin) \n \n \n PRN \n /dev/lp0 \n (一般的)打印设备 \n \n \n LPT1 \n /dev/lp0 \n 第一个打印设备 \n \n \n COM1 \n /dev/ttyS0 \n 第一个串口 \n batch与shell同义命令 \n \n \n \n DOS \n UNIX \n 作用 \n \n \n \n \n ASSIGN \n ln \n 链接文件或目录 \n \n \n ATTRIB \n chmod \n 修改文件权限 \n \n \n CD \n cd \n 更换目录 \n \n \n CHDIR \n cd \n 更换目录 \n \n \n CLS \n clear \n 清屏 \n \n \n COMP \n diff, comm, cmp \n 文件比较 \n \n \n COPY \n cp \n 文件拷贝 \n \n \n Ctl-C \n Ctl-C \n 中断(信号) \n \n \n Ctl-Z \n Ctl-D \n EOF(文件结束) \n \n \n DEL \n rm \n 删除文件 \n \n \n DELTREE \n rm -rf \n 递归删除目录 \n \n \n DIR \n ls -l \n 列出目录内容 \n \n \n ERASE \n rm \n 删除文件 \n \n \n EXIT \n exit \n 退出当前进程 \n \n \n FC \n comm, cmp \n 文件比较 \n \n \n FIND \n grep \n 在文件中查找字符串 \n \n \n MD \n mkdir \n 新建目录 \n \n \n MKDIR \n mkdir \n 新建目录 \n \n \n MORE \n more \n 分页显示文本文件 \n \n \n MOVE \n mv \n 移动文件 \n \n \n PATH \n $PATH \n 可执行文件的路径 \n \n \n REN \n mv \n 重命名(移动) \n \n \n RENAME \n mv \n 重命名(移动) \n \n \n RD \n rmdir \n 删除目录 \n \n \n RMDIR \n rmdir \n 删除目录 \n \n \n SORT \n sort \n 排序文件 \n \n \n TIME \n date \n 显示系统时间 \n \n \n TYPE \n cat \n 将文件输出到stdout \n \n \n XCOPY \n cp \n (扩展的)文件拷贝 \n \n \n \n',createdTime:1761814324e3},{title:"WindowsBatch",frontmatter:{description:"Windows 命令-官方文档\nwindows常用命令\nwindows批处理语法\nwindows之四十个bat脚本命令\nwindows bat脚本总结\nWindows 10/8/7的Rundll32命令列表\nhttps://gitlab.com/jarv/cmdchallenge\n    https://cmdchallenge.com\n打包成exe https://github.com/jeremyben/thebatchman\nhttps://github.com/npocmaka/batch.scripts",meta:[{name:"twitter:title",content:"WindowsBatch"},{name:"twitter:description",content:"Windows 命令-官方文档\nwindows常用命令\nwindows批处理语法\nwindows之四十个bat脚本命令\nwindows bat脚本总结\nWindows 10/8/7的Rundll32命令列表\nhttps://gitlab.com/jarv/cmdchallenge\n    https://cmdchallenge.com\n打包成exe https://github.com/jeremyben/thebatchman\nhttps://github.com/npocmaka/batch.scripts"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Shell/WindowsBatch.html"},{property:"og:type",content:"article"},{property:"og:title",content:"WindowsBatch"},{property:"og:description",content:"Windows 命令-官方文档\nwindows常用命令\nwindows批处理语法\nwindows之四十个bat脚本命令\nwindows bat脚本总结\nWindows 10/8/7的Rundll32命令列表\nhttps://gitlab.com/jarv/cmdchallenge\n    https://cmdchallenge.com\n打包成exe https://github.com/jeremyben/thebatchman\nhttps://github.com/npocmaka/batch.scripts"},{property:"og:url",content:"https://bajins.com/Shell/WindowsBatch.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"WindowsBatch"},{itemprop:"description",content:"Windows 命令-官方文档\nwindows常用命令\nwindows批处理语法\nwindows之四十个bat脚本命令\nwindows bat脚本总结\nWindows 10/8/7的Rundll32命令列表\nhttps://gitlab.com/jarv/cmdchallenge\n    https://cmdchallenge.com\n打包成exe https://github.com/jeremyben/thebatchman\nhttps://github.com/npocmaka/batch.scripts"}]},regularPath:"/Shell/WindowsBatch.html",relativePath:"Shell/WindowsBatch.md",key:"v-144734ad",path:"/Shell/WindowsBatch.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"文件操作",slug:"文件操作"},{level:3,title:"获取目录名",slug:"获取目录名"},{level:3,title:"获取为指定后缀的文件",slug:"获取为指定后缀的文件"},{level:3,title:"获取不为指定后缀的文件",slug:"获取不为指定后缀的文件"},{level:3,title:"判断是文件还是文件夹",slug:"判断是文件还是文件夹"},{level:3,title:"替换文件中指定内容",slug:"替换文件中指定内容"},{level:2,title:"环境变量",slug:"环境变量"},{level:3,title:"查看环境变量",slug:"查看环境变量"},{level:3,title:"设置环境变量",slug:"设置环境变量"},{level:2,title:"IP端口DNS进程",slug:"ip端口dns进程"},{level:3,title:"DNS",slug:"dns"},{level:3,title:"查看端口占用",slug:"查看端口占用"},{level:3,title:"查看占用的pid",slug:"查看占用的pid"},{level:3,title:"结束进程",slug:"结束进程"},{level:2,title:"延时定时事件任务",slug:"延时定时事件任务"},{level:3,title:"任务计划",slug:"任务计划"},{level:3,title:"事件",slug:"事件"},{level:2,title:"判断字符串",slug:"判断字符串"},{level:2,title:"进制转换",slug:"进制转换"},{level:2,title:"管理员权限",slug:"管理员权限"},{level:2,title:"隐藏窗口运行",slug:"隐藏窗口运行"},{level:2,title:"刷新桌面",slug:"刷新桌面"},{level:2,title:"开机启动",slug:"开机启动"},{level:3,title:"添加注册表",slug:"添加注册表"},{level:3,title:"启动目录",slug:"启动目录"},{level:2,title:"注册表",slug:"注册表"},{level:3,title:"regini",slug:"regini"},{level:3,title:"修改",slug:"修改"},{level:3,title:"窗口设置",slug:"窗口设置"},{level:3,title:"查询",slug:"查询"},{level:2,title:"注册服务",slug:"注册服务"},{level:3,title:"加入服务",slug:"加入服务"},{level:3,title:"删除服务",slug:"删除服务"},{level:2,title:"下载文件",slug:"下载文件"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' WindowsBatch \n Flag 文件操作 获取目录名 获取为指定后缀的文件 获取不为指定后缀的文件 判断是文件还是文件夹 替换文件中指定内容 环境变量 查看环境变量 设置环境变量 IP端口DNS进程 DNS 查看端口占用 查看占用的pid 结束进程 延时定时事件任务 任务计划 事件 判断字符串 进制转换 管理员权限 隐藏窗口运行 刷新桌面 开机启动 添加注册表 启动目录 注册表 regini 修改 窗口设置 查询 注册服务 加入服务 删除服务 下载文件 \n Flag \n \n Windows 命令-官方文档 \n windows常用命令 \n windows批处理语法 \n windows之四十个bat脚本命令 \n windows bat脚本总结 \n Windows 10/8/7的Rundll32命令列表 \n https://gitlab.com/jarv/cmdchallenge \n \n https://cmdchallenge.com \n \n \n 打包成exe  https://github.com/jeremyben/thebatchman \n https://github.com/npocmaka/batch.scripts \n \n \n 添加快捷方式 \n 设置必应壁纸 \n 设置GitHub的Hosts \n frpc.bat  会自动检测本地 fprc 是否为最新版本，如果不是或者没有则下载最新版 \n \n \n if 和 for 的条件与后面跟的 ( 之间必须要有一个空格，否则会出现 命令语法不正确 的问题！ \n 使用cd切换目录时，如果带盘符一定要加 /d 参数，否则切换无效 \n 双引号中包含双引号最里层的要用三个 """ 转义， & 符号要用 ^ 转义\n \n 示例:使用 curl 配合 jq 获取必应壁纸下载地址 \n \n \n \n curl   "http://cn.bing.com/HPImageArchive.aspx?format=js&idx=0&n=1"   ^ \n | jq-win64.exe  ".images[0].url | """ https://cn.bing.com """ + .[0:index(""" ^ & """)]"  >> bing.txt \n \n :: 解压MSI \n msiexec   /a   "MSI文件路径"   /qn  TARGETDIR= "解压输出目录绝对路径" \n :: 弹窗 \n msg   %username%   /time : 60   "WARNING:a backdoor account is created" \n \n \n Windows11当前桌面壁纸： %AppData%\\Microsoft\\Windows\\Themes\\TranscodedWallpaper  为转码文件 \n Windows10当前桌面壁纸： %AppData%\\Microsoft\\Windows\\Themes\\CachedFiles\\CachedImage_1920_1080_POS4.jpg \n Windows7当前桌面壁纸： %AppData%\\Microsoft\\Windows\\Themes\\TranscodedWallpaper.jpg \n \n HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Wallpapers \n %AppData%\\Microsoft\\Windows\\Themes\\CachedFiles \n %SystemRoot%\\Web \n %SystemRoot%\\Resources\\Themes \n %LocalAppData%\\Microsoft\\Windows\\Themes \n HKEY_CURRENT_USER\\Control Panel\\Desktop\\WallPaper \n \n \n 事件日志目录： %SystemRoot%\\System32\\Winevt\\Logs \n \n 获取用户名 \n echo   %username% \n net  user \n whoami \n query  user \n quser \n 文件操作 \n \n robocopy复制文件及目录结构 \n \n :: 路径都为文件所在顶级文件夹 \n robocopy   /ndl   /njh   /njs   /s  源路径 目的路径 复制的文件多个以空格分隔 \n \n \n xcopy复制文件及目录结构 \n forfiles遍历文件夹 \n \n :: 列出文件，类似于linux下的ls \n dir \n :: 创建目录 \n md  目录名（文件夹） \n :: 删除目录 \n rd   目录名（文件夹） \n :: 拷贝文件 \n copy  路径\\文件名 路径\\文件名 \n :: 移动文件 \n move  路径\\文件名 路径\\文件名 \n :: 删除文件，不能删除文件夹 \n del  文件名 \n 获取目录名 \n :: 顺序循环，设置最后一个为当前目录 \n for   /f   "delims="   %%i   in   ( "%cd%" )   do   set   folder = %%~ni \n echo   %folder% \n\n :: 仅将 %0 扩充到一个路径 \n set   currentPath = %~dp0 \n :: 替换\\为,号，也可以替换为空格 \n set   currentPath = %currentPath: \\ = , % \n :: 顺序循环，设置最后一个为当前目录 \n for   %%a   in   ( %currentPath% )   do   set   folder = %%a \n echo   %folder% \n 获取为指定后缀的文件 \n ::获取为指定后缀的文件 \n for   /r   %~dp0   %%a   in   ( *.jpg , *.png )   do   ( \n\t::把文件后缀赋值给变量\n\t set  suffix  =   %%~xa \n\t::把文件名赋值给变量（没有后缀）\n\t set  name  =   %%~na \n\t::把路径赋值给变量（不带驱动号和文件名）\n\t set  path  =   %%~pa \n\t::把驱动号赋值给变量\n\t set  drive  =   %%~da \n\t\n\t::判断后缀\n\t if   /i   "!suffix!"   neq   ".bmp"   ( \n\t\t ren   "%%~a"   "%%~na.bmp" \n\t ) \n ) \n \n ::获取为指定后缀的文件 \n for   /f   "delims="   %%i   in   ( \' dir  /s   /b   /a    %~dp0  ^| findstr  /e   "\\.jpg\\> \\.png\\>" \' )   do   ( \n\t::把文件后缀写入文件\n\t echo   %%~dpnxi  >> test.txt \n ) \n 获取不为指定后缀的文件 \n ::获取不为指定后缀的文件 \n for   /f   "delims="   %%i   in   ( \' dir  /s   /b   /a    %~dp0  ^| findstr  /v   "\\.bat\\> \\.text\\> \\.exe\\>" \' )   do   ( \n\t::把文件后缀写入文件\n\t echo   %%~dpnxi  >> test.txt \n ) \n 判断是文件还是文件夹 \n \n 如果是文件夹，则 test 和 test\\ 、 test\\. 、 test\\nul 是等同的；\n如果是文件，则 test 不等同于三者中的任何一个 \n \n if   exist  test\\   ( \n     echo  test 是文件夹 \n )   else   ( \n     echo  test 是文件 \n ) \n \n dir   /ad  test >nul  2 >nul  & &   ( \n     echo  test 是文件夹 \n )  ||  ( \n     echo  test 是文件 \n ) \n 替换文件中指定内容 \n @ echo  off \n :: 解决把中文写入文件乱码问题（声明采用UTF-8编码），936为GBK，437为美国英语 \n :: https://blog.csdn.net/python_class/article/details/81560470 \n chcp   65001 \n\n :: 开启延迟环境变量扩展 \n :: 解决for或if中操作变量时提示ECHO OFF问题，用!!取变量 \n :: 解决调用jscript提示命令错误问题 \n setlocal  EnableDelayedExpansion \n\n set   file = %~dp0nav .md \n :: 替换文件中指定内容 \n ( \n     for   /f   "tokens=*"   %%i   in   ( %file% )   do   ( \n        :: 把当前行的内容赋值到变量\n         set   s = %%i \n        :: 不为空行时\n         if   not   !s! . == .   ( \n            :: 替换内容中的反斜杠为正斜杠\n             set   s = !s:\\=/! \n             echo   !s! \n         ) \n     ) \n ) >%file%\n\n goto   :EXIT \n\n :EXIT \n :: 结束延迟环境变量扩展和命令执行 \n endlocal & exit   /b   %errorlevel% \n 环境变量 \n \n set \n setx \n \n SET 与 SETX 的区别 \n \n SET  用于设置临时环境变量和查看环境变量 \n SETX  用于设置用户环境变量和系统环境变量 \n \n \n 变量值有空格或 % 等特殊字符时必须用 " 包括起来 \n \n \n SETX 变量名 变量值  设置用户环境变量，记录在注册表 HKEY_CURRENT_USER \n \n \n SETX /M 变量名 变量值  设置系统环境变量，记录在注册表 HKEY_LOCAL_MACHINE \n 查看环境变量 \n \n 查看所有环境变量 \n \n :: 在末尾输入变量名就是查询单个变量 \n SET \n :: 或者这样查询单个环境变量 \n ECHO   %PATH% \n \n \n 查看用户环境变量 \n \n :: 替换最后的*号为变量名就是查询单个变量 \n REG  QUERY  "HKCU\\Environment"   /v  * \n \n \n 查看系统环境变量 \n \n :: 替换最后的*号为变量名就是查询单个变量 \n REG  QUERY  "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment"   /v  * \n 设置环境变量 \n \n 临时有效 \n \n set   path = %path% ;D:\\test \n \n \n 永久有效 \n \n setx  path  "%path%;D:\\test" \n setx   /m  path  "%path%;D:\\test" \n IP端口DNS进程 \n 查看本机ip \n ipconfig \n DNS \n nslookup  域名 \n \n 刷新DNS \n \n C:\\Windows\\System32\\drivers\\etc\\hosts \n \n netsh  int ip reset \n netsh  int ipv6 reset \n netsh  winsock reset \n netsh  winhttp reset proxy \n ipconfig   /release \n ipconfig   /renew \n ipconfig   /flushdns \n ipconfig   /registerdns \n inetcpl .cpl \n ncpa .cpl \n 查看端口占用 \n netstat  -an | find  "0.0.0.0:80" \n 查看占用的pid \n \n 在 windows 系统下，不能直接使用反引号执行命令，要使用 for 循环变通下，在 for 循环中使用单 \' 括起来执行命令 \n \n \n 在 cmd 命令窗口中直接使用 for 循环只能使用单 % 设置变量 \n 而在 bat 脚本文件中只能用双 %% 设置变量 \n 而且在 for 循环中执行的命令带有 | 等特殊符号需要使用 ^ 转义 \n \n :: 用findstr命令搜索 \n for   /f   %%i   in   ( \' tasklist ^| findstr  /i   "程序名" \' )   do   set   reslut = %%i \n\n :: 只输出PID编号 \n for   /f   "skip=3 tokens=2"   %a   in   ( \' tasklist  /fi   "imagename eq 程序名*" \' )   do   @ echo   %a \n\n tasklist  | findstr  "java" \n wmic  process where  "name like \'%java%\'"  get ProcessId,CommandLine \n \n 查看被占用端口的 pid \n netstat  -ano | findstr  80 \n 结束进程 \n taskkill   /f   /pid  进程号 \n taskkill   /f   /im  程序名 \n wmic  process where  "ProcessId=pid"  delete \n 延时定时事件任务 \n :: 延时等待10秒 \n choice   /t   10   /d  y  /n  >nul \n :: 延时等待10秒 \n timeout   /T   10   /NOBREAK \n :: 持续等待，直到按下任意按键，类似于pause \n timeout   /T   -1 \n :: 持续等待，直到你按下CTRL+C按键 \n timeout   /T   -1   /NOBREAK \n 任务计划 \n \n Schtasks命令详解 \n \n 更高级用法见 创建任务计划 \n \n 如果任务计划运行没反应，去掉 /RU SYSTEM 试试 \n \n taskschd \n SCHTASKS   /?  查看帮助 \n\n :: /sc 指定计划频率：MINUTE、 HOURLY、DAILY、WEEKLY、MONTHLY, ONCE, ONSTART, ONLOGON, ONIDLE, ONEVENT \n SCHTASKS   /Create   /RU  SYSTEM  /RL  Highest  /tn  定时任务名  /tr   "运行程序路径"   /sc  DAILY \n :: 开机自启动 \n SCHTASKS   /Create   /RU  SYSTEM  /RL  Highest  /tn  定时任务名  /tr   "运行程序路径"   /sc  ONSTART \n :: 每天 12:30 运行 \n schtasks   /Create   /RU  SYSTEM  /RL  Highest  /tn  定时任务名  /tr   "运行程序路径"   /sc  DAILY  /st   12 : 30 \n :: 一分钟执行一次 \n schtasks   /Create   /RU  SYSTEM  /RL  Highest  /tn  定时任务名  /tr   "运行程序路径"   /sc  MINUTE  /mo   1 \n :: 在指定的开始日期和结束日期之间，每天 12:00 点开始到 14:00 点，每隔5分钟运行 \n SCHTASKS   /Create   /RU  SYSTEM  /RL  Highest  /tn  定时任务名  /TR   "运行程序路径"   /SD  开始日期  /ED  结束日期  ^ \n  /ST   12 : 00   /ET   14 : 00   /SC  MINUTE  /MO   5 \n :: 每天 12:00 点开始到 14:00 点自动结束 \n SCHTASKS   /Create   /RU  SYSTEM  /RL  Highest  /tn  定时任务名  /TR   "运行程序路径"   /ST   12 : 00   /ET   14 : 00   /K   /SC  DAILY \n :: 将任务附加到事件上：登录成功事件，运行事件查看器 \n SCHTASKS   /Create   /RU  SYSTEM  /RL  Highest  /tn  定时任务名  /TR  eventvwr  /SC  ONEVENT  /EC  Security  ^ \n  /MO   "*[System[Provider[@Name=\'Microsoft-Windows-Security-Auditing\'] and EventID=4624]]" \n :: 将任务附加到事件上：系统已从低功耗状态中恢复，运行事件查看器 \n SCHTASKS   /Create   /RU  SYSTEM  /RL  Highest  /tn  定时任务名  /TR  eventvwr  /SC  ONEVENT  /EC  System  ^ \n  /MO   "*[System[Provider[@Name=\'Microsoft-Windows-Power-Troubleshooter\'] and EventID=1]]" \n\n :: 查询任务 \n SCHTASKS   /Query   /fo  LIST  /v   /TN  任务名称 \n :: 强制删除任务 \n SCHTASKS   /Delete   /F   /TN  任务名称 \n :: 手动运行任务 \n SCHTASKS   /run   /TN  任务名称 \n 事件 \n \n eventvwr  打开事件查看器\n \n 打开eventvwr -> Windows 日志 -> 系统 右键打开菜单 -> 将所有事件另存为(E) -> 选择保存类型为xml \n \n \n eventcreate  该命令行工具使管理员能够创建一个自定义事件 ID 和消息于某指定事件日志里。 \n wmic ntevent /? \n \n wmic ntevent list full  查看所有事件日志 \n \n \n wmic nteventlog /? \n wevtutil.exe qe Application /c:3 /rd:true /f:text \n (get-winevent -listlog Application).providernames  或者  wevtutil el  查看所有事件名 \n 计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Publishers  注册表中所有事件 \n \n \n \n \n 事件源 \n 事件ID \n 说明 \n \n \n \n \n Power-Troubleshooter \n 1 \n 系统已从低功耗状态中恢复。 \n \n \n Kernel-Power \n 42 \n 系统正在进入睡眠状态。 \n \n \n Kernel-Power \n 105 \n 电源更改。 \n \n \n Kernel-Power \n 107 \n 系统已从睡眠状态恢复。（已进入睡眠状态） \n \n \n Kernel-Power \n 130 \n 系统开机恢复 \n \n \n Kernel-Power \n 131 \n 系统开机恢复 \n \n \n Kernel-General \n 1 \n 更改系统时间 \n \n \n Kernel-General \n 24 \n 已刷新时区信息，退出原因为 0。当前时区偏差为 -480。 \n \n \n EventLog \n 6013 \n 系统启动时间为 178611 秒。 \n 判断字符串 \n \n 注意：在|两端不能有空格，如果有空格则会出现匹配不正确 \n 这里有个BUG不能取反匹配，比如用 [^0-9] 匹配不是纯数字的字符，匹配到 . 会通过 \n \n 判断是否为数字、字母 \n :: 判断是否为数字、字母，在|两端不能有空格 \n :: 注意这里有个bug不能用[^0-9]取反，匹配到.会通过 \n echo   %var% |findstr  "^[a-z0-9]*$"  >nul  & &   ( \n     ECHO . \n     ECHO .输入的： %var% \n     ECHO . \n )  ||  ( \n     ECHO . \n     ECHO .输入的必须为纯小写字母或数字！ \n     ECHO . \n ) \n \n 判断是否为纯数字 \n :: 判断是否为纯数字，在|两端不能有空格 \n :: 注意这里有个bug不能用[^0-9]取反，匹配到.会通过 \n echo   %port% |findstr  "^[0-9]*$"  >nul  & &   ( \n     ECHO . \n     ECHO .输入的端口： %port% \n     ECHO . \n )  ||  ( \n     ECHO . \n     ECHO .端口必须为纯数字！ \n     ECHO . \n ) \n \n 判断字符串是否包含子字符串 \n :: 判断变量字符串中是否包含字符串 \n echo  %字符串% | findstr %子串% >nul  & &   ( \n     echo  包含 \n )  ||  ( \n     echo  不包含 \n ) \n \n set   error = 1 \n :: 判断文件中是否包含字符串 \n findstr /i   "123"   1 .txt >nul  2 >nul & & set   "error=" \n if   defined  error   ( \n     echo  不包含 \n )   else   ( \n     echo  包含 \n ) \n 进制转换 \n \n 十进制转十六进制 \n \n @ echo  off & setlocal  enabledelayedexpansion \n set   /p  十进制 = 请输入要转换的十进制数： \n for   /l   %%a   in   ( 1   1   8 )   do   ( \n      set   /a  余 = 十进制 %%16 , 十进制 /= 16 , tmp = 余 + 100 \n      set   yu = !tmp:~1!   !yu! \n ) \n set   yu = %yu:00 = 0 % \n for   %%a   in   ( 1   2   3   4   5   6   7   8   9  A B C D E F )   do   ( \n      set   /a   n += 101 \n      for   %%b   in   ( !n:~-2! )   do   ( \n          set   yu = ! yu:  %%b =   %%a ! \n      ) \n ) \n echo  0x %yu:  =% \n pause \n \n \n 十六进制转十进制 \n \n set   /p  十六进制 = 请输入十六进制数字： \n set   /a  十进制 = 0x % 十六进制: * x = % \n echo  %十进制% \n 管理员权限 \n \n \n Windows10启用管理员：快捷键 Win  +  r  打开“运行”输入 gpedit.msc 并运行 ->  Windows 设置  ->  安全设置  ->  安全选项 \n \n 禁用： 用户账户控制：以管理员批准模式运行所有管理员 \n 禁用： 用户账户控制：用于内置管理员账户的管理员批准模式 \n 启用： 账户：管理员账户状态 \n \n \n \n 判断 \n \n \n md   "%~dp0$testAdmin$"   2 >nul \n if   not   exist   "%~dp0$testAdmin$"   ( \n     echo  不具备所在目录的写入权限! > & 2 \n     exit   /b   1 \n )   else   rd   "%~dp0$testAdmin$" \n \n @ echo  off \n :: 检查权限 \n>nul 2> & 1   "%SYSTEMROOT%\\system32\\cacls.exe"   "%SYSTEMROOT%\\system32\\config\\system" \n :: 如果没有管理员权限，就请求管理权限 \n if  \'% errorlevel %\'  NEQ  \' 0 \'   ( \n     echo  不具备所在目录的写入权限! > & 2 \n     exit   /b   1 \n ) \n \n @ echo  off \n :: 检查权限 \n net  session >nul  2 > & 1   \n if  not  "%errorLevel%"  ==  "0"  (  \n     echo  不具备所在目录的写入权限! > & 2 \n     exit   /b   1 \n ) \n \n reg  query HKU\\S -1 -5 -20 >nul  2 >nul \n if  not  "%errorLevel%"  ==  "0"  (  \n     echo  不具备所在目录的写入权限! > & 2 \n     exit   /b   1 \n ) \n \n 获取管理员权限 \n @ echo  off \n fltmc >nul||cd /d   %~dp0   & &   mshta  vbscript:CreateObject( "Shell.Application" ) .ShellExecute ( "%~nx0","%1","","runas",0 ) ( window .close ) \n\n :: 下面为执行命令 \n\n \n @ echo  off \n ::------------------------------------------------------------------------------- \n>nul 2> & 1   "%SYSTEMROOT%\\system32\\cacls.exe"   "%SYSTEMROOT%\\system32\\config\\system" \n if  \'% errorlevel %\'  NEQ  \' 0 \'   (   goto  UACPrompt  )   else   (   goto  GetAdmin  ) \n :UACPrompt \n    ::if not "%~1"=="" set file= ""%~1""\n    ::echo CreateObject ( "Shell.Application" ) .ShellExecute "cmd.exe", "/c %~s0%file%", "", "runas", 0 > "%temp%\\getadmin.vbs"\n     echo  CreateObject ^ ( "Shell.Application" ^ ).ShellExecute  "%~s0" ,  "%*" ,  "" ,  "runas" ,  0  >  "%temp%\\getadmin.vbs"   \n    "%temp%\\getadmin.vbs"\n     exit   /B \n :GetAdmin \n     if   exist   "%temp%\\getadmin.vbs"   (   del   "%temp%\\getadmin.vbs"   ) \n     pushd   "%CD%" \n     CD   /D   "%~dp0" \n :StartCommand \n ::------------------------------------------------------------------------------- \n\n :: 下面为执行命令 \n 隐藏窗口运行 \n 此方式完全不会显示 CMD 窗口（包括闪现）  vbs脚本 \n 此方式会闪现 CMD 窗口 bat脚本 \n \n 如果运行的批处理名为 a.bat ，在 C:\\ 下，那 %~0 代表 C:\\a.bat ， %~nx0 代表 a.bat 。 h 极为参数 %1 ， 0 表示隐藏运行。 \n 由于你双击运行，故第一次批处理 %1 为空， if 不成立，转而运行下一句。\n然后再次打开自己，并传递参数 h ，此时 if 成立，跳转至 begin 开始运行。 \n \n @ echo  off \n if   "%1"  ==  "h"  goto begin \n mshta  vbscript:createobject( "wscript.shell" ) .run ( "%~0 h",0 ) ( window .close ) & & exit \n ::mshta "javascript:new ActiveXObject(\'WScript.Shell\').Run(\'%~0 h\',0);window.close()"&&exit \n :begin \n\n :: 下面为执行命令 \n\n \n :: 静默运行软件 \n Pushd   %~dp0 \n start   /wait   /B   ""   "%~dp0软件名称"   /S \n \n :: 添加开机静默启动 \n Pushd   %~dp0 \n start   /wait   /B   ""   "%~dp0软件名称"   /ADD \n \n :: 删除开机静默启动 \n Pushd   %~dp0 \n start   /wait   /B   ""   "%~dp0软件名称"   /DEL \n 刷新桌面 \n REM taskkill 用户窗口被关闭 \n taskkill   /f   /im  explorer.exe >nul  2 >nul & start  explorer.exe \n\n REM regsvr32.exe 图标有白块 \n regsvr32 .exe  /s   /n   /i : /UserInstall   %SystemRoot% \\system32\\themeui.dll \n\n :: 效果不太好，有时刷新成功，有时失败 \n RunDll32  USER32,UpdatePerUserSystemParameters \n\n :: assoc文件关联有多余添加，可能报错，exe 类型几乎不会被修改成其他类型 \n assoc  exe=exefile \n :: .=. 应该比较保险 \n assoc  .=. \n \n \n 刷新桌面图标 \n \n @ echo  off \n\n REM inf 代码太多 \n>%tmp%\\tmp.inf  ( \n     echo ;[Version] \n     echo ;Signature=$Chicago$ \n     echo ;[DefaultInstall] \n ) \n rundll32  SETUPAPI.DLL,InstallHinfSection DefaultInstall  128   %tmp% \\tmp.inf \n REM inf 需要%1是有效inf，win7报错：您选中INF文件不支持此安装方法 \n REM %SystemRoot%\\System32\\InfDefaultInstall.exe "%1" \n 开机启动 \n \n 有几种方法：注册表启动项、启动文件夹、服务(Services)、任务计划程序(Task Scheduler) \n 添加注册表 \n \n Run 键值代表着开机启动项，也就是说在这个项下的键值会随着开机启动\n（这里的开机是指用户登录，也就是说只要有登录操作就会执行，注销然后登录，也会执行这个键值）。 \n \n \n RunOnce 键值类似于 Run 键值，唯一的区别在于， RunOnce 键值只执行一次，操作执行后会被自动删除。 \n \n \n 用户启动项 \n \n \n HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run \n HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce \n \n \n 本机启动项 \n \n \n HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager \n HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run \n HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce \n HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Run \n HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce \n \n REG  ADD  "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"   /v  软件名  /d  软件路径  /f \n :: 或者，%号和"号不能使用转移字符^转义，%号转义%%，"号转义""" \n REG  ADD  "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"   /v  软件名  /d   """" 软件路径 """ /background"   /f \n 启动目录 \n \n 把软件的快捷方式或者软件直接放在以下目录中就会开机自动运行 \n \n \n 可利用 脚本添加快捷方式 直接在启动文件夹中生成快捷方式 \n \n \n 按 win+r 打开运行窗口，输入 shell:startup 打开启动文件夹，把快捷方式或者软件放入 \n \n \n Win7及以上（当前用户）:  %AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup \n 启动目录（所有用户）:  %ProgramData%\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp \n 注册表 \n \n 注册表被称为Windows操作系统的核心，它的工作原理实质是一个庞大的数据库，存放了关于计算机硬件的配置信息、\n系统和应用软件的初始化信息、应用软件和文档文件的关联关系、硬件设备的说明以及各种状态信息和数据，包括Windows操作时不断引用的信息。 \n \n \n 例如：系统中的硬件资源、硬件信息、分配正在使用的端口、每个用户的配置文件、计算机上安装的应用程序以及每个应用程序可以创建的文件类型等。 \n \n \n 组策略设置的实质是修改注册表中的配置 \n \n 主要作用 \n \n 记录安装信息 \n 设置硬件 \n 设置软件 \n 定制Windows \n 系统安全管理 \n 自动运行程序 \n 网络设置 \n \n \n Windows注册表内容详解 \n 简析Windows注册表 \n windows注册表 \n \n 注册表的分支结构 \n \n \n \n 注册表短根键名 \n 注册表长根键名 \n 作用 \n \n \n \n \n HKCU \n HKEY_CURRENT_USER \n 存储当前用户设置的信息。当前用户登录后才执行的操作 \n \n \n HKLM \n HKEY_LOCAL_MACHINE \n 包括安装在计算机上的硬件和软件的信息。所有操作在用户登录前就执行了 \n \n \n HKCR \n HKEY_CLASSES_ROOT \n 存储Windows可识别的文件类型的详细列表，以及相关联的程序。 \n \n \n HKEY_USERS \n HKEY_USERS \n 包含使用计算机的用户的信息。 \n \n \n HKEY_CURRENT_CONFIG \n HKEY_CURRENT_CONFIG \n 这个分支包含计算机当前的硬件配置信息。 \n \n \n \n 系统默认注册表位置 \n \n 为所有用户安装的程序： HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall \n 为当前用户安装的程序： HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall \n 64位系统中的32位程序： HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall \n \n \n 这3个注册表总有一个包含你要找的程序，不包括UWP应用。 \n \n \n 隐藏指定的程序：在右边空白处（或左边的项名称）点击右键->新建->DWORD（32位）值，命名为 SystemComponent ，\n并修改数据为 1 （新建后双击名称或右键点击选择修改，默认为 0 ）。 \n \n \n 如果注册表项下面有"SystemComponent"字段并且值等于 1 时，表示这是个系统组件，而不是应用软件。 \n \n \n 如果注册表项下面有"ParentKeyName"字段则表示该项是某个分类下的子项，一般情况补丁才会有"ParentKeyName"字段。 \n regini \n \n regini和其他所有命令官方文档 \n \n \n \n \n 权限 \n 说明 \n \n \n \n \n 1 \n Administrators 完全访问 \n \n \n 2 \n Administrators 只读访问 \n \n \n 3 \n Administrators 读和写入访问 \n \n \n 4 \n Administrators 读、写入、删除访问 \n \n \n 5 \n Creator 完全访问 \n \n \n 6 \n Creator 读和写入访问 \n \n \n 7 \n everyone 完全访问 \n \n \n 8 \n everyone 只读访问 \n \n \n 9 \n everyone 读和写入访问 \n \n \n 10 \n everyone 读、写入、删除访问 \n \n \n 11 \n Power Users 完全访问 \n \n \n 12 \n Power Users 读和写入访问 \n \n \n 13 \n Power Users 读、写入、删除访问 \n \n \n 14 \n System Operators 完全访问 \n \n \n 15 \n System Operators 读和写入访问 \n \n \n 16 \n System Operators 读、写入、删除访问 \n \n \n 17 \n System 完全访问 \n \n \n 18 \n System 读和写入访问 \n \n \n 19 \n System 只读访问 \n \n \n 20 \n Administrators 读、写、执行访问 \n \n \n 21 \n Interactive User 完全访问 \n \n \n 22 \n Interactive User 读和写入访问 \n \n \n 23 \n Interactive User 读、写入、删除访问 \n 修改 \n \n /v  设置键名(value) \n /t  设置数据类型(type) \n /d  设置添加的值(data) \n /f  表示强制(forbidden) \n \n \n 删除桌面IE图标 \n \n REG  DELETE  "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\{B416D21B-3B22-B6D4-BBD3-BBD452DB3D5B}"   /f \n \n \n 修改开机时小数字键盘不开启的问题 \n \n REG  ADD  "HKU\\.DEFAULT\\Control Panel\\Keyboard"   /v  InitialKeyboardIndicators  /t  REG_SZ  /d   2   /f \n \n \n 把图片设置为壁纸 \n \n REG  ADD  "HKCU\\Control Panel\\Desktop"   /v  TileWallpaper  /d   "0"   /f   \n REG  ADD  "HKCU\\Control Panel\\Desktop"   /v  Wallpaper  /d   "图片绝对路径"   /f \n REG  ADD  "HKCU\\Control Panel\\Desktop"   /v  WallpaperStyle  /t  REG_DWORD  /d   2   /f \n RunDll32 .exe USER32.DLL,UpdatePerUserSystemParameters \n \n \n 开机自动运行 \n \n REG  ADD  "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"   /v  自定义命名  /d   %0   /f \n \n \n Windows Defender \n \n :: 关闭“启用Windows安全中心服务”的通知 \n REG  DELETE  "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellServiceObjects\\{F56F6FDD-AA9D-4618-A949-C1B91AF43B1A}"   /f \n\n :: 关闭Windows Defender \n REG  ADD  "HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows Defender"   /v   "DisableAntiSpyware"   /d   1   /t  REG_DWORD  /f \n\n :: 启用Windows Defender \n REG  ADD  "HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows Defender"   /v   "DisableAntiSpyware"   /d   0   /t  REG_DWORD  /f     \n 窗口设置 \n Mode  con cols=宽分辨率 lines=高分辨率 \n \n \n 窗口大小是被改成了你想要的, 可是屏幕缓冲区的大小也变成了一样，这让你无法追溯屏幕打印的历史，\n也就是说 mode 对于窗口大小和屏幕缓冲区大小不能单独设置。 \n \n \n 解决办法就是修改注册表，先要知道保存系统默认的 cmd 命令窗口的屏幕缓冲区大小的两个键值 \n \n :: 窗口大小 \n HKEY_CURRENT_USER \\Console\\ScreenBufferSize \n\n :: 屏幕缓冲区大小 \n HKEY_CURRENT_USER \\Console\\WindowSize \n \n \n 值是用的十六进制值来表示的，十六进制可以前加零来补齐为8位来理解 \n 十六进制的前四位是高，后四位是宽 \n \n :: 窗口高宽40*120 \n REG  ADD  "HKEY_CURRENT_USER\\Console"   /t  REG_DWORD  /v  WindowSize  /d  0x00280078  /f \n :: 屏幕缓冲区高宽1000*120 \n REG  ADD  "HKEY_CURRENT_USER\\Console"   /t  REG_DWORD  /v  ScreenBufferSize  /d  0x03e80078  /f \n 查询 \n FOR /F  "usebackq delims=="  %i IN  ( ` REG QUERY HKCU /v onedrive /s ` )  DO @echo %i\n 注册服务 \n \n https://www.cnblogs.com/pingming/p/5108947.html \n 加入服务 \n :: 等号后面的空格必须 \n sc  create 服务名称 binPath= 执行程序路径或者命令 start= auto displayname=  "描述" \n \n \n 示例 \n \n sc  create frp内网穿透 binPath= D:\\frp\\frps.bat start= auto displayname=  "frp内网穿透" \n\n sc  create frp内网穿透 binPath=  "cmd.exe /c D:\\frp内网穿透工具\\frpc.exe -c D:\\frp内网穿透工具\\frpc.ini"   ^ \n start= auto displayname=  "frp内网穿透" \n 删除服务 \n sc  delete 服务名称 \n 下载文件 \n \n certutil \n \n \n 用户备份证书服务管理，每次下载都会有缓存，缓存目录： %USERPROFILE%\\AppData\\LocalLow\\Microsoft\\CryptnetUrlCache\\Content \n \n certutil  -urlcache -split  -f  https://blog-static.cnblogs.com/files/gayhub/bcn.js C:\\Windows\\bcn.bat \n \n \n bitsadmin \n \n \n bitsadmin.exe  是 windows 后台智能传输服务的一个工具， windows 的自动更新，补丁之类的下载就是用这个工具来实现的。 \n \n :: /priority normal进度条等信息 \n bitsadmin   /transfer  任务名  /download   /priority  normal https://blog-static.cnblogs.com/files/gayhub/bcn.js C:\\Windows\\bcn.bat \n \n ',createdTime:1761814324e3},{title:"Shell命令",frontmatter:{description:"Shell是一个用C语言编写的程序，它是用户使用Linux的桥梁。文字操作系统与外部最主要的接口就叫做Shell。Shell是操作系统最外面的一层。\n>\n> Shell管理你与操作系统之间的交互：等待你输入，向操作系统解释你的输入，并且处理各种各样的操作系统的输出结果。",meta:[{name:"twitter:title",content:"Shell命令"},{name:"twitter:description",content:"Shell是一个用C语言编写的程序，它是用户使用Linux的桥梁。文字操作系统与外部最主要的接口就叫做Shell。Shell是操作系统最外面的一层。\n>\n> Shell管理你与操作系统之间的交互：等待你输入，向操作系统解释你的输入，并且处理各种各样的操作系统的输出结果。"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Shell/Shell%E5%91%BD%E4%BB%A4.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Shell命令"},{property:"og:description",content:"Shell是一个用C语言编写的程序，它是用户使用Linux的桥梁。文字操作系统与外部最主要的接口就叫做Shell。Shell是操作系统最外面的一层。\n>\n> Shell管理你与操作系统之间的交互：等待你输入，向操作系统解释你的输入，并且处理各种各样的操作系统的输出结果。"},{property:"og:url",content:"https://bajins.com/Shell/Shell%E5%91%BD%E4%BB%A4.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Shell命令"},{itemprop:"description",content:"Shell是一个用C语言编写的程序，它是用户使用Linux的桥梁。文字操作系统与外部最主要的接口就叫做Shell。Shell是操作系统最外面的一层。\n>\n> Shell管理你与操作系统之间的交互：等待你输入，向操作系统解释你的输入，并且处理各种各样的操作系统的输出结果。"}]},regularPath:"/Shell/Shell%E5%91%BD%E4%BB%A4.html",relativePath:"Shell/Shell命令.md",key:"v-0fc28bcc",path:"/Shell/Shell%E5%91%BD%E4%BB%A4.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"运行程序",slug:"运行程序"},{level:2,title:"查看邮箱",slug:"查看邮箱"},{level:2,title:"清除屏幕输出",slug:"清除屏幕输出"},{level:2,title:"过滤结果",slug:"过滤结果"},{level:3,title:"截取末尾字符串",slug:"截取末尾字符串"},{level:3,title:"过滤多个结果",slug:"过滤多个结果"},{level:2,title:"定时任务",slug:"定时任务"},{level:2,title:"进制转换",slug:"进制转换"},{level:2,title:"进程与线程",slug:"进程与线程"},{level:2,title:"延时",slug:"延时"},{level:2,title:"查找大文件",slug:"查找大文件"},{level:2,title:"列出目录",slug:"列出目录"},{level:2,title:"文件查找",slug:"文件查找"},{level:2,title:"批量替换文件内容",slug:"批量替换文件内容"},{level:2,title:"删除文件",slug:"删除文件"},{level:2,title:"列出文件",slug:"列出文件"},{level:2,title:"显示目录大小",slug:"显示目录大小"},{level:2,title:"查看当前路径",slug:"查看当前路径"},{level:2,title:"修改权限",slug:"修改权限"},{level:2,title:"切换目录",slug:"切换目录"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Shell命令 \n Flag 运行程序 查看邮箱 清除屏幕输出 过滤结果 截取末尾字符串 过滤多个结果 定时任务 进制转换 进程与线程 延时 查找大文件 列出目录 文件查找 批量替换文件内容 删除文件 列出文件 显示目录大小 查看当前路径 修改权限 切换目录 \n Flag \n \n Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。文字操作系统与外部最主要的接口就叫做 Shell 。 Shell 是操作系统最外面的一层。 \n Shell 管理你与操作系统之间的交互：等待你输入，向操作系统解释你的输入，并且处理各种各样的操作系统的输出结果。 \n \n \n https://github.com/awesome-lists/awesome-bash \n 命令行沙盒  https://github.com/binpash/try \n \n \n Linux常用命令汇总 \n Linux下Shell脚本字符串单引号、双引号、反引号、反斜杠的作用和区别 \n 运行程序 \n \n Linux下执行一个可执行的文件，不需要命令，直接写文件路径，会自动执行 \n 执行当前目录下的文件：./文件名 \n 直接用绝对路径：/hone/文件名 \n 查看邮箱 \n cat  /var/spool/mail/root\n 清除屏幕输出 \n \n clear 命令、 reset 命令（可修正光标位置）或 Ctrl  +  L 组合快捷键，并不是真正的清空屏幕，当用鼠标向上滚时，你仍然能看到之前的命令操作留下来的输出 \n \n \n printf "\\033c" 或 printf "\\ec" 真正的清空了终端屏幕，它的功能跟 DOS 里 CMD.EXE 提供的 CLS 效果很相似。\n \\033 == \\x1B == 27 == ESC ，于是，这个命令变成了 <ESC>c ，它是VT-XXX中表示 Full Reset (RIS) 的转义码。\n现今我们使用的所有的终端都是VT兼容的，但如果你发现自己使用的是一个非常奇怪的终端，那这个命令你可能用不了。 printf 是 bash 里内置的命令，内置命令的优先级比其它可执行文件要高。 \n 过滤结果 \n ls   -l   |   grep   test   |   awk   \'{print $5}\'   |   sed   -n   \'2p\' \n \n \n grep  文本过滤命令，包含test的文件 \n \n \n 由正则表达式或者字符及基本文本字符所编写的过滤条件 \n \n \n \n \n 参数 \n 说明 \n \n \n \n \n -a --text \n 不要忽略二进制数据。 \n \n \n -A <显示行数>   --after-context=<显示行数> \n 除了显示符合范本样式的那一行之外，并显示该行之后的内容。 \n \n \n -b --byte-offset \n 在显示符合范本样式的那一行之外，并显示该行之前的内容。 \n \n \n -B<显示行数>   --before-context=<显示行数> \n 除了显示符合样式的那一行之外，并显示该行之前的内容。 \n \n \n -c --count \n 计算符合范本样式的列数。 \n \n \n -C<显示行数> --context=<显示行数>或-<显示行数> \n 除了显示符合范本样式的那一列之外，并显示该列之前后的内容。 \n \n \n -d<进行动作> --directories=<动作> \n 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。 \n \n \n -e<范本样式> --regexp=<范本样式> \n 指定字符串作为查找文件内容的范本样式。 \n \n \n -E --extended-regexp \n 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。 \n \n \n -f<范本文件> --file=<规则文件> \n 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。 \n \n \n -F --fixed-regexp \n 将范本样式视为固定字符串的列表。 \n \n \n -G --basic-regexp \n 将范本样式视为普通的表示法来使用。 \n \n \n -h --no-filename \n 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。 \n \n \n -H --with-filename \n 在显示符合范本样式的那一列之前，标示该列的文件名称。 \n \n \n -i --ignore-case \n 忽略字符大小写的差别。 \n \n \n -l --file-with-matches \n 列出文件内容符合指定的范本样式的文件名称。 \n \n \n -L --files-without-match \n 列出文件内容不符合指定的范本样式的文件名称。 \n \n \n -n --line-number \n 在显示符合范本样式的那一列之前，标示出该列的编号。 \n \n \n -P --perl-regexp \n PATTERN 是一个 Perl 正则表达式 \n \n \n -q --quiet或--silent \n 不显示任何信息。 \n \n \n -R/-r  --recursive \n 此参数的效果和指定“-d recurse”参数相同。 \n \n \n -s --no-messages \n 不显示错误信息。 \n \n \n -v --revert-match \n 反转查找。 \n \n \n -V --version \n 显示版本信息。 \n \n \n -w --word-regexp \n 只显示全字符合的列。 \n \n \n -x --line-regexp \n 只显示全列符合的列。 \n \n \n -y \n 此参数效果跟“-i”相同。 \n \n \n -o \n 只输出文件中匹配到的部分。 \n \n \n -m 数量 --max-count=数量 \n 找到num行结果后停止查找，用来限制匹配行数 \n \n \n \n \n https://github.com/adrianscheff/useful-sed \n shell＞sed (对文件的内容进行替换） \n \n \n awk  文本处理命令， print 后面是你要获取第几列 \n sed  行编辑器， -n 是指定第几行。\n \n p  显示 \n d  删除 \n a  添加 \n c  替换 \n w  写入 \n i  插入 \n \n \n cut 命令用于显示每行从开头算起num1到num2的文字\n \n -b  ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。 \n -c  ：以字符为单位进行分割。 \n -d  ：自定义分隔符，默认为制表符。 \n -f  ：与-d一起使用，指定显示哪个区域。 \n -n  ：取消分割多字节字符。仅和 -b 标志一起使用。 \n 如果字符的最后一个字节落在由 -b 标志的List参数指示的范围之内，该字符将被写出；否则，该字符将被排除 \n \n \n \n ll  |   cut  -c1-10\n 截取末尾字符串 \n echo   "1:3:5"   |   awk   -F   ":"   \'{print $NF}\' \n echo   "1:3:5"   |   sed   \'s/.*:\\([^:]*\\)$/\\1/\' \n echo   "1:3:5"   |   cut   -d   :   -f   3 \n 过滤多个结果 \n \n www.gnu.org/software/grep \ngrep -A n 可以显示匹配内容以及后面的n行内容 \ngrep -B n 可以显示匹配内容以及前面的n行内容 \ngrep -C n 可以显示匹配内容以及前后面的n行内容 \n ls   -l   |   grep   "postfix\\|dovecot" \n或者 \n ls   -l   |   grep   -e  postfix  -e  dovecot\n或者 \n ls   -l   |   grep   -E   "postfix|dovecot" \n或者 \n ls   -l   |   egrep   "postfix|dovecot" \n或者 \n ls   -l   |   awk   "/postfix|dovecot/" \n 定时任务 \n \n https://github.com/search?q=cron \n \n https://github.com/topics/crontab \n 定时任务  https://github.com/ouqiang/gocron \n https://github.com/jasonlvhit/gocron \n https://github.com/alseambusher/crontab-ui \n https://github.com/whyour/qinglong \n \n \n \n \n crontab 命令常用于Unix和类Unix的操作系统之中，用于设置周期性被执行的指令 \n编辑crontab文件 \n crontab   -e \n \n \n 在linux中执行shell脚本可以用相对路径找到文件,但是如果通过计划任务 crontab 执行shell脚本时，却不能通过相对路径找到文件! \n 进制转换 \n转换为16进制,大写转换为小写。 \n echo   "obase=16; 值"   |   bc \n转换为16进制，\\n换行 \n printf   "%x \\n "  值\n 进程与线程 \n 查看进程启动路径 \n ps   -aux   |   grep  nginx\n每个进程启动之后在 /proc下面有一个于pid对应的路径 \n ls   -l  /proc/PID\n\n ps   -A   |   grep   "nginx"   |   awk   \'{print "/proc/"$1"/exe"}\'   |   xargs   ls   -l \n \n 查看系统进程和线程限制 \n \n 查看系统允许的最大线程数 \n \n ulimit   -a   |   grep  processes\n ulimit   -u \n \n \n 系统支持的最大线程数 \n \n \n 操作系统线程ID的最大值 \n \n cat  /proc/sys/kernel/pid_max\n \n \n 内核支持的最大线程数 \n \n sysctl  kernel.pid_max\n \n \n 修改值（临时）： sysctl -w kernel.pid_max=值 \n \n \n 修改值（永久）： echo \'kernel.pid_max=值\' >>/etc/sysctl.conf \n \n \n 单个进程可创建的线程数 \n \n cat  /proc/sys/vm/max_map_count\n \n 查看进程的信息 \n cat  /proc/进程PID/status\n \n 批量杀掉筛选进程 \n \n ps -ef | grep 名称 | grep -v grep | awk \'{print $2}\' | xargs kill -9 \n ps -ef | grep 名称 | grep -v grep | cut -c 9-15 | xargs kill -9 \n \n \n Linux下批量杀掉筛选进程 \n \n 查看线程树 \n \n 如果不跟进程PID就查看系统中所有的进行线程树 \n \n pstree  -p  进程PID\n \n 查看进程中的线程 \n \n top -p 进程PID  再按 Shift+h （也就是大写 H ） \n \n \n 或者直接输入 top -bH -d 3 -p 进程PID \n \n \n top -H  加上 -H 这个选项启动 top ，一行显示一个线程。否则，它一行显示一个进程。 \n \n top   -H   -p  进程PID\n top   -Hp  进程PID\n \n 查看线程列表 \n \n 查看所有存在的线程 \n \n ps  xH\n \n 查看线程数量 \n pstree  -p   |   wc   -l \n\npstree  -p  进程PID  |   wc   -l \n\n ps   -hH   -p  进程PID  |   wc   -l \n\n ps   -mp  进程PID  -o  THREAD,tid,time  |   wc   -l \n\n ls  /proc/进程PID/task  |   wc   -l \n \n 查看进程下的线程状态 \n ps   -mp  进程PID  -o  THREAD,tid,time  |   sort   -rn \n 延时 \n \n sleep  默认以秒为单位 \n \n \n sleep 1  睡眠1秒 \n sleep 1s  表示延迟一秒 \n sleep 1m  表示延迟一分钟 \n sleep 1h  表示延迟一小时 \n sleep 1d  表示延迟一天 \n \n \n usleep  默认以微秒为单位 \n \n \n 1s = 1000ms = 1000000us \n 查找大文件 \n查找从根目录下查找大于100M的文件，并显示文件的具体大小再进行排序 \n find  /  -type  f  -size  +100M  -print0   |   xargs   -0   du   -h   |   sort   -nr \n查找从根目录下查找大于1G的文件，并显示文件的具体大小再进行排序 \n find  /  -type  f  -size  +1G  -print0   |   xargs   -0   du   -h   |   sort   -nr \n有时候排列的顺序并不完全是按大小一致，这个是因为du命令的参数h所致，可以使用MB来显示 \n find  /  -type  f  -size  +100M  -print0   |   xargs   -0   du   -hm   |   sort   -nr \n查找从根目录下查找大于100M的文件，并显示文件的属性信息 \n find  /  -type  f  -size  +100M  -print0   |   xargs   -0   ls   -l \n查看子文件夹大小 -x 跳过其他文件系统 \n du   -h   -x  --max-depth = 1 \n查看当前文件夹下的文件夹占用大小并排序 \n du   -h  --max-depth = 2   |   sort   -n \n有时候排列的顺序并不完全是按大小一致，这个是因为du命令的参数h所致，可以使用MB来显示 \n du   -hm  --max-depth = 2   |   sort   -n \n找出当前文件夹下最大的12个文件夹 \n du   -hm  --max-depth = 2   |   sort   -nr   |   head   -12 \n查看home文件夹下的所有文件夹占用大小并排序 \n du   -hm  --max-depth = 2  /home/  |   sort   -nr \n查找目录 \n find  /  -name   \'path\'   -type  d\n查找内容 \n find   .   |   xargs   grep   -ri   \'content\' \n查找内容只显示文件名称 \n find   .   |   xargs   grep   -ril   \'content\' \n查找文件并去除./ \n find   -maxdepth   1   -printf   \'%P\\n\' \n find   -maxdepth   1   |   cut  -c3-\n 列出目录 \n ls   -l   |   grep   "^d"   |   awk   \'{print $9}\' \n ls   -F   |   grep   "/$" \n ls   |   sed   "s:^: ` pwd ` /: " \n ls   -1   |   awk   \'{print i$0}\'   i = ` pwd ` \'/\' \n ls   -d  */\n ls   -ad  */\n 文件查找 \n \n find 用于查找文件 \n \n \n grep 用于查找文件内容的行\n \n -r 递归查找 \n -l 列出匹配的文件名 \n -n 列出所在的行号 \n --include="*.text" 只查找后缀名是 .text 的文件 \n --exclude="*.sql" 查找除了后缀名是 .sql 的文件 \n \n \n \n \n xargs 命令是给其他命令传递参数的一个过滤器，也是组合多个命令的一个工具，它擅成长将标准输入数据转换成命令行参数。 \n \n \n 使用 find 命令的 -exec 选项处理匹配到的文件时， find 命令将所有匹配到的文件一起传递给 exec 。\n不幸的是，有些系统对能够传递给 exec 的命令长度有限制，这样 find 命令运行几分钟之后就算出现溢出错误。 \n \n 错误信息通常是"参数列太长"或"参数列溢出"。 \n \n 这就是 xargs 的用处所在，特别是与 find 命令一起使用, exec 会发起多个进程，而 xargs 只有一个 \n \n \n 查看某个文件，注意权限问题 \n \n find   -name   test \n查找并排除多个文件 \n find  ./  -not   \\ (   -name   "*.jpg"   -o   -name   "*.png"   \\ ) \n find  ./  -not   -name   "*.jpg"   -o   -name   "*.png" \n find  ./  -not   \\ (   -name   "*.jpg"   -or   -name   "*.png"   \\ ) \n find  ./  -not   -name   "*.jpg"   -or   -name   "*.png" \n查看录前目录下文件名中含有字符串的文件，`*`为通配符，可以按需要使用 \n find   -name   \'*XXX*\' \n在当前目录下查看所有目录并排序 \n find   -type  d  |   sort \n查找指定时间内的文件 \n find  文件路径  -type  f  -newermt   \'起始时间\'   -a   -not   -newermt   \'结束时间\' \n查找当前目录下文件内容匹配的字符串，输出：`全路径文件名:字符串所在行内容` \n find   .   -type  f  |   xargs   grep   "XXX" \n find   .   |   xargs   grep   -ri   "XXX" \n查找当前目录下文件内容匹配的字符串，输出：`字符串所在行内容` \n find  /XXX/XXX  -type  f  -exec   grep   "XXX"   { }   \\ ; \n查找当前目录下文件内容匹配的字符串，输出：`文件名` \n find   .   |   xargs   grep   -ril   "XXX" \n在指定文件中（一个或多个）查找并出含字符串的行 \n grep   \'XXX\'  text1.txt text2.txt\n在以t开头的文件中查找并出含字符串的行 \n grep   \'XXX\'  t*\n 批量替换文件内容 \n find   -name   \'要查找的文件名\'   |   xargs  perl  -pi   -e   \'s|被替换的字符串|替换后的字符串|g\' \n \n \n sed 命令可以批量替换多个文件中的字符串 \n \n \n 注意命令中的反撇号，而不是单引号 \n 反撇号：功能是将命令的输出结果给变量；在这里的作用是将输出查找到的文件名给 sed 用于字符串替换。 \n \n sed   -i   "s/原字符串/新字符串/g"   ` grep  原字符串  -rl  所在目录 ` \n grep   "原字符串"   -rl  所在目录  |   xargs   sed   -i   "s/原字符串/新字符串/g" \n grep   -rl   "原字符串"  ./*  |   xargs   sed   -i  s/ "原字符串" / "新字符串" /g\n \n \n 一次性将所有文件中的指定字符串进行修改 \n \n grep   "原字符串"  *  -R   |   awk  -F:  \'{print $1}\'   |   sort   |   uniq   |   xargs   sed   -i   \'s/原字符串/新字符串/g\' \n \n \n 统计匹配指定字符串的所有sql文件的数量 \n \n grep   -rl   "XXX"   --exclude = "*.sql"  ./*  |   wc   -l \n \n 批量清空文件内容 \n%为变量名 \n find  logs/  -type  f  -name   "*.log"   |   xargs   -I  %  sh   -c   \'cat /dev/null > %\' \n find  logs/  -type  f  -name   "*.log"   |   xargs   -I  %  sh   -c   \'> %\' \n find  logs/  -type  f  -name   "*.log"   -exec   sh   -c   "> {}"   \\ ; \n 删除文件 \n 删除排除的其他文件 \n find  *  |   grep   -v   \'\\(*.jpg\\|*.png)\'   |   xargs   rm \n find   .   -maxdepth   1   !   -name   \'dist\'   -type  f  -exec   rm   -v   { }  +\n #报错：`-bash: !: event not found` 需要开启通配符功能 \n shopt   -s  extglob  &&   rm   -rf   ! ( *.jpg | *.png )   &&   shopt   -u  extglob\nrm删除除去指定文件的剩余所有文件 (rm 反向删除） \n rm   -rf   ` ls   |   grep   -v   "^ab.txt$" ` \n rm   -rf   ` ls   |   egrep   -v   \'(config.js|dist)\' ` \n递归当前目录 \n rm   -f   ` find  *  -name   "*"   |   egrep   -v   \'(*.jpg|*.png)\' ` \n \n 删除指定时间前的文件 \n统计目录下N天前的文件数量 \n find  目录  -type  f  -mtime  +天数  |   wc   -l \n列出目录下N天前的文件 \n find  目录  -type  f  -mtime  +天数  -exec   ls   -l   { }   \\ ; \n删除目录下N天前的文件 \n find  目录  -type  f  -mtime  +天数  -exec   rm   -rf   { }   \\ ; \n删除目录下N天前的文件 \n find  目录  -type  f  -mtime  +天数  |   xargs   -I   { }   rm   -rf   { } \n删除目录下N天前文件名包含tar的文件或目录 \n find  目录  -mtime  +天数  -name   "*.tar.*"   -exec   rm   -rf   { }   \\ ; \n删除目录下N天前文件名为tar.gz后缀的文件或目录 \n find  目录  -mtime  +天数  -name   "*.tar.gz"   |   xargs   -I   { }   rm   -rf   { } \n删除当前目录下所有文件 \n ls   |   xargs   -I  %  sh   -c   \'rm ./%\' \n \n 删除指定大小的文件 \n \n -lt 50  删除小于50KB的文件 \n -gt 50  删除大于50KB的文件 \n \n for   file   in   ` ls  ./ ` ;   do   size = ` du  $file  |   awk   \'{print \\$1}\' ` ;   [   $size   -lt   50   ]   &&   rm   $file ;   done \n \n \n -size 1k  删除1KB占用空间的文件 \n -size +100k  删除大于100KB占用空间的文件 \n -size -1k  删除小于1KB占用空间的文件 \n \n \n -size 1024c  删除1k大小的文件 \n -size +1024c  删除大于1k大小的文件 \n -size -1024c  删除小于1k大小的文件 \n \n find  目录  -type  f  -size  大小  -exec   rm   -rf   { }   \\ ; \n find  目录  -type  f  -size  大小  |   xargs   -n   1   rm   -rf \n 列出文件 \n查看所有文件（包括隐藏文件）并以最大容量单位显示 \nll  -a   -h  文件名\n 显示目录大小 \n du   -sh \n 查看当前路径 \n pwd \n 修改权限 \n \n 一次性更改权限就使用-R,文件修改为所有用户可读可写可执行，也就是对应编号为777 \n \n chmod   -R   777  文件名\n \n \n 使用命令chown改变目录或文件的所有权,更改所有者和所属组chown(change owner缩写） \n \n chown:用户名 文件名\n 切换目录 \n \n 进入当前用户的主目录 \n \n cd  ~\n cd  \n \n \n 进入上次所在目录 \n \n cd  -\n \n \n 进入上一级目录 \n \n cd   .. \n \n \n 进入当前目录 \n \n cd   . \n \n ',createdTime:1761814324e3},{title:"ShellWindows",frontmatter:{description:"https://github.com/topics/cygwin\nhttp://www.cygwin.com\n    Cygwin | silaoA的博客\nhttps://sourceware.org",meta:[{name:"image",content:"https://bajins.com/images/MinGW-w64下载页说明.png"},{name:"twitter:title",content:"ShellWindows"},{name:"twitter:description",content:"https://github.com/topics/cygwin\nhttp://www.cygwin.com\n    Cygwin | silaoA的博客\nhttps://sourceware.org"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/MinGW-w64下载页说明.png"},{name:"twitter:url",content:"https://bajins.com/Shell/ShellWindows.html"},{property:"og:type",content:"article"},{property:"og:title",content:"ShellWindows"},{property:"og:description",content:"https://github.com/topics/cygwin\nhttp://www.cygwin.com\n    Cygwin | silaoA的博客\nhttps://sourceware.org"},{property:"og:image",content:"https://bajins.com/images/MinGW-w64下载页说明.png"},{property:"og:url",content:"https://bajins.com/Shell/ShellWindows.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"ShellWindows"},{itemprop:"description",content:"https://github.com/topics/cygwin\nhttp://www.cygwin.com\n    Cygwin | silaoA的博客\nhttps://sourceware.org"},{itemprop:"image",content:"https://bajins.com/images/MinGW-w64下载页说明.png"}]},regularPath:"/Shell/ShellWindows.html",relativePath:"Shell/ShellWindows.md",key:"v-0a0d6535",path:"/Shell/ShellWindows.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"第三方工具",slug:"第三方工具"},{level:2,title:"WSL",slug:"wsl"},{level:2,title:"MinGW-w64",slug:"mingw-w64"},{level:3,title:"MinGW-w64下载",slug:"mingw-w64下载"},{level:3,title:"MinGW-w64安装",slug:"mingw-w64安装"},{level:2,title:"MSYS2",slug:"msys2"},{level:3,title:"MSYS2命令",slug:"msys2命令"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' ShellWindows \n Flag 第三方工具 WSL MinGW-w64 MinGW-w64下载 MinGW-w64安装 MSYS2 MSYS2命令 \n Flag \n \n https://github.com/topics/cygwin \n http://www.cygwin.com \n \n Cygwin | silaoA的博客 \n \n \n https://sourceware.org \n \n \n 多个shell软件包镜像  https://github.com/mirror \n https://github.com/svn2github \n https://winlibs.com \n 沙箱  https://github.com/sandboxie-plus \n 第三方工具 \n \n 扫描任何32位或64位Windows模块（exe，dll，ocx，sys等）的函数  http://www.dependencywalker.com \n DLL导出查看器  http://www.nirsoft.net/utils/dll_export_viewer.html \n RegDllView-查看系统上已注册的dll/ocx/exe文件，从资源管理器注册dll文件：\n \n http://www.nirsoft.net/utils/registered_dll_view.html \n \n \n Windows 10的system32目录中的所有DLL文件信息  http://windows10dll.nirsoft.net \n 下载– NTCore  https://ntcore.com/?page_id=345 \n 小型命令行实用程序  http://www.ltr-data.se/opencode.html/#CmdUtils \n 网络请求工具  https://eternallybored.org/misc/wget \n 窗口控制  https://github.com/ritchielawrence/cmdow \n 日志分析工具Log Parser \n \n 日志分析-LogParser使用方法 \n WSL \n \n https://github.com/topics/wsl \n https://github.com/topics/windows-subsystem \n https://github.com/topics/windows-subsystem-linux \n https://github.com/topics/windows-subsystem-for-linux \n https://github.com/sirredbeard/Awesome-WSL \n \n \n https://github.com/microsoft/WSL \n \n https://github.com/microsoft/wslg \n https://github.com/microsoft/WSL-DistroLauncher \n https://github.com/microsoft/WSL2-Linux-Kernel \n https://docs.microsoft.com/zh-cn/windows/wsl \n \n 手动下载适用于 Linux 的 Windows 子系统发行版包 \n \n \n \n \n 性能评测  https://github.com/microsoft/Microsoft-Performance-Tools-Linux-Android \n WSA Tool  https://github.com/weareblahs/WSAUtilities \n https://github.com/alesimula/wsa_pacman \n https://github.com/voletro/wsa-toolbox \n https://github.com/yuk7/ArchWSL \n \n https://wsldl-pg.github.io/ArchW-docs/locale/zh-CN \n \n \n https://github.com/agowa338/WSL-DistroLauncher-Alpine \n https://github.com/topics/wsl-debian \n \n wsl2+Debian11+切换安装目录+换源基本设置 \n https://www.debian.org/mirror/list \n \n \n 关于使用WSL2出现“参考的对象类型不支持尝试的操作”的解决方法 \n \n https://github.com/microsoft/WSL/issues/4177 \n \n \n https://github.com/shayne/go-wsl2-host \n https://github.com/microsoft/WSL/issues/4210#issuecomment-648570493 \n https://github.com/MustardChef/WSABuilds \n https://github.com/LSPosed/MagiskOnWSALocal \n \n \n https://docs.microsoft.com/zh-cn/virtualization \n https://docs.microsoft.com/zh-cn/windows-server/virtualization \n https://github.com/nullpo-head/WSL-Hello-sudo \n \n \n https://github.com/microsoft/WSA-Linux-Kernel \n https://github.com/WSA-Community/WSAGAScript \n https://github.com/opengapps/opengapps \n \n https://sourceforge.net/projects/opengapps \n \n \n \n wsl --update 执行错误问题 \n \n C:\\Windows\\SoftwareDistribution\\Download  下载的 wsl_update_x64.msi 文件缓存路径 \n \n \n https://github.com/microsoft/WSL/issues/5014 \n https://github.com/microsoft/WSL/issues/5035 \n https://github.com/microsoft/WSL/issues/5642 \n https://www.catalog.update.microsoft.com/Search.aspx?q=wsl \n Windows Subsystem for Linux Update错误0x80070643的真正解决方法 \n \n \n 自动内核更新，请启用 Windows 更新设置:  设置  ->  更新和安全  ->  高级选项  ->  在更新 Windows 时接收其他 Microsoft 产品的更新 \n \n \n netsh winsock reset 解决 Error code: Wsl/Service/0x800706f7 错误 \n \n 设置默认root用户登录 \n ubuntu2004.exe config --default-user root\n \n 修改为root登录 \n 安装SSH远程连接 \n \n WSL 子系统自带的ssh服务无法连接，需卸载后重新安装 \n \n sudo   apt  purge  -y  openssh-server\n sudo   apt  remove  -y  openssh-server\n sudo   apt   install   -y  openssh-server\n \n \n xshell连接wsl \n \n 设置开机自启 \n vim  /etc/init.wsl\n #添加service ssh start设置ssh服务开机自启 \n MinGW-w64 \n \n MinGW 的全称是： Minimalist GNU on Windows  。它实际上是将经典的开源 C 语言编译器 GCC 移植到了 Windows 平台下，\n并且包含了 Win32API ，因此可以将源代码编译为可在 Windows 中运行的可执行程序。\n而且还可以使用一些 Windows 不具备的， Linux 平台下的开发工具。一句话来概括： MinGW 就是 GCC 的 Windows 版本 。 \n \n \n MinGW-w64 与 MinGW 的区别在于 MinGW 只能编译生成 32位 可执行程序，而 MinGW-w64 则可以编译生成 64位 或 32位 可执行程序。\n正因为如此， MinGW 现已被 MinGW-w64 所取代，且 MinGW 也早已停止了更新。 \n \n \n MinGW-w64 使用 Windows 的 C 语言运行库，因此编译出的程序不需要第三方 DLL ，可以直接在 Windows 下运行。 \n \n \n 那些著名的开源 IDE 实际只是将 MinGW-w64 封装了起来，使它拥有友好的图形化界面，简化了操作，但内部核心仍然是 MinGW-w64 。 \n \n \n https://zhuanlan.zhihu.com/p/57774611 \n \n \n MinGW 一个自由开源的最小开发工具集： mingw-gcc 编译工具链、 mingw 软件包管理器（ mingw-get ），用于开发 Windows 原生程序。\n第一版的 mingw-gcc 是利用早期的 Cygwin 套件编译而成，这个过程和 Cygwin 系列（二）：初窥 Cygwin 背后中 Cygwin DLL 构建类似，\n随后 mingw-binutils 、 mingw-make 等其他工具链也都逐渐移植成功， MinGW 逐渐完全脱离了 Cygwin 。 \n \n \n 2005 年， MinGW-w64 项目基于 MinGW 创建，改善了 MinGW 的相关缺陷，并既支持 32位 程序又支持 64位 程序。\n MinGW-w64 项目开发活跃，被很多 Linux 发行版采用为交叉工具链，而 MinGW 事实上已被抛弃。 \n \n \n 可以把 MinGW 视为 MS Visual C++/Studio 的开源替代品 \n \n \n https://github.com/topics/mingw \n https://github.com/topics/mingw-w64 \n https://github.com/topics/msvc \n \n \n https://osdn.net/projects/mingw \n http://mingw-w64.org \n \n https://github.com/mirror/mingw-w64 \n \n \n 包管理  https://packages.msys2.org \n https://gstreamer.freedesktop.org/data/pkg/windows \n MinGW-w64下载 \n \n https://sourceforge.net/projects/mingw-w64 \n \n mingw-w64-release \n \n \n https://github.com/HyperSine/mingw-w64-build \n \n \n 首先看到的是源码，要把页面滚动到最底部才能看到编译好的在线安装程序和离线压缩包 \n \n \n 推荐离线安装，在线安装其实也是下载压缩包，而且众所周知的原因，国内通过在线安装非常缓慢 \n \n \n 环境说明 \n \n X86和X86_64和AMD64的由来 \n \n \n 系统架构\n \n x86_64 为 64位 操作系统 \n i686 为 32位 操作系统 \n \n \n 操作系统接口协议（为哪种操作系统开发程序）\n \n posix 为 Linux 、 Unix 、 Mac OS 等其他操作系统 \n win32 为 Windows 操作系统 \n \n \n 异常处理模型（64位）\n \n seh 是新发明的，性能比较好，但不支持 32位 操作系统 \n sjlj 是古老的，稳定性好，支持 32位 操作系统 \n \n \n 异常处理模型（32位）\n \n dwarf 性能要优于 sjlj ，不支持 64位 操作系统 \n sjlj 稳定性好，支持 32位 操作系统 \n MinGW-w64安装 \n \n 如操作系统是 Windows10-X64 并为 posix 接口协议开发程序，则选择： x86_64-posix-seh \n 下载后把压缩包解压到指定盘符下，再添加到系统环境变量 path \n \n \n 如解压目录 C:\\Program Files\\mingw64 ，则在CMD执行 \n \n setx   /m  Path  "%PATH%;C:\\Program Files\\mingw64\\bin" \n\n :: 查看添加变量是否成功 \n echo   %PATH% \n set  PATH \n \n 查看版本 \n gcc   -v   & &   g ++  -v \n MSYS2 \n \n MSYS 是用于辅助 Windows 版 MinGW 进行命令行开发的配套软件包，提供了部分 Unix 工具以使得 MinGW 的工具使用起来方便一些。\n如果不喜欢庞大的 Cygwin ，而且使用不多，可以试试。不过喜欢完整体验、不在乎磁盘占用等等，还是推荐 Cygwin 而不是 MSYS 。 \n \n \n MSYS 和 MinGW 两者有较大的独立性。 MSYS 是 Minimal SYStem 的缩写，是一个基于 Bourne Shell 的命令行系统，\n用于替代 Windows 中的 cmd.exe ，提供一个像 Linux/UNIX 的命令行环境。 \n \n \n MSYS 是基于 Cygwin 早期版本（ v1.3 ）发展而来，包含了少部分 Linux/UNIX 程序，没有编译工具链，\n而且与 Linux/UNIX 原生程序或 Cygwin 程序相较丢失了很多功能特性，运行依赖于 POSIX 兼容层（ msys-1.0.dll ）。 \n \n \n 如果没有 MSYS ，在 cmd 中也可以正常运行 MinGW 程序，但 MinGW 和 MSYS 配合起来，\n就组成了一个类似 Linux/UNIX 的、包含常用程序和完整开发工具的轻量但完备的系统环境，\n MinGW 的安装路径可以挂载到 MSYS 目录树中任何位置。 \n \n \n MSYS 项目仅支持 32位 程序，项目本身也发展缓慢。 MSYS2 基于最新版的 Cygwin 而创建，完全独立于 MSYS 而重写的版本\n，并既支持 32位 程序又支持 64位 程序， POSIX 兼容层为 msys-2.0.dll 。\n MSYS2 由 msys2 、 mingw32 、 mingw64 三个子系统组成， mingw32 、 mingw64 对应于 mingw-w64 的 32位 和 64位 版本。\n还有一个特色就是， MSYS2 移植了 Arch Linux 中的包管理器 pacman \n \n \n MSYS2 不完全是基于 MinGW 的，至少其原生工具都是链接到自带的一套特定版本的 Cygwin DLL 的。\n基本上只是用 libalpm 管理 MSYS2 、 MinGW-w64 和 MinGW 三个不同子系统的软件包 \n \n \n https://github.com/topics/msys2 \n \n \n https://github.com/msys2 \n \n http://www.msys2.org \n \n \n msys2配置记录 \n 清华大学MSYS2镜像 \n 中国科学技术大学MSYS2镜像 \n MSYS2命令 \n \n pacman -S <packge-name>  安装软件\n \n pacman -S mingw-w64-x86_64-make mingw-w64-x86_64-gcc \n \n \n pacman -U <gz-file>  安装本地包，其扩展名为 pkg.tar.gz \n pacman -Syu  同步 Msys2 源，并更新 \n pacman -Sy  仅同步源 \n pacman -Su  更新系统 \n pacman -Sy <packge-name>  同步源后再安装软件 \n pacman -R <packge-name>  该命令将只删除包，不包含该包的依赖。 \n pacman -Rs <packge-name>  在删除包的同时，也将删除其依赖。 \n pacman -Rd <packge-name>  在删除包时不检查依赖。 \n pacman -Ss <keywords>  这将搜索含关键字的包。 \n pacman -Qi <packge-name>  查看有关包的信息。 \n \n',createdTime:1761814324e3},{title:"WindowsJScript",frontmatter:{description:"https://www.wanweibaike.com/wiki-JScript",meta:[{name:"twitter:title",content:"WindowsJScript"},{name:"twitter:description",content:"https://www.wanweibaike.com/wiki-JScript"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Shell/WindowsJScript.html"},{property:"og:type",content:"article"},{property:"og:title",content:"WindowsJScript"},{property:"og:description",content:"https://www.wanweibaike.com/wiki-JScript"},{property:"og:url",content:"https://bajins.com/Shell/WindowsJScript.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"WindowsJScript"},{itemprop:"description",content:"https://www.wanweibaike.com/wiki-JScript"}]},regularPath:"/Shell/WindowsJScript.html",relativePath:"Shell/WindowsJScript.md",key:"v-3373a337",path:"/Shell/WindowsJScript.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"BAT和JS混合编程",slug:"bat和js混合编程"},{level:3,title:"参数传递",slug:"参数传递"},{level:2,title:"ActiveXObject",slug:"activexobject"},{level:2,title:"js函数封装",slug:"js函数封装"},{level:3,title:"HTTP请求",slug:"http请求"},{level:3,title:"解析XML",slug:"解析xml"},{level:3,title:"解析HTML",slug:"解析html"},{level:3,title:"图片格式转换",slug:"图片格式转换"},{level:3,title:"设置壁纸",slug:"设置壁纸"},{level:3,title:"刷新桌面",slug:"刷新桌面"},{level:3,title:"获取系统信息",slug:"获取系统信息"},{level:3,title:"解压zip",slug:"解压zip"},{level:3,title:"下载7z",slug:"下载7z"},{level:3,title:"数据库",slug:"数据库"},{level:3,title:"开机启动",slug:"开机启动"},{level:3,title:"获取所有COM组件",slug:"获取所有com组件"},{level:3,title:"创建任务计划",slug:"创建任务计划"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' WindowsJScript \n Flag BAT和JS混合编程 参数传递 ActiveXObject js函数封装 HTTP请求 解析XML 解析HTML 图片格式转换 设置壁纸 刷新桌面 获取系统信息 解压zip 下载7z 数据库 开机启动 获取所有COM组件 创建任务计划 \n Flag \n \n https://www.wanweibaike.com/wiki-JScript \n \n \n JScript 实现的 ECMAScript Edition 3 ，也是 IE8 使用的引擎。然而，随着 V8 大放光彩，\n微软放弃了之前规划的托管 JavaScript 计划（同期规划的 VB 变身为 VB.NET 活了下来），\n JScript 开发组另起炉灶搞了 Chakra 与 Node.js 一争长短，这也是 IE9 之后使用的 JS 引擎。 \n \n \n 在 JScript 中，永远不需要去实例化根对象 WScript ，正如同浏览器中的直接全局对象一样。 \n \n \n JScript (ECMAScript3) \n JScript参考手册 \n JScript \n http://caibaojian.com/jscript \n BAT和JS混合编程 \n \n BAT 执行 JScript 原理  js/bat脚本混编新方案 \n \n \n 缺陷：修改了一个变量的值 \n \n @ set  @a= 1 /* \n @ echo  off \n start  wscript  -e :jscript   "%~f0" \n pause \n goto   :EOF \n*/\n\n// ****************************  JavaScript  *******************************\n\n \n \n 缺陷：会清屏 \n \n echo = 1 /*>nul & @ cls \n @ echo  off \n start  wscript  -e :jscript   "%~f0" \n pause \n goto   :EOF \n*/\n\n// ****************************  JavaScript  *******************************\n\n \n \n 缺陷：暂时没有 \n \n @ if  ( 1 == 1 )   @ end/*\n @ echo  off \n echo  Hello World! \n start  wscript  -e :jscript   "%~f0" \n pause \n goto   :EOF \n*/\n\n// ****************************  JavaScript  *******************************\n\n \n \n 缺陷：暂时没有 \n \n @ if  ( 0 ) == ( 0 )  echo off\n cscript  -nologo  -e :jscript   %~s0 \n goto   :EOF \n @ end \n\n// ****************************  JavaScript  *******************************\n\n \n \n 缺陷：暂时没有 \n \n \n 1>1  的运行结果是个  Boolean  值，而 js 允许这种无意义的语句（其实对 eval 来说是有意义的） \n \n 1 > 1 /* : \n @ echo  off \n cscript  -nologo  -e :jscript   %0 \n pause & exit \n*/\n\n// ****************************  JavaScript  *******************************\n\n \n \n 缺陷：需要包裹html标签 \n \n \x3c!-- :\n @ echo  off \n ::for /f "delims=" %%a in (\'mshta "%~f0"\') do echo;%%a \n for   /f   "delims="   %%a   in   ( \' mshta  "%~f0" \' )   do   (   set   filePath = %%a ) \n echo   %filePath% \n pause & exit   /b \n--\x3e\n\n<input type=file id=f>\n<script>\n\n f .click( ) ;\n\n alert (f.value ) ;\n\n var  sfo = new ActiveXObject(\'Scripting.FileSystemObject\' ) ;\n// 获取TextStream对象.参数：0输入流,1输出流,2错误流.\n sfo .GetStandardStream( 1 ) .Write ( f .value ) ;\n\n var  Shell = new ActiveXObject( "Shell.Application" ) ;\n// 起始目录为：桌面\n var  Folder = Shell.BrowseForFolder( 0 ,  "请选择文件夹" ,  0 ) ;\n if  (Folder != null )  {\n     Folder  = Folder.items( ) ;\n     Folder  = Folder.item( ) ;\n     Folder  = Folder.Path; \n     sfo .GetStandardStream( 1 ) .Write ( Folder ) ;\n}\n close ( ) ;\n\n<\/script>\n 参数传递 \n \n 执行当前脚本中的JavaScript脚本： cscript -nologo -e:jscript "%~f0" ， %~f0 表示当前批处理的绝对路径,去掉引号的完整路径 \n \n 1 > 1 /* :: \n ::  by bajins https://www.bajins.com \n\n @ echo  off \n\n :: 开启延迟环境变量扩展 \n :: 解决for或if中操作变量时提示ECHO OFF问题，用!!取变量 \n :: 解决调用jscript提示命令错误问题 \n setlocal  enabledelayedexpansion \n\n :: %~f0 表示当前批处理的绝对路径,去掉引号的完整路径，后面的是参数（组成方式：/key:value） \n cscript  -nologo  -e :jscript   "%~f0"   /func : download  /url : %~1   /path : %~2 \n\n :: 无键，直接传入值 \n cscript  -nologo  -e :jscript   "%~f0"  download  %~1   %~2   %~3   %~4   %~5   %~6   %~7   %~8   %~9 \n goto   :EXIT \n\n :EXIT \n :: 结束延迟环境变量扩展和命令执行 \n endlocal & exit   /b   %errorlevel% \n*/\n\n// ****************************  JavaScript  *******************************\n\n var  Argv = WScript.Arguments; \n for  (i =  0 ; i < Argv.Length; i++ )  {\n     WScript .Echo( "参数："  + Argv(i ) ) ;\n}\n\n// 传参时指定键值，组成方式：/key:value\n var  ArgvName = Argv.Named; \n var  func = ArgvName.Item( "func" ) ;\n var  path = ArgvName.Item( "path" ) ;\n\n// 无键，直接传入值\n var  func = Argv( 0 ) ;\n var  url = Argv( 1 ) ;\n var  path = Argv( 2 ) ;\n ActiveXObject \n \n ActiveXObject \n ActiveXObject对象使用整理 \n \n \n JScript 中 ActiveXObject 对象是启用并返回 Automation 对象的引用。 \n 使用方法： var newObj = new ActiveXObject( servername.typename[, location]) \n \n 其中 newObj 是必选项。要赋值为 ActiveXObject 的变量名。 \n servername 是必选项。提供该对象的应用程序的名称。 \n typename 是必选项。要创建的对象的类型或类。 \n location 是可选项。创建该对象的网络服务器的名称。 \n js函数封装 \n HTTP请求 \n /**\n * HTTP请求\n * 查看方法属性：New-Object -ComObject "WinHttp.WinHttpRequest.5.1" | Get-Member\n *\n * @param method        GET,POST\n * @param url           请求地址\n * @param dataType      "",text,stream,xml,json\n * @param data          数据，{key:value}格式\n * @param contentType   发送的数据类型：multipart/form-data、\n * application/x-www-form-urlencoded（默认）、text/plain\n * @returns {string|Document|any}\n */ \n function   request ( method ,  url ,  dataType ,  data ,  contentType )   { \n     if   ( url  ==   ""   ||  url  ==   null   ||  url . length  <=   0 )   { \n         throw   new   Error ( "请求url不能为空！" ) ; \n     } \n     if   ( method  ==   ""   ||  method  ==   null   ||  method . length  <=   0 )   { \n        method  =   "GET" ; \n     }   else   { \n         // 把字符串转换为大写 \n        method  =  method . toUpperCase ( ) ; \n     } \n     if   ( contentType  ==   ""   ||  contentType  ==   null   ||  contentType . length  <=   0 )   { \n        contentType  =   "application/x-www-form-unlenconded" ; \n     } \n     var  XMLHTTPVersions  =   [ \n         \'WinHttp.WinHttpRequest.5.1\' , \n         \'WinHttp.WinHttpRequest.5.0\' , \n         \'Msxml2.ServerXMLHTTP.6.0\' , \n         \'Msxml2.ServerXMLHTTP.5.0\' , \n         \'Msxml2.ServerXMLHTTP.4.0\' , \n         \'Msxml2.ServerXMLHTTP.3.0\' , \n         \'Msxml2.ServerXMLHTTP\' , \n         \'MSXML2.XMLHTTP.6.0\' , \n         \'MSXML2.XMLHTTP.5.0\' , \n         \'MSXML2.XMLHTTP.4.0\' , \n         \'MSXML2.XMLHTTP.3.0\' , \n         \'MSXML2.XMLHTTP\' , \n         \'Microsoft.XMLHTTP\' \n     ] ; \n     var   XMLHTTP ; \n     for   ( var  i  =   0 ;  i  <  XMLHTTPVersions . length ;  i ++ )   { \n         try   { \n             XMLHTTP   =   new   ActiveXObject ( XMLHTTPVersions [ i ] ) ; \n             break ; \n         }   catch   ( e )   { \n            WScript . Echo ( XMLHTTPVersions [ i ]   +   ":" ,  e . message ) ; \n         } \n     } \n     XMLHTTP . SetTimeouts ( 0 ,   1800000 ,   1800000 ,   1800000 ) ; \n     //将对象转化成为querystring形式 \n     var  paramarray  =   [ ] ; \n     for   ( key  in  data )   { \n        paramarray . push ( key  +   "="   +  data [ key ] ) ; \n     } \n     var  params  =  paramarray . join ( "&" ) ; \n     switch   ( method )   { \n         case   "POST" : \n             // 0异步、1同步 \n             XMLHTTP . Open ( method ,  url ,   0 ) ; \n             XMLHTTP . SetRequestHeader ( "CONTENT-TYPE" ,  contentType ) ; \n             XMLHTTP . Send ( params ) ; \n             break ; \n         default : \n             // 默认GET请求 \n             if   ( params  ==   ""   ||  params . length  ==   0   ||  params  ==   null )   { \n                 // 0异步、1同步 \n                 XMLHTTP . Open ( method ,  url ,   0 ) ; \n             }   else   { \n                 XMLHTTP . Open ( method ,  url  +   "?"   +  params ,   0 ) ; \n             } \n             XMLHTTP . SetRequestHeader ( "CONTENT-TYPE" ,  contentType ) ; \n             XMLHTTP . Send ( ) ; \n     } \n     // 把字符串转换为小写 \n    dataType  =  dataType . toLowerCase ( ) ; \n     switch   ( dataType )   { \n         case   "text" : \n             return   XMLHTTP . responseText ; \n             break ; \n         case   "stream" : \n             return   XMLHTTP . responseStream ; \n             break ; \n         case   "json" : \n             return   eval ( "("   +   XMLHTTP . responseText  +   ")" ) ; \n             break ; \n         default : \n             return   XMLHTTP . responseBody ; \n     } \n } \n\n\n /**\n * 下载文件\n * 查看方法属性：New-Object -ComObject "ADODB.Stream" | Get-Member\n *\n * @param url\n * @param directory 文件存储目录\n * @param filename  文件名，为空默认截取url中的文件名\n * @returns {string}\n */ \n function   download ( url ,  directory ,  filename )   { \n     if   ( url  ==   ""   ||  url  ==   null   ||  url . length  <=   0 )   { \n         throw   new   Error ( "请求url不能为空！" ) ; \n     } \n     if   ( directory  ==   ""   ||  directory  ==   null   ||  directory . length  <=   0 )   { \n         throw   new   Error ( "文件存储目录不能为空！" ) ; \n     } \n     var  fso  =   new   ActiveXObject ( "Scripting.FileSystemObject" ) ; \n     // 如果目录不存在 \n     if   ( ! fso . FolderExists ( directory ) )   { \n         // 创建目录 \n         var  strFolderName  =  fso . CreateFolder ( directory ) ; \n     } \n     if   ( filename  ==   ""   ||  filename  ==   null   ||  filename . length  <=   0 )   { \n        filename  =  url . substring ( url . lastIndexOf ( "/" )   +   1 ) ; \n         // 去掉文件名的特殊符号（包括之前的）字符 \n        filename  =  filename . replace ( / ^.*(\\&|\\=|\\?|\\/) / ig ,   "" ) ; \n     } \n     var  path  =  directory  +   "\\\\"   +  filename ; \n     var   ADO   =   new   ActiveXObject ( "ADODB.Stream" ) ; \n     ADO . Mode  =   3 ; \n     ADO . Type  =   1 ; \n     ADO . Open ( ) ; \n     ADO . Write ( request ( "GET" ,  url ,   "" ) ) ; \n     ADO . SaveToFile ( path ,   2 ) ; \n     ADO . Close ( ) ; \n     // 如果文件不存在 \n     if   ( ! fso . FileExists ( path ) )   { \n         throw   new   Error ( "文件下载失败" ) ; \n     } \n     return  path ; \n } \n 解析XML \n /**\n * 解析XML\n * 查看方法属性：New-Object -ComObject "Msxml2.DOMDocument.6.0" | Get-Member\n *\n * @param xml xml字符串或者文件路径\n * @returns {*}\n * @constructor\n */ \n function   XMLParsing ( xml )   { \n     if   ( xml  ==   ""   ||  xml  ==   null   ||  xml . length  <=   0 )   { \n         throw   new   Error ( "xml字符串或者文件路径不能为空！" ) ; \n     } \n     var  xmlDomVersions  =   [ \n         \'Msxml2.DOMDocument.6.0\' , \n         \'Msxml2.DOMDocument.5.0\' , \n         \'Msxml2.DOMDocument.4.0\' , \n         \'MSXML2.DOMDocument.3.0\' , \n         \'MSXML2.DOMDocument\' , \n         \'Microsoft.XMLDOM\' \n     ] ; \n     var  xmlParser ; \n     for   ( var  i  =   0 ;  i  <  xmlDomVersions . length ;  i ++ )   { \n         try   { \n            xmlParser  =   new   ActiveXObject ( xmlDomVersions [ i ] ) ; \n             break ; \n         }   catch   ( e )   { \n            WScript . Echo ( XMLHTTPVersions [ i ]   +   ":" ,   e . message ) ; \n         } \n     } \n    xmlParser . async  =   false ; \n     var  fso  =   new   ActiveXObject ( "Scripting.FileSystemObject" ) ; \n     if   ( ! fso . FileExists ( xml ) )   { \n         // 载入xml字符串 \n        xmlParser . loadXML ( xml ) ; \n     } else   { \n         // 载入xml文件 \n        xmlParser . load ( xml ) ; \n     } \n     return  xmlParser ; \n } \n 解析HTML \n /**\n * 解析HTML\n * 查看方法属性：New-Object -ComObject "htmlfile" | Get-Member\n *\n * @param html html字符串或者文件路径\n * @returns {any}\n * @constructor\n */ \n function   HtmlParsing ( html )   { \n     if   ( html  ==   ""   ||  html  ==   null   ||  html . length  <=   0 )   { \n         throw   new   Error ( "html字符串或者文件路径不能为空！" ) ; \n     } \n     var  fso  =   new   ActiveXObject ( "Scripting.FileSystemObject" ) ; \n     if   ( fso . FileExists ( html ) )   { \n         var  htmlFile  =  fso . OpenTextFile ( html ,  ForReading ) ; \n        html  =  htmlFile . ReadAll ; \n        htmlFile . Close ( ) ; \n     } \n     // mhtmlfile \n     var  htmlParser  =   new   ActiveXObject ( "htmlfile" ) ; \n    htmlParser . designMode  =   "on" ; \n    htmlParser . write ( html ) ; \n     return  htmlParser ; \n } \n 图片格式转换 \n /**\n * 图片格式转换\n *\n * @param imagePath 原始图片全路径\n * @param format    要转换的格式，后缀名\n * @returns {string}\n */ \n function   imageTransform ( imagePath ,  format )   { \n     var  fso  =   new   ActiveXObject ( "Scripting.FileSystemObject" ) ; \n     // 如果文件不存在,就说明没有转换成功 \n     if   ( ! fso . FileExists ( imagePath ) )   { \n         throw   new   Error ( "图片不存在或路径错误！" ) ; \n     } \n     // 转换后格式文件全路径 \n     var  formatPath  =  imagePath . replace ( / (.+)\\.[^\\.]+$ / ,   "$1" )   +   "."   +  format ; \n     // 如果转换后文件已存在 \n     if   ( fso . FileExists ( formatPath ) )   { \n         throw   new   Error ( "要转换的格式文件已经存在！" ) ; \n     } \n     // 转小写 \n    format  =  format . toLowerCase ( ) ; \n     var  wiaFormat  =   "" ; \n     switch   ( format )   { \n         case   "bmp" : \n            wiaFormat  =   "{B96B3CAB-0728-11D3-9D7B-0000F81EF32E}" ; \n             break ; \n         case   "png" : \n            wiaFormat  =   "{B96B3CAF-0728-11D3-9D7B-0000F81EF32E}" ; \n             break ; \n         case   "gif" : \n            wiaFormat  =   "{B96B3CB0-0728-11D3-9D7B-0000F81EF32E}" ; \n             break ; \n         case   "tiff" : \n            wiaFormat  =   "{B96B3CB1-0728-11D3-9D7B-0000F81EF32E}" ; \n             break ; \n         default : \n             // 默认JPEG \n            wiaFormat  =   "{B96B3CAE-0728-11D3-9D7B-0000F81EF32E}" ; \n     } \n     var  img  =   new   ActiveXObject ( "WIA.ImageFile" ) ; \n    img . LoadFile ( imagePath ) ; \n     var  imgps  =   new   ActiveXObject ( "WIA.ImageProcess" ) ; \n    imgps . Filters . Add ( imgps . FilterInfos ( "Convert" ) . FilterID ) ; \n     // 转换格式 \n    imgps . Filters ( 1 ) . Properties ( "FormatID" ) . Value  =  wiaFormat ; \n     // 图片质量 \n     //imgps.Filters(1).Properties("Quality").Value = 5 \n    imgps . Apply ( img ) . SaveFile ( formatPath ) ; \n     // 如果文件不存在,就说明没有转换成功 \n     if   ( ! fso . FileExists ( formatPath ) )   { \n         throw   new   Error ( "图片格式转为"   +  format  +   "失败" ) ; \n     } \n     return  formatPath ; \n } \n 设置壁纸 \n /**\n * 设置桌面壁纸\n *\n * @param imagesPath 图片全路径\n */ \n function   setWallpaper ( imagesPath )   { \n     var  fso  =   new   ActiveXObject ( "Scripting.FileSystemObject" ) ; \n     // 如果文件不存在,就说明没有转换成功 \n     if   ( ! fso . FileExists ( imagePath ) )   { \n         throw   new   Error ( "图片不存在或路径错误！" ) ; \n     } \n     var  shell  =   new   ActiveXObject ( "WScript.shell" ) ; \n     // HKEY_CURRENT_USER \n    shell . RegWrite ( "HKCU\\\\Control Panel\\\\Desktop\\\\TileWallpaper" ,   "0" ) ; \n     // 设置壁纸全路径 \n    shell . RegWrite ( "HKCU\\\\Control Panel\\\\Desktop\\\\Wallpaper" ,  imagesPath ) ; \n    shell . RegWrite ( "HKCU\\\\Control Panel\\\\Desktop\\\\WallpaperStyle" ,   "2" ,   "REG_DWORD" ) ; \n     var  shadowReg  =   "HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion" ; \n    shell . RegWrite ( shadowReg  +   "\\\\Explorer\\\\Advanced\\\\ListviewShadow" ,   "1" ,   "REG_DWORD" ) ; \n     // 如果桌面图标未透明，需要刷新组策略 \n     //shell.Run("gpupdate /force", 0, true); \n     // 上面已经通过注册表设置了壁纸的参数，调用Windows api SystemParametersInfo刷新配置 \n     var  spi  =   "RunDll32 USER32,SystemParametersInfo SPI_SETDESKWALLPAPER 0 \\"" ; \n    shell . Run ( spi  +  imagesPath  +   "\\" SPIF_SENDWININICHANGE+SPIF_UPDATEINIFILE" ,   0 ,   true ) ; \n     // for (var i = 0; i < 30; i++) { \n     //     // 实时刷新桌面 \n     //     shell.Run("RunDll32 USER32,UpdatePerUserSystemParameters", 0, true); \n     // } \n    shell . Run ( "regsvr32.exe /s /n /i:/UserInstall %SystemRoot%\\\\system32\\\\themeui.dll" ,   0 ,   true ) ; \n } \n \n \n 这种方式更稳定 \n \n \n 使用API触发图片文件右键菜单上的  设置为桌面背景(B) \n \n /**\n * 设置桌面壁纸\n *\n * @param imagesPath 图片全路径\n */ \n function   setWallpaper ( imagesPath )   { \n     var  shApp  =   new   ActiveXObject ( "Shell.Application" ) ; \n     // 获取文件 \n     var  picFile  =   new   ActiveXObject ( "Scripting.FileSystemObject" ) . GetFile ( imagesPath ) ; \n     // 获取文件上的所有右键菜单项 \n     //var items = shApp.NameSpace(picFile.ParentFolder.Path).ParseName(picFile.Name).Verbs(); \n     var  items  =  shApp . NameSpace ( picFile . ParentFolder . Path ) . Items ( ) . Item ( picFile . Name ) . Verbs ( ) ; \n     // 遍历所有菜单项 \n     for   ( var  i  =   0 ;  i  <  items . Count ;  i ++ )   { \n         var  item  =  items . Item ( i ) ; \n         // 注意执行的脚本文件需要为简体中文编码 \n         if   ( item . Name  ==   "设置为桌面背景(&B)" )   { \n            item . DoIt ( ) ; \n         } \n     } \n } \n 刷新桌面 \n // 切换到桌面 \n new   ActiveXObject ( "Shell.Application" ) . ToggleDesktop ( ) ; \n // 刷新桌面 \n new   ActiveXObject ( "WScript.Shell" ) . SendKeys ( "{F5}" ) ; \n\n var  WSHShell  =   new   ActiveXObject ( "WScript.Shell" ) ; \n // 切换到桌面 \n //WSHShell.AppActivate("Program Manager") \nWSHShell . AppActivate ( WSHShell . SpecialFolders ( "Desktop" ) ) ; \n // 刷新桌面 \nWSHShell . SendKeys ( "{F5}" ) ; \n\n // 刷新桌面、任务栏、OSD（相当于重启资源管理器） \n var  shell = new   ActiveXObject ( "WScript.Shell" ) ; \nshell . Run ( "regsvr32.exe /s /n /i:/UserInstall %SystemRoot%\\\\system32\\\\themeui.dll" ,   0 ,   true ) ; \n\n // 效果不太好，有时刷新成功，有时失败 \n var  shell = new   ActiveXObject ( "WScript.Shell" ) ; \nshell . Run ( "RunDll32 USER32,UpdatePerUserSystemParameters" ,   0 ,   true ) ; \n\n // assoc文件关联时会自动刷新桌面，可能报错 \n var  shell = new   ActiveXObject ( "WScript.Shell" ) ; \nshell . Run ( "assoc .=." ,   0 ,   true ) ; \n\n\n // 重启资源管理器并恢复打开的目录，暂时不能使用 \n function   restartExplorer ( )   { \n     var  arrURL  =   [ ] ; \n     var  shApp  =   new   ActiveXObject ( "Shell.Application" ) ; \n     // 遍历所有打开的窗口 \n     for   ( var  i  =   0 ;  i  <  shApp . Windows ( ) . Count ;  i ++ )   { \n         var  oWin  =  shApp . Windows ( ) . Item ( i ) ; \n         // 如果打开的窗口为资源管理器 \n         if   ( oWin  !=   null   &&  oWin . FullName . indexOf ( "explorer.exe" )   !=   - 1 )   { \n             if   ( oWin . LocationURL  !=   null )   { \n                arrURL . push ( oWin . LocationURL ) ; \n             }   else   { \n                arrURL . push ( "" ) ; \n             } \n             //oWin.Document.folder.title; \n             // 关闭当前打开的文件夹 \n             //oWin.quit(); \n         } \n     } \n     // 结束资源管理器进程 \n     var  shell  =   new   ActiveXObject ( "WScript.Shell" ) ; \n    shell . Run ( "taskkill /f /im explorer.exe >nul 2>nul&start explorer.exe" ,   0 ,   true ) ; \n     // 遍历并打开之前的窗口 \n     for   ( var  i  =   0 ;  i  <  arrURL . length ;  i ++ )   { \n        shApp . Open ( arrURL [ i ] ) ; \n        shApp . Explore ( arrURL [ i ] ) ; \n     } \n } \n 获取系统信息 \n /**\n * 获取系统信息\n * \n * @returns {{cpu_digits: *, cpu_core_number: *, system: string, os: *}}\n */ \n function   getSystem ( )   { \n     var  shell  =   new   ActiveXObject ( "WScript.shell" ) ; \n     var  system  =  shell . Environment ( "SYSTEM" ) ; \n     // 操作系统 \n     var  os  =   system ( "OS" ) . toLowerCase ( ) . split ( "_" ) [ 0 ] ; \n     // CPU位数 \n     var  cpuDigits  =   system ( "PROCESSOR_ARCHITECTURE" ) . toLowerCase ( ) ; \n     // CPU核心数 \n     var  cpuCoreNumber  =   system ( "NUMBER_OF_PROCESSORS" ) ; \n     return   { \n         "os" :  os , \n         "cpu_digits" :  cpuDigits , \n         "cpu_core_number" :  cpuCoreNumber , \n         "system" :  os  +   "_"   +  cpuDigits\n     } ; \n } \n \n /**\n * 获取当前系统位数\n * \n * @returns {string}\n */ \n function   systemDigits ( )   { \n     var  locator  =   new   ActiveXObject ( "WbemScripting.SWbemLocator" ) ; \n     // 连接本地电脑 \n     var  service  =  locator . ConnectServer ( "." ) ; \n     // 获取系统版本 \n     var  csResult  =  service . ExecQuery ( "Select * from Win32_ComputerSystem" ) ; \n     // 创建一个可枚举的对象 \n     var  cs  =   new   Enumerator ( csResult ) . item ( ) ; \n     var  digits  =  cs . SystemType ; \n     if   ( digits . indexOf ( "86" )   !=   - 1 )   { \n         return   "i386" ; \n     }   else   if   ( digits . indexOf ( "64" )   !=   - 1 )   { \n         return   "amd64" ; \n     } \n    WScript . Echo ( "不知道32位还是64位的" ) ; \n    WScript . Quit ( 1 ) ; \n } \n\n /**\n * 获取当前系统版本\n * \n * @returns {string}\n */ \n function   osVersion ( )   { \n     var  locator  =   new   ActiveXObject ( "WbemScripting.SWbemLocator" ) ; \n     // 连接本地电脑 \n     var  service  =  locator . ConnectServer ( "." ) ; \n     // 获取系统版本 \n     var  osResult  =  service . ExecQuery ( "Select * from Win32_OperatingSystem" ) ; \n     // 创建一个可枚举的对象 \n     var  os  =   new   Enumerator ( osResult ) . item ( ) ; \n     var  caption  =  os . Caption ; \n     // 截取version最后一个"."的左面部分 \n     var  version  =  os . Version . substring ( 0 ,  version . lastIndexOf ( "." ) ) ; \n     switch   ( version )   { \n         case   "5.2" : \n             return   "Windows Server 2003" ; \n             break ; \n         case   "5.0" : \n             return   "Windows 2000" ; \n             break ; \n         case   "5.1" : \n             return   "Windows XP" ; \n             break ; \n         case   "6.0" : \n             return   "windows visita" ; \n             break ; \n         case   "6.1" : \n             return   "windows 7" ; \n             break ; \n         case   "10.0" : \n             return   "windows 10" ; \n             break ; \n         defult : \n             return  version ; \n     } \n } \n 解压zip \n /**\n * 解压zip\n * 查看方法属性：New-Object -ComObject "Shell.Application" | Get-Member\n * \n * @param zipFile       zip文件全路径\n * @param unDirectory   解压目录\n */ \n function   unZip ( zipFile ,  unDirectory )   { \n     var  fso  =   new   ActiveXObject ( "Scripting.FileSystemObject" ) ; \n     if   ( ! fso . FileExists ( zipFile ) )   { \n         throw   new   Error ( "压缩文件不存在！" ) ; \n     } \n     if   ( fso . GetExtensionName ( zipFile )   !=   "zip" )   { \n         throw   new   Error ( "压缩文件后缀不为zip！" ) ; \n     } \n     // 如果解压目录不存在 \n     if   ( ! fso . FolderExists ( unDirectory ) ) { \n         // 创建目录 \n        fso . CreateFolder ( unDirectory ) ; \n     } \n     var  objShell  =   new   ActiveXObject ( "Shell.Application" ) ; \n     var  objSource  =  objShell . NameSpace ( zipFile ) ; \n     if   ( objSource  ==   null )   { \n         throw   new   Error ( "无法解压文件！" ) ; \n     } \n    objShell . NameSpace ( unDirectory ) . CopyHere ( objSource . Items ( ) ) ; \n } \n 下载7z \n /**\n * 下载7-Zip\n *\n * @param mode 下载模式：默认0不覆盖下载，1覆盖下载\n */ \n function   download7z ( mode )   { \n     var  shell  =   new   ActiveXObject ( "WScript.shell" ) ; \n     // 执行7z命令判断是否存在 \n     if   ( shell . Run ( "cmd /c 7za" ,   0 ,   true )   ==   0   &&   ( ! mode  ||  mode  ==   0 ) )   { \n         return ; \n     } \n     var  fso  =   new   ActiveXObject ( "Scripting.FileSystemObject" ) ; \n     var  storage  =   "c:\\\\windows" ; \n     var  exe  =  storage  +   "\\\\7z.exe" ; \n     var  dll  =  storage  +   "\\\\7z.dll" ; \n     var  filename  =   "" ; \n     var  reg  =   new   RegExp ( "7z.*\\-x64.msi" ,   "igm" ) ; \n     try   { \n         var  url  =   "https://sourceforge.net/projects/sevenzip/rss?path=/7-Zip" ; \n        filename  =  reg . exec ( request ( "get" ,  url ,   "text" ,   "" ,   "" ) ) ; \n     }   catch   ( e )   { \n        WScript . Echo ( e . message ) ; \n         var  url  =   "https://www.7-zip.org/download.html" ; \n        filename  =  reg . exec ( request ( "get" ,  url ,   "text" ,   "" ,   "" ) ) ; \n     } \n     // 当前文件所在目录 \n     var  dir  =  fso . GetFile ( WScript . ScriptFullName ) . ParentFolder ; \n     var  msi  =  dir  +   \'\\\\\'   +  filename ; \n     if   ( fso . FileExists ( msi ) )   { \n        fso . DeleteFile ( msi ) ; \n     } \n     var  zipDir  =  dir  +   \'\\\\7zip\' ; \n     if   ( fso . FolderExists ( zipDir ) )   { \n        fso . DeleteFolder ( zipDir ) ; \n     } \n     download ( "https://www.7-zip.org/a/"   +  filename ,  dir ,  filename ) ; \n     // 解压msi文件 \n    shell . Run ( \'msiexec /a "\'   +  msi  +   \'" /qn TARGETDIR="\'   +  zipDir  +   \'"\' ,   0 ,   true ) ; \n    fso . CopyFile ( dir  +   "\\\\7zip\\\\Files\\\\7-Zip\\\\7z.exe" ,  exe ) ; \n    fso . CopyFile ( dir  +   "\\\\7zip\\\\Files\\\\7-Zip\\\\7z.dll" ,  dll ) ; \n    fso . DeleteFolder ( dir  +   "\\\\7zip" ) ; \n    fso . DeleteFile ( msi ) ; \n    filename  =  filename . toString ( ) . replace ( "x64.msi" ,   "extra.7z" ) ; \n     var  exetra  =  dir  +   \'\\\\\'   +  filename ; \n     if   ( fso . FileExists ( exetra ) )   { \n        fso . DeleteFile ( exetra ) ; \n     } \n     download ( "https://www.7-zip.org/a/"   +  filename ,  dir ,  filename ) ; \n     // -aoa解压并覆盖文件，-o参数必须与值之间不能有空格 \n    shell . Run ( \'7z x -aoa "\'   +  exetra  +   \'" -o"\'   +  storage  +   \'" 7za.exe 7za.dll\' ,   0 ,   true ) ; \n    fso . DeleteFile ( exetra ) ; \n } \n 数据库 \n /**\n * 数据库\n * 查看方法属性：New-Object -ComObject "ADODB.Connection" | Get-Member\n */ \n function   db ( ) { \n     // 创建数据库对象    \n     var  objdbConn  =   new   ActiveXObject ( "ADODB.Connection" ) ; \n     var  strdsn  =   "Driver={SQL Server}; Server=(local); Database=Test;UID=sa;PWD=123456" ; \n     // 打开数据源    \n    objdbConn . Open ( strdsn ) ; \n     // 执行SQL的数据库查询    \n     var  objrs  =  objdbConn . Execute ( "Select * from test" ) ; \n     // 获取字段数目    \n     var  fdCount  =  objrs . Fields . Count  -   1 ; \n     // 显示数据库内容    \n     while   ( ! objrs . EOF )   { \n         // 显示每笔记录的字段 \n         for   ( i  =   0 ;  i  <=  fdCount ;  i ++ ) { \n            WScript . Echo ( objrs . Fields ( i ) . Value ) ; \n         } \n         // 移到下一笔记录 \n        objrs . moveNext ( ) ; \n     } \n     // 关闭记录集合 \n    objrs . Close ( ) ; \n     // 关闭数据库链接 \n    objdbConn . Close ( ) ; \n } \n 开机启动 \n /**\n * 开机启动\n *\n * @param mode 为startup时是在开机启动目录中创建vbs脚本，否则添加开机启动注册表\n * @param arguments 向执行的程序或脚本传递相关联的参数\n */ \n function   autoStart ( mode ,  arguments )   { \n     if   ( arguments  !=   null   &&  arguments  !=   "" )   { \n        arguments  =   " "   +  arguments ; \n     } \n     var  fileName  =  WScript . ScriptName ; \n    fileName  =  fileName . substring ( 0 ,  fileName . lastIndexOf ( \'.\' ) ) ; \n     //fileName = fileName.substring(0, fileName.length-4); \n     var  vbsFileName  =  WScript . ScriptFullName . replace ( ".bat" ,   ".vbs" ) ; \n     if   ( "startup"   ==  mode . toLowerCase ( ) )   { \n         // 开机启动目录 \n         var  runDir  =   "C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp\\\\" ; \n        vbsFileName  =  runDir  +  fileName  +   ".vbs" ; \n     } \n     var  fso  =   new   ActiveXObject ( "Scripting.FileSystemObject" ) ; \n     // 创建文件 \n     var  vbsFile  =  fso . CreateTextFile ( vbsFileName ,   true ) ; \n     // 填写数据，并增加换行符 \n    vbsFile . WriteLine ( "Set shell = WScript.CreateObject(\\"WScript.Shell\\")" ) ; \n    vbsFile . WriteLine ( \'shell.Run "cmd /c \'   +  WScript . ScriptFullName  +  arguments  +   \'", 0, false\' ) ; \n     // 关闭文件 \n    vbsFile . Close ( ) ; \n     if   ( "startup"   !=  mode . toLowerCase ( ) )   { \n         // 添加开机启动注册表 \n         var  shell  =   new   ActiveXObject ( "WScript.shell" ) ; \n         var  runRegBase  =   "HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\" ; \n        shell . RegWrite ( runRegBase  +  fileName ,  vbsFileName  +  arguments ) ; \n     } \n     return  vbsFileName ; \n } \n 获取所有COM组件 \n // 列举本机所有的 com 组件 by http://www.bathome.net/thread-32948-1-1.html \n function   listcom ( )   { \n     var  dict  =   new   ActiveXObject ( \'Scripting.Dictionary\' ) ; \n     var  oLoc  =   new   ActiveXObject ( "WbemScripting.SWbemLocator" ) ; \n\n     var  oReg  =  oLoc . ConnectServer ( null ,   "root\\\\default" ) . Get ( "StdRegProv" ) ; \n     var  oMethod  =  oReg . Methods_ ( "EnumKey" ) ; \n     var  oInParam  =  oMethod . InParameters . SpawnInstance_ ( ) ; \n    oInParam . hDefKey  =   0x80000000 ; \n    oInParam . sSubKeyName  =   \'\' ; \n     var  NameAndType  =  oReg . ExecMethod_ ( oMethod . Name ,  oInParam ) ; \n     var  arrSubKeys  =  NameAndType . sNames . toArray ( ) ; \n\n     // 遍历HKEY_CLASSES_ROOT中所有键 \n     for   ( var  i  =   0 ;  i  <  arrSubKeys . length ;  i ++ )   { \n         var  key  =  arrSubKeys [ i ] ; \n         if   ( key . search ( / ..\\. / )   <   0 )   { \n             continue ; \n         } \n         if   ( key . search ( / ..\\..*\\. / )   >   0 )   { \n             var  independent  =  key . replace ( / .+?$ / ,   \'\' ) ; \n             if   ( ! dict . Exists ( independent ) )   { \n                dict . Add ( key ,   0 ) ; \n             } \n         }   else   { \n             var  vdpid  =   "" ; \n             for   ( var  element  in  dict )   { \n                 if   ( element . length  >  key . length  &&  element . substring ( key . length )   ==  key  +   "." )   { \n                        vdpid  =  element ; \n                         break ; \n                 } \n             } \n             if   ( vdpid . length )   { \n                dict . Remove ( vdpid ) ; \n             } \n            dict . Add ( key ,   \'\' ) ; \n         } \n     } \n     var  retArr  =   [ ] ; \n     var  arr  =   new   VBArray ( dict . Keys ( ) ) . toArray ( ) ; \n     for   ( var  i  =   0 ;  i  <  arr . length ;  i ++ )   { \n        retArr . push ( arr [ i ] ) ; \n     } \n     return  retArr ; \n } \n var  fso  =   new   ActiveXObject ( \'Scripting.FileSystemObject\' ) ; \n var  ts  =  fso . CreateTextFile ( \'本机可用的com组件.txt\' ,   true ) ; \nts . Write ( listcom ( ) . join ( \'\\r\\n\' ) ) ; \n 创建任务计划 \n Windows中的事件 \n 使用示例见 设置必应壁纸.bat 文件 \n /**\n * 创建任务计划的常用API展示，在实现中需结合实际使用\n */ \n function   createSchedule ( )   { \n     // 创建TaskService对象，提供对任务计划程序服务的访问权限，以管理已注册的任务 \n     var  service  =   new   ActiveXObject ( "Schedule.Service" ) ; \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/taskservice-connect \n    service . Connect ( ) ; \n\n     // 获取一个文件夹以在其中创建任务定义。 \n     var  rootFolder  =  service . GetFolder ( "\\\\" ) ; \n     // 返回一个空的任务定义对象，参数保留供将来使用，必须设置为0 \n     var  taskDefinition  =  service . NewTask ( 0 ) ; \n\n     // 创建RegistrationInfo对象，设置任务的注册信息 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/registrationinfo \n     var  regInfo  =  taskDefinition . RegistrationInfo ; \n     // 任务说明 \n    regInfo . Description  =   "任务说明描述" ; \n     // 创建人 \n    regInfo . Author  =   "创建人" ; \n\n     // 操作集合，运行程序/脚本等动作的集合，最多32个动作 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/actioncollection \n     var  actions  =  taskDefinition . Actions ; \n     // 创建要执行的任务的动作：0运行脚本或程序，5触发处理程序，6发送邮件，7显示一个消息框 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/actioncollection-create \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/action#remarks \n    \n     // 向任务添加操作 https://docs.microsoft.com/zh-cn/windows/win32/taskschd/execaction \n     var  action  =  actions . Create ( 0 ) ; \n    action . Path  =   "wscript" ; \n    action . Arguments  =   "C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp\\\\设置必应壁纸.vbs" ; \n     var  action1  =  actions . Create ( 0 ) ; \n    action1 . Path  =   "eventvwr" ; \n\n     // 提供主体安全证书的脚本对象。这些安全凭证为与委托人关联的任务定义了安全上下文。 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/principal \n     var  principal  =  taskDefinition . Principal ; \n     // 将登录类型设置为交互式登录 \n     // principal.LogonType = 3; \n     // 获取或设置标识符，该标识符用于指定运行与主体相关联的任务所需的特权级别。 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/principal-runlevel \n    principal . RunLevel  =   1 ; \n\n     // 创建一个TaskSettings对象，设置任务计划程序的任务设置信息 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/tasksettings \n     var  settings  =  taskDefinition . Settings ; \n     // 该值指示任务计划程序可以在计划时间过去之后的任何时间启动任务 \n    settings . StartWhenAvailable  =   true ; \n    settings . Enabled  =   true ; \n     // 该值指示任务将在UI中不可见 \n    settings . Hidden  =   false ; \n     // 获取或设置任务的优先级。 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/tasksettings-priority \n    settings . Priority  =   0 ; \n\n     // 获取或设置用于启动任务的触发器的集合。 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/trigger \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/triggercollection-create \n     var  triggers  =  taskDefinition . Triggers ; \n\n    \n     // 创建事件触发器 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/eventtrigger \n     var  task_trigger_event  =  triggers . Create ( 0 ) ; \n     // 定义事件查询。触发器将启动任务，当收到事件时。 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/eventtrigger-subscription \n    task_trigger_event . Subscription  =   "<QueryList>"   + \n         "<Query Id=\'0\'><Select Path=\'System\'>"   + \n         "*[System[Provider[@Name=\'Microsoft-Windows-Power-Troubleshooter\'] and EventID=1]]"   + \n         "</Select></Query>"   + \n         "<Query Id=\'1\'><Select Path=\'System\'>"   + \n         "*[System/Level=2]"   + \n         "</Select></Query>"   + \n         "</QueryList>" ; \n     // 获取或设置命名XPath查询的集合 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/eventtrigger-valuequeries \n     var  valueQueries  =  task_trigger_event . ValueQueries ; \n    valueQueries . Create ( "eventID" ,   "Event/System/EventRecordID" ) ; \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/showmessageaction \n     var  action7  =  actions . Create ( 7 ) ; \n    action7 . Title  =   "标题" ; \n     // 需要配合trigger.ValueQueries \n    action7 . MessageBody  =   "这是事件ID：$(eventID)" ; \n    \n     // 创建时间触发器 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/timetrigger \n     var  task_trigger_time  =  triggers . Create ( 1 ) ; \n    \n     // 创建每日触发器 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/dailytrigger \n     var  task_trigger_daily  =  triggers . Create ( 2 ) ; \n    \n     // 创建每周触发器 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/weeklytrigger \n     var  task_trigger_weekly  =  triggers . Create ( 3 ) ; \n    task_trigger_weekly . DaysOfWeek  =   1 ; \n     // 任务每周运行一次。 \n    task_trigger_weekly . WeeksInterval  =   1 ; \n    \n     // 创建根据月度计划启动任务的触发器，在特定月份的特定日期开始 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/monthlytrigger \n     var  task_trigger_monthly  =  triggers . Create ( 4 ) ; \n    \n     // 创建每月DOWT触发器，按月星期几时间表启动任务的触发器 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/monthlydowtrigger \n     var  task_trigger_monthlydow  =  triggers . Create ( 5 ) ; \n    \n     // 创建闲置触发，在发生空闲情况时启动任务的触发器 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/idletrigger \n     var  task_trigger_idle  =  triggers . Create ( 6 ) ; \n    \n     // 创建注册触发器 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/registrationtrigger \n     var  task_trigger_registration  =  triggers . Create ( 7 ) ; \n    \n     // 创建启动触发器 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/boottrigger \n     var  task_trigger_boot  =  triggers . Create ( 8 ) ; \n    \n     // 创建登录触发器 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/logontrigger \n     var  task_trigger_logon  =  triggers . Create ( 9 ) ; \n     // 登录指定用户时触发，必须是有效的用户帐户 \n    task_trigger_logon . UserId  =   "SYSTEM" ; \n    \n     // 用于触发控制台连接或断开连接，远程连接或断开连接或工作站锁定或解锁通知的任务。 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/sessionstatechangetrigger \n     var  task_session_unlock  =  triggers . Create ( 11 ) ; \n     // 获取或设置连接到会话的状态更改类型：1本地连接，2断开本地连接，3远程连接，4断开远程连接，7锁定，8解锁 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/sessionstatechangetrigger-statechange \n    task_session_unlock . StateChange  =   8 ; \n     // 继承自Trigger对象。获取触发器的类型。 \n    task_session_unlock . Type ; \n\n\n     /**\n     * 以下为每一个trigger都有的通用属性\n     */ \n\n     // 获取或设置触发器的标识符 \n    trigger . Id  =   "触发器ID" ; \n     // 获取或设置一个布尔值，该值指示是否启用了触发器 \n    trigger . Enabled  =   true ; \n     // 获取或设置激活触发器的日期和时间。触发器可以在激活触发器后启动任务。 \n    trigger . StartBoundary  =   "2006-05-02T10:49:02" ; \n     // 获取或设置停用触发器的日期和时间。触发器在停用后无法启动任务。 \n    trigger . EndBoundary  =   "2006-05-02T10:52:02" ; \n     // 获取或设置允许触发器启动的任务运行的最长时间，5分钟 \n    trigger . ExecutionTimeLimit  =   "PT5M" ; \n     // 延迟30秒 \n    trigger . Delay  =   "PT30S" ; \n\n     // 使用ITaskDefinition接口在指定位置注册（创建）任务以定义任务 \n     // 用户ID有：Local Service ; SYSTEM ; null为当前登录的用户名 \n     // 最后一位参数影响任务计划运行 \n     // https://docs.microsoft.com/zh-cn/windows/win32/taskschd/taskfolder-registertaskdefinition \n    rootFolder . RegisterTaskDefinition ( "任务计划名" ,  taskDefinition ,   6 ,   "用户ID" ,   null ,   0 ) ; \n } \n \n ',createdTime:1761814324e3},{title:"VBAScript",frontmatter:{description:"Office Visual Basic for Applications (VBA)",meta:[{name:"twitter:title",content:"VBAScript"},{name:"twitter:description",content:"Office Visual Basic for Applications (VBA)"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Shell/WindowsVBAScript.html"},{property:"og:type",content:"article"},{property:"og:title",content:"VBAScript"},{property:"og:description",content:"Office Visual Basic for Applications (VBA)"},{property:"og:url",content:"https://bajins.com/Shell/WindowsVBAScript.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"VBAScript"},{itemprop:"description",content:"Office Visual Basic for Applications (VBA)"}]},regularPath:"/Shell/WindowsVBAScript.html",relativePath:"Shell/WindowsVBAScript.md",key:"v-4a20ef61",path:"/Shell/WindowsVBAScript.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"分割字符串并统计",slug:"分割字符串并统计"},{level:2,title:"自动高亮行列十字突显",slug:"自动高亮行列十字突显"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' VBAScript \n Flag 分割字符串并统计 自动高亮行列十字突显 \n Flag \n \n Office Visual Basic for Applications (VBA) \n \n \n https://github.com/MicrosoftDocs/VBA-Docs \n Visual Basic for Applications (VBA) 语言参考 \n Microsoft Office Development  https://bettersolutions.com \n VBA学习笔记 \n xcel之VBA简单宏编程 \n VBA学习笔记 \n xcel之VBA简单宏编程 \n https://docs.microsoft.com/zh-cn/javascript/api \n https://docs.microsoft.com/zh-cn/office/dev/add-ins/excel \n \n \n =IF(IFERROR(FIND("不良",B2),0),"不良品仓",IF(IFERROR(FIND("待检",B2),0),"待检仓",IF(IFERROR(FIND("报废",B2),0),"报废仓",IF(IFERROR(FIND("良",B2),0),"良品仓","")))) \n 匹配单元格左边英文及其他字符=RegexString(A1,"[^\\u4e00-\\u9fa5]+") \n 匹配单元格右边中文及其他字符=RegexString(A1,"[\\u4e00-\\u9fa5].*") \n \n Function  RegexString ( rng  As  Range ,  str  As   String ) \n \'第一个参数rng为区域保持不变， 添加第二个参数str（作为正则表达式） \n   With  CreateObject ( "VBscript.regexp" ) \n     . Global   =   True \n     . Pattern  =  str  \'表达式,直接从用户函数的第二个参数中调用 \n     If   . Execute ( rng ) . Count  =   0   Then \n    RegexString  =   "" \n     Else \n    RegexString  =   . Execute ( rng ) ( 0 ) \n     End   If \n   End   With \n End   Function \n 分割字符串并统计 \n \'https://blog.csdn.net/wordsin/article/details/80575615 \n \'自定义函数用于工作表时，必须是被动式的，只是返回一个值，不能处理单元格或在工作表上修改，批注是个例外，不能调用range的方法，如：Find，Range.Replace例外 \n Function  ReSplit ( rng  As  Range ) \n     Dim  newStr  As   String \n     Dim  countNum  As   Integer \n    \n    old  =  Strings . Split ( rng ,   " " ) \n     For   Each  e  In  old\n         If  e  < >   ""   Then \n             \'MsgBox TypeName(e) \n             \'Replace(, "/", "") \n             With  CreateObject ( "VBSCRIPT.REGEXP" ) \n                 . Global   =   True \n                 . IgnoreCase  =   True \n                 . Pattern  =   "([a-zA-Z]+)([0-9]+)-([0-9]+)" \n                 If   . test ( e )   Then \n                     \'执行正则表达式，获取子匹配列表 \n                     Set  da  =   . Execute ( e ) ( 0 ) . SubMatches\n                    last  =  da ( 0 ) \n                    st  =  da ( 1 ) \n                    en  =  da ( 2 ) \n                     \'Debug.Print last, st, en \n                     For  i  =  st  To  en\n                        newStr  =  newStr  &   ","   &  last  &  i\n                        countNum  =  countNum  +   1 \n                     Next \n                 Else \n                    newStr  =  newStr  &   ","   &  e\n                    countNum  =  countNum  +   1 \n                 End   If \n             End   With \n         End   If \n     Next \n     If  InStr ( newStr ,   "," )   Then \n        newStr  =  Right ( newStr ,  Len ( newStr )   -   1 ) \n     End   If \n    Debug . Print newStr\n    Debug . Print countNum\n    \n    ReSplit  =  newStr\n    \n     \'ActiveCell.Address \'这是当前单元格地址 \n     \'Selection.Offset(1, 0).Select \'这是向下跳1格 \n     \'Selection.Offset(-1, 0).Select \'这是向上跳1格 \n     \'Selection.Offset(0, -1).Select \'这是向左跳1格 \n     \'Selection.Offset(0, 1).Select \'这是向右跳1格 \n\n End   Function \n\n\n Function  SplitCount ( rng  As  Range ,  delimiter  As   String ) \n   SplitCount  =  Len ( Strings . Split ( rng ,  delimiter ) ) \n End   Function \n\n Sub  SetValue ( offset  As  Range ,  value ) \n    offset  =  value\n End   Sub \n\n\n Sub  run ( ) \n     Set  rng  =  Application . InputBox ( prompt : = "请选择区域" ,   Type : = 8 ) \n     If  rng . Count  =   0   Then \n        MsgBox  "请至少选择一个单元格！" ,   ,   "提示" : \n         Exit   Sub \n     End   If \n     \'If rng.Count <> 1 Then \n         \'MsgBox "只能选择一个单元格！", , "提示": \n         \'Exit Sub \n     \'End If \n    Debug . Print  "当前选择：" ,  rng . Address ( 1 ,   1 ) \n    \n    rngs  =  Strings . Split ( rng . Address ( 1 ,   1 ) ,   ":" ) \n    st  =  Strings . Split ( rngs ( 0 ) ,   "$" ) ( 1 ) \n    sta  =  Replace ( rngs ( 0 ) ,   "$" ,   "" ) \n     \'Debug.Print rngs(0), st, sta \n    \n    of1Content  =   "整理后的数据" \n    of2Content  =   "整理后的统计" \n     If  Range ( st  &   "1" ) . offset ( 0 ,   1 )   < >  of1Content  Then \n         \'插入空列 \n        Range ( sta ) . offset ( 0 ,   1 ) . EntireColumn . Insert\n        Range ( st  &   "1" ) . offset ( 0 ,   1 )   =  of1Content\n     End   If \n     If  Range ( st  &   "1" ) . offset ( 0 ,   2 )   < >  of2Content  Then \n        Range ( sta ) . offset ( 0 ,   2 ) . EntireColumn . Insert\n        Range ( st  &   "1" ) . offset ( 0 ,   2 )   =  of2Content\n     End   If \n    \n     For   Each  im  In  rng\n        \n         If  im  < >   ""   Then \n             \'Debug.Print TypeName(im), im.Address \n            \n            str1  =  ReSplit ( Range ( Replace ( im . Address ,   "$" ,   "" ) ) ) \n            im . offset ( 0 ,   1 )   =  str1\n            im . offset ( 0 ,   2 )   =  Application . CountA ( Strings . Split ( str1 ,   "," ) ) \n         End   If \n     Next \n End   Sub \n 自动高亮行列十字突显 \n \n 按  Alt  +  F11  打开 VBA 编辑器。 \n 在左侧项目树中双击当前工作表（如  Sheet1 ）。\n3.粘贴以下代码： \n \n Private   Sub  Worksheet_SelectionChange ( ByVal  Target  As  Range ) \n    Cells . Interior . ColorIndex  =  xlNone  \' 清除所有高亮 \n     If  Target . Cells . Count  >   1   Then   Exit   Sub   \' 防止多选 \n     With  Target . EntireRow\n         . Interior . Color  =  RGB ( 255 ,   255 ,   0 )   \' 设置行高亮颜色（黄色） \n     End   With \n     With  Target . EntireColumn\n         . Interior . Color  =  RGB ( 255 ,   255 ,   0 )   \' 设置列高亮颜色（黄色） \n     End   With \n End   Sub \n \n \n 保存并关闭 VBA 编辑器。 \n 返回 Excel，点击任意单元格即可看到行和列被高亮显示。 \n \n',createdTime:1761814324e3},{title:"WindowsScript",frontmatter:{description:"https://github.com/MicrosoftDocs\nScripting)\nWindows脚本和Windows Script Host的属性和方法及子对象#in-this-section)\nhttps://github.com/mrpapercut/wscript\nJScript 和 VBScript\nVBScript 脚本技术> HTA\nHTA程序：VBS/JS脚本GUI",meta:[{name:"twitter:title",content:"WindowsScript"},{name:"twitter:description",content:"https://github.com/MicrosoftDocs\nScripting)\nWindows脚本和Windows Script Host的属性和方法及子对象#in-this-section)\nhttps://github.com/mrpapercut/wscript\nJScript 和 VBScript\nVBScript 脚本技术> HTA\nHTA程序：VBS/JS脚本GUI"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Shell/WindowsScript.html"},{property:"og:type",content:"article"},{property:"og:title",content:"WindowsScript"},{property:"og:description",content:"https://github.com/MicrosoftDocs\nScripting)\nWindows脚本和Windows Script Host的属性和方法及子对象#in-this-section)\nhttps://github.com/mrpapercut/wscript\nJScript 和 VBScript\nVBScript 脚本技术> HTA\nHTA程序：VBS/JS脚本GUI"},{property:"og:url",content:"https://bajins.com/Shell/WindowsScript.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"WindowsScript"},{itemprop:"description",content:"https://github.com/MicrosoftDocs\nScripting)\nWindows脚本和Windows Script Host的属性和方法及子对象#in-this-section)\nhttps://github.com/mrpapercut/wscript\nJScript 和 VBScript\nVBScript 脚本技术> HTA\nHTA程序：VBS/JS脚本GUI"}]},regularPath:"/Shell/WindowsScript.html",relativePath:"Shell/WindowsScript.md",key:"v-280dd1cd",path:"/Shell/WindowsScript.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"系统环境变量",slug:"系统环境变量"},{level:2,title:"WScript对象",slug:"wscript对象"},{level:3,title:"WScript对象的属性",slug:"wscript对象的属性"},{level:3,title:"WScript对象的方法",slug:"wscript对象的方法"},{level:2,title:"常用组件对象",slug:"常用组件对象"},{level:2,title:"HTTP",slug:"http"},{level:2,title:"图像处理",slug:"图像处理"},{level:2,title:"操作文件",slug:"操作文件"},{level:2,title:"Shell",slug:"shell"},{level:3,title:"执行命令",slug:"执行命令"},{level:3,title:"特殊文件夹",slug:"特殊文件夹"},{level:3,title:"模拟按键",slug:"模拟按键"},{level:2,title:"WMI和MI",slug:"wmi和mi"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' WindowsScript \n Flag 系统环境变量 WScript对象 WScript对象的属性 WScript对象的方法 常用组件对象 HTTP 图像处理 操作文件 Shell 执行命令 特殊文件夹 模拟按键 WMI和MI \n Flag \n \n https://github.com/MicrosoftDocs \n Scripting \n Windows脚本和Windows Script Host的属性和方法及子对象 \n https://github.com/mrpapercut/wscript \n JScript 和 VBScript \n VBScript 脚本技术> HTA \n HTA程序：VBS/JS脚本GUI \n \n \n 批处理之家  http://www.bathome.net \n 中国DOS联盟  DOS批处理 & 脚本技术（批处理室） \n \n \n JScript 、 VBScript 同属于官方支持的 Windows Script ，这俩脚本都需要依赖于特定的宿主( Host )才能执行，\n JavaScript 浏览器环境之外，还可以运行在 Windows Script Host 中。 \n Windows Script Host 是一个 language-independent 的脚本宿主环境，主要用于执行 Windows 管理任务 \n Windows脚本宿主有两个版本：\n \n 一个基于Windows的版本（ WScript.exe ）\n，它提供用于设置脚本属性的属性表；运行以 vbs 为后缀的文件 \n 一个基于命令提示符的版本（ CScript.exe \n直接执行可查看帮助），它提供命令行。用于设置脚本属性的开关。\n \n //E:engine  使用执行脚本的引擎有： VBScript 和 JScript \n 系统环境变量 \n \n \n \n 环境变量 \n 作用 \n \n \n \n \n %ALLUSERSPROFILE% \n 指所有用户的用户目录，通常是C:/ProgramData \n \n \n %APPDATA% \n 指当前用户的Application Data目录，通常是C:/Users/当前用户名/AppData/Roaming \n \n \n %CD% \n 列出当前目录。 \n \n \n %CLIENTNAME% \n 列出联接到终端服务会话时客户端的NETBIOS名。 \n \n \n %CMDCMDLINE% \n 列出启动当前cmd.exe所使用的命令行。 \n \n \n %CMDEXTVERSION% \n 命令出当前命令处理程序扩展版本号。 \n \n \n %CommonProgramFiles% \n 指公用文件（Common Files）目录， 通常是C:/Program Files/Common Files \n \n \n %COMMONPROGRAMFILES(x86)% \n C:\\Program Files (x86)\\Common Files \n \n \n %COMPUTERNAME% \n 列出了计算机名。 \n \n \n %COMSPEC% \n 列出了可执行命令外壳（命令处理程序）的路径。 \n \n \n %DATE% \n 列出当前日期。 \n \n \n %ERRORLEVEL% \n 列出了最近使用的命令的错误代码。 \n \n \n %HOMEDRIVE% \n 同%SYSTEMDRIVE% \n \n \n %HOMEDRIVE%%HOMEPATH% \n 同%USERPROFILE% \n \n \n %HOMEPATH% \n 同%USERPROFILE% \n \n \n %HOMESHARE% \n 列出用户共享主目录的网络路径。 \n \n \n %LOCALAPPDATA% \n C:\\Users\\用户名\\AppData\\Local \n \n \n %LOGONSERVER% \n 返回验证当前登录会话的域控制器的名称。 \n \n \n %NUMBER_OF_PROCESSORS% \n 计算机上运行的处理器数目。 \n \n \n %OS% \n 用户工作站所用的操作系统。 \n \n \n %PATH% \n 路径环境变量。 \n \n \n %PATHEXT% \n 列出操作系统认为可被执行的文件扩展名，通常为 .com、 .exe、.bat 或 .cmd \n \n \n %PROCESSOR_ARCHITECTURE% \n 用户工作站使用的处理器类型。 \n \n \n %PROCESSOR_IDENTFIER% \n 列出了处理器的描述。 \n \n \n %PROCESSOR_LEVEL% \n 列出了计算机的处理器的型号。 \n \n \n %PROCESSOR_REVISION% \n 列出了处理器的修订号。 \n \n \n %PROGRAMDATA% \n C:\\ProgramData \n \n \n %ProgramFiles% \n 指Program Files的路径，通常是C:/Program Files \n \n \n %PROGRAMFILES(X86)% \n C:\\Program Files (x86) \n \n \n %PROMPT% \n 列出了当前命令解释器的命令提示设置。 \n \n \n %PUBLIC% \n C:\\Users\\Public \n \n \n %RANDOM% \n 列出界于0 和 32767之间的随机十进制数。 \n \n \n %SESSIONNAME% \n 列出连接到终端服务会话时的连接和会话名。 \n \n \n %SYSTEM% \n C\':\\WINDOWS\\SYSTEM32 \n \n \n %SYSTEMDRIVE% \n 系统所在的本地驱动器（例如，c:）。 \n \n \n %SYSTEMROOT% \n 指Windows系统所在的目录,通常是C:/Windows \n \n \n %TEMP% \n 指当前用户的临时文件目录，通常是C:/Users/当前用户名/AppData/Local/Temp \n \n \n %TIME% \n 列出当前时间。 \n \n \n %TMP% \n 同%TEMP% \n \n \n %USERDOMAIN% \n 列出了包含用户帐号的域的名字。 \n \n \n %USERNAME% \n 列出当前登录的用户的名字。 \n \n \n %USERPROFILE% \n 指当前帐户的用户目录通常是C:/Users/当前用户名 \n \n \n %WINDIR% \n 同%SYSTEMROOT% \n WScript对象 \n \n 所有的 Wscript 对象都存放在 WSHOM.ocx 文件中 \n \n \n Windows Script Host APIS \n WScript对象的属性 \n \n \n \n 属性 \n 返回值类型 \n 说明 \n \n \n \n \n Application \n Object \n 返回 IHost_Class 对象（Wscript 对象）。 \n \n \n Arguments \n IArguments_Class \n 返回 WshArguments 对象（参数集）。 \n \n \n BuildVersion \n Long \n 返回 Windows 脚本宿主的内部版本。 \n \n \n FullName \n String \n 返回宿主可执行文件（CScript.exe 或 WScript.exe）的全路径。 \n \n \n Interactive \n Boolean \n 设置或确定脚本模式。 \n \n \n Name \n String \n WScript 对象（宿主可执行文件）的名称。 \n \n \n Path \n String \n 返回包含宿主可执行文件（CScript.exe 或 WScript.exe）的路径名称。 \n \n \n ScriptFullName \n String \n 返回当前运行脚本的完整路径。 \n \n \n ScriptName \n String \n 返回当前运行脚本的文件名。 \n \n \n StdIn \n TextStream \n 显示当前脚本的输入流。 \n \n \n StdErr \n TextStream \n 显示当前脚本的错误输出流。 Write 输出， WriteLine 换行输出 \n \n \n StdOut \n TextStream \n 显示当前脚本的输出流。 Write 输出， WriteLine 换行输出 \n \n \n Timeout \n Long \n 超时设定秒：允许脚本运行的最长时间。 \n \n \n Version \n String \n 返回 Windows 脚本宿主的版本。 \n WScript对象的方法 \n \n \n \n 方法 \n 参数 \n 返回值 \n 说明 \n \n \n \n \n ConnectObject \n (Object As Object, Prefix As String) \n 无 \n 将对象的事件源连接到具有给定前缀的函数。 \n \n \n CreateObject \n (ProgID As String, [Prefix As String]) \n Object \n 创建对象。 \n \n \n DisconnectObject \n (Object As Object) \n 无 \n 断开已连接对象的事件源的连接。 \n \n \n Echo \n (ParamArray pArgs() As Variant) \n 无 \n 将文本输出到消息框中或命令控制台窗口。 \n \n \n GetObject \n (Pathname As String, [ProgID As String], [Prefix As String]) \n Object \n 检索现有的对象或从文件中创建新对象。 \n \n \n Quit \n ([ExitCode As Long]) \n 无 \n 强制脚本停止执行。 \n \n \n Sleep \n (Time As Long) \n 无 \n 在指定的时间长度内将脚本执行挂起，然后继续执行。 \n 常用组件对象 \n \n 所有对象都可通过 Power Shell 命令查看属性和方法 New-Object -ComObject "对象名称" | Get-Member ，\n获取本机所有 COM 组件对象脚本  Get-COM-Objects.bat \n \n \n 都在注册表 HKEY_CLASSES_ROOT 注册表项中，正常情况下项中带有 CLSID 键的是脚本可创建的 \n \n \n \n \n 对象 \n 说明 \n \n \n \n \n WScript.Shell \n 脚本外壳 \n \n \n Wscript.NetWork \n 提供网络连接和远程打印机管理的函数。 \n \n \n AspSmartUpload.SmartUpload \n \n \n \n CDO.Configuration \n \n \n \n CDONTS.NewMail \n 邮件发送的组件 \n \n \n Huang.UploadFile \n \n \n \n InternetExplorer.application \n \n \n \n JMail.message \n 邮件发送的组件 \n \n \n MSWC.AdRotator \n \n \n \n MSWC.BrowserType \n \n \n \n MSWC.NextLink \n \n \n \n Shell.Application \n Windows外壳 \n \n \n SQLOLE.SQLServer \n \n \n \n WSHController \n \n \n \n System.IO.StringWriter \n \n \n \n Registry \n 注册表 \n \n \n \n \n \n \n ADODB对象 \n 说明 \n \n \n \n \n ADODB.Command \n \n \n \n ADODB.Connection \n 提供数据库连接对象 \n \n \n ADODB.Error \n \n \n \n ADODB.Parameter \n \n \n \n ADODB.Record \n \n \n \n ADODB.Recordset \n 提供数据库返回结果集对象 \n \n \n ADODB.Stream \n \n \n \n ADOMD.Catalog \n \n \n \n ADOMD.Cellset \n \n \n \n ADOX.Catalog \n 包含描述数据源模式目录的集合 \n \n \n ADOX.Column \n 表示表、索引或关键字的列 \n \n \n ADOX.Group \n 表示在安全数据库内有访问权限的组帐号 \n \n \n ADOX.Index \n 表示数据库表中的索引 \n \n \n ADOX.Key \n 表示数据库表中的主关键字、外部关键字或唯一关键字 \n \n \n ADOX.Procedure \n 表示存储的过程 \n \n \n ADOX.Table \n 表示数据库表，包括列、索引和关键字 \n \n \n ADOX.User \n 表示在安全数据库内具有访问权限的用户帐号 \n \n \n ADOX.View \n 表示记录或虚拟表的过滤集 \n \n \n \n \n \n \n office对象 \n 说明 \n \n \n \n \n Word.Application \n office \n \n \n Word.Document \n \n \n \n Excel.Application \n 提供EXCEL操作对象 \n \n \n Excel.Chart \n \n \n \n Excel.Sheet \n \n \n \n Outlook.Application \n office \n \n \n PowerPoint.Application \n office \n \n \n MSGraph.Application \n office \n \n \n \n \n \n \n WIA对象 \n 说明 \n \n \n \n \n WIA.ImageFile \n 图像处理组件：加载图片 \n \n \n WIA.ImageProcess \n 图像处理组件：转换图片格式 \n \n \n WIA.Rational \n \n \n \n WIA.Vector \n \n \n \n \n \n 所有 Scripting 对象都存放在 SCRRUN.DLL 文件中 \n \n \n \n \n Scripting对象 \n 说明 \n \n \n \n \n Scripting.Dictionary \n 用来返回存放键值对的字典对象，读取DOS环境变量，读取链接中的设置 \n \n \n Scripting.Encoder \n 编码 \n \n \n Scripting.FileSystemObject \n 提供一整套文件系统操作函数 \n \n \n Scripting.Signer \n 签名 \n \n \n \n \n \n \n Collections对象 \n 说明 \n \n \n \n \n System.Collections.ArrayList \n 包含动态数组的添加元素、删除元素、遍历、统计元素个数、清空 \n \n \n System.Collections.Hashtable \n \n \n \n System.Collections.Queue \n 包含队列的添加元素（入队）、删除元素（出队）、遍历、统计元素个数、清空 \n \n \n System.Collections.SortedList \n \n \n \n System.Collections.Stack \n 包含堆栈的添加元素（压栈）、删除元素（出栈）、遍历、统计元素个数、清空 \n HTTP \n \n 微软提供了二套API： WinINet ,  WinHTTP （分别封装于 system32 目录下的 wininet.dll 和 winhttp.dll 内）\n二者主要区别在于后者更为安全和稳定，可以说 WinHTTP 是 WinINet 的升级版 \n \n \n XMLHttpRequest 是基于 WinInet 封装的，而 WinHttpRequest 和 ServerXMLHTTPRequest 则是基于 WinHTTP 封装的\n稳定性属 XMLHttpRequest 为最差,封装成 COM 形式主要是为了方便 js 、 vbs 等脚本的调用 \n \n \n XMLRequest 成员参考缺点：和浏览器挂钩，大多情况下会共享 cookies 、 session 、不支持单独设置代理。\n优点：和浏览器挂钩，大多情况下会共享 cookies 、 session \n \n \n ServerXMLHTTP 成员参考缺点：系统没有对应 dll 的情况下程序需要外挂一个 dll 文件。优点：脱离浏览器，使用代理方便 \n \n \n WinHttpRequest 成员参考缺点：暂无。优点：脱离浏览器，使用代理方便，\n WinHttp.WinHttpRequest.5.1 是 msxml4.0 的底层对象，也就是说 XMLHTTP 、 ServerXMLHTTP 也是在它的基础上封装而来 \n \n \n WinHttpRequest对象 \n DOM参考 \n 图像处理 \n \n WIA 全称： WindowsImageAcquisition ，自动化层是一个功能齐全的图像处理组件，可提供端到端的图像处理功能。\n WIA 自动化层可以轻松地从数码相机，扫描仪或网络摄像头获取图像，以及旋转，缩放和注释图像文件。\n WIA Automation Layer 取代了 Windows Image Acquisition（WIA）1.0 提供的 WIA 脚本模型。 \n \n \n New-Object -ComObject "WIA.ImageFile" | Get-Member \n \n \n New-Object -ComObject "WIA.ImageProcess" | Get-Member \n \n \n Windows图像采集（WIA） \n 使用 \n 常量 \n Windows Image Acquisition \n WIA图片处理 \n 操作文件 \n \n Scripting.FileSystemObject 对象提供的功能： New-Object -ComObject "Scripting.FileSystemObject" | Get-Member \n \n \n FileSystemObject简介 \n FileSystemObject 对象 \n FileSystemObject操作文件 \n \n 对象和集合 \n \n \n \n 对象/集合 \n 描述 \n \n \n \n \n Drive \n 包含储存设备的信息，包括硬盘、光驱、ram盘、网络驱动器 \n \n \n Drives \n 提供一个物理和逻辑驱动器的列表 \n \n \n File \n 检查和处理文件 \n \n \n Files \n 提供包含在文件夹内的所有文件的列表 \n \n \n Folder \n 检查和处理文件夹 \n \n \n Folders \n 提供在 Folder 内的所有文件夹的列表 \n \n \n TextStream \n 对象。用来读写文本文件。 \n \n \n \n \n 注意: TextStream 对文件只可以从上往下读取，指针无法任意定位，也无法往回走。 \n \n \n fso.OpenTextFile(path,[mode,create,encoding]) \n \n mode  模式,缺省为只读方式打开\n \n ForReading=1  以只读方式打开 \n ForWriting=2  以读写方式打开 \n ForAppending=8  以附加方式打开 \n \n \n create  不存在时是否创建缺省为否,即不创建文件 \n encoding  何种方式打开,缺省以 ASCII 方式\n \n TristateUseDefault=-2  以系统默认方式打开 \n TristateTrue=-1  以 Unicode 方式打开 \n TristateFalse=0  以 ASCII 方式打开 \n \n \n \n \n fso.CreateTextFile(path,[overrwite,unicode]) \n \n overrwite  是否覆盖,缺省为是 \n unicode  是否以 Unicode 方式创建,缺省为 false ,即以 ASCII 方式创建 \n Shell \n \n Shell.Application  https://docs.microsoft.com/zh-cn/windows/win32/shell \n Wscript.Shell 对象详细介绍 \n WshShell 对象 \n WScript.Shell 与 Shell.Application 的不同 \n \n \n Wscript.Shell 对象提供的功能： New-Object -ComObject "Wscript.Shell" | Get-Member \n Shell.Application 对象提供的功能： New-Object -ComObject "Shell.Application" | Get-Member \n \n \n Run   Exec  执行 cmd 命令，同 Shell.Application 的 ShellExecute \n CreateShortcut  创建快捷方式 \n SpecialFolders  访问 Windows 的 shell 文件夹 \n Environment  操作环境变量 \n RegRead  从注册表中返回指定的键或值 \n RegWrite  在注册表中设置指定的键或值 \n RegDelete  从注册表中删除指定的键或值 \n SendKeys  模拟按键 \n Popup  显示包含指定消息的消息弹出窗口 \n ExpandEnvironmentStrings  返回环境变量的扩展值\n \n ExpandEnvironmentStrings("%USERNAME%")  获取用户名 \n ExpandEnvironmentStrings("%ComputerName%")  获取计算机名 \n 执行命令 \n Run \n \n 执行命令完成后返回值是一个整数，就是 0 成功或 1 失败两个状态。 \n \n \n int Run(string, Variant, Variant) 第二个是 cmd 窗口的风格，第三个是否等待执行完成。 \n \n \n \n \n 窗口风格 \n 说明 \n \n \n \n \n 0 \n 隐藏一个窗口并激活另一个窗口。 \n \n \n 1 \n 如果窗口处于最小化或最大化状态，则系统将其还原到原始大小和位置。第一次显示该窗口时，应用程序应指定此标志。 \n \n \n 2 \n 激活窗口并将其显示为最小化窗口。 \n \n \n 3 \n 激活窗口并将其显示为最大化窗口。 \n \n \n 4 \n 按最近的窗口大小和位置显示窗口。活动窗口保持活动状态。 \n \n \n 5 \n 激活窗口并按当前的大小和位置显示它。 \n \n \n 6 \n 最小化指定的窗口，并按照Z顺序激活下一个顶部窗口。 \n \n \n 7 \n 将窗口显示为最小化窗口。活动窗口保持活动状态。 \n \n \n 8 \n 将窗口显示为当前状态。活动窗口保持活动状态。 \n \n \n 9 \n 如果窗口处于最小化或最大化状态，则系统将其还原到原始大小和位置。还原最小化窗口时，应用程序应指定此标志。 \n \n \n 10 \n 根据启动应用程序的程序状态来设置显示状态 \n \n \n \n Exec \n \n 返回值是一个对象，从返回对象中可以获得控制台输出信息和控制台错误信息，即 StdOut  和  StdErr  属性等。 \n \n \n Exec 类具有属性 ExitCode 、 ProcessID 、 Status 、 StdErr 、 StdIn 、 StdOut 以及一个函数 Terminate \n \n Status 属性具有三个值：0为正在执行，1为完成，2为失败 \n 获取输出信息： StdOut.ReadAll() \n \n \n \n Shell.Application运行文件的5种方法 \n Set  objShellApp  =  CreateObject ( "Shell.Application" ) \n Set  objFolder  =  objShellApp . NameSpace ( "c:/" ) \n \' 方法1 \nobjFolder . Items ( ) . item ( "demo.exe" ) . invokeverb\n \' 方法2 \nobjFolder . Items ( ) . item ( "demo.exe" ) . InvokeVerbEx\n \' 方法3 \nobjShellApp . Open ( "C:/demo.exe" ) \n \' 方法4,可以加参数和设置参数值 \nobjShellApp . ShellExecute  "demo.exe" , "" , "c:/" , "" ,   0 \n \' 方法5：在文件上打开鼠标邮件点击打开按钮 \n Set  objFolderItem  =  objShellApp . NameSpace ( "C:/" ) . Items ( ) . item ( "demo.exe" ) \n Set  objFIVs  =  objFolderItem . Verbs ( ) \n For  i = 0   To  objFIVs . Count  -   1 \n     \' MsgBox objFIVs.Item(i) \n     Set  objFIV  =  objFIVs . Item ( i ) \n     If  objFIV . Name  =   "打开(&O)"   Then   \'右键菜单中在中文系统是"打开(&O)"，英文自己改 \n        objFIV . DoIt\n         Exit   For \n     End   IF \n Next \n 特殊文件夹 \n \n SpecialFolders 属性提供 WshSpecialFolders 对象以便访问 Windows 的 shell 文件夹 \n \n \n 使用： WshShell.SpecialFolders("strFolderName") ，如果没有查询的目录则返回 NULL \n \n \n \n \n 变量名 \n 说明 \n \n \n \n \n AllUsersDesktop \n 公共桌面 \n \n \n AllUsersStartMenu \n 公共程式 \n \n \n AllUsersPrograms \n 公共程序 \n \n \n AllUsersStartup \n 公共启动 \n \n \n Desktop \n 桌面 \n \n \n Favorites \n 收藏 \n \n \n Fonts \n 字体 \n \n \n MyDocuments \n 我的文档 \n \n \n NetHood \n 网络 \n \n \n PrintHood \n 打印机 \n \n \n Programs \n 程序 \n \n \n Recent \n 最近 \n \n \n SendTo \n 发给 \n \n \n StartMenu \n 开始菜单 \n \n \n Startup \n 启动 \n \n \n Templates \n 模板 \n \n \n AppData \n 应用程序数据 \n 模拟按键 \n \n https://docs.microsoft.com/zh-cn/windows/win32/inputdev/user-input \n \n \n SendKeys 键击参数说明\n \n Enter 回车建表示 {Enter} 、字母 A 表示 {A} 、数字 2 表示 {2} 等\n \n 示例 Wshshell.SendKeys("{Enter}") 、 Wshshell.SendKeys("{A}") 、 Wshshell.SendKeys("{2}") \n \n \n 组合键 Shift 用 + 代替、 Ctrl 用 ^ 代替、 Alt 用 % 代替\n \n 示例 Wshshell.SendKeys("+%{DELETE}") 、 Wshshell.SendKeys("^{C}") 、 Wshshell.SendKeys("^{V}") \n \n \n 模拟快捷键 Ctrl + S 保存内容： Wshshell.SendKeys("^{s}") \n 使用 +{f10} 可以z有限制地方调用，如调用桌面菜单 {f5}+{f10} \n WMI和MI \n \n Windows Management Instrumentation（WMI）的新版本是 Windows Management Infrastructure (MI) \n \n \n SWBEM 脚本是可以用来访问和控制WMI内部对象的一系列可用在脚本中的对象，\n脚本通过访问 wbemdisp.dll 这个 library 来访问 VMI 对象，这个仅被设计用来为脚本工作。 \n \n \n 查询方式类似sql语句（其实系统信息也是存储在计算中一个类似数据库的文件中）获取我们需要的对象的记录集 \n \n \n WMI参考 \n Windows Management Instrumentation（WMI） \n \n \n 为什么要使用Windows Management Infrastructure (MI) \n \n \n WbemScripting脚本API对象 \n 系统注册表提供者 \n Win32 Provider-可以看到表对应的字段有哪些 \n \n \n \n \n 表名 \n 说明 \n \n \n \n \n Win32_BaseBoard \n 主板 \n \n \n Win32_BIOS \n BIOS芯片 \n \n \n Win32_BootConfiguration \n 系统启动配置 \n \n \n Win32_CDROMDrive \n 光盘驱动器 \n \n \n Win32_ComputerSystem \n 操作系统信息，系统位数 \n \n \n Win32_DesktopMonitor \n 显示器 \n \n \n Win32_DiskDrive \n 硬盘驱动器 \n \n \n Win32_DiskPartition \n 磁盘分区 \n \n \n Win32_Group \n 系统管理组 \n \n \n Win32_GroupUser \n 系统组帐号 \n \n \n Win32_Keyboard \n 键盘 \n \n \n Win32_LogicalDisk \n 逻辑磁盘 \n \n \n Win32_LogicalMemoryConfiguration \n 逻辑内存配置 \n \n \n Win32_NetworkAdapter \n 网络适配器 \n \n \n Win32_NetworkAdapterConfiguration \n 网络适配器设置 \n \n \n Win32_NetworkClient \n 已安装的网络客户端 \n \n \n Win32_NetworkProtocol \n 已安装的网络协议 \n \n \n Win32_OperatingSystem \n 操作系统信息，系统版本 \n \n \n Win32_PageFile \n 系统页文件信息 \n \n \n Win32_PageFileSetting \n 页文件设置 \n \n \n Win32_ParallelPort \n 并口 \n \n \n Win32_PhysicalMemory \n 物理内存 \n \n \n Win32_PointingDevice \n 点输入设备，如鼠标 \n \n \n Win32_POTSModem \n MODEM \n \n \n Win32_POTSModemToSerialPort \n MODEM端口 \n \n \n Win32_Printer \n 打印机 \n \n \n Win32_PrinterConfiguration \n 打印机设置 \n \n \n Win32_PrintJob \n 打印机任务 \n \n \n Win32_Process \n 系统进程 \n \n \n Win32_Processor \n CPU处理器 \n \n \n Win32_SerialPort \n 串口 \n \n \n Win32_Service \n 系统安装的服务 \n \n \n Win32_Share \n 共享 \n \n \n Win32_SoundDevice \n 多媒体设置 \n \n \n Win32_StartupCommand \n 系统自动启动程序 \n \n \n Win32_SystemDriver \n 驱动程序 \n \n \n Win32_TCPIPPrinterPort \n 打印机端口 \n \n \n Win32_Thread \n 系统线程 \n \n \n Win32_TimeZone \n 时区 \n \n \n Win32_USBController \n USB控制器 \n \n \n Win32_UserAccount \n 用户帐号 \n \n \n Win32_VideoController \n 显卡细节。 \n \n \n Win32_VideoSettings \n 显卡支持的显示模式。 \n \n \n Win32_ScheduledJob \n 创建一个作业AT命令（不是任务计划） \n \n \n Win32_NetworkLoginProfile \n 一个特定的用户运行Windows的计算机系统上的网络登录信息。 \n \n \n MSFT_NetAdapter \n 逻辑网络适配器 \n \n \n Win32_NetworkConnection \n 一个基于Windows的环境中活动的网络连接 \n \n \n \n 创建SWbemServices对象方式 \n \n SWbemServices object \n \n Set  objLocator  =  CreateObject ( "WbemScripting.SWbemLocator" ) \n Set  objService  =  objLocator . ConnectServer ( "." ,   "root\\cimv2" ) \n\n \' 隐式使用本地计算机(.) 和默认名称空间("root\\cimv2") \n Set  objWMIService  =  GetObject ( "winmgmts:" ) \n\n Set  objinst  =  GetObject ( "WinMgmts:Win32_LogicalDisk" ) \n\n Set  objWMIService  =  GetObject ( "winmgmts:root\\cimv2" ) \n\n Set  objWMIService  =  GetObject ( "winmgmts://./root/cimv2" ) \n\n Set  objWMIService  =  GetObject ( "winmgmts:\\\\.\\root\\cimv2" ) \n\n Set  objWMIService  =  GetObject ( "winmgmts:{impersonationlevel=impersonate}!\\\\.\\root\\cimv2" ) \n\n \' wmi与cimv2不同 \n Set  objWMIService  =  GetObject ( "winmgmts:\\\\.\\root\\wmi" ) \n \n // JScript. \n var  LoginProfiles  =   GetObject ( "winmgmts:" ) . InstancesOf   ( "Win32_NetworkLoginProfile" ) ; \n for ( e  =   new   Enumerator ( LoginProfiles )   ;   ! e . atEnd ( )   ;  e . moveNext ( ) )   { \n    var  Profile  =  e . item ( ) ; \n   WScript . Echo ( Profile . Name ) ; \n   WScript . Echo ( Profile . LastLogon ) ; \n } \n \n ',createdTime:1761814324e3},{title:"WindowsVBScript",frontmatter:{description:"VBScript)\nVisual Basic 指南\nVBScript语言参考\nVBScript基础知识\nVBScript 语言\nVBScript 教程\nVBScript 函数\nhttps://github.com/MishaVernik/WScirpt",meta:[{name:"twitter:title",content:"WindowsVBScript"},{name:"twitter:description",content:"VBScript)\nVisual Basic 指南\nVBScript语言参考\nVBScript基础知识\nVBScript 语言\nVBScript 教程\nVBScript 函数\nhttps://github.com/MishaVernik/WScirpt"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Shell/WindowsVBScript.html"},{property:"og:type",content:"article"},{property:"og:title",content:"WindowsVBScript"},{property:"og:description",content:"VBScript)\nVisual Basic 指南\nVBScript语言参考\nVBScript基础知识\nVBScript 语言\nVBScript 教程\nVBScript 函数\nhttps://github.com/MishaVernik/WScirpt"},{property:"og:url",content:"https://bajins.com/Shell/WindowsVBScript.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"WindowsVBScript"},{itemprop:"description",content:"VBScript)\nVisual Basic 指南\nVBScript语言参考\nVBScript基础知识\nVBScript 语言\nVBScript 教程\nVBScript 函数\nhttps://github.com/MishaVernik/WScirpt"}]},regularPath:"/Shell/WindowsVBScript.html",relativePath:"Shell/WindowsVBScript.md",key:"v-1174bde6",path:"/Shell/WindowsVBScript.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"特殊符号",slug:"特殊符号"},{level:2,title:"函数封装",slug:"函数封装"},{level:3,title:"自动关闭弹窗",slug:"自动关闭弹窗"},{level:3,title:"数组转换为字符串",slug:"数组转换为字符串"},{level:3,title:"获取对象的属性和值",slug:"获取对象的属性和值"},{level:3,title:"获取系统信息",slug:"获取系统信息"},{level:3,title:"隐藏窗口运行",slug:"隐藏窗口运行"},{level:3,title:"查看进程是否存在",slug:"查看进程是否存在"},{level:3,title:"Ping",slug:"ping"},{level:3,title:"监视网络连接",slug:"监视网络连接"},{level:3,title:"监视网络断开",slug:"监视网络断开"},{level:3,title:"设置壁纸",slug:"设置壁纸"},{level:3,title:"刷新桌面",slug:"刷新桌面"},{level:3,title:"字符编码转换",slug:"字符编码转换"},{level:3,title:"选择文件对话框",slug:"选择文件对话框"},{level:3,title:"文件编码转换",slug:"文件编码转换"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' WindowsVBScript \n Flag 特殊符号 函数封装 自动关闭弹窗 数组转换为字符串 获取对象的属性和值 获取系统信息 隐藏窗口运行 查看进程是否存在 Ping 监视网络连接 监视网络断开 设置壁纸 刷新桌面 字符编码转换 选择文件对话框 文件编码转换 \n Flag \n \n https://github.com/DoctorLai \n \n https://isvbscriptdead.com \n \n \n 批处理之家  http://www.bathome.net \n 中国DOS联盟  DOS批处理 & 脚本技术（批处理室） \n \n \n VBScript \n Visual Basic 指南 \n VBScript语言参考 \n VBScript基础知识 \n VBScript 语言 \n VBScript 教程 \n VBScript 函数 \n https://github.com/MishaVernik/WScirpt \n \n \n VBScript MsgBox 函数 \n 特殊符号 \n \n String Constants \n \n \n \n \n 常数 \n 值 \n 描述 \n \n \n \n \n vbCr \n Chr(13) \n 回车符  \\r \n \n \n vbLf \n Chr(10) \n 换行符  \\n \n \n \n vbCrLf \n Chr(13)&Chr(10) \n 回车符与换行符  \\r\\n \n \n \n vbFormFeed \n Chr(12) \n 换页符；在MicrosoftWindows中不适用。 \n \n \n vbNewLine \n Chr(13)&Chr(10)或Chr(10) \n 平台指定的新行字符；适用于任何平台。 \n \n \n vbNullChar \n Chr(0) \n 值为0的字符。 \n \n \n vbNullString \n 值为0的字符串 \n 与零长度字符串("")不同；用于调用外部过程。 \n \n \n vbTab \n Chr(9) \n 水平附签。 \n \n \n vbVerticalTab \n Chr(11) \n 垂直附签；在MicrosoftWindows中不用 \n 函数封装 \n \n https://github.com/eklam/VbsJson \n 进度条 \n 进度条 \n WScript/VBScript实现ZIP文件的压缩或解压(ZipCompressor) \n \n Set  regex  =   New  RegExp\n Set  regex  =  CreateObject ( "VBScript.RegExp" ) \nregex . Global   =   True \nregex . MultiLine  =   True \nregex . Pattern  =   "^\\s*\\n" \nstr  =  regex . Replace ( str ,   "" ) \n 自动关闭弹窗 \n \' TimeOut 单位为秒 \n Public   Sub  MsgBoxTimeout ( Text ,  Title ,  TimeOut ) \n     Set  WshShell  =  CreateObject ( "WScript.Shell" ) \n    WshShell . Popup Text ,  TimeOut ,  Title\n End   Sub \n 数组转换为字符串 \n \'数组转换为字符串 \n \'Writer         Bajins \n \'Create Date    2019-10-22 \n \'arrayName      数组 \n \'separator      separator \n \'Example        ConvertArrayToString(array, ",") \n Public   Function  ConvertArrayToString ( array ,  separator ) \n     Dim  elementString\n\n     For   Each  element  In  array\n        elementString  =  elementString  +   Cstr ( element )   +  separator\n     Next \n\n    elementString  =  StrReverse ( elementString ) \n    elementString  =  Replace ( elementString ,  separator , "" , 1 , 1 ) \n    elementString  =  StrReverse ( elementString ) \n     \' 设置返回值 \n    ConvertArrayToString  =  elementString\n End   Function \n 获取对象的属性和值 \n \' 获取对象的属性和值 \n \'Writer         Bajins \n \'Create Date    2019-10-22 \n \'obj            对象 \n \'Example        GetObjectPropertieValue(obj) \n Public   Function  GetObjectPropertieValue ( obj ) \n     IF   Not  IsObject ( obj )   Then \n         \'Exit Function \n        Err . Raise Err . Number\n     END   IF \n    \n     Dim  kv\n    \n     For   Each  Propertie  in  obj . Properties_\n       kv  =  kv  &  Propertie . name  &   " : "   &  Propertie . value  &  vbCrLf\n     Next \n    \n    kv  =   "属性数量："   &  obj . Properties_ . count  &  vbCrLf  &  kv\n    \n     \' 设置返回值 \n    GetObjectPropertieValue  =  kv\n End   Function \n 获取系统信息 \n \n 此方式完全不会显示 CMD 窗口（包括闪现） \n \n \' 获取系统位数 \n \'Writer         Bajins \n \'Create Date    2019-10-22 \n \'Example        GetSystemBit() \n Public   Function  GetSystemBit ( ) \n     Set  WMIService  =  GetObject ( "winmgmts:{impersonationlevel=impersonate}!\\\\.\\root\\cimv2" ) \n     Set  ComputerSystem  =  WMIService . InstancesOf ( "Win32_ComputerSystem" ) \n\n     For   Each  System  in  ComputerSystem\n         IF  InStr ( System . SystemType , "86" )   >   0   Then \n            GetSystemBit  =   "i386" \n             Exit   For \n         End   IF \n        \n         IF  InStr ( System . SystemType , "64" )   >   0   Then \n            GetSystemBit  =   "amd64" \n             Exit   For \n         End   IF \n     Next \n\n End   Function \n \n Set  objWMIService  =  GetObject ( "winmgmts://./root/cimv2" ) \n \'通过wmi获取激活状态的网络适配器对象后，读取IPAddress、Description、MACAddress \n Set  adapters  =  objWMIService . ExecQuery ( "Select * From Win32_NetworkAdapterConfiguration Where IPEnabled = True" ) \n Set  wshell  =  Wscript . CreateObject ( "Wscript.Shell" ) \n\n \'直接从环境变量里取计算机名、当前用户名 \nresult  = "HOSTNAME: 【"   &  wshell . ExpandEnvironmentStrings ( "%COMPUTERNAME%" )   &   _  \n         "】"   &  vbcrlf  &   "USER: 【"   &  wshell . ExpandEnvironmentStrings ( "%USERNAME%" )   &   "】" \n\n For   Each  adapter  in  adapters\n   With  adapter\n    result  =  result  &  vbcrlf  &  vbcrlf  &   . Description  &   ":"   &   _  \n            vbcrlf  &   "MAC:【"   &   . MACAddress  &   "】"   &  vbcrlf  &   "IP:【"   &   join ( . IPAddress ,   ", " )   &   "】" \n   End   With \n Next \n\nmsgbox result\n 隐藏窗口运行 \n \' 创建运行命令数组 \ncommands  =  Array ( "D:\\frp内网穿透工具\\frpc.exe -c D:\\frp内网穿透工具\\frpc.ini" ) \n\n \' 创建运行命令动态数组 \n \'Set commands = CreateObject("System.Collections.ArrayList") \n \'commands.Add "D:\\frp内网穿透工具\\frpc.exe -c D:\\frp内网穿透工具\\frpc.ini" \n\n \' 启动项键名称 \nkeyName  =   "frp" \n\n Set  shell  =  WScript . CreateObject ( "WScript.Shell" ) \n\n For   Each  command  In  commands\n     \' cmd /c运行之后关闭窗口，0隐藏运行，false不同步运行 \n    shell . Run  "cmd /c "   &  command ,   0 ,   false \n Next \n\n \' 注册表项 \nitem  =   "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\" \n\n \' 设置开机启动 \nshell . RegWrite item  &  keyName ,  WScript . ScriptFullName\n \n Shell.Application \n CreateObject ( "Shell.Application" ) . ShellExecute  "demo.exe" , "" , "c:/" , "" ,   0 \n 查看进程是否存在 \n ProcesseName = "rclone.exe" \n\n \' 查找进程 \n Set  WMIService  =  GetObject ( "winmgmts:{impersonationlevel=impersonate}!\\\\.\\root\\cimv2" ) \n Set  Processes  =  WMIService . ExecQuery ( "select * from win32_process where name=\'"   &  ProcesseName  &   "\'" ) \n\n For   Each  Process  In  Processes\n     \' 比较两个字符串 \n     If  InStr ( UCase ( Process . name ) ,  UCase ( ProcesseName ) )   =   0   Then \n         \' 如果进程存在就不重复执行后面的代码 \n         Exit   for \n     End   If \n     \' 运行程序 \n     Set  WS  =  Wscript . CreateObject ( "Wscript.Shell" ) \n    WS . Run  "rclone mount GDrive:/ x: --cache-dir F:\\Temp --vfs-cache-mode writes" ,   0 \n Next \n Ping \n Function  Ping ( strHostName )  \n   Dim  colPingResults ,  objPingResult ,  strQuery \n   \' 定义WMI查询 \n  strQuery  =   "SELECT * FROM Win32_PingStatus WHERE Address = \'"   &  strHostName  &   "\'"  \n   \' 运行WMI查询 \n   \' GetObject("winmgmts://./root/cimv2") \n   Set  colPingResults  =  GetObject ( "winmgmts:root\\cimv2" ) . ExecQuery ( strQuery )  \n   \' 将查询结果转换为True或False \n   For   Each  objPingResult  In  colPingResults \n     If   Not  IsObject ( objPingResult )   Then  \n      Ping  =   False  \n     Else  \n       If  objPingResult . StatusCode  =   0   Then  \n        Ping  =   True  \n       Else  \n        Ping  =   False  \n       End   If  \n       \'WScript.Echo "Ping status code for " & strHostName & ": " & objPingResult.StatusCode  \n     End   If  \n   Next  \n   Set  colPingResults  =   Nothing  \n End   Function \n 监视网络连接 \n Set  objWMIService  =  GetObject ( "winmgmts:\\\\.\\root\\wmi" ) \n \' 执行事件订阅查询以接收事件。事件订阅查询定义了要监视的托管环境的更改。发生更改时，WMI基础结构会将事件描述为调用脚本。 \n Set  colMonitoredEvents  =  objWMIService . ExecNotificationQuery ( "Select * from MSNdis_StatusMediaConnect" )  \n Do   While   True  \n     Set  strLatestEvent  =  colMonitoredEvents . NextEvent \n    Wscript . Echo  "已建立网络连接：" \n    WScript . Echo strLatestEvent . InstanceName ,  Now\n    Wscript . Echo \n Loop \n 监视网络断开 \n Set  objWMIService  =  GetObject ( "winmgmts:\\\\.\\root\\wmi" ) \n \' 执行事件订阅查询以接收事件。事件订阅查询定义了要监视的托管环境的更改。发生更改时，WMI基础结构会将事件描述为调用脚本。 \n Set  colMonitoredEvents  =  objWMIService . ExecNotificationQuery ( "Select * from MSNdis_StatusMediaDisconnect" )  \n Do   While   True  \n     Set  strLatestEvent  =  colMonitoredEvents . NextEvent \n    Wscript . Echo  "网络连接已丢失：" \n    WScript . Echo strLatestEvent . InstanceName ,  Now\n Loop \n 设置壁纸 \n \n 使用API触发图片文件右键菜单上的  设置为桌面背景(B) \n \n Set  shApp  =  CreateObject ( "Shell.Application" ) \n \' 获取文件 \n Set  picFile  =  CreateObject ( "Scripting.FileSystemObject" ) . GetFile ( "C:\\Users\\bajin\\Desktop\\CachedImage_1920_1080_POS4.jpg" ) \n \' 获取文件上的所有右键菜单项 \n \' Set items = shApp.NameSpace(picFile.ParentFolder.Path).ParseName(picFile.Name).Verbs() \n Set  items  =  shApp . NameSpace ( picFile . ParentFolder . Path ) . Items ( ) . Item ( picFile . Name ) . Verbs ( ) \n \' 遍历所有菜单项 \n \' For i=0 To items.Count - 1 \n \' Set item = items.Item(i) \n For   Each  item  In  items\n     \' 注意执行的脚本文件需要为简体中文编码 \n     If  item . Name  =   "设置为桌面背景(&B)"   Then \n     \' If strcomp(item.Name,"设置为桌面背景(&B)") = 0 Then \n        item . DoIt\n     END   IF \n Next \n 刷新桌面 \n \' 切换到桌面 \nCreateObject ( "Shell.Application" ) . ToggleDesktop ( ) \n \' 刷新桌面 \nCreateObject ( "WScript.Shell" ) . SendKeys ( "{F5}" ) \n\n Set  WSHShell  =  CreateObject ( "WScript.Shell" ) \n \' 切换到桌面 \n \'WSHShell.AppActivate("Program Manager") \nWSHShell . AppActivate ( WSHShell . SpecialFolders ( "Desktop" ) ) \n \' 刷新桌面 \nWSHShell . SendKeys ( "{F5}" ) \n\n \' 下面这两种方式没看出效果 \nCreateObject ( "shell.application" ) . Namespace ( 0 ) . Self . invokeVerb ( "R&efresh" ) \nCreateObject ( "shell.application" ) . Namespace ( &H10 ) . Self . invokeVerb ( "Refresh" ) \n\n \' 刷新桌面、任务栏、OSD（相当于重启资源管理器） \n Set  WSHShell  =  CreateObject ( "WScript.Shell" ) \nWSHShell . Run  "regsvr32.exe /s /n /i:/UserInstall %SystemRoot%\\system32\\themeui.dll" ,   0 ,   True \n\n \' 效果不太好，有时刷新成功，有时失败 \n Set  WSHShell  =  CreateObject ( "WScript.Shell" ) \nWSHShell . Run  "RunDll32 USER32,UpdatePerUserSystemParameters" ,   0 ,   True \n\n \' assoc文件关联时会自动刷新桌面，可能报错 \n Set  WSHShell  =  CreateObject ( "WScript.Shell" ) \nWSHShell . Run  "assoc .=." ,   0 ,   True \n\n \' 重启资源管理器并恢复打开的目录，暂时不可用 \n Function  RestartExplorer ( ) \n     Dim  arrURL ( ) \n    n  =   - 1 \n     Set  shApp  =  CreateObject ( "Shell.Application" ) \n     \' 遍历所有打开的窗口 \n     For   Each  oWin  In  shApp . Windows\n         \' 如果打开的窗口为资源管理器 \n         If  Instr ( 1 ,  oWin . FullName ,   "\\explorer.exe" ,  vbTextCompare )   Then \n            n  =  n  +   1 \n             ReDim  Preserve arrURL ( n ) \n            arrURL ( n )   =  oWin . LocationURL\n             \'oWin.Document.folder.title \n             \' 关闭当前打开的文件夹 \n             \'oWin.quit \n         End   If \n     Next \n     \' 结束资源管理器进程 \n    CreateObject ( "WScript.Shell" ) . Run  "taskkill /f /im explorer.exe >nul 2>nul&start explorer.exe" ,   0 ,   True \n     \' 遍历并打开之前的窗口 \n     For   Each  strURL  In  arrURL\n         \'shApp.Open strURL \n        shApp . Explore strURL\n     Next \n End   Function \n 字符编码转换 \n \' 将UTF8编码文字转换为GB编码文字 \n function  UTF2GB ( UTFStr ) \n     for  Dig = 1   to  len ( UTFStr ) \n     \'如果UTF8编码文字以%开头则进行转换 \n     if  mid ( UTFStr , Dig , 1 ) = "%"   then \n         \'UTF8编码文字大于8则转换为汉字 \n         if  len ( UTFStr )   > =  Dig + 8   then \n            GBStr = GBStr  &  ConvChinese ( mid ( UTFStr , 9 ) ) \n            Dig = Dig + 8 \n         else \n            GBStr = GBStr  &  mid ( UTFStr , 1 ) \n         end   if \n     else \n        GBStr = GBStr  &  mid ( UTFStr , 1 ) \n     end   if \n     next \n    UTF2GB = GBStr\n end   function \n\n \' UTF8编码文字将转换为汉字 \n function  ConvChinese ( x ) \n     A = split ( mid ( x , 2 ) , "%" ) \n     i = 0 \n     j = 0 \n   for  i = 0   to  ubound ( A ) \n       A ( i ) = c16to2 ( A ( i ) ) \n   next \n   for  i = 0   to  ubound ( A ) - 1 \n      DigS = instr ( A ( i ) , "0" ) \n      Unicode = "" \n     for  j = 1   to  DigS - 1 \n       if  j = 1   then \n          A ( i ) = right ( A ( i ) , len ( A ( i ) ) - DigS ) \n          Unicode = Unicode  &  A ( i ) \n       else \n           i = i + 1 \n           A ( i ) = right ( A ( i ) , len ( A ( i ) ) - 2 ) \n           Unicode = Unicode  &  A ( i ) \n       end   if \n     next \n \n     if  len ( c2to16 ( Unicode ) ) = 4   then \n         ConvChinese = ConvChinese  &  chrw ( int ( "&H"   &  c2to16 ( Unicode ) ) ) \n     else \n         ConvChinese = ConvChinese  &  chr ( int ( "&H"   &  c2to16 ( Unicode ) ) ) \n     end   if \n   next \n end   function \n \n \'二进制代码转换为十六进制代码 \n function  c2to16 ( x ) \n    i = 1 \n     for  i = 1   to  len ( x )   step   4 \n            c2to16 = c2to16  &  hex ( c2to10 ( mid ( x , i , 4 ) ) ) \n     next \n end   function \n \'二进制代码转换为十进制代码 \n function  c2to10 ( x ) \n    c2to10 = 0 \n     if  x = "0"   then   exit   function \n        i = 0 \n     for  i =   0   to  len ( x )   - 1 \n         if  mid ( x , len ( x ) - i , 1 ) = "1"   then  c2to10 = c2to10 + 2 ^ ( i ) \n     next \n end   function \n \n \'十六进制代码转换为二进制代码 \n function  c16to2 ( x ) \n    i = 0 \n     for  i = 1   to  len ( trim ( x ) ) \n        tempstr =  c10to2 ( cint ( int ( "&h"   &  mid ( x , 1 ) ) ) ) \n         do   while  len ( tempstr ) < 4 \n            tempstr = "0"   &  tempstr\n         loop \n        c16to2 = c16to2  &  tempstr\n     next \n end   function \n \n \'十进制代码转换为二进制代码 \n function  c10to2 ( x ) \n    mysign = sgn ( x ) \n    x = abs ( x ) \n    DigS = 1 \n     do \n         if  x < 2 ^ DigS  then \n         exit   do \n         else \n            DigS = DigS + 1 \n         end   if \n     loop \n        tempnum = x\n\n        i = 0 \n     for  i = DigS  to   1   step - 1 \n         if  tempnum > = 2 ^ ( i - 1 )   then \n            tempnum = tempnum - 2 ^ ( i - 1 ) \n            c10to2 = c10to2  &   "1" \n         else \n            c10to2 = c10to2  &   "0" \n         end   if \n     next \n     if  mysign = - 1   then  c10to2 = "-"   &  c10to2\n end   function \n \n \'GB转unicode---将GB编码文字转换为unicode编码文字 \n function  chinese2unicode ( Str ) \n   dim  i\n   dim  Str_one\n   dim  Str_unicode\n   if ( isnull ( Str ) )   then \n      exit   function \n   end   if \n   for  i = 1   to  len ( Str ) \n     Str_one = Mid ( Str , 1 ) \n     Str_unicode = Str_unicode & chr ( 38 ) \n     Str_unicode = Str_unicode & chr ( 35 ) \n     Str_unicode = Str_unicode & chr ( 120 ) \n     Str_unicode = Str_unicode &  Hex ( ascw ( Str_one ) ) \n     Str_unicode = Str_unicode & chr ( 59 ) \n   next \n   chinese2unicode = Str_unicode\n end   function    \n \n \'URL解码 \n Function  URLDecode ( enStr ) \n dim  deStr\n dim  c , v\ndeStr = "" \n for  i = 1   to  len ( enStr ) \n    c = Mid ( enStr , 1 ) \n     if  c = "%"   then \n    v = eval ( "&h" + Mid ( enStr , i + 1 , 2 ) ) \n     if  v < 128   then \n        deStr = deStr & chr ( v ) \n        i = i + 2 \n     else \n     if  isvalidhex ( mid ( enstr , 3 ) )   then \n         if  isvalidhex ( mid ( enstr , i + 3 , 3 ) )   then \n        v = eval ( "&h" + Mid ( enStr , 2 ) + Mid ( enStr , i + 4 , 2 ) ) \n        deStr = deStr & chr ( v ) \n        i = i + 5 \n         else \n        v = eval ( "&h" + Mid ( enStr , 2 ) + cstr ( hex ( asc ( Mid ( enStr , 1 ) ) ) ) ) \n        deStr = deStr & chr ( v ) \n        i = i + 3 \n         end   if \n     else \n        destr = destr & c\n     end   if \n     end   if \n     else \n     if  c = "+"   then \n        deStr = deStr & " " \n     else \n        deStr = deStr & c\n     end   if \n     end   if \n next \nURLDecode = deStr\n end   function \n \n \'判断是否为有效的十六进制代码 \n function  isvalidhex ( str ) \n     dim  c\n    isvalidhex = true \n    str = ucase ( str ) \n     if  len ( str ) < > 3   then  isvalidhex = false : exit   function \n     if  left ( str , 1 ) < > "%"   then  isvalidhex = false : exit   function \n    c = mid ( str , 2 , 1 ) \n     if   not   ( ( ( c > = "0" )   and   ( c < = "9" ) )   or   ( ( c > = "A" )   and   ( c < = "Z" ) ) )   then  isvalidhex = false : exit   function \n    c = mid ( str , 3 , 1 ) \n     if   not   ( ( ( c > = "0" )   and   ( c < = "9" ) )   or   ( ( c > = "A" )   and   ( c < = "Z" ) ) )   then  isvalidhex = false : exit   function \n end   function \n 选择文件对话框 \n Function  SelectFile ( ) \n     Set  WshShell  =  WScript . CreateObject ( "WScript.Shell" ) \n     Set  oExec  =  WshShell . Exec ( "powershell -WindowStyle Hidden -ExecutionPolicy Bypass "   &   _ \n     "[void][System.Reflection.Assembly]::LoadWithPartialName(\'System.Windows.Forms\');"   &   _ \n     "$dialog = New-Object \'System.Windows.Forms.OpenFileDialog\';"   &   _ \n     "$dialog.Title =\'请选择文件\';"   &   _ \n     "$dialog.filter =\'All|*.*|PowerShell|*.ps1\';"   &   _ \n     "if ($dialog.ShowDialog() -eq \'OK\') {$dialog.FileName;} Else {Out-Null}" ) \n    SelectFile  =  oExec . StdOut . ReadAll\n End   Function \n\n Function  SelectFile ( ) \n     \' GetStandardStream获取TextStream对象.参数：0输入流,1输出流,2错误流. \n     \' "new ActiveXObject(\'Scripting.FileSystemObject\').GetStandardStream(1).Write(f.value);" & _\n    hta="""about:<input type=file id=f><script>f.click();" & _\n        "new ActiveXObject(\'Scripting.FileSystemObject\').GetStandardStream(1).WriteLine(f.value);" & _\n        "close();resizeTo(0,0);<\/script>""" \n     \' 打开对话框 \n     Set  oExec  =  CreateObject ( "WScript.Shell" ) . Exec ( "mshta.exe "   &  hta ) \n\n    StrLine  =  oExec . StdOut . ReadLine\n     \' StrLine = oExec.StdOut.ReadAll \n     If  StrLine  < >   ""   And  InStr ( StrLine ,  Chr ( 13 ) )   >   0   Then \n         \' SelectFile = Left(StrLine, Pos - 1) \n        SelectFile  =  StrLine\n     Else \n        SelectFile  =   "" \n     End   If \n End   Function \n\n \' sIniDir 为初始化目录 \n \' sFilter 为文件后缀 示例："*.*,*.txt" \n Function  GetFileDlgEx ( sIniDir ,  sFilter ,  sTitle ) \n    sIniDir  =  Replace ( sIniDir ,   "\\" ,   "\\\\" ) \n     \' Set regex = New RegExp \n     Set  regex  =  CreateObject ( "VBScript.RegExp" ) \n    regex . Global   =   True \n    regex . MultiLine  =   True \n    regex . Pattern  =   ";|\\|" \n    sFilter  =  regex . Replace ( sFilter ,   "," ) \n     DIM  sf\n     For   Each  i  In  Split ( sFilter ,   "," ) \n        sf  =  sf  &  i  &   "|"   &  i  &   "|" \n     Next \n    sFilter  =  sf\n    hta = """about:<object id=d classid=clsid:3050f4e1-98b5-11cf-bb82-00aa00bdce0b></object>"   &   _ \n     "<script>moveTo(0,-9999);"   &   _ \n     "eval(new ActiveXObject(\'Scripting.FileSystemObject\').GetStandardStream(0)"   &   _ \n     ".Read(" & Len ( sIniDir ) + Len ( sFilter ) + Len ( sTitle ) + 41 & "));"   &   _ \n     "function window.onload(){"   &   _ \n     "var p=/[^\\0]*/;"   &   _ \n     "new ActiveXObject(\'Scripting.FileSystemObject\').GetStandardStream(1)"   &   _ \n     ".Write(p.exec(d.object.openfiledlg(iniDir,null,filter,title)));"   &   _ \n     "close();"   &   _ \n     "}<\/script><hta:application showintaskbar=no />""" \n     Set  oDlg  =  CreateObject ( "WScript.Shell" ) . Exec ( "mshta.exe "   &  hta )  \n    oDlg . StdIn . Write  "var iniDir=\'"   &  sIniDir  &   "\';var filter=\'"   &  sFilter  &   "\';var title=\'"   &  sTitle  &   "\';"  \n    GetFileDlgEx  =  oDlg . StdOut . ReadAll \n End   Function \n\n\n Function  BrowseForFile ( ) \n     With  CreateObject ( "WScript.Shell" ) \n         Dim  fso  :   Set  fso  =  CreateObject ( "Scripting.FileSystemObject" ) \n         Dim  tempFolder  :   Set  tempFolder  =  fso . GetSpecialFolder ( 2 ) \n         Dim  tempName  :  tempName  =  fso . GetTempName ( )   &   ".hta" \n         Dim  path  :  path  =   "HKCU\\Volatile Environment\\MsgResp" \n         With  tempFolder . CreateTextFile ( tempName ) \n             . Write  "<input type=file name=f>"   &   _ \n             "<script>f.click();(new ActiveXObject(\'WScript.Shell\'))"   &   _ \n             ".RegWrite(\'HKCU\\\\Volatile Environment\\\\MsgResp\', f.value);"   &   _ \n             "close();<\/script>" \n             . Close\n         End   With \n         . Run tempFolder  &   "\\"   &  tempName ,   1 ,   True \n        BrowseForFile  =   . RegRead ( path ) \n         . RegDelete path\n        fso . DeleteFile tempFolder  &   "\\"   &  tempName\n     End   With \n End   Function \n\n\n Function  SelectFolder ( default ) \n     Set  objShell  =  CreateObject ( "Shell.Application" ) \n     If  IsNull ( default )   Then \n         \' Set objFolder = objShell.Namespace(&H11) \' 获取当前计算机 \n         \' default = objFolder.Self.Path \n         default   =   0 \n     End   If \n     \' https://docs.microsoft.com/zh-cn/windows/win32/shell/shell-browseforfolder \n     \' 第一个参数：为对话框的窗体句柄，一般设置为0 \n     \' 第二个参数：为打开窗体的说明 \n     \' 第三个参数：0/1/2/3/257/4097/8193/12289/16385/20481只从列表进行选择（列表内容不一样）， \n     \'       529没有路径输入框，513没有路径输入框和新建文件夹按钮，&H10（17）有路径输入框， \n     \'       &H4000可看到文件但选择将报错; \n     \' 第四个参数：起始路径根文件夹，0/12/15/16为桌面，1/2/3/4/5/6/7/8/9/10/11/13/14/17/18/19/20/21/22 \n     Set  Folder  =  objShell . BrowseForFolder ( 0 ,   "请选择一个文件夹:" ,   &H10   ,   default )  \n     If  Folder  Is   Nothing   Then  \n        SelectFolder  =   "" \n     Else \n        SelectFolder  =  Folder . Self . Path\n     End   If \n End   Function \n 文件编码转换 \n \n VBS处理UTF-8文本之ADODB.stream \n 文件编码转换.vbs \n \n 转换编码和换行符 \n Set  read  =  CreateObject ( "Adodb.Stream" ) \nread . Type   =   2 \nread . mode  =   3 \nread . charset  =   "UTF-8" \nread . Open\nread . loadfromfile fdpath\ntext  =  read . ReadText ( - 1 ) \nread . flush\nread . Close\n Set  save  =  CreateObject ( "Adodb.Stream" ) \nsave . Type   =   2 \nsave . mode  =   3 \nsave . charset  =   "GB2312" \nsave . Open\nsave . WriteText replace ( text , vbLf , vbCrLf ) \nsave . SaveToFile fdpath ,   2 \nsave . flush\nsave . Close\n \n ',createdTime:1761814324e3},{title:"Android",frontmatter:{description:"https://github.com/appium\nhttps://github.com/ysbing/YADB\nhttps://github.com/yume-chan\nhttps://github.com/tango-adb\nhttps://tasker.joaoapps.com\nhttps://github.com/openatx/uiautomator2\nhttps://github.com/RikkaApps/Shizuku",meta:[{name:"twitter:title",content:"Android"},{name:"twitter:description",content:"https://github.com/appium\nhttps://github.com/ysbing/YADB\nhttps://github.com/yume-chan\nhttps://github.com/tango-adb\nhttps://tasker.joaoapps.com\nhttps://github.com/openatx/uiautomator2\nhttps://github.com/RikkaApps/Shizuku"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/Android.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Android"},{property:"og:description",content:"https://github.com/appium\nhttps://github.com/ysbing/YADB\nhttps://github.com/yume-chan\nhttps://github.com/tango-adb\nhttps://tasker.joaoapps.com\nhttps://github.com/openatx/uiautomator2\nhttps://github.com/RikkaApps/Shizuku"},{property:"og:url",content:"https://bajins.com/System/Android.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Android"},{itemprop:"description",content:"https://github.com/appium\nhttps://github.com/ysbing/YADB\nhttps://github.com/yume-chan\nhttps://github.com/tango-adb\nhttps://tasker.joaoapps.com\nhttps://github.com/openatx/uiautomator2\nhttps://github.com/RikkaApps/Shizuku"}]},regularPath:"/System/Android.html",relativePath:"System/Android.md",key:"v-688e457b",path:"/System/Android.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"自动化",slug:"自动化"},{level:2,title:"Hooking",slug:"hooking"},{level:2,title:"逆向工具",slug:"逆向工具"},{level:2,title:"第三方依赖",slug:"第三方依赖"},{level:2,title:"软件",slug:"软件"},{level:3,title:"其他",slug:"其他"},{level:3,title:"证件照",slug:"证件照"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Android \n Flag 自动化 Hooking 逆向工具 第三方依赖 软件 其他 证件照 \n Flag \n \n https://github.com/android \n \n https://android.googlesource.com \n https://developers.google.cn \n https://developer.android.google.cn \n https://source.android.google.cn \n https://developer.android.google.cn/jetpack/compose \n https://developer.android.google.cn/jetpack/androidx/compose-roadmap \n https://developer.android.google.cn/studio/run/win-usb \n 全网最全最细Android Studio 安装和使用教程 \n https://github.com/android-cn \n \n \n https://github.com/aosp-mirror \n \n https://github.com/AospExtended \n \n \n https://github.com/aosp-riscv \n https://github.com/GloDroid \n https://github.com/GrapheneOS \n \n https://github.com/CopperheadOS \n \n \n https://gitlab.com/iode \n https://github.com/lineageos \n https://github.com/inferjay/AndroidDevTools \n \n https://www.androiddevtools.cn \n \n \n https://android-arsenal.com \n https://github.com/idisfkj/android-api-analysis \n 静态代码分析  https://github.com/lingochamp/okcheck \n https://github.com/ChaitanyaPramod/findbugs-android \n \n \n IDE  https://developer.android.google.cn/studio \n \n https://github.com/Vove7/retrofit-rest-client \n \n \n https://blynk.cloud \n 解决合并冲突Gradle插件  https://github.com/2BAB/Seal \n trace 工具  https://github.com/bytedance/btrace \n 备份提取  https://github.com/nelenkov/android-backup-extractor \n ROM制作  https://github.com/AiKirito/UY-Sct \n adb logcat日志  https://github.com/nieheyong/logcat-in-devtools \n adb桌面  https://github.com/liriliri/aya \n \n \n Java各版本支持情况  https://github.com/JakeWharton/agp-java-support \n https://darwinsys.com/mobile \n https://github.com/xieyuliang/Note-Android \n https://github.com/pengxurui/AndroidFamily \n https://github.com/IanDarwin \n 面试题  https://github.com/Blankj/AndroidOfferKiller \n https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode \n https://github.com/pengMaster/BestNote \n https://github.com/Omooo/Android-Notes \n https://github.com/simple-android-framework \n https://github.com/javayhu \n 归档 | Homurax's Blog \n Android：JNI 与 NDK到底是什么？ \n https://github.com/LoseNine/AndroidSystem \n 进程保活  https://github.com/peakerlu/appkeepLive \n 「安卓果酱」存档 \n adb和fastboot  https://github.com/fast-geek/Android-Tool \n https://github.com/yangchong211/YCAndroidTool \n 在linux下运行安卓应用xDroid  https://www.linzhuotech.com \n https://github.com/anbox/anbox \n \n Linux上运行安卓应用:安装使用Anbox \n \n \n https://github.com/waydroid/waydroid \n 解决雷电/夜神/逍遥模拟器系统5.1以上无法抓包的问题 \n PC显示和控制  https://github.com/Genymobile/scrcpy \n \n https://github.com/Tomotoes/scrcpy-gui \n \n \n HDR和SDR转换  https://github.com/JonaNorman/HDRSample \n 自动化 \n \n https://github.com/appium \n https://github.com/ysbing/YADB \n https://github.com/yume-chan \n https://github.com/tango-adb \n https://tasker.joaoapps.com \n https://github.com/openatx/uiautomator2 \n https://github.com/RikkaApps/Shizuku \n \n Auto.js \n \n JavaScript自动化工具 \n \n \n https://github.com/search?q=autojs \n https://github.com/topics/autojs \n \n \n https://github.com/topics/accessibilityservice \n \n \n https://github.com/hyb1996/Auto.js \n \n https://github.com/SuperMonster002/Hello_Sockpuppet \n \n \n https://github.com/TonyJiangWJ/AutoScriptBase \n https://github.com/demoshang/autojs-replace-inrt \n https://github.com/easy-click/easyclick-libs \n https://github.com/snailuncle/autojsDemo \n https://github.com/ivanwhaf/xxqg-helper \n https://github.com/hamibot \n https://github.com/TonyJiangWJ/Auto.js \n https://github.com/autox-community/AutoX \n https://github.com/aiselp/AutoX \n https://github.com/SuperMonster003/AutoJs6 \n \n \n https://github.com/Orange-shirt/OrangeJs \n https://github.com/georgehuan1994/DingDing-Automatic-Clock-in \n 蚂蚁森林能量  https://github.com/SuperMonster003/Ant-Forest \n https://github.com/kwu130/Alipay \n 钉钉打卡  https://github.com/rxrw/autojs-dingtalk \n Hooking \n \n https://github.com/topics/xposed \n https://github.com/topics/inline-hook \n \n \n https://github.com/rovo89/Xposed \n \n https://repo.xposed.info \n 非root的Xposed  https://github.com/lianglixin/SandVXposed \n https://github.com/GravityBox/GravityBox \n https://forum.xda-developers.com/f/xposed-general.3094 \n \n \n https://github.com/topjohnwu/Magisk \n \n https://github.com/Zackptg5/MMT-Extended \n https://github.com/nakixii/Magisk_AsoulOpt \n \n \n EdXposed  https://github.com/ElderDrivers \n Riru  https://github.com/RikkaApps \n 梦境框架  https://github.com/canyie/Dreamland \n https://github.com/LSPosed \n \n https://github.com/Xposed-Modules-Repo \n https://github.com/ThePieMonster/HideMockLocation \n https://www.ghxi.com/lsposed.html \n 起点阅读  https://github.com/xihan123/QDReadHook \n https://github.com/BookShared/BookShared \n \n \n BugHook（应用转生） \n Xpatch \n SPatch（天鉴） \n Zygisk \n https://github.com/mar-v-in/ArtHook \n https://github.com/canyie/pine \n https://github.com/avs333/Nougat_dlfunctions \n https://github.com/monkeylord/XServer \n https://github.com/Mocha-L/QuJing \n 虚拟定位  https://github.com/M66B/XPrivacyLua \n https://github.com/Lerist/FakeLocation \n https://github.com/WaterlooBridge/FakeLocation \n https://github.com/Mikotwa/FuckLocation \n https://github.com/pengliangAndroid/VirtualLocation \n https://github.com/virjarRatel/ratelvirtuallocation \n https://github.com/bigsinger/fakegps \n https://github.com/liujiayu5566/MockGps \n 模拟定位检测  https://github.com/kamaravichow/mockcheck-android \n https://github.com/GantMan/jail-monkey \n https://github.com/w568w/XposedChecker \n https://github.com/vvb2060/XposedDetector \n https://github.com/brevent/genuine \n 阻止运行  https://www.coolapk.com/apk/me.piebridge.forcestopgb \n 黑白门  https://www.coolapk.com/apk/com.example.bwappdoor \n Greenify绿色守护  https://www.coolapk.com/apk/com.oasisfeng.greenify \n 黑阈  https://www.coolapk.com/apk/me.piebridge.brevent \n \n https://brevent.jianyv.com \n https://brevent.sh \n \n \n Fuck Shell脱壳工具使用方法 \n \n https://www.lanzoui.com/i4qkz9e \n \n \n 反射大师 \n 灰色按钮  https://github.com/githubwing/DroidSword \n 获取ROOT  https://github.com/tiann/KernelSU \n \n 免ROOT \n \n https://github.com/asLody \n \n https://github.com/ServenScorpion/VirtualApp11 \n \n \n https://github.com/nnjun/BlackBox/network/members \n https://github.com/FBlackBox/BlackBox \n https://github.com/2-young-2-simple/VirtualApp \n https://github.com/didi/VirtualAPK \n https://github.com/android-hacker \n https://github.com/tiann/epic \n \n http://weishu.me/archives \n 钉钉模块  https://github.com/anysoft/xposed-rimet \n https://github.com/sky-wei/xposed-rimet \n \n \n 太极  https://github.com/taichi-framework \n \n https://github.com/Magisk-Modules-Repo \n https://github.com/artharyoung/TaiChi-ModuleList \n \n \n https://github.com/PAGalaxyLab/YAHFA \n https://github.com/turing-technician \n 黑盒  https://github.com/black-binary/BlackBox \n \n 虚拟机 \n \n android 12 phantom processes 分析 \n 安卓12解除进程限制的三种方式 \n \n \n 虚拟大师VMOS  http://www.vmos.cn \n \n https://www.coolapk.com/apk/com.vmos.pro \n https://github.com/Flytreels/vpro-romedit \n https://github.com/you2032/Pure-ROM \n https://www.ghxi.com/vmospro.html \n \n \n 光速虚拟机VPhoneGaGa  https://www.gsxnj.cn \n \n https://www.coolapk.com/apk/com.vphonegaga.titan \n \n \n 51虚拟机  https://51xnj.com \n https://zh.x8sb.com \n http://www.eaqiang.com \n 两仪  https://www.coolapk.com/apk/io.twoyi \n 逆向工具 \n \n Java反编译工具 \n \n \n https://github.com/rev1si0n/lamda \n https://github.com/iBotPeaches/Apktool \n \n https://github.com/TheCjw/scoop-retools \n \n \n https://github.com/venshine/decompile-apk \n 解析和打印Android Manifest文件  https://github.com/rednaga/axmlprinter \n https://github.com/google/android-classyshark \n 反混淆  https://github.com/CalebFenton/simplify \n http://apk-deguard.com \n https://github.com/vaibhavpandeyvpz/apkstudio \n \n \n https://github.com/CodingGay \n unity il2cpp逆向工程  https://github.com/Perfare/Il2CppDumper \n CFF Explorer进程PE查看  http://www.ntcore.com/exsuite.php \n \n https://github.com/bfosterjr/CFFExtensions \n https://github.com/Steve1920/courseManage \n \n \n 二进制反编译  https://github.com/uxmal/reko \n 提取/解压缩  https://github.com/Perfare/AssetStudio \n https://srpatch.cc \n 手机抓包神器HttpCanary \n NetCapture \n C-S架构渗透测试  https://github.com/theLSA/CS-checklist \n https://github.com/fireeye/flare-vm \n https://github.com/DynamoRIO/dynamorio \n https://github.com/libimobiledevice-win32/imobiledevice-net \n https://gfx-tools.com \n https://crowdin.com/project/proxydroid \n https://github.com/linchaolong/ApkToolPlus \n https://github.com/lxdvs/apk2gold \n https://github.com/dana-at-cp/backdoor-apk \n https://github.com/stray-coding/android_decompile_tool \n https://github.com/jmpoep/vmprotect-3.5.1 \n 第三方依赖 \n \n https://github.com/search?q=vertica \n https://github.com/Trinea/android-open-project \n \n \n https://github.com/chrisbanes \n https://github.com/JakeWharton \n https://github.com/hehonghui \n https://github.com/dlew \n https://github.com/litao0621 \n https://github.com/DSAppTeam \n https://github.com/cashapp \n https://github.com/xuexiangjys \n https://github.com/Baseflow \n https://github.com/getActivity \n https://github.com/LiushuiXiaoxia \n https://github.com/afkT/DevUtils \n https://github.com/DyncKathline \n https://github.com/wave-chtj/BaseIotUtils \n https://github.com/l123456789jy/Lazy \n https://github.com/lihangleo2/Imgdots \n https://github.com/yangchong211/YCVideoPlayer \n https://github.com/guofudong/KotlinAndroid \n https://github.com/Justson/Downloader \n https://github.com/Justson/AgentWeb \n 运行时权限申请  https://github.com/ysbing/YPermission \n https://github.com/getActivity/XXPermissions \n 秒级编译方案  https://github.com/alibaba/freeline \n Android-FFmpeg开源库使用及图片压缩开源工具使用 \n https://sourceforge.net/projects/opencore-amr \n 查看包差异  https://github.com/JakeWharton/diffuse \n 使用SQLite  https://github.com/guolindev/LitePal \n https://github.com/requery/sqlite-android \n https://github.com/Tencent/wcdb \n https://github.com/objectbox \n \n https://github.com/greenrobot \n \n \n https://github.com/realm \n 反射  https://github.com/tiann/FreeReflection \n https://github.com/linkedin/dexmaker \n https://github.com/Dsiner/UIUtil \n https://github.com/jonfinerty/Once \n 打包  https://github.com/Meituan-Dianping/walle \n https://github.com/CtripMobile/DynamicAPK \n 签名  https://github.com/patrickfav/uber-apk-signer \n 媒体管理  https://github.com/bumptech/glide \n https://github.com/yanzhenjie/SwipeRecyclerView \n 启动时初始化  https://github.com/idisfkj/android-startup \n 停止应用程序  https://github.com/XYScience/StopApp \n 版本检测升级  https://github.com/AlexLiuSheng/CheckVersionLib \n 关于页面  https://github.com/medyo/android-about-page \n https://github.com/MegatronKing/StringFog \n zip压缩  https://github.com/zeroturnaround/zt-zip \n 对话框  https://github.com/afollestad/material-dialogs \n 许可证对话框  https://github.com/PSDev/LicensesDialog \n JQuery  https://github.com/jdeferred/jdeferred \n 播放器  https://github.com/Bilibili/ijkplayer \n https://github.com/CarGuo/GSYVideoPlayer \n https://github.com/androidx/media \n https://github.com/google/ExoPlayer \n 内存泄漏检测  https://github.com/square/leakcanary \n GPS  https://gitlab.com/gpsd/gpsd \n https://sourceforge.net/projects/viking \n https://github.com/navit-gps/navit \n https://gitlab.freedesktop.org/geoclue/geoclue \n 图片下载和缓存  https://github.com/square/picasso \n 串口  https://github.com/GeekBugs/Android-SerialPort \n 验证校验  https://github.com/thyrlian/AwesomeValidation \n https://github.com/ragunathjawahar/android-saripaar \n https://github.com/jiangxincode/ApkToolBoxGUI \n 断点续传  https://github.com/yaowen369/DownloadHelper \n https://github.com/majidgolshadi/Android-Download-Manager-Pro \n https://github.com/amitshekhariitbhu/PRDownloader \n https://github.com/lingochamp \n https://github.com/ssseasonnn/RxDownload \n https://github.com/Lanlinju/simple-download \n 蓝牙  https://github.com/BasicAirData/BluetoothHelper \n 图像裁剪  https://github.com/mike14u/croperino \n https://github.com/T8RIN/ImageToolbox \n 图表库  https://github.com/PhilJay/MPAndroidChart \n 图像加载  https://github.com/coil-kt/coil \n Lottie动画  https://github.com/orispok/OpenAnimationApp \n 翻页动效  https://github.com/PureWriter/FullDraggableDrawer \n 进度  https://github.com/lzyzsd/CircleProgress \n https://github.com/sunjinxi1994/EasyPoi \n 滚动  https://github.com/scwang90/SmartRefreshLayout \n 动态组件化  https://github.com/iqiyi/Qigsaw \n UI  https://github.com/Tencent/QMUI_Android \n https://github.com/dmytrodanylyk/circular-progress-button \n https://github.com/lapism/search \n https://github.com/airbnb/lottie-android \n https://github.com/li-xiaojun/XPopup \n https://github.com/material-components \n \n https://md.maxoxo.design \n \n \n 选择器  https://github.com/gzu-liyujiang/AndroidPicker \n 媒体播放  https://github.com/Chaintech-Network/ComposeMultiplatformMediaPlayer \n 多点触控  https://github.com/DeviceFarmer/minitouch \n https://github.com/MaaAssistantArknights/MaaTouch \n 密码存储  https://github.com/android-password-store \n 地图  https://github.com/organicmaps/organicmaps \n Tars协议  https://github.com/xiaoyaocz/dart_tars_protocol \n 日历  https://github.com/kizitonwose/Calendar \n TTS  https://github.com/jing332/tts-server-android \n 隐私合规检测  https://github.com/allenymt/PrivacySentry \n https://github.com/pengxurui/EasyPrivacy \n 崩溃报告  https://github.com/ACRA/acra \n 执行脚本  https://github.com/zhanghai/BeeShell \n \n 框架 \n \n https://github.com/ddnosh/AndroidQuick \n https://github.com/ddnosh?tab=repositories \n https://github.com/Meituan-Dianping/AppInit \n https://github.com/meituan/WMRouter \n https://github.com/fly803/BaseProject \n https://github.com/wendux/DSBridge-Android \n 专出网络框架的square \n \n \n 测试  https://github.com/robolectric \n \n 插件化框架 \n \n https://github.com/singwhatiwanna/dynamic-load-apk \n https://github.com/DroidPluginTeam/DroidPlugin \n https://github.com/wequick/Small \n DyLA : Dynamic-load-apk @singwhatiwanna, 百度 \n DiLA : Direct-Load-apk @FinalLody \n APF : Android-Plugin-Framework @limpoxe \n ACDD : ACDD @bunnyblue \n DyAPK : DynamicAPK @TediWang, 携程 \n DPG : DroidPlugin @cmzy, 360 \n 软件 \n \n https://github.com/topics/mobile-app \n https://github.com/topics/apk \n \n https://github.com/kivy/python-for-android \n https://github.com/safaiyeh/react-native-app-review \n https://github.com/rnkit/rnkit-in-app-update \n \n \n https://github.com/topics/playstore \n \n https://github.com/asmsh/go-playstore-scraper \n https://github.com/ClaudiuGeorgiu/PlaystoreDownloader \n https://github.com/aniketkatkar/GPlay-App-AutoInstaller \n https://github.com/NoMore201/googleplay-api \n https://github.com/onyxbits/raccoon4 \n https://github.com/feljor/playstore-scraper-with-api \n https://github.com/egodigital/node-google-play-store \n \n \n https://github.com/SimpleMobileTools \n https://github.com/xlucn/oh-my-foss-android \n \n \n https://github.com/microg \n https://github.com/rumboalla/apkupdater \n https://gitlab.com/AuroraOSS/AuroraStore \n https://github.com/yeriomin/YalpStore \n https://gitlab.com/AuroraOSS/auroradroid \n \n 下载Google Play Store上的应用 \n \n 如何在电脑上下载Google play上的应用？ \n https://greasyfork.org/zh-CN/scripts/33005 \n \n \n https://github.com/apkonline/apk-downloader \n https://github.com/rehmatworks/gplaydl \n https://github.com/evozi \n https://apkpremier.com \n https://apkdl.in \n https://android-apk.org \n https://androidapksfree.com \n https://androidappsapk.co \n https://apkcombo.com \n https://apkgk.com \n https://apkpure.com \n https://apksfull.com \n https://apps.evozi.com \n https://blackmart.co \n https://sameapk.com \n https://www.androidfreeware.net \n https://www.apk4fun.com \n https://www.apkfollow.com \n https://www.apkmirror.com \n https://www.apkmonk.com \n https://www.apkturbo.com \n https://downloadapk.online \n https://dlandroid.com \n https://cn.apkshub.com \n https://apk-dl.com \n https://cn.uptodown.com/android \n https://www.uptodown.com \n https://apk.support/apk-downloader \n \n \n https://apkpure.com/cn/developer/Microsoft%20Corporation \n Microsoft Corporation \n https://m.apkpure.com/cn/developer/Google%20LLC \n Google LLC \n \n 破解软件下载 \n \n http://www.sharerw.com \n https://fsylr.com \n https://www.vxat.com \n https://xcxymw.com \n https://www.lxapk.com \n https://www.nite07.com \n https://www.whg6.com \n https://www.lan-sha.com \n https://liteapks.com \n https://forum.release-apk.com/viewforum.php?f=5 \n \n https://forum.release-apk.com/tag/downloader \n \n \n https://patch.chelpus.com \n https://github.com/butzist/ActivityLauncher \n https://github.com/yoyodadada/haoruanfenxiang \n \n https://yoyodadada.lanzoui.com/u/yoyodadada \n \n \n https://www.lanzoui.com/b05f9wyf \n \n https://xydh.fun/dieheart \n \n \n https://www.fenxm.com \n https://cxapk.com \n https://ruanjianku.cloud \n \n 音乐下载 \n \n https://github.com/lyswhut/lx-music-mobile \n https://www.lanzoui.com/b720230 \n \n \n 听下音乐 \n 其他 \n \n https://github.com/topics/game \n https://github.com/topics/mobile-game \n https://github.com/topics/multiplatform \n https://github.com/albertomosconi/foss-apps \n \n \n 文件传输  https://github.com/localsend/localsend \n https://github.com/nearby-sharing \n http://www.xender.com \n https://gitlab.com/fdroid/fdroid-nearby \n https://feem.io \n ShareMe  https://rawapk.com/mi-drop-apk-download \n \n https://apkpure.com/cn/shareme-1-file-sharing-data-transfer-app/com.xiaomi.midrop \n \n \n ShareMi  https://apkpure.com/cn/sharemi-fast-transfer-file-fast-share-file/com.xlab.xdrop \n 文件闪传  https://github.com/skyhacker2/skyhacker2.github.com/blob/master/blog/p/projects/index.md \n https://github.com/RobinLinus/snapdrop \n \n https://snapdrop.net \n \n \n 沙盒塔防游戏  https://github.com/Anuken/Mindustry \n https://github.com/PojavLauncherTeam \n https://nobsgames.stavros.io \n 下载器 https://play.google.com/store/search?q=download+manager&c=apps \n https://play.google.com/store/apps/details?id=com.ellyzzard.downloader \n https://play.google.com/store/apps/details?id=com.downloadmanager.app \n https://play.google.com/store/apps/details?id=com.akira.mdm \n https://play.google.com/store/apps/details?id=com.magdalm.downloadmanager \n https://play.google.com/store/apps/details?id=com.kt.downloadmanager \n https://play.google.com/store/apps/details?id=com.completeapps.downloader \n ADM  https://advancedapp.kz \n 1DM/IDM  https://www.apps2sd.info/idmp/faq \n FDM  https://www.freedownloadmanager.org/zh/download-fdm-for-android.htm \n 压缩解压  http://www.unisapps.com \n 工具箱  https://github.com/helloklf/vtools \n 自动点击  https://github.com/gkd-kit/gkd \n https://github.com/zfdang/Android-Touch-Helper \n https://github.com/GuoXiCheng/SKIP \n https://github.com/LGH1996/TapClick \n 广告拦截  https://github.com/ReVanced/revanced-patches \n https://github.com/julian-klode/dns66 \n \n https://sourceforge.net/projects/dns-host-block-android.mirror \n \n \n https://github.com/celzero/rethink-app \n https://github.com/SadeghHayeri/GreenTunnel \n 浏览器  https://github.com/tuyafeng/Via \n https://www.xbext.com \n https://www.twinkstar.com \n https://x5.tencent.com \n https://www.quetta.net \n https://github.com/interfect/fenix \n https://github.com/anthonycr/Lightning-Browser \n 阅读器  https://github.com/koreader/koreader \n 启动器  https://github.com/NeoApplications/Neo-Launcher \n 无限词典  https://github.com/KnIfER/PlainDictionaryAPP \n 视频编辑  https://m.ulikecam.com \n https://videoshowapp.cn \n https://github.com/aserbao/AndroidCamera \n 视频播放  https://nplayer.com \n https://github.com/Moriafly/SaltPlayerSource \n \n https://sakawish.github.io \n \n \n https://github.com/ZTFtrue/MonsterMusic \n https://github.com/paditianxiu/love_search_padi \n VLC  https://www.videolan.org/vlc/download-android.html \n NOVA  https://github.com/nova-video-player/aos-AVP \n Kodi  https://kodi.tv/download/android \n JustPlayer  https://github.com/moneytoo/Player \n XPlayer \n MXPlayer  https://mx.j2inter.com \n \n https://www.mxplayer.in \n \n \n KMPlayer  https://kmplayer.com \n \n https://cobak.co/en/space/392 \n \n \n BSPlayer \n MPV  https://github.com/mpv-android/mpv-android \n SPlayer \n MVideo \n PlayerXtreme \n AcePlayer \n https://www.moviebase.app \n \n https://crowdin.com/project/moviebase \n https://github.com/crowdin/translate-readme \n \n \n 磁力下载  https://github.com/proninyaroslav/libretorrent \n Aria2  https://github.com/devgianlu/Aria2App \n 音乐播放  https://github.com/timusus/Shuttle2 \n https://github.com/OuterTune/OuterTune \n https://github.com/OxygenCobalt/Auxio \n https://github.com/enricocid/Music-Player-GO \n https://github.com/RetroMusicPlayer/RetroMusicPlayer \n https://github.com/VinylMusicPlayer/VinylMusicPlayer \n https://github.com/naman14/Timber \n \n https://github.com/naman14/TimberX \n \n \n https://github.com/ologe/canaree-music-player \n https://www.larkplayer.com \n Poweramp  https://powerampapp.com \n 图片编辑  https://qingtu.kajicam.com \n https://www.magicut.cn \n https://github.com/SimpleMobileTools/Simple-Gallery \n 手机变成计算机的麦克风  https://wolicheng.com/womic \n 备份数据  https://github.com/XayahSuSuSu/Android-DataBackup \n 投屏  https://github.com/barry-ran/QtScrcpy \n https://github.com/modstart-lib/linkandroid \n 保活  https://github.com/fgkeepalive/AndroidKeepAlive \n 翻译  https://github.com/FunnySaltyFish/FunnyTranslation \n https://github.com/niedev/RTranslator \n 天气  https://github.com/breezy-weather/breezy-weather \n 语音识别键盘  https://github.com/soupslurpr/Transcribro \n 应用商店  https://github.com/accrescent/accrescent \n 云盘  https://github.com/honmaple/maple-file \n 输入法  https://github.com/crazydan-studio/kuaizi-ime \n 播放100Hz声音防晕车  https://github.com/BHznJNs/MotionEaseTune \n 日记  https://github.com/geosmart/lumma \n HTML转APP  https://github.com/pipiscrew/html2apk \n https://github.com/darkshredder/web-to-app-action \n https://github.com/ynloultratech/web2apk \n https://github.com/mohssineAboutaj/web-to-apk \n https://github.com/RikudouSage/PwaToTwa \n https://github.com/AKPR2007/website-to-apk \n https://github.com/successtar/web-to-app \n https://github.com/fh-rabbi/Html-Css-Js-Web-View-Apk-Template \n 冻结APP  https://github.com/aistra0528/Hail \n 一个木函  http://www.woobx.cn \n https://www.coolapk.com/apk/com.One.WoodenLetter \n https://www.coolapk.com/apk/cn.coldsong.fusionapp \n https://hermit.chimbori.com/features/premium \n https://www.apicloud.com/autogeneration \n https://websitetoapk.com \n 网页转exe  https://github.com/nativefier/nativefier \n see  https://caij.coding.net/public \n 文本编辑器  https://github.com/gsantner/markor \n YouTube  https://github.com/YTVanced/VancedManager \n https://github.com/TeamNewPipe/NewPipe \n 谷歌框架  https://opengapps.org \n https://github.com/Aefyr/SAI \n https://github.com/machiav3lli/oandbackupx \n 幸运补丁  https://www.luckypatchers.com \n 图片处理  https://website.facetuneapp.com \n https://www.lightricks.com \n 运行Windows应用  https://github.com/brunodev85/winlator \n 词典  https://github.com/mumu-lhl/Ciyue \n 追番  https://github.com/czy0729/Bangumi \n 翻译  https://github.com/DavidVentura/firefox-translator \n 证件照 \n \n https://pan.baidu.com/s/1L21hwqtztFnuXLTcuyzH6Q 提取码：u4nw \n \n \n 最美证件照 \n 精英证件照 \n 乐拍证件照 \n 懒人证件照 \n 证件照极拍 \n 智能证件照 \n 自助证件照 \n 免费证件照 \n 最美电子证件照 \n 证件照研究院 \n 证件照随拍 \n ID PHOTO + Retouch \n 证照之星 \n 华图证件照拍摄（微信小程序） \n 陕西中公证件照（微信小程序） \n 粉笔证件照（微信小程序） \n 智绘证件照（微信小程序） \n 佐糖证件照（网页／微信小程序） \n 凡科快图（网页） \n 小呆证件照（微信小程序） \n 证照拍（微信小程序） \n \n 怎么拍出好看的证件照？ \n \n 选对衣服 \n \n \n 浅色背景，尽量选深色衣服来拍，你也不想和背景融为一体吧...如果是白底照片，选黑色的一般不会出错，显瘦又显白。深色背景，就选浅色衣服，强烈对比会让人显得更白嫩。 \n 在选对色调的情况下，尽量避免穿高领，脖子长还好，脖子短简直要命，最好是穿一件儿衬衫去照相馆。 \n 穿衬衫也是有些讲究的，最好是不系最上面的一颗扣子，这样能起到修长脖子的作用。 \n \n \n 要会“藏下巴” \n \n \n 胖子就傲娇一点，别低头，双下巴会出来。如果稍微仰头也还是没办法藏住下巴，试试收紧肩胛骨，会有意想不到的收获。 \n \n \n 看镜头上方3cm处 \n \n \n 眼睛要大！那么，拍照的时候微微抬眼，看镜头上方3cm处，这样会撑起眼睛来，显得眼睛大些。 \n \n",createdTime:1761814324e3},{title:"CentOS",frontmatter:{description:"https://uefi.org/specifications\nUEFI加载 https://github.com/rhboot\nRHEL衍生版本升级 https://github.com/oamg/leapp\n    https://almalinux.org/elevate\n    https://docs.rockylinux.org/zh/guides/migrate2rocky\n    https://github.com/rocky-linux/rocky-tools\nhttps://github.com/upgrades-migrations/redhat-upgrade-tool\nUpgrading CentOS 7 to Stream 9\n如何使用 Leapp 为 RHEL PAYG 虚拟机执行升级\n使用 Leapp 升级 Oracle Linux\n    CentOS切换Oracle脚本 https://github.com/oracle/centos2ol\nhttps://github.com/Ink-33/OhMyStream9",meta:[{name:"twitter:title",content:"CentOS"},{name:"twitter:description",content:"https://uefi.org/specifications\nUEFI加载 https://github.com/rhboot\nRHEL衍生版本升级 https://github.com/oamg/leapp\n    https://almalinux.org/elevate\n    https://docs.rockylinux.org/zh/guides/migrate2rocky\n    https://github.com/rocky-linux/rocky-tools\nhttps://github.com/upgrades-migrations/redhat-upgrade-tool\nUpgrading CentOS 7 to Stream 9\n如何使用 Leapp 为 RHEL PAYG 虚拟机执行升级\n使用 Leapp 升级 Oracle Linux\n    CentOS切换Oracle脚本 https://github.com/oracle/centos2ol\nhttps://github.com/Ink-33/OhMyStream9"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/CentOS.html"},{property:"og:type",content:"article"},{property:"og:title",content:"CentOS"},{property:"og:description",content:"https://uefi.org/specifications\nUEFI加载 https://github.com/rhboot\nRHEL衍生版本升级 https://github.com/oamg/leapp\n    https://almalinux.org/elevate\n    https://docs.rockylinux.org/zh/guides/migrate2rocky\n    https://github.com/rocky-linux/rocky-tools\nhttps://github.com/upgrades-migrations/redhat-upgrade-tool\nUpgrading CentOS 7 to Stream 9\n如何使用 Leapp 为 RHEL PAYG 虚拟机执行升级\n使用 Leapp 升级 Oracle Linux\n    CentOS切换Oracle脚本 https://github.com/oracle/centos2ol\nhttps://github.com/Ink-33/OhMyStream9"},{property:"og:url",content:"https://bajins.com/System/CentOS.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"CentOS"},{itemprop:"description",content:"https://uefi.org/specifications\nUEFI加载 https://github.com/rhboot\nRHEL衍生版本升级 https://github.com/oamg/leapp\n    https://almalinux.org/elevate\n    https://docs.rockylinux.org/zh/guides/migrate2rocky\n    https://github.com/rocky-linux/rocky-tools\nhttps://github.com/upgrades-migrations/redhat-upgrade-tool\nUpgrading CentOS 7 to Stream 9\n如何使用 Leapp 为 RHEL PAYG 虚拟机执行升级\n使用 Leapp 升级 Oracle Linux\n    CentOS切换Oracle脚本 https://github.com/oracle/centos2ol\nhttps://github.com/Ink-33/OhMyStream9"}]},regularPath:"/System/CentOS.html",relativePath:"System/CentOS.md",key:"v-ce3ea426",path:"/System/CentOS.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"YUM和RPM操作",slug:"yum和rpm操作"},{level:2,title:"systemctl",slug:"systemctl"},{level:2,title:"内核升级",slug:"内核升级"},{level:2,title:"一键安装BBR",slug:"一键安装bbr"},{level:3,title:"安装新版内核headers",slug:"安装新版内核headers"},{level:3,title:"内核升级方法",slug:"内核升级方法"},{level:2,title:"三方工具",slug:"三方工具"},{level:2,title:"Chrome",slug:"chrome"},{level:3,title:"Debian或Ubuntu",slug:"debian或ubuntu"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' CentOS \n Flag YUM和RPM操作 systemctl 内核升级 一键安装BBR 安装新版内核headers 内核升级方法 三方工具 Chrome Debian或Ubuntu \n Flag \n \n https://uefi.org/specifications \n UEFI加载  https://github.com/rhboot \n RHEL衍生版本升级  https://github.com/oamg/leapp \n \n https://almalinux.org/elevate \n https://docs.rockylinux.org/zh/guides/migrate2rocky \n https://github.com/rocky-linux/rocky-tools \n \n \n https://github.com/upgrades-migrations/redhat-upgrade-tool \n Upgrading CentOS 7 to Stream 9 \n 如何使用 Leapp 为 RHEL PAYG 虚拟机执行升级 \n 使用 Leapp 升级 Oracle Linux \n \n CentOS切换Oracle脚本  https://github.com/oracle/centos2ol \n \n \n https://github.com/Ink-33/OhMyStream9 \n \n 下载almalinux所有RPM包 \n下载 Packages 页面的 HTML 内容，提取所有 RPM 文件名（包含 dnf 或 python） \n curl   -s  https://repo.almalinux.org/almalinux/8/BaseOS/x86_64/os/Packages/  |   grep   -oP   \'href="\\K[^"]+\\.rpm\'   |   grep   -E   \'dnf|*python\'   |   grep   -v   \'x86_64\'   >  rpm-list.txt\n while   read   -r  pkg ;   do \n   curl   -O  https://repo.almalinux.org/almalinux/8/BaseOS/x86_64/os/Packages/ " $pkg " \n done   <  rpm_list.txt\n\n cat  rpm-list.txt  |   xargs   -I   { }   -P   8   curl   -O  https://repo.almalinux.org/almalinux/8/BaseOS/x86_64/os/Packages/ { } \n \n 升级GLBC后删除目录导致系统崩溃 \n \n /lib64/libc.so.6 错误导致的系统崩溃 \n \n sln /usr/lib64/ld-2.17.so /usr/lib64/ld-linux-x86-64.so.2\nsln /usr/lib64/libc-2.17.so /usr/lib64/libc.so.6\nsln /usr/lib64/libdl-2.17.so /usr/lib64/libdl.so.2\nsln /usr/lib64/libpthread-2.17.so /usr/lib64/libpthread.so.0\n \n yum、dnf、python都被卸载后如何装回dnf \n \n yum依赖dnf，dnf依赖python，当rpm还在时如何救回dnf \n \n \n https://repo.almalinux.org/almalinux/8/BaseOS/x86_64/os/Packages/ \n https://rpmfind.net/linux/rpm2html/search.php \n \n \n Centos Stream9下重新安装yum和DNF以及python3 \n rpm: /lib64/liblzma.so.5: version `XZ_5.1.2alpha\' not found (required by /lib/librpmio.so.3) \n忽略依赖强制安装python及dnf相关依赖 \n rpm   -i   --nodeps   --force  rpm的地址\n YUM和RPM操作 \n \n yum -y install 包名 （支持*） ：自动选择y，全自动 \n yum install 包名 （支持*） ：手动选择y or n \n yum remove 包名 （不支持*） \n rpm -ivh 包名 （支持*）：安装rpm包 \n rpm -e 包名 （不支持*）：卸载rpm包 \n yum info nginx (查看当前版本可选) \n yum list installed | grep 包名 （不支持*）：确认是否安装过包 \n yum -y update  更新yum源包 \n安装EPEL源 \nyum  -y   install  epel-release \n查询已安装软件包信息 \n rpm   -qi  软件名\n查询已安装软件包安装位置 \n rpm   -ql  软件名\n查看已安装软件依赖 \n rpm   -qR  软件名\n查看已安装软件的配置文件 \n rpm   -qc  软件名\n查询已安装文件所属软件包 \n rpm   -qf  文件名的绝对路径\n安装软件包数量 \n rpm   -qa   |   wc   -l  \n rpm   -qa   |   grep  软件名称\n rpm   -e   --nodeps  列出的软件全名\n systemctl \n \n systemctl 是 CentOS7 的服务管理工具中主要的工具，它融合之前 service 和 chkconfig 的功能于一体。 \n启动一个服务 \nsystemctl start firewalld.service\n关闭一个服务 \nsystemctl stop firewalld.service\n重启一个服务 \nsystemctl restart firewalld.service\n显示一个服务的状态 \nsystemctl status firewalld.service\n在开机时启用一个服务 \nsystemctl  enable  firewalld.service\n在开机时禁用一个服务 \nsystemctl disable firewalld.service\n查看服务是否开机启动 \nsystemctl is-enabled firewalld.service\n查看已启动的服务列表 \nsystemctl list-unit-files | grep  enabled\n查看启动失败的服务列表 \nsystemctl  --failed \n查看mysql是否自启动 \n chkconfig   --list   |   grep  mysqld\n设置开启自启动 \n chkconfig  mysqld on\n 内核升级 \n检查当前CentOS系统版本 \n cat  /etc/redhat-release\n检查当前CentOS系统内核版本 \n uname   -sr \n \n \n 运行yum命令升级 \n \n \n CentOS中update命令可以一次性更新所有软件(包括系统版本)到最新版本。 \n先清除所有 \nyum clean all\n再升级 \nyum update  -y \n升级内核 \nyum update kernel   -y \n \n \n 在 CentOS7.x 上启用 ELRepo 仓库 \n首先导入elrepo的key \n rpm   --import  https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\n安装elrepo的yum \n rpm   -Uvh  http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\n \n \n 查看内核相关包 \n \n \n 仓库启用后，你可以使用下面的命令列出可用的系统内核相关包，查看内核相关包 \n \n yum  --disablerepo = "*"   --enablerepo = "elrepo-kernel"  list available\n \n \n 安装最新的主线稳定内核 \n \n yum  -y   --enablerepo = elrepo-kernel  install  kernel-ml\n或者以下命令安装最新的主线稳定内核 \nyum  -y   --enablerepo = elrepo-kernel  install  kernel-ml.x86_64 kernel-ml-devel.x86_64\n \n \n 查看可用内核 \n \n cat  /boot/grub2/grub.cfg  | grep  menuentry \n \n \n 设置内核启动项 \n \n \n 替换刚刚查看出来的内核名字执行，比如： grub2-set-default \'CentOS Linux (4.15.13-1.el7.elrepo.x86_64) 7 (Core)\' \n \n grub2-set-default \'内核名字\' \n \n \n \n 查看内核启动项是否设置成功 \n \n grub2-editenv list\n重启 \n reboot \n检查当前CentOS系统内核版本 \n uname   -sr \n查看多余的内核 \n rpm   -qa   |   grep  kernel\n删除多余的内核 \nyum remove 内核名字\n 一键安装BBR \n \n https://github.com/ylx2016/Linux-NetSpeed \n \n \n 秋水逸冰 \n \n \n 下载并执行脚本 \n \n wget  --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh\n chmod  +x bbr.sh\n./bbr.sh\n \n \n 安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。 \n \n \n 查看内核版本 \n \n \n 显示为最新版就表示OK了，重启完成后，进入VPS，验证一下是否成功安装最新内核并开启 TCP BBR \n \n uname   -r \n sysctl  net.ipv4.tcp_available_congestion_control\n \n \n 返回值一般为 net.ipv4.tcp_available_congestion_control = bbr cubic reno ，\n或者为： net.ipv4.tcp_available_congestion_control = reno cubic bbr \n \n sysctl  net.ipv4.tcp_congestion_control\n \n \n 返回值一般为  net.ipv4.tcp_congestion_control = bbr \n \n sysctl  net.core.default_qdisc\n \n \n 返回值一般为  net.core.default_qdisc = fq \n \n lsmod  |   grep  bbr\n \n \n 返回值有 tcp_bbr 模块即说明 bbr 已启动。 \n \n \n 注意：并不是所有的都会有此返回值，若没有也属正常。 \n 安装新版内核headers \n yum  --enablerepo = elrepo-kernel  -y   install  kernel-ml-headers\n \n \n 根据 CentOS 版本的不同，此时一般会出现类似于以下的错误提示：\n \n Error: kernel-ml-headers conflicts with kernel-headers-2.6.32-696.20.1.el6.x86_64 \n Error: kernel-ml-headers conflicts with kernel-headers-3.10.0-693.17.1.el7.x86_64 \n \n \n \n 卸载原版内核 headers \n \n 需要先卸载原版内核 headers ，然后再安装最新版内核 headers 。 \n \n yum remove kernel-headers  -y \n \n \n 注意：有时候这么操作还会卸载一些对内核 headers 依赖的安装包，比如 gcc、gcc-c++ 之类的。\n不过不要紧，我们可以在安装完最新版内核 headers 后再重新安装回来即可。 \n 内核升级方法 \n \n CentOS系统升级内核 \n \n yum  -y   install  kernel-ml kernel-ml-devel\n \n \n 升级 headers \n \n yum  -y   install  kernel-ml-headers\n \n \n 执行命令 \n \n grub2-set-default  0 \n \n \n 最后，重启VPS即可。 \n 三方工具 \n yum  install   -y   which  gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel lrzsz  \\ \nlrzsz-devel p7zip p7zip-devel net-tools net-tools-devel  vim  vim-devel libaio libaio-devel\n \n figlet \n \n Linux下的命令行工具，我们经常会看到一些终端工具有一个字符Logo,这些Logo可以通过 Figlet 生成： \n \n yum  install   -y  figlet\n \n \n 居中显示用  -c \n 从文件导入用  -p ， 比如从testFile导入 figlet -c -p < testFile \n 还可以用 -w 指定宽度。 \n 实时显示时间 watch -n1 "date \'+%D%n%T\' |figlet -k" \n \n boxes \n \n 这个工具提供了 n 种样式，例如各种动物等，然后你输入的字符就放在这些图案的内部空白处。 \n \n yum  -y   install  boxes\n \n \n 使用boxes -l列出所有的样式。 \n \n echo   [ text ]   |  boxes  -d   [ style name ] \n比如dog \n echo   "Hello World"   |  boxes  -d  dog\n \n Toilet \n \n 可以输出更丰富的样式，它比  figlet  命令的效果更有艺术感。 \n \n echo   "Hello World"   |  toilet  -f  term  -F  border  --gay \n可以有颜色 \ntoilet  -f  mono12  -F  metal Linux\n多种样式 \n while   true ;   do   echo   " $( date   \'+%D %T\'   |  toilet  -f  term  -F  border  --gay ) " ;   sleep   1 ;   done \n Chrome \n \n chrome其他安装方式 \n \n \n http://dist.control.lth.se/public/CentOS-7/x86_64/google.x86_64/ \n \n rpm包安装 \n下载rpm包 \n wget  https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm\n安装依赖 \nyum  install   -y  lsb libXScrnSaver libappindicator-gtk3 liberation-fonts libvulkan atk cups-libs* \\ \n gtk3 libXcomposite libXdamage libXrandr libdrm mesa-libgbm alsa-lib libX11 nss xvfb\n安装chrome \n rpm   -ivh  google-chrome-stable_current_x86_64.rpm\n或者使用yum安装chrome \nyum  install   -y  google-chrome-stable_current_x86_64.rpm\n查看版本 \ngoogle-chrome  --version \n安装chromedriver：一个用来和chrome交互的接口 \nyum  install   -y  chromedriver\n查看安装的chromedriver版本 \nchromedriver  --version \n \n Cent OS7安装Google Chrome \n wget  http://dist.control.lth.se/public/CentOS-7/x86_64/google.x86_64/google-chrome-stable-125.0.6422.141-1.x86_64\nyum  install   -y  google-chrome-stable-125.0.6422.141-1.x86_64.rpm\n \n 在线安装 \n \n 创建repo文件 \n \n vi  /etc/yum.repos.d/google-chrome.repo\n \n \n 添加内容 \n \n [google-chrome]\nname=google-chrome\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/$basearch\nenabled=1\ngpgcheck=1\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub\n \n \n 或者 \n \n sudo   sh   -c   \'echo "[google-chrome]\nname=google-chrome\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64\nenabled=1\ngpgcheck=1\ngpgkey=https://dl.google.com/linux/linux_signing_key.pub" > /etc/yum.repos.d/google-chrome.repo\' \n \n \n 安装 \n \n yum  install   -y  google-chrome-stable\n如果安装失败 \nyum  install  google-chrome-stable  --nogpgcheck \n Debian或Ubuntu \nAPT仓库安装 \n sudo   sh   -c   \'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list\' \n wget   -q   -O  - https://dl.google.com/linux/linux_signing_key.pub  |   sudo  apt-key  add  -\n刷新可用软件包及其版本的列表，处理依赖冲突并升级软件包（包括内核）升级到最新版本 \n sudo   apt  update  &&   sudo   apt  dist-upgrade  -y \n sudo   apt   install  google-chrome-stable  -y \n下载.deb包安装 \n sudo   apt   install  google-chrome-stable_current_amd64.deb  -y \n \n ',createdTime:1761814324e3},{title:"Linux网络防火墙",frontmatter:{description:"网络测试 https://github.com/topics/speedtest\nhttps://github.com/Microsoft/ntttcp-for-linux\nhttps://github.com/mellanox/sockperf\nhttps://tools.keycdn.com\nhttps://iperf.fr\n    https://sourceforge.net/projects/iperf\n    https://sourceforge.net/projects/iperf2\n    https://github.com/search?q=iPerf3\n    https://github.com/esnet/iperf\nhttps://github.com/n-st/nench\n测速 https://github.com/adolfintel/speedtest\nhttps://www.speedtest.net\nhttps://www.nperf.com/zh_CN\nhttps://speed.cloudflare.com\nhttps://fast.com\nhttps://test.ustc.edu.cn\nhttps://fiber.google.com/speedtest\nhttps://speedtestgo.com\nDNS速度测试 https://github.com/BrainicHQ/DoHSpeedTest\nhttps://github.com/xxnuo/dns-benchmark\n局域网怎么实现内外网隔离？\n防火墙 https://github.com/pfsense/pfsense\nhttps://github.com/opnsense\nhttps://github.com/owasp-modsecurity/ModSecurity\n    https://github.com/coreruleset/coreruleset\nhttps://github.com/ipfire/ipfire-2.x\nWAF https://github.com/SpiderLabs/ModSecurity\n    https://github.com/titansec/OpenWAF\n    http://www.modsecurity.cn\n网络隔离 https://github.com/projectcalico/calico\nhttps://github.com/openziti/ziti\nhttps://www.github.com/flannel-io/flannel\nhttps://github.com/openvswitch/ovs\n验证身份 https://github.com/spiffe/spire\n广告拦截 https://github.com/pi-hole/pi-hole",meta:[{name:"twitter:title",content:"Linux网络防火墙"},{name:"twitter:description",content:"网络测试 https://github.com/topics/speedtest\nhttps://github.com/Microsoft/ntttcp-for-linux\nhttps://github.com/mellanox/sockperf\nhttps://tools.keycdn.com\nhttps://iperf.fr\n    https://sourceforge.net/projects/iperf\n    https://sourceforge.net/projects/iperf2\n    https://github.com/search?q=iPerf3\n    https://github.com/esnet/iperf\nhttps://github.com/n-st/nench\n测速 https://github.com/adolfintel/speedtest\nhttps://www.speedtest.net\nhttps://www.nperf.com/zh_CN\nhttps://speed.cloudflare.com\nhttps://fast.com\nhttps://test.ustc.edu.cn\nhttps://fiber.google.com/speedtest\nhttps://speedtestgo.com\nDNS速度测试 https://github.com/BrainicHQ/DoHSpeedTest\nhttps://github.com/xxnuo/dns-benchmark\n局域网怎么实现内外网隔离？\n防火墙 https://github.com/pfsense/pfsense\nhttps://github.com/opnsense\nhttps://github.com/owasp-modsecurity/ModSecurity\n    https://github.com/coreruleset/coreruleset\nhttps://github.com/ipfire/ipfire-2.x\nWAF https://github.com/SpiderLabs/ModSecurity\n    https://github.com/titansec/OpenWAF\n    http://www.modsecurity.cn\n网络隔离 https://github.com/projectcalico/calico\nhttps://github.com/openziti/ziti\nhttps://www.github.com/flannel-io/flannel\nhttps://github.com/openvswitch/ovs\n验证身份 https://github.com/spiffe/spire\n广告拦截 https://github.com/pi-hole/pi-hole"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/Linux%E7%BD%91%E7%BB%9C%E9%98%B2%E7%81%AB%E5%A2%99.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Linux网络防火墙"},{property:"og:description",content:"网络测试 https://github.com/topics/speedtest\nhttps://github.com/Microsoft/ntttcp-for-linux\nhttps://github.com/mellanox/sockperf\nhttps://tools.keycdn.com\nhttps://iperf.fr\n    https://sourceforge.net/projects/iperf\n    https://sourceforge.net/projects/iperf2\n    https://github.com/search?q=iPerf3\n    https://github.com/esnet/iperf\nhttps://github.com/n-st/nench\n测速 https://github.com/adolfintel/speedtest\nhttps://www.speedtest.net\nhttps://www.nperf.com/zh_CN\nhttps://speed.cloudflare.com\nhttps://fast.com\nhttps://test.ustc.edu.cn\nhttps://fiber.google.com/speedtest\nhttps://speedtestgo.com\nDNS速度测试 https://github.com/BrainicHQ/DoHSpeedTest\nhttps://github.com/xxnuo/dns-benchmark\n局域网怎么实现内外网隔离？\n防火墙 https://github.com/pfsense/pfsense\nhttps://github.com/opnsense\nhttps://github.com/owasp-modsecurity/ModSecurity\n    https://github.com/coreruleset/coreruleset\nhttps://github.com/ipfire/ipfire-2.x\nWAF https://github.com/SpiderLabs/ModSecurity\n    https://github.com/titansec/OpenWAF\n    http://www.modsecurity.cn\n网络隔离 https://github.com/projectcalico/calico\nhttps://github.com/openziti/ziti\nhttps://www.github.com/flannel-io/flannel\nhttps://github.com/openvswitch/ovs\n验证身份 https://github.com/spiffe/spire\n广告拦截 https://github.com/pi-hole/pi-hole"},{property:"og:url",content:"https://bajins.com/System/Linux%E7%BD%91%E7%BB%9C%E9%98%B2%E7%81%AB%E5%A2%99.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Linux网络防火墙"},{itemprop:"description",content:"网络测试 https://github.com/topics/speedtest\nhttps://github.com/Microsoft/ntttcp-for-linux\nhttps://github.com/mellanox/sockperf\nhttps://tools.keycdn.com\nhttps://iperf.fr\n    https://sourceforge.net/projects/iperf\n    https://sourceforge.net/projects/iperf2\n    https://github.com/search?q=iPerf3\n    https://github.com/esnet/iperf\nhttps://github.com/n-st/nench\n测速 https://github.com/adolfintel/speedtest\nhttps://www.speedtest.net\nhttps://www.nperf.com/zh_CN\nhttps://speed.cloudflare.com\nhttps://fast.com\nhttps://test.ustc.edu.cn\nhttps://fiber.google.com/speedtest\nhttps://speedtestgo.com\nDNS速度测试 https://github.com/BrainicHQ/DoHSpeedTest\nhttps://github.com/xxnuo/dns-benchmark\n局域网怎么实现内外网隔离？\n防火墙 https://github.com/pfsense/pfsense\nhttps://github.com/opnsense\nhttps://github.com/owasp-modsecurity/ModSecurity\n    https://github.com/coreruleset/coreruleset\nhttps://github.com/ipfire/ipfire-2.x\nWAF https://github.com/SpiderLabs/ModSecurity\n    https://github.com/titansec/OpenWAF\n    http://www.modsecurity.cn\n网络隔离 https://github.com/projectcalico/calico\nhttps://github.com/openziti/ziti\nhttps://www.github.com/flannel-io/flannel\nhttps://github.com/openvswitch/ovs\n验证身份 https://github.com/spiffe/spire\n广告拦截 https://github.com/pi-hole/pi-hole"}]},regularPath:"/System/Linux%E7%BD%91%E7%BB%9C%E9%98%B2%E7%81%AB%E5%A2%99.html",relativePath:"System/Linux网络防火墙.md",key:"v-d8ef86b2",path:"/System/Linux%E7%BD%91%E7%BB%9C%E9%98%B2%E7%81%AB%E5%A2%99.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"查看网络",slug:"查看网络"},{level:2,title:"iptables",slug:"iptables"},{level:2,title:"UFW",slug:"ufw"},{level:2,title:"firewalld",slug:"firewalld"},{level:2,title:"路由跟踪",slug:"路由跟踪"},{level:3,title:"检查端口连接",slug:"检查端口连接"},{level:2,title:"网卡",slug:"网卡"},{level:3,title:"MTU",slug:"mtu"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Linux网络防火墙 \n Flag 查看网络 iptables UFW firewalld 路由跟踪 检查端口连接 网卡 MTU \n Flag \n \n 网络测试  https://github.com/topics/speedtest \n https://github.com/Microsoft/ntttcp-for-linux \n https://github.com/mellanox/sockperf \n https://tools.keycdn.com \n https://iperf.fr \n \n https://sourceforge.net/projects/iperf \n https://sourceforge.net/projects/iperf2 \n https://github.com/search?q=iPerf3 \n https://github.com/esnet/iperf \n \n \n https://github.com/n-st/nench \n 测速  https://github.com/adolfintel/speedtest \n https://www.speedtest.net \n https://www.nperf.com/zh_CN \n https://speed.cloudflare.com \n https://fast.com \n https://test.ustc.edu.cn \n https://fiber.google.com/speedtest \n https://speedtestgo.com \n DNS速度测试  https://github.com/BrainicHQ/DoHSpeedTest \n https://github.com/xxnuo/dns-benchmark \n 局域网怎么实现内外网隔离？ \n 防火墙  https://github.com/pfsense/pfsense \n https://github.com/opnsense \n https://github.com/owasp-modsecurity/ModSecurity \n \n https://github.com/coreruleset/coreruleset \n \n \n https://github.com/ipfire/ipfire-2.x \n WAF  https://github.com/SpiderLabs/ModSecurity \n \n https://github.com/titansec/OpenWAF \n http://www.modsecurity.cn \n \n \n 网络隔离  https://github.com/projectcalico/calico \n https://github.com/openziti/ziti \n https://www.github.com/flannel-io/flannel \n https://github.com/openvswitch/ovs \n 验证身份  https://github.com/spiffe/spire \n 广告拦截  https://github.com/pi-hole/pi-hole \n 查看网络 \n查询系统中缓存的ARP表，ARP表用来维护IP地址与MAC地址的对应关系 \narp  -an \n \n ip  a\n ifconfig \n提取主机上的IP信息 \n ip   add | grep   \"global\" | awk '{print $2}' | awk  -F/ '{print $1}' \n输出当前的ESTABLISHED和TIME_WAIT数 \n netstat   -n   |   awk   '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}' \n netstat   -ant   |   awk   '\n    {++s[$NF]} END {for(k in s) print k,s[k]}\n' \nss  -ant   |   awk   '\n    {++s[$1]} END {for(k in s) print k,s[k]}\n' \n详情 \n netstat   -antp \n打印所有进程及其线程 \npstree  -p \n打印某个进程的线程数 \npstree  -p   { pid }   |   wc   -l \n打印当前地址IP链接情况 \n netstat   -antp   | grep   \"ESTABLISHED\"   | awk   '{print $5}' | awk   -F   :   '{print $4}' | sort   | uniq   -c \n iptables \n \n iptables  https://www.netfilter.org \n \n \n iptables是Linux从2.4.x版本内核开始，系统自带的防火墙。随着Linux内核的不断更新，Linux的防火墙在iptables基础上泛生出\nUFW和Firewalld，并且在一些发行版中已经替代iptables。 \n \n #永久关闭防火墙 \n chkconfig  iptables off\n永久关闭后启用 \n chkconfig  iptables on\n查看防火墙规则 \niptables  -L \n查出所有的规则信息 \niptables  -nvl \niptables  -L   -n  --line-number\n清空已存在的规则 \niptables  -F \niptables  --flush \nsudo iptables -I INPUT -p tcp --dport [端口号] -j ACCEPT \n--dport 目标端口，数据从外部进入服务器 \n--sport 数据源端口，数据从服务器出去 \n sudo  iptables  -I  INPUT  -p  tcp  --dport   3306   -j  ACCEPT\n保存iptables设置规则 \niptables-save\n安装iptables-persistent工具，使端口配置持久化 \n sudo   apt-get   install  iptables-persistent\n端口配置永久生效  \n sudo  netfilter-persistent save\n sudo  netfilter-persistent reload\n生成的规则将被存储在以下文件中: \n/etc/iptables/rules.v4 \n/etc/iptables/rules.v6 \n UFW \n安装 \n sudo   apt   install  ufw\n检查 UFW 的状态 \n sudo  ufw status verbose\n打开防火墙 \nufw  enable \n关闭防火墙 \nufw disable\n #重启防火墙 \nufw reload\n查看已经定义的ufw规则 \nufw status\n外来访问默认允许 \nufw default allow\n外来访问默认拒绝 \nufw default deny\n允许访问20端口，20后可跟/tcp或/udp，表示tcp或udp封包。 \nufw allow  20 \n拒绝访问20端口，20后可跟/tcp或/udp，表示tcp或udp封包。 \nufw deny  20 \n允许自192.168.0.0/24的tcp封包访问本机的22端口。 \n sudo  ufw allow proto tcp from  192.168 .0.0/24 to any port  22 \n删除以前定义的\"允许访问20端口\"的规则 \nufw delete allow  20 \n删除以前定义的\"拒绝访问20端口\"的规则 \nufw delete deny  20 \n firewalld \n查看firewalld状态，发现当前是dead状态，即防火墙未开启。 \nsystemctl status firewalld\n开启防火墙，没有任何提示即开启成功。 \nsystemctl start firewalld\n查看已开放的端口(默认不开放任何端口) \nfirewall-cmd --list-ports\n重启防火墙 \nfirewall-cmd  --reload \n停止防火墙 \nsystemctl stop firewalld.service\n禁止防火墙开机启动 \nsystemctl disable firewalld.service\n删除端口 \nfirewall-cmd  --zone =  public --remove-port = 80 /tcp  --permanent \n开启80端口 \nfirewall-cmd  --zone = public --add-port = 80 /tcp  --permanent \n开启8080-8089的IP端 \nfirewall-cmd  --zone = public --add-port = 8080 -8089/tcp  --permanent \n开启3306端口 \nfirewall-cmd  --zone = public --add-port = 3306 /tcp  --permanent \n \n \n --zone  作用域 \n --add-port=80/tcp  添加端口，格式为：端口/通讯协议 \n --permanent  永久生效，没有此参数重启后失效 \n \n 配置 firewalld-cmd \n查看版本 \nfirewall-cmd  --version \n查看帮助 \nfirewall-cmd  --help \n显示状态 \nfirewall-cmd  --state \n查看所有打开的端口 \nfirewall-cmd  --zone = public --list-ports\n更新防火墙规则 \nfirewall-cmd  --reload \n查看区域信息 \nfirewall-cmd --get-active-zones\n查看指定接口所属区域 \nfirewall-cmd --get-zone-of-interface = eth0\n拒绝所有包 \nfirewall-cmd --panic-on\n取消拒绝状态 \nfirewall-cmd --panic-off\n查看是否拒绝 \nfirewall-cmd --query-panic\n 路由跟踪 \n \n 查询IP地理信息  https://github.com/zu1k/nali \n https://github.com/ihmily/ip-info-api \n https://github.com/jason5ng32/MyIP \n https://ip.guide \n https://github.com/hackclub/how-did-i-get-here \n \n https://github.com/hackclub/ktr \n \n \n https://github.com/lionsoul2014/ip2region \n \n https://gitee.com/lionsoul/ip2region \n \n \n https://ifconfig.me \n \n https://github.com/pmarques/ifconfig.me \n \n \n https://github.com/georgyo/ifconfig.io \n https://github.com/missdeer/ifconfig \n https://github.com/ipinfo \n https://github.com/pronto/ifconfig.pro \n https://github.com/ngoduykhanh/ifconfig.top \n https://github.com/ftao/python-ifcfg \n https://github.com/sanketsudake/ifconfig-parser \n https://www.browserscan.net \n https://www.ipip.net \n \n https://www.myip.la \n \n \n https://cloud.magiclen.org/cn/myip \n https://dns.fish \n https://ipquery.io \n https://ip.aolifu.org \n https://ip.im \n \n https://w.is \n \n \n 可用性检查  https://github.com/funilrys/PyFunceble \n https://github.com/hatoo/oha \n \n ping 、 tcptraceroute 、 traceroute 、 mtr \n \n https://github.com/fujiapple852/trippy \n https://www.cnblogs.com/xzkzzz/p/7413177.html \n https://www.jianshu.com/p/802010d54849 \n https://cloud.tencent.com/developer/article/1332118 \n http://winmtr.net/download-winmtr \n https://sourceforge.net/projects/netcat \n \n Netcat详解 \n \n \n http://www.dest-unreach.org/socat \n https://github.com/vi/websocat \n https://github.com/pouriyajamshidi/tcping \n https://github.com/hanshuaikang/Nping \n https://github.com/nmap/nmap \n https://github.com/SkyLined/LocalNetworkScanner \n https://github.com/aceberg/WatchYourLAN \n \n \n 在Linux中有一个更好的网络连通性判断工具，它可以结合ping | nslookup | tracert 来判断网络的相关特性，这个命令就是mtr。 \n \n \n 注意：MTR使用的raw sockets是绕过TCP/IP协议，需要ROOT权限来执行，因此如果以普通用户身份来执行mtr会出错，\n提示“mtr: unable to get raw sockets” \n \n \n tcpping- 禁止了ICMP协议（ping命令）也能用 \n \n https://github.com/deajan/tcpping \n \n \n \n \n tcpping 脚本依赖 tcptraceroute  组件，所以必须先安装 yum install tcptraceroute \n \n \n https://elifulkerson.com/projects/ \n \n \n 注意 tcpping 与 tcping  是不同的两款工具 \n \n \n https://docs.microsoft.com/zh-cn/sysinternals/downloads/psping \n https://code.google.com/archive/p/paping/downloads \n \n \n PsPing  是微软  PSTools  工具套件中的其中一个命令。除了  ICMP  ping 测试，主要用来测试 TCP 端口的连通性，\n还可以测试  TCP/UDP  网络时延和带宽。不过，  PsPing  只能在 Windows 中运行。Linux 可以使用  PaPing  （跨平台的开源工具）。 \n \n \n https://github.com/antirez/hping \n \n 常用网站 \n \n http://ipcheck.need.sh \n https://torch.njs.app \n 瓦工的全球ping工具  http://ping.pe \n https://www.yougetsignal.com/tools/open-ports \n http://tool.chinaz.com/port \n https://www.websitepulse.com/tools/china-firewall-test \n https://www.vps234.com/ipchecker \n https://tools.ipip.net/traceroute.php \n IP范围转换CIDR  https://ip2cidr.com \n http://apps.neu.edu.cn/netaggr \n 无类别域间路由（CIDR）网络地址计算器 \n IPv4 / IPv6 CIDR计算器 | RAKKOTOOLS🔧 \n http://ip.chacuo.net/ipconvert \n https://github.com/3th1nk/cidr \n https://www.oldking.net \n \n tracert \n \n Tracert  列出分组经过的路由节点，以及它在IP 网络中每一跳的延迟（这里的延迟是指：分组从信息源发送到目的地所需的时间，\n延迟也分为许多的种类——传播延迟、传输延迟、处理延迟、排队延迟等，是大多数网站性能的瓶颈之一）. \n \n tracert  [ -d ] [ -h  maximum_hops] [ -j  host-list] [ -w  timeout] [ -R ] [ -S  srcaddr] [ -4 ] [ -6 ] target_name \n \n 选项 \n \n -d  指定不将 IP 地址解析到主机名称。 \n -h maximum_hops  指定跃点数以跟踪到称为 target_name 的主机的路由。 \n -j host-list  指定 Tracert 实用程序数据包所采用路径中的路由器接口列表。 \n -w timeout  等待 timeout 为每次回复所指定的毫秒数。 \n target_name  目标主机的名称或 IP 地址。 \n \n 示例 \n tracert www.bajins.com\n 检查端口连接 \n exec   3 <> /dev/tcp/ < IP地址 > / < 端口号 > \n timeout   5   bash   -c   \"echo >/dev/tcp/<IP地址>/<端口号>\" \n ( sleep  5   &&   kill   $$ )   &   echo   >  /dev/tcp/ < IP地址 > / < 端口号 > \npython  -c   \"import socket; s=socket.socket(); s.settimeout(5); s.connect (( ' < IP地址 > ' , < 端口号 > )) ;\" \npython  -c   'import socket; s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.settimeout(5); s.connect((\"<IP地址>\",<端口号>))' \ntelnet  < IP地址 >   < 端口号 > \nnetcat \n nc   -vz   < IP地址 >   < 端口号 > \nnmap  -p   < 端口号 >   < IP地址 > \n curl   -v   < 协议 > :// < IP地址 > : < 端口号 > \n curl   -v  telnet:// < IP地址 > : < 端口号 > \nsocat - TCP: < IP地址 > : < 端口号 > \n 网卡 \n MTU \n \n MTU经过网卡传输的数据包的最大传输单元,传输设备的MTU值不规范造成传输失败的情况 \n \n 查看MTU值 \n cat  /sys/class/net/eth0/mtu\n \n 临时更改MTU值 \n echo   \"1476\"   >  /sys/class/net/eth0/mtu\n或者 \nifconfig 网口名 mtu 数值 \n ifconfig  eth0 mtu  1476 \n \n 永久更改MTU值 \n vi  /etc/sysconfig/network-scripts/ifcfg-eth0\n在DEVICE=eth0下面加入 \n MTU = 1476 \n启用IPv6地址的，修改IPv6 mtu的参数为 \n IPV6_MTU = \"1280\" \n \n 重启网络接口 \n service  network restart\n \n ",createdTime:1761814324e3},{title:"Linux配置",frontmatter:{description:"广告拦截 https://github.com/pi-hole/pi-hole\n在 Linux 上安装字体：综合指南",meta:[{name:"twitter:title",content:"Linux配置"},{name:"twitter:description",content:"广告拦截 https://github.com/pi-hole/pi-hole\n在 Linux 上安装字体：综合指南"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/Linux%E9%85%8D%E7%BD%AE.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Linux配置"},{property:"og:description",content:"广告拦截 https://github.com/pi-hole/pi-hole\n在 Linux 上安装字体：综合指南"},{property:"og:url",content:"https://bajins.com/System/Linux%E9%85%8D%E7%BD%AE.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Linux配置"},{itemprop:"description",content:"广告拦截 https://github.com/pi-hole/pi-hole\n在 Linux 上安装字体：综合指南"}]},regularPath:"/System/Linux%E9%85%8D%E7%BD%AE.html",relativePath:"System/Linux配置.md",key:"v-4e56d102",path:"/System/Linux%E9%85%8D%E7%BD%AE.html",headers:[{level:2,title:"源码安装卸载",slug:"源码安装卸载"},{level:3,title:"checkinstall",slug:"checkinstall"},{level:2,title:"初次配置",slug:"初次配置"},{level:3,title:"修改时区为亚洲上海",slug:"修改时区为亚洲上海"},{level:3,title:"安装简体中文语言包",slug:"安装简体中文语言包"},{level:3,title:"设置中文utf8编码",slug:"设置中文utf8编码"},{level:3,title:"安装字体",slug:"安装字体"},{level:3,title:"设置VIM",slug:"设置vim"},{level:3,title:"SSH会话执行文件",slug:"ssh会话执行文件"},{level:2,title:"开机启动",slug:"开机启动"},{level:2,title:"修改为root登录",slug:"修改为root登录"},{level:2,title:"挂载存储卷",slug:"挂载存储卷"},{level:3,title:"基本概念",slug:"基本概念"},{level:3,title:"物理卷命令",slug:"物理卷命令"},{level:3,title:"卷组命令",slug:"卷组命令"},{level:3,title:"卷组扩充与缩小",slug:"卷组扩充与缩小"},{level:3,title:"卷组合并与拆分",slug:"卷组合并与拆分"},{level:3,title:"卷组输入与输出",slug:"卷组输入与输出"},{level:3,title:"逻辑卷命令",slug:"逻辑卷命令"},{level:3,title:"逻辑卷创建与删除",slug:"逻辑卷创建与删除"},{level:3,title:"逻辑卷扩充与缩小",slug:"逻辑卷扩充与缩小"},{level:3,title:"逻辑卷管理命令",slug:"逻辑卷管理命令"},{level:3,title:"挂载",slug:"挂载"},{level:2,title:"扩容",slug:"扩容"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Linux配置 \n 源码安装卸载 checkinstall 初次配置 修改时区为亚洲上海 安装简体中文语言包 设置中文utf8编码 安装字体 设置VIM SSH会话执行文件 开机启动 修改为root登录 挂载存储卷 基本概念 物理卷命令 卷组命令 卷组扩充与缩小 卷组合并与拆分 卷组输入与输出 逻辑卷命令 逻辑卷创建与删除 逻辑卷扩充与缩小 逻辑卷管理命令 挂载 扩容 \n Flag \n \n 广告拦截  https://github.com/pi-hole/pi-hole \n 在 Linux 上安装字体：综合指南 \n查看/bin/sh指向的解释器 \n ls  /bin/sh  -al \n重新配置dash，并选择“no”，即不使用dash \n sudo  dpkg-reconfigure dash\n 源码安装卸载 \n \n 编译时的路径如果指定了 --prefix /usr/local/xxx  直接 rm -rf /usr/local/xxx 即可。 \n 没指定路径，那就到源码路径执行make uninstall，如果最初的编译文件夹被删除了，还可以重新下载、编译，然后删除 \n \n 如果源码被删除就查找并删除 \n find  /  -name  软件名称\n checkinstall \n \n 通过 checkinstall 管理编译安装过程 \n \n 使用 checkinstall 编译安装 \n ./configure\n make \ncheckinstall\n \n \n CheckInstall会完成以下任务 \n \n \n 调用 make install ，然后用 installwatch 监视、记录整个安装过程中添加的文件 \n 等到安装完成，把记录的文件打包，根据不同的系统创建安装包： .rpm 或 .deb \n \n 注：安装包会保存在源代码目录，以便复制到其它机器安装，省去重复编译的麻烦。 \n \n \n 移除 make install 安装的文件 \n 调用系统安装工具来安装第2步创建的安装包： rpm -i 或 dpkg -i \n \n 卸载 checkinstall 安装的软件 \n CentOS:  rpm   -e  package_name\nUbuntu: dpkg  -r  package_name\n 初次配置 \n 修改时区为亚洲上海 \n ln   -sf  /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n 安装简体中文语言包 \n #查看系统当前使用语言包 \nlocale\n #查看系统拥有语言包 \nlocale  -a \n \n \n 如果没有zh_CN.utf8就需要安装简体中文语言包 \n \n yum  -y   install  kde-l10n-Chinese\n #glibc-common软件包包括用于GNU libc库的常见二进制文件，以及国家语言（locale）支持。 \nyum  -y  reinstall glibc-common\nyum  -y  groupinstall chinese-support\n 设置中文utf8编码 \n 临时 \n export   LANG = zh_CN.UTF-8\n export   LANGUAGE = zh_CN.UTF-8\n \n 长久 \n \n CenOS7修改 vi /etc/locale.conf \n CentOS6修改 vi /etc/sysconfig/i18n \n Ubuntu修改 vi /etc/default/locale \n \n Ubuntu修改编码格式为中文 \n \n \n \n LANG = \"zh_CN.utf8\" \n LANGUAGE = \"zh_CN.UTF-8:zh_CN.utf8:zh_CN\" \n SUPPORTED = \"zh_CN.utf8:zh_CN:zh:en_US.utf8:en_US:en\" \n SYSFONT = \"lat0-sun16\" \n \n localectl set-locale  LANG = zh_CN.utf8\n 安装字体 \n安装字体配置和字体索引指令 \nyum  install   -y  fontconfig mkfontscale\n sudo   apt-get   -y   install  fontconfig xfonts-utils\n查看字体 \nfc-list\n查看系统中已经安装的中文字体 \nfc-list :lang = zh\n进入C:\\Windows\\Fonts把MSYH.TTF（微软雅黑字体文件）和simhei.tty（黑体常规）文件 \n上传到linux服务器/usr/share/fonts/my_fonts下 \n建立字体索引信息 \nmkfontscale\nmkfontdir\n更新字体缓存 \nfc-cache\n 设置VIM \n 解决中文乱码问题 \n vi  /etc/vim/vimrc\n在开头或者末尾添加 \n set   fileencodings = utf-8,gbk,utf-16le,cp1252,iso-8859-15,ucs-bom\n set   termencoding = utf-8\n set   encoding = utf-8\n \n 显示行号 \n vi  /etc/vimrc\n vi  /etc/virc\n在开头或者末尾添加 \n set  number\n SSH会话执行文件 \n \n /etc/motd  可以在里面加入自己喜欢的任何欢迎信息，这段信息将会在登录成功后显示 \n /etc/profile  中设定的变量(全局)的可以作用于任何用户 \n /.bashrc  设定的变量(局部)只能继承 /etc/profile 中的变量,他们是”父子”关系 \n /~/.bash_profile  当前用户登录时执行 \n /~/.bash_logout  当前用户每次退出系统(退出shell)时执行 \n /~/.bashrc  当前用户登录时以及每次打开新的shell时,该文件被读取 \n \n \n export key=value  设置变量 \n source 文件路径  刷新配置文件，立即执行（变量、程序、脚本） \n PATH=$PATH:  全局变量，不同值之间用 : 分割，存储在 ~/.bash_profile 里 \n \n \n 为每一个运行bash shell的用户执行此文件.当bash shell被打开时, 该文件被读取（即每次新开一个终端，都会执行bashrc）。 \n 只要在同一个shell界面，不管多少用户登录都只执行一次 \n \n vi  /etc/profile\n \n \n 此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行. 并从 /etc/profile.d 目录的配置文件中搜集shell的设置。 \n 如果进入shell用普通用户登录后，再用su进入root用户那么将会被执行两次 \n \n vi  /etc/bashrc\n \n 欢迎信息 \n \n https://github.com/taills/sysinfo \n \n \n 输入 shift  +  g （就是大写的 G ）跳转到末尾添加以下内容 \n \n echo   '==========================================================' \n查看系统发行版信息 \n sed   -n   -e   's/PRETTY_NAME=//gp'  /etc/os-release\n查询内核版本 \n cat  /proc/version\n echo   '==========================================================' \n查询目前所有文件系统的可用空间及使用情形 \n df   -Th \n echo   '==========================================================' \n查询内存使用情况 \n free   -h \n echo   '==========================================================' \n切换到home文件夹 \n cd  /home\n查看系统发行版信息 \n cat  /etc/*release\n cat  /etc/os-release\n cat  /usr/lib/os-release\n输出NAME和VERSION \n source  /etc/os-release  &&   echo   $PRETTY_NAME \n sed   -n   -e   's/PRETTY_NAME=//gp'  /etc/os-release\n cat  /etc/os-release  |   grep  ^PRETTY_NAME =   |   awk   -F =   '{print $2}' \n输出NAME部分 \n sed   -n   -e   '/PRETTY_NAME/ s/^.*=\\|\"\\| .*//gp'  /etc/os-release\n cat  /etc/os-release  |   grep   \"PRETTY_NAME\"   |   sed   's/PRETTY_NAME=//g'   |   sed   's/[\"]//g'   |   awk   '{print $1}' \n cat  /etc/issue\n cat  /etc/issue.net\n查询内核版本 \n cat  /proc/version\n cat  /proc/sys/kernel/ostype /proc/sys/kernel/osrelease\n dmesg   |   grep   'Linux version' \n uname   -sr \n查看cpu相关信息（型号、主频、内核） \n cat  /proc/cpuinfo\n查看CPU信息（型号） \n cat  /proc/cpuinfo  |   grep  name  |   cut   -f2  -d:  |   uniq   -c \n查看物理CPU个数 \n cat  /proc/cpuinfo |   grep   \"physical id\" |   sort |   uniq |   wc   -l \n grep   'physical id'  /proc/cpuinfo  |   sort   -u \n查看每个物理CPU中core的个数(即核数) \n cat  /proc/cpuinfo |   grep   \"cpu cores\" |   uniq \n grep   'core id'  /proc/cpuinfo  |   sort   -u   |   wc   -l \n查看逻辑CPU的个数 \n cat  /proc/cpuinfo |   grep   \"processor\" |   wc   -l \n grep   'processor'  /proc/cpuinfo  |   sort   -u   |   wc   -l \n 开机启动 \n 添加命令到 /etc/rc.local 文件末尾 \n \n 编辑 /etc/rc.local 或者 /etc/rc.d/rc.local （前者是后者的软连接）文件，\n按 Shift  +  g （就是大写的G）跳转到末尾添加运行命令 \n \n 执行的程序需要写绝对路径，添加到系统环境变量的除外 \n \n \n \n 为防止启动执行失败，最好执行一次 chmod +x /etc/rc.d/rc.local 进行授权 \n \n crontab \n crontab   -e \n@reboot 运行程序命令\n \n 脚本文件放在 /etc/profile.d/ 目录下 \n \n chkconfig \n \n \n 创建软连接或者复制脚本到 /etc/init.d/ 或者 /etc/rc.d/init.d/ （前者是后者的软连接）下 \n \n \n 注意脚本文件开头一定要添加以下几行代码，否侧会提示 chkconfig 不支持 \n \n #!/bin/sh \n- 64 36 分别代表运行级别，启动优先权，关闭优先权 \nchkconfig: - 64 36 \ndescription: Supervisor Server \nprocessname: supervisord \n \n \n 添加启动项 \n \n chkconfig   --add  脚本名\n chkconfig  脚本名 on\n \n \n 检查是否设置成功 \n \n chkconfig   --list   |   grep  脚本名\n 修改为root登录 \n重置root密码，其他账户都一样按此方法修改root为指定账户即可 \n sudo   passwd  root\n echo  root:密码  | sudo  chpasswd root\n切换到root账号 \n su \n sudo   -i \n强制删除用户（会同时删除相关目录） \n userdel   -rf  name\n \n 修改sshd_config中的参数 \n编辑sshd_config文件 \n vi  /etc/ssh/sshd_config\n \n \n PermitRootLogin  修改为 yes  允许远程root用户登入 \n PasswordAuthentication  修改为 yes  允许使用用户名密码方式登入 \n \n 或者执行命令直接修改 \n-r 支持扩展表达式，-i 直接修改文件内容 \n sudo   sed   -i   's/^#\\?Port.*/Port 22/g'  /etc/ssh/sshd_config ; \n sudo   sed   -i   's/^#\\?PermitRootLogin.*/PermitRootLogin yes/g'  /etc/ssh/sshd_config ; \n sudo   sed   -ri   's/^#?(PasswordAuthentication)\\s+(yes|no)/\\1 yes/'  /etc/ssh/sshd_config ; \n修改authorized_keys文件（即ssh证书），把ssh-rsa之前的内容都删除掉（酌情执行） \n sudo   sed   -ri   's/^/#/;s/sleep 10\"\\s+/&\\n/'  /root/.ssh/authorized_keys ; \n \n 重启ssh \n sudo   service  sshd restart\n sudo   service   ssh  --full-restart\n 挂载存储卷 \n \n 玩转Linux之硬盘分区格式化挂载与合并 \n 基本概念 \n 1、 物理卷—–PV（Physical Volume）\n物理卷在逻辑卷管理中处于最底层，它可以是实际物理硬盘上的分区，也可以是整个物理硬盘。 \n 2、 卷组——–VG（Volumne Group）\n卷组建立在物理卷之上，一个卷组中至少要包括一个物理卷，在卷组建立之后可动态添加物理卷到卷组中。一个逻辑卷管理系统工程中可以只有一个卷组，也可以拥有多个卷组。 \n 3、 逻辑卷—–LV（Logical Volume）\n逻辑卷建立在卷组之上，卷组中的未分配空间可以用于建立新的逻辑卷，逻辑卷建立后可以动态地扩展和缩小空间。系统中的多个逻辑卷要以属于同一个卷组，也可以属于不同的多个卷组。 \n 4、 物理区域–PE（Physical Extent）\n物理区域是物理卷中可用于分配的最小存储单元，物理区域的大小可根据实际情况在建立物理卷时指定。物理区域大小一旦确定将不能更改，同一卷组中的所有物理卷的物理区域大小需要一致。 \n 5、 逻辑区域―LE（Logical Extent）\n逻辑区域是逻辑卷中可用于分配的最小存储单元，逻辑区域的大小取决于逻辑卷所在卷组中的物理区域的大小。 \n 6、 卷组描述区域—–（Volume Group Descriptor Area）\n卷组描述区域存在于每个物理卷中，用于描述物理卷本身、物理卷所属卷组、卷组中的逻辑卷及逻辑卷中物理区域的分配等所有信息，卷组描述区域是在使用pvcreate建立物理卷时建立的。 \n 物理卷命令 \n pvscan  #在系统的所有磁盘中搜索已存在的物理卷 \npvdisplay 物理卷全路径名称  #用于显示指定物理卷的属性。 \npvdata 物理卷全路径名称  #用于显示物理卷的卷组描述区域信息，用于调试目的。 \npvchange Cx | --allocation  { y | n }  物理卷全路径名  #用于改变物理卷的分配许可设置物理卷的创建与删除命令 \npvcreate 设备全路径名  -ff   #用于在磁盘或磁盘分区上创建物理卷初始化信息，以便对该物理卷进行逻辑卷管理。 \npvmove 源物理卷全路径我 [ 目的物理卷全路径名 ]   #用于把某物理卷中的数据转移到同卷组中其他的特刊卷中。 \n 卷组命令 \n vgscan  #检测系统中所有磁盘 \nvgck  [ 卷组名 ]   #用于检查卷组中卷组描述区域信息的一致性。 \nvgdisplay  [ 卷组名 ]   #显示卷组的属性信息 \nvgrename 原卷组名 新卷组名\nvgchange  -a  y | n  [ 卷组名 ]   #改变卷组的相应属性。是否可分配 \nvgchange  -l  最大逻辑卷数  #卷组可容纳最大逻辑卷数 \nvgchange  -x  y | n  [ 卷组名 ]   #卷是否有效 \nvgmknodes  [ 卷组名 | 卷组路径 ]   #用于建立（重新建立）已有卷组目录和其中的设备文件卷组配置的备份与恢复命令 \nvgcfgbackup  [ 卷组名 ]   #把卷组中的VGDA信息备份到“/etc/lvmconf”目录中的文件 \nvgcfgrestore  -n  卷组名 物理卷全路命名  #从备份文件中必得指定物理卷的信息卷组的建立与删除命令 \nvgcreate 卷组名 物理卷全路径名 [ 物理卷全路径名 ] \nvgmove 卷组名\n 卷组扩充与缩小 \n vgextend 卷组名 物理卷全路径名 [ 物理卷全路径名 ] \nvgreduce 卷组名 物理卷全路径名 [ 物理卷全路径名 ] \n 卷组合并与拆分 \n \n linux磁盘挂载，硬盘空间合并 \n \n vgsplit 现有卷组 新卷组 物理卷全路径名 [ 物理卷全路径名 ] \n 卷组输入与输出 \n vgexport 卷组名\nvgimport 卷组名 卷组中的物理卷 [ 卷组中的物理卷 ] \n 逻辑卷命令 \n lvscan\nlvdisplay 逻辑卷全路径名 [ 逻辑卷全路径名 ] \nlvrename 旧逻辑卷全路径名 新逻辑卷全路径名\nlvrename 卷组名 旧逻辑卷名 新逻辑卷名\nlvchange\ne2fsadm  -L  + | - 逻辑卷增减量 逻辑卷全路径名\n 逻辑卷创建与删除 \n lvcreate\nlvremove\n 逻辑卷扩充与缩小 \n lvextend -L | --size +逻辑卷大小增量 逻辑卷全路径名\nlvreduce q -L | --size +逻辑卷减小量 逻辑卷全路径名\n 逻辑卷管理命令 \n lvmdiskscan  #检测所有的SCSI、IDE等存储设备 \nlvmchange -R | --reset  #复位逻辑卷管理器 \nlvmsadc  [ 日志文件全路径名 ]   #收信逻辑卷管理器读写统计信息，保存到日志文件中。 \nlvmsar 日志文件全路径名  #从lvmsadc命令生成的日志文件中读取并报告逻辑卷管理器的读写统计信息。 \n 挂载 \n \n 直接挂载。但是是用逻辑卷的名称挂载。硬盘上的数据还在。 \n查看物理卷 pvscan \npvs\n查看卷组 vgdisplay \nvgs\nvgcreate vg名字 需要加入这个vg的pv分区 \nvgextend  vg名称  pv分区 \n激活逻辑卷 \nvgchange  -ay  /dev/VolGroup00\nvgdisplay \n创建分区 \nlvcreate  -L  分区大小+单位   -n   lv分区名称   vg名称\n删除分区 \nlvremove 分区位置 ( /dev/disk_lvm/name ) \n查看服务器物理分区，逻辑卷的信息 \n fdisk   -l \n查看逻辑卷的具体信息 \nlvdisplay\n直接格式化分区 \n mkfs   -t  ext4  -c  /dev/sdb1\n挂载硬盘 \n mount  /dev/sdb1 /mnt\n开机自动挂载，不备份且启动时检查顺序（根分区通常为0 1） \n echo   \"/dev/sdb1 /mnt ext4 defaults 0 2\"   >>  /etc/fstab\n echo   '/dev/sdb1 /mnt ext4 defaults 0 2'   |   sudo   tee   -a  /etc/fstab\n检查fstab语法 \n sudo  findmnt  --verify \n 扩容 \n查看磁盘挂载信息 \n df   -Th \n列出系统上所有的磁盘 \nlsblk  -f \nlsblk  -lp   |   grep   -v   \"ro,rm\"   |   grep  part  |   awk   '{print $1}' \n列出设备的uuid \nblkid\n sudo  blkid  -s  UUID  -s  TYPE  -o  value /dev/sdb1\n查询文件系统状态 \ndumpe2fs\n扩容 \nlvextend  -L  50G /dev/mapper/ubuntu--vg-ubuntu--lv\n全部空间都给这个盘 \nlvextend  -l  +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv\n重新计算磁盘大小 \nresize2fs /dev/mapper/ubuntu--vg-ubuntu--lv\n \n ",createdTime:1761814324e3},{title:"IOS",frontmatter:{description:"https://github.com/pikacode/EBBannerView/blob/master/README_CHS.md\nhttps://github.com/CodeTips?tab=repositories\nhttps://github.com/dudongge/DDGDataCache_OC\nhttps://github.com/pujiaxin33/JXSegmentedView\nhttps://github.com/jinht/ShopCarAnimation\n图表库 https://github.com/danielgindi/Charts\nhttps://github.com/BradLarson/GPUImage\nhttps://github.com/SDWebImage/SDWebImage\nhttps://github.com/jdg/MBProgressHUD\nhttps://github.com/SVProgressHUD/SVProgressHUD\nhttps://github.com/kevinzhow/PNChart\nhttps://github.com/CanvasPod/Canvas\nhttps://github.com/levey/AwesomeMenu\nhttps://github.com/CEWendel/SWTableViewCell\nhttps://github.com/jverdi/JVFloatLabeledTextField\nhttps://github.com/romaonthego/RESideMenu\nhttps://github.com/nicklockwood/iCarousel\nHTTP https://github.com/Alamofire/Alamofire\nhttps://github.com/MugunthKumar\nhttps://github.com/iosptl\nhttps://github.com/tonymillion/Reachability\nhttps://github.com/pokeb/asi-http-request\nhttps://github.com/AFNetworking/AFNetworking\nJSON https://github.com/johnezang/JSONKit\nSQLite https://github.com/ccgus/fmdb\n压缩 https://github.com/weichsel/ZIPFoundation\n防止键盘向上滑动并覆盖 https://github.com/hackiftekhar/IQKeyboardManager\n应用内设置 https://github.com/futuretap/InAppSettingsKit",meta:[{name:"twitter:title",content:"IOS"},{name:"twitter:description",content:"https://github.com/pikacode/EBBannerView/blob/master/README_CHS.md\nhttps://github.com/CodeTips?tab=repositories\nhttps://github.com/dudongge/DDGDataCache_OC\nhttps://github.com/pujiaxin33/JXSegmentedView\nhttps://github.com/jinht/ShopCarAnimation\n图表库 https://github.com/danielgindi/Charts\nhttps://github.com/BradLarson/GPUImage\nhttps://github.com/SDWebImage/SDWebImage\nhttps://github.com/jdg/MBProgressHUD\nhttps://github.com/SVProgressHUD/SVProgressHUD\nhttps://github.com/kevinzhow/PNChart\nhttps://github.com/CanvasPod/Canvas\nhttps://github.com/levey/AwesomeMenu\nhttps://github.com/CEWendel/SWTableViewCell\nhttps://github.com/jverdi/JVFloatLabeledTextField\nhttps://github.com/romaonthego/RESideMenu\nhttps://github.com/nicklockwood/iCarousel\nHTTP https://github.com/Alamofire/Alamofire\nhttps://github.com/MugunthKumar\nhttps://github.com/iosptl\nhttps://github.com/tonymillion/Reachability\nhttps://github.com/pokeb/asi-http-request\nhttps://github.com/AFNetworking/AFNetworking\nJSON https://github.com/johnezang/JSONKit\nSQLite https://github.com/ccgus/fmdb\n压缩 https://github.com/weichsel/ZIPFoundation\n防止键盘向上滑动并覆盖 https://github.com/hackiftekhar/IQKeyboardManager\n应用内设置 https://github.com/futuretap/InAppSettingsKit"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/IOS.html"},{property:"og:type",content:"article"},{property:"og:title",content:"IOS"},{property:"og:description",content:"https://github.com/pikacode/EBBannerView/blob/master/README_CHS.md\nhttps://github.com/CodeTips?tab=repositories\nhttps://github.com/dudongge/DDGDataCache_OC\nhttps://github.com/pujiaxin33/JXSegmentedView\nhttps://github.com/jinht/ShopCarAnimation\n图表库 https://github.com/danielgindi/Charts\nhttps://github.com/BradLarson/GPUImage\nhttps://github.com/SDWebImage/SDWebImage\nhttps://github.com/jdg/MBProgressHUD\nhttps://github.com/SVProgressHUD/SVProgressHUD\nhttps://github.com/kevinzhow/PNChart\nhttps://github.com/CanvasPod/Canvas\nhttps://github.com/levey/AwesomeMenu\nhttps://github.com/CEWendel/SWTableViewCell\nhttps://github.com/jverdi/JVFloatLabeledTextField\nhttps://github.com/romaonthego/RESideMenu\nhttps://github.com/nicklockwood/iCarousel\nHTTP https://github.com/Alamofire/Alamofire\nhttps://github.com/MugunthKumar\nhttps://github.com/iosptl\nhttps://github.com/tonymillion/Reachability\nhttps://github.com/pokeb/asi-http-request\nhttps://github.com/AFNetworking/AFNetworking\nJSON https://github.com/johnezang/JSONKit\nSQLite https://github.com/ccgus/fmdb\n压缩 https://github.com/weichsel/ZIPFoundation\n防止键盘向上滑动并覆盖 https://github.com/hackiftekhar/IQKeyboardManager\n应用内设置 https://github.com/futuretap/InAppSettingsKit"},{property:"og:url",content:"https://bajins.com/System/IOS.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"IOS"},{itemprop:"description",content:"https://github.com/pikacode/EBBannerView/blob/master/README_CHS.md\nhttps://github.com/CodeTips?tab=repositories\nhttps://github.com/dudongge/DDGDataCache_OC\nhttps://github.com/pujiaxin33/JXSegmentedView\nhttps://github.com/jinht/ShopCarAnimation\n图表库 https://github.com/danielgindi/Charts\nhttps://github.com/BradLarson/GPUImage\nhttps://github.com/SDWebImage/SDWebImage\nhttps://github.com/jdg/MBProgressHUD\nhttps://github.com/SVProgressHUD/SVProgressHUD\nhttps://github.com/kevinzhow/PNChart\nhttps://github.com/CanvasPod/Canvas\nhttps://github.com/levey/AwesomeMenu\nhttps://github.com/CEWendel/SWTableViewCell\nhttps://github.com/jverdi/JVFloatLabeledTextField\nhttps://github.com/romaonthego/RESideMenu\nhttps://github.com/nicklockwood/iCarousel\nHTTP https://github.com/Alamofire/Alamofire\nhttps://github.com/MugunthKumar\nhttps://github.com/iosptl\nhttps://github.com/tonymillion/Reachability\nhttps://github.com/pokeb/asi-http-request\nhttps://github.com/AFNetworking/AFNetworking\nJSON https://github.com/johnezang/JSONKit\nSQLite https://github.com/ccgus/fmdb\n压缩 https://github.com/weichsel/ZIPFoundation\n防止键盘向上滑动并覆盖 https://github.com/hackiftekhar/IQKeyboardManager\n应用内设置 https://github.com/futuretap/InAppSettingsKit"}]},regularPath:"/System/IOS.html",relativePath:"System/IOS.md",key:"v-bbd3dc82",path:"/System/IOS.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"IOS框架",slug:"ios框架"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" IOS \n Flag IOS框架 \n Flag \n \n https://github.com/apple/swift \n \n \n https://github.com/pikacode/EBBannerView/blob/master/README_CHS.md \n https://github.com/CodeTips?tab=repositories \n https://github.com/dudongge/DDGDataCache_OC \n https://github.com/pujiaxin33/JXSegmentedView \n https://github.com/jinht/ShopCarAnimation \n 图表库  https://github.com/danielgindi/Charts \n https://github.com/BradLarson/GPUImage \n https://github.com/SDWebImage/SDWebImage \n https://github.com/jdg/MBProgressHUD \n https://github.com/SVProgressHUD/SVProgressHUD \n https://github.com/kevinzhow/PNChart \n https://github.com/CanvasPod/Canvas \n https://github.com/levey/AwesomeMenu \n https://github.com/CEWendel/SWTableViewCell \n https://github.com/jverdi/JVFloatLabeledTextField \n https://github.com/romaonthego/RESideMenu \n https://github.com/nicklockwood/iCarousel \n HTTP  https://github.com/Alamofire/Alamofire \n https://github.com/MugunthKumar \n https://github.com/iosptl \n https://github.com/tonymillion/Reachability \n https://github.com/pokeb/asi-http-request \n https://github.com/AFNetworking/AFNetworking \n JSON  https://github.com/johnezang/JSONKit \n SQLite  https://github.com/ccgus/fmdb \n 压缩  https://github.com/weichsel/ZIPFoundation \n 防止键盘向上滑动并覆盖  https://github.com/hackiftekhar/IQKeyboardManager \n 应用内设置  https://github.com/futuretap/InAppSettingsKit \n \n \n IDE  https://www.jetbrains.com/zh-cn/objc \n https://github.com/Carthage/Carthage \n https://github.com/CodeEditApp/CodeEdit \n https://cocoapods.org \n https://github.com/xtool-org/xtool \n \n \n https://github.com/raycast \n https://github.com/sindresorhus \n 创建DMG  https://github.com/sindresorhus/create-dmg \n IOS第三方依赖管理工具  https://cocoapods.org \n 解锁功能  https://github.com/VirgilClyne/iRingo \n MAC取证  https://github.com/jipegit/OSXAuditor \n IOS越狱  https://github.com/palera1n \n https://github.com/lwouis/alt-tab-macos \n https://github.com/opa334/TrollStore \n https://github.com/firecore \n 用文字找照片  https://github.com/mazzzystar/Queryable \n MAC备份  https://github.com/lra/mackup \n 模拟定位  https://github.com/Schlaubischlump/LocationSimulator \n https://github.com/DamascenoRafael/reminders-menubar \n 隐藏菜单栏  https://github.com/Mortennn/Dozer \n https://github.com/acidanthera \n https://github.com/ivoronin/TomatoBar \n 翻译  https://github.com/tisfeng/Easydict \n 录屏  https://github.com/lihaoyun6/QuickRecorder \n 视频转GIF  https://github.com/sindresorhus/Gifski \n 窗口管理  https://github.com/MrKai77/Loop \n https://github.com/nikitabobko/AeroSpace \n 生成字帖  https://github.com/jaywcjlove/copybook-generator \n 刘海变文件传输和暂存区  https://github.com/Lakr233/NotchDrop \n 加密DNS  https://github.com/kkebo/DNSecure \n https://github.com/paulmillr/encrypted-dns \n 应用管理器  https://github.com/milanvarady/Applite \n https://devutils.com \n 剪贴板  https://github.com/s1ntoneli/Copi \n 虚拟机  https://github.com/utmapp/UTM \n https://github.com/ish-app/ish \n https://github.com/holzschu/a-shell \n \n \n https://macked.app \n 所有机型参数大全  https://github.com/KyleBing/ipad \n \n http://kylebing.cn/tools/iphone \n IOS框架 \n \n https://github.com/tbl00c/ZZFLEX \n https://github.com/marcuswestin/WebViewJavascriptBridge \n \n",createdTime:1761814324e3},{title:"Linux",frontmatter:{description:"VIM键盘图形备忘单\nvi命令（vi编辑器）\nvi 编辑器使用向导\nVim 从小白到入门\nhttps://vimjc.com/archives\nubuntu版本系统升级\nLinux 用户权限",meta:[{name:"twitter:title",content:"Linux"},{name:"twitter:description",content:"VIM键盘图形备忘单\nvi命令（vi编辑器）\nvi 编辑器使用向导\nVim 从小白到入门\nhttps://vimjc.com/archives\nubuntu版本系统升级\nLinux 用户权限"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/Linux.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Linux"},{property:"og:description",content:"VIM键盘图形备忘单\nvi命令（vi编辑器）\nvi 编辑器使用向导\nVim 从小白到入门\nhttps://vimjc.com/archives\nubuntu版本系统升级\nLinux 用户权限"},{property:"og:url",content:"https://bajins.com/System/Linux.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Linux"},{itemprop:"description",content:"VIM键盘图形备忘单\nvi命令（vi编辑器）\nvi 编辑器使用向导\nVim 从小白到入门\nhttps://vimjc.com/archives\nubuntu版本系统升级\nLinux 用户权限"}]},regularPath:"/System/Linux.html",relativePath:"System/Linux.md",key:"v-a4e3491e",path:"/System/Linux.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"包管理",slug:"包管理"},{level:2,title:"软件套件",slug:"软件套件"},{level:2,title:"重装系统",slug:"重装系统"},{level:3,title:"MeowLove",slug:"meowlove"},{level:3,title:"MoeClub",slug:"moeclub"},{level:2,title:"后台运行Daemon",slug:"后台运行daemon"},{level:3,title:"supervisor",slug:"supervisor"},{level:3,title:"Tmux",slug:"tmux"},{level:3,title:"Screen",slug:"screen"},{level:3,title:"nohup",slug:"nohup"},{level:3,title:"setsid",slug:"setsid"},{level:2,title:"传输文件",slug:"传输文件"},{level:3,title:"scp",slug:"scp"},{level:3,title:"sftp",slug:"sftp"},{level:3,title:"rsync",slug:"rsync"},{level:2,title:"性能测试",slug:"性能测试"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Linux \n Flag 包管理 软件套件 重装系统 MeowLove MoeClub 后台运行Daemon supervisor Tmux Screen nohup setsid 传输文件 scp sftp rsync 性能测试 \n Flag \n \n https://www.kernel.org \n Linux手册  https://learn-linux.readthedocs.io/zh_CN/latest \n https://github.com/tldr-pages/tldr \n http://www.linuxbaike.com \n https://github.com/huataihuang/cloud-atlas \n Linux网络编程 \n OSX操作指南 \n https://github.com/guodongxiaren/LinuxTool \n Linux工具的最常用用法  https://github.com/me115/linuxtools_rst \n https://github.com/GTFOBins \n https://github.com/dunwu/linux-tutorial \n https://github.com/jaywcjlove/linux-command \n https://www.linuxcool.com \n https://man.linuxde.net \n Cron 定时任务表达式手册 \n Linux内核模块编程指南  https://github.com/sysprog21/lkmpg \n http://www.linux-commands-examples.com \n https://github.com/abarrak/linux-sysops-handbook \n https://github.com/leezhenghui/leezhenghui.github.io \n https://github.com/linux-kernel-labs-zh \n BPF  https://ebpf.io/zh-hans/what-is-ebpf \n https://github.com/DavadDi/bpf_study \n \n 最神奇的Linux技术 BPF入门 \n \n \n https://github.com/nevermosby/linux-bpf-learning \n \n bpf简介 \n \n \n https://github.com/elastic/otel-profiling-agent \n https://github.com/eunomia-bpf/bpf-developer-tutorial \n https://github.com/l3af-project \n https://github.com/libbpf/libbpf-bootstrap \n https://github.com/aya-rs/aya \n https://github.com/Sherlock-Holo/lycoris \n \n \n VIM键盘图形备忘单 \n vi命令（vi编辑器） \n vi 编辑器使用向导 \n Vim 从小白到入门 \n https://vimjc.com/archives \n ubuntu版本系统升级 \n Linux 用户权限 \n \n Ubuntu/Debian 系统升级 \n \n 如何升级您的 Ubuntu 版本 \n https://ubuntu.com/about/release-cycle \n https://www.debian.org/releases \n https://github.com/bkw777/mainline \n https://github.com/berglh/ubuntu-sb-kernel-signing \n刷新可用软件包及其版本的列表，处理依赖冲突并升级软件包（包括内核）升级到最新版本\n sudo  apt update  & &   sudo  apt dist-upgrade  -y \nUbuntu升级系统\n sudo  do-release-upgrade \n自动删除未使用的内核，包括过时的内核\n sudo  apt autoremove  -y \n查看当前内核版本\n dpkg   --list  | grep linux-image \n安装最新内核\n sudo  apt install linux-image-$(uname  -r ) \n重新加载内核配置\n sudo  update-grub \n卸载 GNOME 桌面环境\n sudo  apt purge gnome gnome-shell  -y \n sudo  apt autoremove  --purge   -y \n sudo  apt clean \n 包管理 \n \n 流行的 Linux 发行版包管理器命令的对应关系 \n Linux包管理器及包安装工具基础知识 \n \n \n 软件包管理器  https://github.com/NixOS/nix \n \n https://github.com/ryan4yin/nixos-and-flakes-book \n \n \n https://github.com/rpm-software-management/rpm \n https://github.com/joyent/pkgsrc \n https://github.com/TritonDataCenter/pkgsrc \n \n https://github.com/NetBSDfr \n \n \n https://github.com/Homebrew/brew \n https://github.com/AppImage \n https://github.com/flatpak/flatpak \n \n https://flatpak.org \n https://flathub.org \n https://github.com/tchx84/Flatseal \n \n \n https://github.com/snapcore/snapd \n \n snap应用商店  https://snapcraft.io \n https://docs.snapcraft.io/core/install \n https://github.com/popey/unsnap \n \n \n https://github.com/spack/spack \n 各个版本控件支持库  https://pkgs.org \n https://github.com/makedeb \n https://mpr.hunterwittenborn.com \n https://store.steampowered.com \n https://github.com/calamares \n 打包  https://gitlab.com/engmark/nix-start \n \n \n mac  https://github.com/macports \n https://github.com/kidonng/sushi \n \n 第三方的软件包搜索引擎： \n \n http://pkgs.org \n http://rpmfind.net \n http://rpm.pbone.net \n 软件套件 \n \n https://github.com/topics/lamp \n https://github.com/topics/lnmp \n https://github.com/topics/lemp \n \n \n https://github.com/teddysun/lamp \n \n https://lamp.sh \n \n \n https://github.com/oneinstack/oneinstack \n \n https://oneinstack.com \n \n \n https://github.com/licess/lnmp \n \n https://lnmp.org \n \n \n https://sourceforge.net/projects/xampp \n \n https://www.apachefriends.org \n \n \n https://sourceforge.net/projects/wampserver \n https://www.appserv.org \n https://github.com/adhocore/docker-lemp \n https://github.com/joglomedia/LEMPer \n https://github.com/cytopia/devilbox \n 基础软件包  https://github.com/coreutils \n https://github.com/uutils/coreutils \n https://busybox.net \n \n https://github.com/meefik/busybox \n https://busybox.jrummyapps.com \n https://github.com/sabotage-linux \n \n \n https://landley.net/toybox \n \n https://github.com/landley/toybox \n https://github.com/glaucuslinux/glaucus \n \n \n https://github.com/u-root/u-root \n https://github.com/anatol/booster \n \n \n 阿里云CentOS 7系统一键净化脚本 \n https://github.com/snapcore/snapd \n 提供状态线和提示  https://github.com/powerline/powerline \n 替换服务器的固件  https://github.com/linuxboot/linuxboot \n \n \n Linux开源软件  https://github.com/freedesktop \n \n https://gitlab.freedesktop.org \n https://www.freedesktop.org \n \n \n https://koji.fedoraproject.org \n https://ftp.gnu.org \n https://ftp.acc.umu.se/pub/gnome/binaries \n https://download.savannah.gnu.org \n https://sourceforge.net/projects/pkgconfiglite \n https://sourceforge.net/projects/lcms \n https://github.com/Xfennec/progress \n https://github.com/iputils/iputils \n https://github.com/kjn/lbzip2 \n https://github.com/illiliti/libudev-zero \n https://github.com/red-data-tools/YouPlot \n 系统日志管理  https://github.com/hat-open/hat-syslog \n 安全防护  https://github.com/fail2ban/fail2ban \n 文件管理  https://github.com/MHNightCat/superfile \n 端口占用情况  https://github.com/theopfr/somo \n \n 桌面环境 \n \n https://github.com/GNOME \n \n https://download.gnome.org/binaries \n https://download-fallback.gnome.org/binaries \n \n \n https://github.com/KDE \n https://github.com/lxde \n https://www.xfce.org \n \n https://github.com/xfce-mirror \n \n \n https://github.com/mate-desktop \n https://spins.fedoraproject.org/cinnamon \n \n https://github.com/linuxmint/cinnamon \n \n \n http://www.trinitydesktop.org \n https://github.com/swaywm \n https://www.deepin.org/zh/dde \n https://sourceforge.net/projects/enlightenment \n https://github.com/end-4/dots-hyprland \n https://github.com/i3/i3.github.io \n \n \n 图标  https://github.com/PapirusDevelopmentTeam/papirus-icon-theme \n https://github.com/vinceliuice/WhiteSur-gtk-theme \n Linux桌面壁纸  https://github.com/pgc062020/DailyDesktopWallpaperPlus \n 视频编辑器  https://openhub.net/p/pitivi \n 重装系统 \n \n 重装系统  https://github.com/netbootxyz/netboot.xyz \n \n https://github.com/networkboot \n https://github.com/ipxe/ipxe \n https://wiki.syslinux.org \n https://github.com/openSUSE/gfxboot \n https://github.com/lantongxue/netboot.xyz.cn \n \n \n https://github.com/bin456789/reinstall \n MeowLove \n \n https://github.com/MeowLove/Network-Reinstall-System-Modify \n \n yum update\nyum  install   -y  xz openssl  gawk   file \n下载脚本 \n wget  --no-check-certificate  'https://raw.githubusercontent.com/MeowLove/Network-Reinstall-System-Modify/master/Network-Reinstall-System-Modify.sh' \n wget  --no-check-certificate  -qO  Network-Reinstall-System-Modify.sh  'https://www.cxthhhhh.com/tech-tools/Network-Reinstall-System-Modify/Network-Reinstall-System-Modify.sh'  \n给脚本授权 \n chmod  a+x Network-Reinstall-System-Modify.sh\n一键网络重装纯净：CentOS、Debian、Ubuntu \n bash  Network-Reinstall-System-Modify.sh -发行版_版本号\n \n \n 安装裸机系统部署平台 \n \n \n 仅适用于高端用户，手动安装任意系统。可通过网络ISO或iPXE安装任意系统。 \n \n bash  ~/Network-Reinstall-System-Modify.sh -CXT_Bare-metal_System_Deployment_Platform\n \n \n 安装DD系统 \n \n \n 如果您不了解这意味着什么，请不要进行操作。%ULR%应该替换为您自己的映像地址。 \n \n bash  ~/Network-Reinstall-System-Modify.sh  -DD   \"%URL%\" \n \n bash   < ( wget  --no-check-certificate -qO-  'https://zhujiwiki.com/wp-content/uploads/2018/04/InstallNET.sh' )   -dd   'https://hao.zhujiwiki.com/dd/CentOS_7.X_NetInstallation.vhd.gz' \n MoeClub \n \n https://github.com/MoeClub/Note \n \n \n 适用于由GRUB引导的CentOS,Ubuntu,Debian系统 \n \n yum update\nyum  install   -y  xz openssl  gawk   file \n下载脚本 \n wget  --no-check-certificate  'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' \n给脚本授权 \n chmod  a+x InstallNET.sh\n一键网络重装纯净CentOS 7 \n bash  InstallNET.sh  -c   7.6 .1810  -v   64   -a   --mirror   'http://mirror.centos.org/centos' \n 后台运行Daemon \n \n https://en.wikipedia.org/wiki/Daemon_(computing) \n \n \n 在一个多任务的电脑操作系统中，Daemon/daemonize（守护进程）是一种在后台执行的电脑程序。此类程序会被以进程的形式初始化 \n \n \n 通常，守护进程没有任何存在的父进程（即PPID=1），且在UNIX系统进程层级中直接位于init之下。\n守护进程程序通常通过如下方法使自己成为守护进程：对一个子进程运行fork，然后使其父进程立即终止，\n使得这个子进程能在init下运行。这种方法通常被称为“脱壳”。 \n \n \n https://github.com/topics/init \n https://github.com/topics/services \n \n \n https://github.com/topics/daemon \n \n \n https://github.com/systemd/systemd \n \n Systemd简介systemctl \n https://github.com/isd-project/isd \n https://github.com/poettering/systemd \n \n \n https://github.com/OpenRC/openrc \n https://savannah.nongnu.org/projects/sysvinit \n https://github.com/Yelp/dumb-init \n https://github.com/canonical/pebble \n https://mmonit.com/monit \n http://smarden.org/runit \n http://www.fefe.de/minit \n http://upstart.ubuntu.com \n \n https://launchpad.net/upstart \n \n \n https://github.com/ateska/ramona \n https://modemmanager.org \n \n \n 会话  https://github.com/kovidgoyal/kitty \n supervisor \n \n supervisor 是用 Python 开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台 daemon ，并监控进程状态，异常退出时能自动重启。 \n \n \n https://github.com/Supervisor/supervisor \n \n http://supervisord.org \n 使用 supervisor 管理进程 \n \n \n go实现  https://github.com/ochinchina/supervisord \n \n 常见配置如下 \n [ program:程序名称 ] \n user = root \n command = /var/www/main \n stdout_logfile = /var/log/gf-app-stdout.log \n stderr_logfile = /var/log/gf-app-stderr.log \n autostart = true \n autorestart = true \n \n 使用步骤 \n \n 使用 sudo service supervisor start 启动 supervisor 服务； \n 创建应用配置文件 /etc/supervisor/conf.d/程序名称.conf , 内容如上; \n 使用 sudo supervisorctl 进入 supervisor 管理终端； \n 使用 reload 重新读取配置文件并重启当前 supoervisor 管理的所有进程； \n 也可以使用 update 重新加载配置(默认不重启)，随后使用 start 程序名称 启动指定的应用程序； \n 随后可以使用 status 指令查看当前 supervisor 管理的进程状态； \n Tmux \n \n tmux 是一款 Linux 下的终端复用工具，可以开启不同的终端窗口来将应用程序作为后台守护进程执行，即使远程连接的SSH断开也不会影响程序的执行。 \n \n \n https://github.com/search?q=tmux \n https://github.com/tmux/tmux \n \n https://sourceforge.net/projects/tmux.mirror \n can't create socket: Permission denied \n https://github.com/catppuccin/tmux \n https://galaxy4.net/repo \n https://rpmfind.net/linux/rpm2html \n https://pkgs.org \n https://dl.fedoraproject.org \n https://src.fedoraproject.org/rpms/tmux \n https://vault.centos.org \n \n \n https://github.com/gpakosz/.tmux \n https://github.com/tmux-plugins \n http://www.ruanyifeng.com/blog/2019/10/tmux.html \n https://louiszhai.github.io/2017/09/30/tmux \n https://gist.github.com/MohamedAlaa/2961058 \n https://gist.github.com/ryerh/14b7c24dfd623ef8edc7 \n \n \n tmux 分为 3 层， Session 包含 Window 包含 Panes \n \n 命令 \n \n 可在命令后加 --h 查看命令帮助，如： tmux new --h \n \n \n yum install -y tmux  安装 \n tmux new -s 会话名称  新建会话 \n tmux attach -t 会话名称  可进入到已经创建的会话\n \n 可使用 attach 前一部分字母，如 tmux a -t 会话名称 \n \n \n tmux ls  列出所有会话 \n tmux switch -t 会话名或会话编号  切换会话 \n tmux rename-session -t 会话名或会话编号 新会话名  重命名会话 \n tmux kill-session -t 会话名称  关闭会话 \n tmux kill-server  关闭所有会话 \n tmux split-pane -h  左右分屏 \n tmux spilt-pane -v  上下分屏 \n swap-window -s 3 -t 1   交换 3 号和 1 号窗口 \n swap-window -t 1  交换当前和 1 号窗口 \n move-window -t 1  移动当前窗口到 1 号 \n tmux new -s 会话名 -d \"命令\"  创建新会话并在后台执行命令 \n tmux neww -n 窗口名 -d \"命令\"  新建窗口名并在后台执行命令 \n \n 快捷键 \n \n 所有的快捷键都是先按一下 Ctrl  +  B 松开，这时快捷键生效再按其他按键 \n \n \n D  快捷键可以退出当前终端窗口 \n S  列出所有会话，此时可通过方向键和回车键切换 \n $  重命名当前会话 \n %  左右分屏 \n \"  上下分屏 \n :  进入 tmux 命令行 \n :new -s 会话名称  创建并进入新的会话（不存在父子级关系） \n :kill-session  删除当前会话 \n :kill-server  删除所有会话 \n [ 或 PgUp  进入 copy mode ，查看 tmux 中的终端输出记录 \n \n \n 用 PgUp 、 PgDn 、 光标  浏览历史输出了，按 q 退出 \n \n \n copy mode 其实比较类似于 vi / emacs 里面一个只读 buffer ，可以移动光标，可以搜索，用C-SPC开始选择，选择完后用\n M  +  w 拷贝(会自动退出 copy mode )， ] 可以粘贴,  = 从剪贴板历史中选择。 \n \n 开机运行 \n \n 在 vi /etc/rc.local 文件中按 Shift  +  g （就是大写的G）跳转到末尾添加命令 \n \n \n 如果进入 tmux 时进行和 home 相关的操作时提示 $HOME 未设定，加入设置 home 目录命令： export HOME=/home \n \n \n 为防止启动执行失败，最好执行一次 chmod +x /etc/rc.d/rc.local 进行授权 \n创建新会话并在后台执行命令 \ntmux new  -s  会话名  -d   \"命令\" \n Screen \n \n Screen 是一款由 GNU 计划开发的用于命令行终端切换的自由软件。用户可以通过该软件同时连接多个本地或远程的命令行会话，并在其间自由切换。\n GNU Screen 可以看作是窗口管理器的命令行界面版本。它提供了统一的管理多个会话的界面和相应的功能。 \n \n \n http://www.gnu.org/software/screen \n https://invisible-island.net/ncurses/announce.html \n \n 命令 \n \n yum install -y screen  安装 \n screen -S 会话名称  创建一个会话 \n screen -ls  列出所有的会话列表 \n screen -r 会话名称  恢复会话窗口 \n exit  关闭会话窗口 \n \n 选项 \n \n -A  将所有的视窗都调整为目前终端机的大小。 \n -d  <作业名称> 将指定的screen作业离线。 \n -h  <行数> 指定视窗的缓冲区行数。 \n -m  即使目前已在作业中的screen作业，仍强制建立新的screen作业。 \n -r  <作业名称> 恢复离线的screen作业。 \n -R  先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。 \n -s  指定建立新视窗时，所要执行的shell。 \n -S  <作业名称> 指定screen作业的名称。 \n -v  显示版本信息。 \n -x  恢复之前离线的screen作业。 \n -ls 或 --list  显示目前所有的screen作业。 \n -wipe  检查目前所有的screen作业，并删除已经无法使用的screen作业。 \n \n 快捷键 \n \n 所有的快捷键都是先按一下 Ctrl  +  A 松开，这时快捷键生效再按其他按键 \n \n \n D  隐藏并保留当前会话 \n [ 或 PgUp  进入 copy mode ，查看 Screen 中的终端输出记录 \n \n \n 进入后它是 vi style keybindings 。对于拷贝文字，第一次空格设置开始标记，然后用 h 、 j 、 k 、\n l 、 w 移动光标，第二次空格完成拷贝。粘贴用 ] \n \n 开机启动screen并执行指定shell \n \n 新建一个 start.sh 文件，示例路径： /home/start.sh \n 文件中输入如下代码 screen_name = \"当前会话名称\" \n screen   -dmS   $screen_name \n cmd = \"要执行的命令\" \n screen   -x   -S   $screen_name   -p   0   -X  stuff  \" $cmd \" \n screen   -x   -S   $screen_name   -p   0   -X  stuff  $' \\n ' \n screen   -x   -S   $screen_name   -p   0   -X  stuff  \"exit\" \n \n \n 按 esc 然后再按 : 输入 wq 保存 \n 输入 vi /etc/rc.d/rc.local 按 i 或 Insert 再按 Shift  +  g \n（就是大写的G）跳转到末尾添加命令输入 /home/start.sh \n nohup \n \n 如果程序在其他目录下则在命令前加入 cd 目录路径 && \n只输出错误日志 \n nohup  python3 ./index.py  > /dev/null  2 > index.log  & \n不输出日志 \n nohup  python3 ./index.py  > /dev/null  2 > &1   & \n \n Linux的3种重定向 \n \n 0 表示标准输入 \n 1 标准输出,在一般使用时，默认的是标准输出 \n 2 标准错误信息输出 \n \n \n 可以用来指定需要重定向的标准输入或输出。 \n 将某个程序的错误信息输出到log文件中： ./index 2>index.log 。 \n 这样标准输出还是在屏幕上，但是错误信息会输出到log文件中。 \n 也可以实现0，1，2之间的重定向。 2>&1 ：将错误信息重定向到标准输出。 \n \n 关于 /dev/null 文件 \n \n Linux下还有一个特殊的文件 /dev/null ，它就像一个无底洞，所有重定向到它的信息都会消失得无影无踪。\n这一点非常有用，当我们不需要回显程序的所有信息时，就可以将输出重定向到 /dev/null 。 \n setsid \n \n setsid 就是 set session id 的意思。表示该命令运行的进程是一个新的 session 。因此其父进程不属于当前终端。\n实际上 setsid 运行的进程，其父进程id(ppid)为1(init进程的id)。 \n \n setsid python3 ./index.py  > /dev/null  2 > &1   & \n \n 语法 \n \n setsid(选项)(参数) \n \n -c ,  --ctty  将控制终端设置为当前控制终端 \n -f ,  --fork  总是 fork \n -w ,  --wait  等待程序退出，并使用相同的返回 \n 传输文件 \n \n https://github.com/9001/copyparty \n webrtc  https://github.com/tl-open-source/tl-rtc-file \n 文件监控  https://github.com/topics/inotify \n https://github.com/inotify-tools/inotify-tools \n https://github.com/seb-m/pyinotify \n https://github.com/gorakhargosh/watchdog \n https://github.com/lsyncd/lsyncd \n https://github.com/emcrisostomo/fswatch \n https://github.com/eradman/entr \n https://sourceforge.net/projects/net-snmp \n \n https://github.com/easysnmp/easysnmp \n \n \n https://github.com/PJO2/tftpd64 \n \n https://github.com/topics/tftp \n https://github.com/pin/tftp \n \n \n \n \n 首先进入需要搭建web服务器的目录，然后在输入下面的命令，端口号默认 8000 \npython2.7 \npython  -m  SimpleHTTPServer port\npython3.x \npython  -m  http.server port\n服务开启后，地址协议类型加IP/目录下的文件：  \n wget  host:port/file 就可以下载了\n scp \n \n scp（Secure Copy Protocol）基于SSH，是用来进行远程文件拷贝的，不支持排除目录，不支持断点续传 \n把本地的source.txt文件拷贝到192.168.0.10机器上的/home/work目录下 \n scp   -P   22   -p  /home/work/source.txt work@192.168.0.10:/home/work/\n把192.168.0.10机器上的source.txt文件拷贝到本地的/home/work目录下 \n scp   -P   22   -p  work@192.168.0.10:/home/work/source.txt /home/work/\n把192.168.0.10机器上的source.txt文件拷贝到192.168.0.11机器的/home/work目录下 \n scp   -P   22   -p  work@192.168.0.10:/home/work/source.txt work@192.168.0.11:/home/work/\n拷贝文件夹，加-r参数 \n scp   -P   22   -p   -r  /home/work/sourcedir work@192.168.0.10:/home/work/\n使用主机名 \n scp   -P   22   -p   -r  /home/work/sourcedir work@www.myhost.com:/home/work/\n显示详情，加-v参数 \n scp   -P   22   -p   -r   -v  /home/work/sourcedir work@www.myhost.com:/home/work/  \n将远程主机复制到本地 \n scp   -P   22   -p  root@192.168.214.187:/tmp/demo/f3.log /tmp/files/\n sftp \n \n sftp（SSH File Transfer Protocol）基于SSH，sftp允许对远程文件（查看目录，删除文件和目录等）进行一系列操作，支持断点续传 \n \n \n sftp -oPort=端口 用户名@IP  登录，和ssh一样 \n put 把本地传递到远端（上传） \n get 把远程传递到本地（下载） \n ls和lls:ls是看sftp服务器下当前目录下文件， lls是看linux当前目录下的文件。 \n pwd和lpwd:pwd是看远端服务器的目录， 即sftp服务器默认的当前目录。 lpwd是看linux本地目录 \n mget *.*  从远端主机接收一批文件至本地主机 \n !command 这个是指在linux上执行command这个命令，比如 !ls 、 !rm a.txt \n exit、quit、bye: 退出。 \n help：再强调一下help，登录以后，一个help，基本可以搞定所有命令 \n rsync \n \n 【优点】功能强大，操作类似scp，支持排除目录，支持限速参数；还支持本地复制。 \n 【缺点】会耗系统资源，占用I/O \n 【用法】rsync是类unix系统下的数据镜像备份工具，从软件的命名上就可以看出来了——remote sync。\n它的操作方式和scp和相似，但是比scp强大很多。使用双冒号分割主机名和文件路径时，是使用rsync服务器 \n \n \n https://github.com/topics/rsync \n https://github.com/RsyncProject/rsync \n \n \n https://github.com/WayneD/rsync \n \n https://rsync.samba.org \n https://github.com/rsyncOSX \n \n \n https://github.com/probonopd/zsync-curl \n http://zsync.moria.org.uk \n rsync 用法教程 \n rsync 参数说明及使用参数笔记好文摘抄 \n-P 由两个参数组成：--partial 恢复某些原因而中断的传输，--progress 显示传输进度。 \n把本地的source.txt文件拷贝到192.168.0.10机器上的/home/work目录下 \n rsync   -avP   -e   'ssh -p 22'  /home/work/source.txt work@192.168.0.10:/home/work/\n把192.168.0.10机器上的source.txt文件拷贝到本地的/home/work目录下 \n rsync   -avP  work@192.168.0.10:/home/work/source.txt /home/work/\n把192.168.0.10机器上的source.txt文件拷贝到192.168.0.11机器的/home/work目录下 \n rsync   -avP  work@192.168.0.10:/home/work/source.txt work@192.168.0.11:/home/work/\n-r拷贝文件夹  当前服务器 -> 远程服务器 \n rsync   -avP   -r  /home/work/sourcedir work@192.168.0.10:/home/work/\n rsync   -avP   --progress   -e   ssh  root@IP:/path/ /path/\n使用主机名 \n rsync   -avP   -r  /home/work/sourcedir work@www.myhost.com:/home/work/\n排除子目录，注意：--exclude后面的路径不能为绝对路径，必须为相对路径才可以，否则匹配不上，就不会被排除掉。 \n rsync   -avP   -r   -v   --exclude  sourcedir/notinclude /home/work/sourcedir work@www.myhost.com:/home/work/\n 性能测试 \n \n https://github.com/masonr/yet-another-bench-script \n \n bench.sh \n \n 这个是秋水逸冰老大的脚本，用于测试网络下载及主机IO性能测试。是网络上普遍使用的脚本，界面很漂亮。 \n \n wget  -qO- bench.sh  |   bash \n \n 91yun \n \n 这个来自91yun的脚本，主要测试的是网络ping值及路由。 \n \n wget   -N  --no-check-certificate https://raw.githubusercontent.com/91yun/91yuntest/master/test_91yun.sh  \\ \n &&   bash  test_91yun.sh s\n \n 主机运算性能测试 \n wget  --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh  \\ \n &&   chmod  +x unixbench.sh  &&  unixbench.sh\n \n 服务器一键测试脚本 \n \n 可以一键检测服务器基本性能，以及网络去程回程的速度。代码整合来自 SpeedTest 和 OldKing 的 SuperSpeed 。 \n中文版 \n wget  https://raw.githubusercontent.com/FunctionClub/ZBench/master/ZBench-CN.sh  &&   bash  ZBench-CN.sh\n英文版 \n wget  https://raw.githubusercontent.com/FunctionClub/ZBench/master/ZBench.sh  &&   bash  ZBench.sh\n \n \n 测试完之后，会在/root/下面生成一个 report.html 的文件。 \n \n Superspeed.sh \n \n https://github.com/oooldking/script \n \n wget  https://raw.githubusercontent.com/oooldking/script/master/superspeed.sh  \\ \n &&   chmod  +x superspeed.sh  &&   bash  superspeed.sh\n \n ",createdTime:1761814324e3},{title:"Nginx",frontmatter:{description:"https://github.com/hfpp2012/nginx-tutorial\nNginx 入门指南 https://github.com/xuexb/learn-nginx\n标签: Nginx | 原少子杨\nNginx HTTP核心模块指令和内置变量中文说明\nnginx 变量使用\nNginx 从入门到实践，万字详解\nNginx从入门到实践\nNginx流控\nNginx 高性能优化配置实战总结\nnginx 优化的六点方法\nNginx-性能优化\n博客使用Cloudflare和Nginx的相关配置\nNginx——Nginx负载均衡\nNginx--流量限制（最有用的功能之一）",meta:[{name:"twitter:title",content:"Nginx"},{name:"twitter:description",content:"https://github.com/hfpp2012/nginx-tutorial\nNginx 入门指南 https://github.com/xuexb/learn-nginx\n标签: Nginx | 原少子杨\nNginx HTTP核心模块指令和内置变量中文说明\nnginx 变量使用\nNginx 从入门到实践，万字详解\nNginx从入门到实践\nNginx流控\nNginx 高性能优化配置实战总结\nnginx 优化的六点方法\nNginx-性能优化\n博客使用Cloudflare和Nginx的相关配置\nNginx——Nginx负载均衡\nNginx--流量限制（最有用的功能之一）"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/Nginx.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Nginx"},{property:"og:description",content:"https://github.com/hfpp2012/nginx-tutorial\nNginx 入门指南 https://github.com/xuexb/learn-nginx\n标签: Nginx | 原少子杨\nNginx HTTP核心模块指令和内置变量中文说明\nnginx 变量使用\nNginx 从入门到实践，万字详解\nNginx从入门到实践\nNginx流控\nNginx 高性能优化配置实战总结\nnginx 优化的六点方法\nNginx-性能优化\n博客使用Cloudflare和Nginx的相关配置\nNginx——Nginx负载均衡\nNginx--流量限制（最有用的功能之一）"},{property:"og:url",content:"https://bajins.com/System/Nginx.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Nginx"},{itemprop:"description",content:"https://github.com/hfpp2012/nginx-tutorial\nNginx 入门指南 https://github.com/xuexb/learn-nginx\n标签: Nginx | 原少子杨\nNginx HTTP核心模块指令和内置变量中文说明\nnginx 变量使用\nNginx 从入门到实践，万字详解\nNginx从入门到实践\nNginx流控\nNginx 高性能优化配置实战总结\nnginx 优化的六点方法\nNginx-性能优化\n博客使用Cloudflare和Nginx的相关配置\nNginx——Nginx负载均衡\nNginx--流量限制（最有用的功能之一）"}]},regularPath:"/System/Nginx.html",relativePath:"System/Nginx.md",key:"v-08541cb6",path:"/System/Nginx.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"扩展模块插件",slug:"扩展模块插件"},{level:2,title:"编译安装",slug:"编译安装"},{level:2,title:"location",slug:"location"},{level:3,title:"语法规则",slug:"语法规则"},{level:3,title:"内部调用",slug:"内部调用"},{level:3,title:"以后缀设置过期时间",slug:"以后缀设置过期时间"},{level:3,title:"禁止访问某个目录",slug:"禁止访问某个目录"},{level:2,title:"rewrite语法",slug:"rewrite语法"},{level:2,title:"判断表达式",slug:"判断表达式"},{level:2,title:"全局变量",slug:"全局变量"},{level:2,title:"判断user_agent",slug:"判断user-agent"},{level:2,title:"proxy_pass指令",slug:"proxy-pass指令"},{level:2,title:"日志切割",slug:"日志切割"},{level:2,title:"主配置",slug:"主配置"},{level:2,title:"动静分离配置",slug:"动静分离配置"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Nginx \n Flag 扩展模块插件 编译安装 location 语法规则 内部调用 以后缀设置过期时间 禁止访问某个目录 rewrite语法 判断表达式 全局变量 判断user_agent proxy_pass指令 日志切割 主配置 动静分离配置 \n Flag \n \n https://github.com/nginx \n \n https://nginx.org/en/download.html \n https://nginx.org/en/docs \n \n \n https://github.com/nginxinc \n https://github.com/h5bp/server-configs-nginx \n https://github.com/digitalocean/nginxconfig.io \n \n https://www.digitalocean.com/community/tools/nginx \n \n \n https://github.com/alibaba/tengine \n \n \n https://github.com/hfpp2012/nginx-tutorial \n Nginx 入门指南  https://github.com/xuexb/learn-nginx \n 标签: Nginx | 原少子杨 \n Nginx HTTP核心模块指令和内置变量中文说明 \n nginx 变量使用 \n Nginx 从入门到实践，万字详解 \n Nginx从入门到实践 \n Nginx流控 \n Nginx 高性能优化配置实战总结 \n nginx 优化的六点方法 \n Nginx-性能优化 \n 博客使用Cloudflare和Nginx的相关配置 \n Nginx——Nginx负载均衡 \n Nginx--流量限制（最有用的功能之一） \n \n \n 开发工具包  https://github.com/vision5/ngx_devel_kit \n https://github.com/topics/nginx-configuration \n https://github.com/NginxProxyManager/nginx-proxy-manager \n 配置验证  https://github.com/dvershinin/gixy \n 配置生成  https://github.com/0xB4LINT/nginxconfig.io \n 配置格式化  https://github.com/vasilevich/nginxbeautifier \n https://github.com/slomkowski/nginx-config-formatter \n https://github.com/nginx-proxy/nginx-proxy \n https://github.com/evertramos/nginx-proxy-automation \n https://github.com/onlyGuo/nginx-gui \n 文件服务器  https://github.com/Naereen/Nginx-Fancyindex-Theme \n https://github.com/aperezdc/ngx-fancyindex \n 监控请求  https://github.com/lebinh/ngxtop \n 日志分析  https://github.com/BeyondXinXin/nixvis \n启动 \nnignx  -c  /usr/local/nginx/conf/nginx.conf\nnginx  -p   ` pwd ` / ..   -c  conf/nginx.conf\n快速关闭，可能不保存相关信息，并迅速终止web服务 \nnginx  -s  stop\n kill   -s  quit PID\n平稳关闭，保存相关信息，有安排的结束web服务 \nnginx  -s  quit\n重新打开日志文件 \nnginx  -s  reopen\n重载配置 \nnginx  -s  reload\n验证配置 \nnginx  -t \n 扩展模块插件 \n \n https://www.nginx.com/resources/wiki/modules \n https://www.nginx.com/nginx-wiki/build/dirhtml/modules \n https://github.com/search?q=nginx-module \n https://github.com/topics/nginx-module \n \n \n Lua多种扩展模块  https://github.com/openresty \n \n https://openresty.org/cn \n https://openresty-reference.readthedocs.io \n OpenResty 概要及原理科普 \n openresty 的动态 - SegmentFault 思否 \n https://www.nginx.com/resources/wiki/modules/lua \n https://github.com/moonbingbing/openresty-best-practices \n https://github.com/gityf/ngx_lua_thrift \n 浅谈OpenResty中的body_filter_by_lua* \n ngx.re模块和lua正则匹配的区别 \n \n https://github.com/openresty/lua-nginx-module#ngxrematch \n \n \n Openresty+lua实现动态upstream \n NGINX 结合 lua 动态修改upstream \n \n \n https://github.com/iresty/nginx-lua-module-zh-wiki \n https://github.com/loveshell/ngx_lua_waf \n https://github.com/ledgetech/lua-resty-http \n https://github.com/3scale/cors-proxy \n https://github.com/starjun/openstar \n https://github.com/zhouchangxun/ngx_healthcheck_module \n https://github.com/vozlt/nginx-module-vts \n https://gitee.com/tianhao26/openresty_forwarding_log \n 心跳检测  https://github.com/yaoweibin/nginx_upstream_check_module \n https://github.com/cuber/ngx_http_google_filter_module \n \n Nginx 配置谷歌镜像站 \n \n \n 流媒体  https://github.com/arut/nginx-rtmp-module \n 编译安装 \n \n Nginx 核心模块与配置实践 \n \n openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file \n查找一下libssl.so.1.1的位置，然后链接到/usr/lib64/libssl.so.1.1即可。 \n find  /  -name  libssl.so.1.1\n ln   -s  /usr/local/lib64/libssl.so.1.1  /usr/lib64/libssl.so.1.1\n ln   -s  /usr/local/lib64/libcrypto.so.1.1  /usr/lib64/libcrypto.so.1.1\nopenssl version\n \n libssl.so.1.1: cannot open shared object file: No such file or directory \n \n Centos7 默认提供的 openssl 版本是 1.0.2，报错是因为openssl 库的安装位置不正确或未安装 1.1 以上版本的问题 \n \n #从官网下载，去掉文件名，直接访问链接获取最新的包链接 \nwget https://www.openssl.org/source/openssl-1.1.1k.tar.gz \n #腾讯云提供的镜像，去掉文件名，直接访问链接获取最新的包链接 \n wget  https://mirrors.cloud.tencent.com/openssl/source/openssl-1.1.1k.tar.gz\n tar   -xvf  openssl-1.1.1k.tar.gz\n cd  openssl-1.1.1k\nyum  -y   install  gcc automake autoconf libtool  make \n./config shared  --openssldir = /usr/local/openssl  --prefix = /usr/local/openssl\n make  clean  &&   make   &&   make   install \n \n \n openssl version  如果看到版本号还是低版本 \n \n echo   "/usr/local/lib64/"   >>  /etc/ld.so.conf\nldconfig\n \n \n 还是有问题执行以下方式 \n备份 \n mv  /usr/bin/openssl /usr/bin/openssl.old\n mv  /usr/lib/openssl /usr/lib/openssl.old\n创建软链接 \n ln   -s  /usr/local/openssl/bin/openssl /usr/bin/openssl\n ln   -s  /usr/local/openssl/include/openssl /usr/include/openssl\n写配置 \n echo   "/usr/local/openssl/lib"   >>  /etc/ld.so.conf\nldconfig  -v \n location \n 语法规则 \n location [=|~|~*|^~] /uri/ {\n        ····· \n}\n \n \n 修饰符含义 \n \n \n \n \n 规则 \n 说明 \n \n \n \n \n !~* \n 不区分大小写，但不匹配的正则 \n \n \n !~ \n 区分大小写，但不匹配的正则 \n \n \n / \n 通用匹配，任何请求都会匹配到 \n \n \n @ \n 定义一个内部命名的匹配（ 等阶于 internal ），适用于 error_page , try_files \n \n \n ^~ \n uri以某个常规字符串开头，如请求为 /static/20%/aa ，匹配规则 ^~ /static/ /aa \n \n \n ~* \n 不区分大小写的正则匹配 \n \n \n ~ \n 区分大小写的正则匹配 \n \n \n = \n 精确匹配 \n \n \n \n \n 当我们有多个 location 配置的情况下，其匹配顺序为 \n \n \n 带有 = 的精确匹配优先 \n 没有修饰符的精确匹配 \n 正则表达式按照他们在配置文件中定义的顺序 \n 带有 ^~ 修饰符的，开头匹配 \n 带有 ~ 、 ~* 修饰符的，如果正则表达式与 URI 匹配 \n 没有修饰符的，如果指定字符串与 URI 开头匹配 \n \n 示例 \n \n nginx的root和alias详解 \n匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，官网如是说。\n这里是直接转发给后端应用服务器了，也可以是一个静态首页\nlocation = / {\n   #匹配http://localhost/\n}\nlocation = /login {\n   #匹配http://localhost/login\n}\n第二个必选规则是处理静态文件请求，这是 nginx 作为 http 服务器的强项\n有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用\nlocation ^~ /static/ {\n   #匹配http://localhost/static/a.html，http://localhost/static/c.png\n}\nlocation ~ \\.(gif|jpg|png|js|css)$ {\n   #匹配http://localhost/a.gif, http://localhost/b.jpg\n}\nlocation ~* \\.png$ {\n   #http://localhost/a.PNG\n}\nlocation !~ \\.xhtml$ {\n   #匹配http://localhost/a.XHTML\n}\nlocation !~* \\.xhtml$ {\n   #匹配http://localhost/a.jsp\n}\n通用规则，用来转发动态请求到后端应用服务器\n非静态文件请求就默认是动态请求\nlocation / {\n   #匹配http://localhost/register，http://localhost/category/id/1111\n}\n 内部调用 \n internal \n \n internal  指令用于指定只允许来自本地  Nginx  的内部调用，来自外部的访问会直接返回  404 not found  状态。 \n定义一个内部调用location\nlocation /internal/ {\n    internal;\nhttps://nginx.org/en/docs/http/ngx_http_proxy_module.html\n    proxy_pass http://192.168.1.110:8091;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header REMOTE-HOST $remote_addr;\n修改响应头中的"Location"和"Refresh"字段\n解决https->nginx->http->tomcat重定向问题\n    proxy_redirect ~^http://([^:]+)(:\\d+)?(.*)$ https://$1$3;\n}\n使用rewrite 内部重定向，其中 last 或 break 均可提供内部重定向。\nlocation / {\n    rewrite .* /internal/ last;\n}\n利用 Openresty 的 ngx.exec 模块\nlocation / {\n    access_by_lua_block {\n        return ngx.exec("/internal/")\n    }\n}\n \n location @name \n \n 命名location中不能再嵌套其它的命名location。 \n匹配静态文件\nlocation ~ .*\\.(htm|html|js|css|jpg|png|gif|eot|svg|ttf|woff|woff2)$ {\n如果文件不存在\n    #if (!-f $request_filename) {\n        #content_by_lua_block {\n                #ngx.exec("@pass");\n        #}\n    #}\n    root /www/wwwroot/api;\n按顺序检查文件是否存在，返回第一个找到的文件。结尾的斜线表示为文件夹 -$uri/。\n如果所有的文件都找不到，会进行一个内部重定向到最后一个参数\n    try_files $uri $uri/ @pass;\n}\n通用匹配\nlocation / {\n或者使用`ngx.exec`主要实现的是内部的重定向\n`ngx.redirect`是外部重定向\n    content_by_lua_block {\n        ngx.exec("@pass");\n    }\n}\nlocation @pass {\nhttps://nginx.org/en/docs/http/ngx_http_proxy_module.html\n    proxy_pass http://192.168.1.110:8091;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header REMOTE-HOST $remote_addr;\n修改响应头中的"Location"和"Refresh"字段\n解决https->nginx->http->tomcat重定向问题\n    proxy_redirect ~^http://([^:]+)(:\\d+)?(.*)$  https://$1$3;\n}\n 以后缀设置过期时间 \n location ~* \\.(js|css|jpg|jpeg|gif|png|swf)$ {\n    if (-f $request_filename) {\n        expires 1h;\n        break;\n    }\n}\n 禁止访问某个目录 \n location ~* \\.(txt|doc)${\n    root /data/www/wwwroot/linuxtone/test;\n    deny all;\n}\n rewrite语法 \n \n https://blog.csdn.net/weixin_40792878/article/details/83316519 \n \n \n 该指令通过正则表达式的使用来改变URI.可以同时存在一个或者多个指令，按照顺序一次对URL进行匹配和处理。 \n \n \n 该指令可以在 server 块或者 location 块中配置 \n \n \n 语法： rewrite regex replacement [flag]; \n \n rewrite 是实现URL重定向的重要指令。 \n regex 用来匹配URI的正则表达式； \n replacement 匹配成功后用来替换URI中被截取内容的字符串，默认情况如果该字符串包含“http://”、"https://"开头，则不会继续向下对URI进行其他处理。直接返回重写的URI给客户端 \n flag 用来设置rewrite对URI的处理行为,包含如下数据： \n \n \n \n \n \n \n 标记符号 \n 说明 \n \n \n \n \n last \n 终止在本location块中处理接收到的URI，并将此处重写的URI作为新的URI使用其他location进行处理。（只是终止当前location的处理） \n \n \n break \n 将此处重写的URI作为一个新的URI在当前location中继续执行，并不会将新的URI转向其他location。 \n \n \n redirect \n 将重写后的URI返回个客户端，状态码是302，表明临时重定向，主要用在replacement字符串不以“http://”，“ https://”或“ $scheme” 开头； \n \n \n permanent \n 将重写的URI返回客户端，状态码为301,指明是永久重定向； \n \n \n \n Redirect \n rewrite ^(.*) http://example.com$1 redirect;\n \n 防盗链 \n location ~* \\.(gif|jpg|swf)$ {\n    valid_referers none blocked start.igrow.cn sta.igrow.cn;\n    if ($invalid_referer) {\n        rewrite ^/ http://$host/logo.png;\n    }\n}\n 判断表达式 \n \n \n \n 表达式 \n 说明 \n \n \n \n \n -d  和  !-d \n 用来判断是否存在目录 \n \n \n -e  和  !-e \n 用来判断是否存在文件或目录 \n \n \n -f  和  !-f \n 用来判断是否存在文件 \n \n \n -x  和  !-x \n 用来判断文件是否可执行 \n 全局变量 \n 常见变量 \n \n \n \n 变量 \n 作用 \n \n \n \n \n $arg_名称 \n URL 中某个具体参数的值 \n \n \n $args \n 这个变量等于请求行中(GET请求)的参数，同$query_string \n \n \n $body_bytes_sent \n 传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的"%B"参数保持兼容 \n \n \n $bytes_sent \n 传输给客户端的字节数 \n \n \n $content_length \n HTTP 请求中标识包体长度的Content-Length头部的值，头部没有这个则为空 \n \n \n $content_type \n 标识请求包体类型的Content-Type 头部的值 \n \n \n $cookie_名称 \n 客户端请求Header头中的cookie变量，前缀"$cookie_"加上cookie名称的变量，该变量的值即为cookie名称的值 \n \n \n $document_root \n 当前请求在root指令中指定的值。 \n \n \n $document_uri \n 与uri完全相同 \n \n \n $host \n 请求主机头字段，否则为服务器名称。 \n \n \n $http_cookie \n 客户端cookie信息 \n \n \n $http_host \n 请求地址，即浏览器中你输入的地址（IP或域名） \n \n \n $http_referer \n url跳转来源,用来记录从那个页面链接访问过来的 \n \n \n $http_user_agent \n 客户端agent信息 \n \n \n $http_x_forwarded_for \n 当前端有代理服务器时，设置web节点记录客户端地址的配置，此参数生效的前提是代理服务器也要进行相关的x_forwarded_for设置 \n \n \n $http_名称 \n 匹配任意请求头字段；变量名中的后半部分名称可以替换成任意请求头字段，如在配置文件中需要获取http请求头："Accept-Language"，$http_accept_language即可 \n \n \n $https \n 如果开启了SSL安全模式，值为"on"，否则为空字符串。 \n \n \n $is_args \n 如果已经设置$args，则该变量的值为"？"，否则为""。 \n \n \n $limit_rate \n 这个变量可以限制连接速率。 \n \n \n $pipe \n 如果请求来自管道通信，值为"p"，否则为"." \n \n \n $query_string \n 与args变量完全相同 \n \n \n $realpath_root \n 当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径 \n \n \n $remote_user \n 有HTTP Basic Authentication 协议传入的用户名，已经经过Auth Basic Module验证的用户名。 \n \n \n $request_body_file \n 客户端请求主体信息的临时文件名。 \n \n \n $request_body \n 客户端的请求主体：此变量可在location中使用，将请求主体通过proxy_pass，fastcgi_pass，uwsgi_pass和scgi_pass传递给下一级的代理服务器 \n \n \n $request_filename \n 当前请求的文件路径，由root或alias指令与URI请求生成。 \n \n \n $request_length \n 所有请求内容的大小，包括请求行，头部，包体等 \n \n \n $request_method \n 客户端请求的动作，通常为GET或POST。 \n \n \n $request_uri \n 包含请求参数的原始URI，不包含主机名，如："/?dir=DeveloperTool"。 \n \n \n $request \n 原始的url请求，含有方法和协议版本 \n \n \n $scheme \n HTTP协议 HTTP 或者 HTTPS \n \n \n $sent_http_名称 \n 可以设置任意http响应头字段；变量名中的后半部分名称可以替换成任意响应头字段，如需要设置响应头Content-length，$sent_http_content_length即可 \n \n \n $status \n HTTP响应代码 \n \n \n $uri \n 请求的URI，不包含主机名，不包含?后的参数 \n \n \n \n \n $request_body_file  将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要执意开启此功能，\n需要设置 client_body_in_file_only 。如果将次文件传递给后端的代理服务器，需要禁用 request body ，\n即设置 proxy_pass_request_body off ， fastcgi_pass_request_body off ，\n uwsgi_pass_request_body off ， scgi_pass_request_body off \n \n TCP相关变量 \n \n \n \n 变量 \n 作用 \n \n \n \n \n $binary_remote_addr \n 客户端地质的整型格式，对于IPv4是4字节 \n \n \n $connection_requests \n 当前连接上执行过的请求数，对keepalive 有意义 \n \n \n $connection \n 递增的连接序号 \n \n \n $proxy_protocol_addr \n 若使用了proxy_protocol 协议则返回协议中的地址 \n \n \n $proxy_protocol_port \n 若使用了proxy_protocol 协议则返回协议中的端口 \n \n \n $remote_addr \n 客户端地址 \n \n \n $remote_port \n 客户端端口 \n \n \n $server_addr \n 服务器端地址(本端地址)，在完成一次系统调用后可以确定这个值。 \n \n \n $server_port \n 请求到达服务器的端口号。 \n \n \n $server_protocol \n 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。 \n \n \n $TCP_INFO \n tcp内核层参数（$tcpinfo_rtt,$tcpinfo_rttvar,$tcpinfo_snd_cwnd,$tcpinfo_rcv_space） \n \n \n \n 处理请求过程中产生的变量 \n \n \n \n 变量 \n 作用 \n \n \n \n \n $request_completion \n 若请求处理完则返回OK，否则为空 \n \n \n $request_id \n 以16禁止输出的请求标识id，随即生成 \n \n \n $request_time \n 请求处理到现在的耗时 \n \n \n $server_name \n 匹配上的请求server_name \n \n \n \n 系统变量 \n \n \n \n 变量 \n 作用 \n \n \n \n \n $hostname \n 与系统上输出hostname 一致 \n \n \n $pid \n 所属worker进程的id \n \n \n $time_local \n 以本地时间的标准输出 \n \n \n $time_iso8601 \n 服务器时间的ISO 8610格式 \n \n \n $msec \n 当前的Unix时间戳 \n \n \n $nginx_version \n nginx版本 \n 判断user_agent \n设置变量\nset $mobile_user_agent "(MIDP)|(WAP)|(UP.Browser)|(Smartphone)\n|(Obigo)|(Mobile)|(AU.Browser)|(wxd.Mms)|(WxdB.Browser)|(CLDC)\n|(UP.Link)|(KM.Browser)|(UCWEB)|(SEMC-Browser)|(Mini)|(Symbian)\n|(Palm)|(Nokia)|(Panasonic)|(MOT-)|(SonyEricsson)|(NEC-)|(Alcatel)\n|(Ericsson)|(BENQ)|(BenQ)|(Amoisonic)|(Amoi-)|(Capitel)|(PHILIPS)\n|(SAMSUNG)|(Lenovo)|(Mitsu)|(Motorola)|(SHARP)|(WAPPER)|(LG-)\n|(LG/)|(EG900)|(CECT)|(Compal)|(kejian)|(Bird)|(BIRD)|(G900/V1.0)\n|(Arima)|(CTL)|(TDG)|(Daxian)|(DAXIAN)|(DBTEL)|(Eastcom)|(EASTCOM)\n|(PANTECH)|(Dopod)|(Haier)|(HAIER)|(KONKA)|(KEJIAN)|(LENOVO)\n|(Soutec)|(SOUTEC)|(SAGEM)|(SEC-)|(SED-)|(EMOL-)|(INNO55)\n|(ZTE)|(iPhone)|(Android)|(Windows CE)|(Wget)|(Java)|(curl)|(Opera)";\n判断是否为移动端访问\nif ( $http_user_agent ~ "$mobile_user_agent" ) {\n重写URI作为一个新的URI在当前location中继续执行。\n目的是在if块中proxy_pass不能带URI\n    rewrite ^ /URI参数$1 break;\n    proxy_pass https://127.0.0.1;\n    #proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header REMOTE-HOST $remote_addr;\n}\ncloudflare 默认会在header里面加上’HTTP_CF_IPCOUNTRY’\n禁止某些国家, user agent 的访问，配置在http（全局）\nmap $http_cf_ipcountry $allow {\n    default yes;\n    US no;\n    CA no;\n    UK no;\n    AU no;\n}\n在server或location中配置\nif ($allow = no) {\n    return 403;\n}\n proxy_pass指令 \n \n nginx无法在 proxy_pass 指令中处理所需的URI部分，因为位于指定的位置（因此是错误消息）。\n这是因为nginx是以模块化的方式构建的，每个配置块都是由各个模块在各个阶段读取的。 \n \n \n proxy_pass 在以下情况下，指令中不能有URI ：\n \n 正则表达式位置 \n 命名的地点 \n if 块 \n \n \n \n \n 解决方案可见 判断 user_agent \n \n \n proxy_set_header  设置请求头信息给上游服务器 \n add_header  设置响应头信息给浏览器 \n 日志切割 \n \n 在 nginx.conf 中配置 log_format （可以配置在 server 中），含义是配置了一个名为 main 的日志格式化的规则，应用在了 access_log 的日志上 \n \n 使用到 timeiso8601 内嵌变量来获取时间配置日志循环 \n \n 简单搞定Nginx日志分割 \n可能出现if条件不成立的情况，推荐在http块中使用map\nif ($time_iso8601 ~ "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})") {\n    set $year $1;\n    set $month $2;\n    set $day $3;\n    set $hour $4;\n    set $minutes $5;\n    set $seconds $6;\n}\naccess_log logs/$year-$month-$day-$hour$minutes$seconds-access.log main;\nPerl语法\nif ($time_iso8601 ~ "^(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})") {}\naccess_log logs/$year-$month-$day-access.log main;\nhttp块中不允许使用if，使用map替代\nmap $time_iso8601 $logdate {\n    \'~^(?<ymd>\\d{4}-\\d{2}-\\d{2}-\\d{6})\'   $ymd;\n    default                               \'nodate\';\n}\naccess_log logs/access_${logdate}.log;\n \n 日志归档程序logrotate \n \n https://github.com/fordmason/cronolog \n https://github.com/logrotate/logrotate \n \n vi  /etc/logrotate.d/nginx\n \n \n kill -USR1 cat /usr/local/nginx/logs/nginx.pid  向nginx主进程发送USR1信号用于重新读取日志文件 \n \n /home/nginx/logs/*.log { # 目录下所有以.log结尾的文件\n    daily # 按天切割\n    #dateformat %Y%m%d # 切割后文件后缀，不能使用log，否则会使文件进行继续切割\n    #extension .log # 切割文件后缀\n    rotate 7 # 保留天数\n    #create 0640 root root   # 切割后日志权限\n    missingok\n    dateext\n    notifempty\n    sharedscripts\n    prerotate\n        if [ -d /etc/logrotate.d/nginx ]; then \\  # 判断切割文件\n            run-parts /etc/logrotate.d/nginx; \\\n        fi \\\n    endscript\n    postrotate\n        [ -e /usr/local/nginx/logs/nginx.pid ] && kill -USR1 `cat /home/nginx/logs/nginx.pid`\n    endscript\n    postrotate\n        [ ! -f /var/nginx.pid ] || kill -USR1 `cat /home/nginx/logs/nginx.pid`\n    endscript\n}\n 主配置 \n \n Nginx配置文件解析 \n nginx - HowOldAreYou - 博客园 \n \n \nuser www www;\nworker_processes auto;\nerror_log /logs/nginx_error.log crit;\npid /logs/nginx.pid;\nworker_rlimit_nofile 51200;\nevents {\n    use epoll;\n    worker_connections 51200;\n    multi_accept on;\n}\nhttp {\n扩展名与文件类型映射表\n    include mime.types;\n    #include luawaf.conf;\n    include proxy.conf;\n    include /vhost/*.conf;\n默认类型\n    default_type application/octet-stream;\n    server_names_hash_bucket_size 512;\n设置请求缓冲\n    client_header_buffer_size 32k;\n    large_client_header_buffers 4 32k;\n    client_max_body_size 500m;\n开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，\n如果用来进行下载等应用磁盘 IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，\n降低系统的负载。注意：如果图片显示不正常把这个改成off。\n    sendfile on;\n    tcp_nopush on;\n设置连接超时时间，单位是秒\n    keepalive_timeout 60;\n    tcp_nodelay on;\n    fastcgi_connect_timeout 300;\n    fastcgi_send_timeout 300;\n    fastcgi_read_timeout 300;\n    fastcgi_buffer_size 64k;\n    fastcgi_buffers 4 64k;\n    fastcgi_busy_buffers_size 128k;\n    fastcgi_temp_file_write_size 256k;\n    fastcgi_intercept_errors on;\n开启gzip压缩\n    gzip on;\n    gzip_min_length 1k;\n    gzip_buffers 4 16k;\n    gzip_http_version 1.1;\n    gzip_comp_level 2;\n    gzip_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml;\n    gzip_vary on;\n    gzip_proxied expired no-cache no-store private auth;\n    gzip_disable "MSIE [1-6]\\.";\n    limit_conn_zone $binary_remote_addr zone=perip:10m;\n    limit_conn_zone $server_name zone=perserver:10m;\n    server_tokens off;\n关闭日志\n    access_log off;\n输出日志\n    #error_log /dev/null;\n}\n 动静分离配置 \n 静态文件在本地 \n server {\n    listen 80;\n    listen 443 ssl http2;\n    server_name www.woetu.com woetu.com;\n    index index.html index.htm default.htm default.html;\n    root html;\nSSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则\n    #error_page 404/404.html;\nHTTP_TO_HTTPS_START\n    if ($server_port !~ 443) {\n        rewrite ^(/.*)$ https://$host$1 permanent;\n    }\nHTTP_TO_HTTPS_END\n    ssl_certificate /etc/letsencrypt/live/www/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/www/privkey.pem;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\n    ssl_prefer_server_ciphers on;\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_timeout 10m;\n    error_page 497 https://$host$request_uri;\nSSL-END\nERROR-PAGE-START  错误页配置，可以注释、删除或修改\n    error_page 404 /404.html;\n    error_page 502 /502.html;\nERROR-PAGE-END\nPROXY-START/\n配置首页，这里必须要有一个=号\n    location =/ {\n        index index.html index.htm;\n    }\n拦截静态文件后缀\n    location ~ .*\\.(htm|html|js|css|jpg|png|gif|eot|svg|ttf|woff|woff2)$ {\n配置静态资源地址\n        root /home/html/index;\n    }\n拦截静态文件后缀\n    #location ~ \\.(htm|html|js|css|jpg|png|gif|eot|svg|ttf|woff|woff2)$ {\n配置静态资源地址\n       root /home/html/index;\n    #}\n动态请求转发\n    location ~.*$ {\n        proxy_pass http://localhost:8080;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header REMOTE-HOST $remote_addr;\n解决https->nginx->http->tomcat重定向问题\n        proxy_redirect ~^http://([^:]+)(:\\d+)?(.*)$ https://$1$3;\n    }\nPROXY-END/\n禁止访问的文件或目录\n    location ~ ^/(\\.user.ini|\\.htaccess|\\.git|\\.svn|\\.project|LICENSE|README.md) {\n        return 404;\n    }\n一键申请SSL证书验证目录相关设置\n    location ~ \\.well-known {\n        allow all;\n    }\n    access_log /logs/wwwlog;\n    error_log /logs/wwwlog;\n}\n \n 静态文件在镜像存储 \n #PROXY-START/\nlocation = / {\n    #rewrite (.*) $1index.html;\n    index /index.html;\n}\n拦截静态文件后缀\nlocation ~ .*\\.(htm|html|js|css|jpg|png|gif|eot|svg|ttf|woff|woff2)$|/static/ {\n配置静态资源地址\n    #root ./vhost/html;\n\troot "/index";\n将此处重写的URI作为一个新的URI在当前location中继续执行，并不会将新的URI转向其他location\n\trewrite ^(.*)$ /index/$1 break;\n\t\n\tproxy_pass https://test.cos.ap-hongkong.myqcloud.com;\n    #proxy_set_header Host $host;\n\tproxy_set_header Host test.cos.ap-hongkong.myqcloud.com;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header REMOTE-HOST $remote_addr;\n    \n    add_header X-Cache $upstream_cache_status;\n    \n    #Set Nginx Cache\n    add_header Cache-Control no-cache;\n}\nlocation / {\n    proxy_pass http://127.0.0.1:8081;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header REMOTE-HOST $remote_addr;\n    \n    add_header X-Cache $upstream_cache_status;\n    \n    #Set Nginx Cache\n    add_header Cache-Control no-cache;\n    #expires 12h;\n}\n\n#PROXY-END/\n \n ',createdTime:1761814324e3},{title:"System",frontmatter:{description:"Linux中国翻译组 https://github.com/LCTT\nDPDK工程师手册 https://github.com/0voice/dpdkengineermanual\n快捷键查找工具 https://github.com/Acreom/keycheck",meta:[{name:"twitter:title",content:"System"},{name:"twitter:description",content:"Linux中国翻译组 https://github.com/LCTT\nDPDK工程师手册 https://github.com/0voice/dpdkengineermanual\n快捷键查找工具 https://github.com/Acreom/keycheck"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/"},{property:"og:type",content:"article"},{property:"og:title",content:"System"},{property:"og:description",content:"Linux中国翻译组 https://github.com/LCTT\nDPDK工程师手册 https://github.com/0voice/dpdkengineermanual\n快捷键查找工具 https://github.com/Acreom/keycheck"},{property:"og:url",content:"https://bajins.com/System/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"System"},{itemprop:"description",content:"Linux中国翻译组 https://github.com/LCTT\nDPDK工程师手册 https://github.com/0voice/dpdkengineermanual\n快捷键查找工具 https://github.com/Acreom/keycheck"}]},regularPath:"/System/",relativePath:"System/README.md",key:"v-de7d7904",path:"/System/",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"USB启动盘",slug:"usb启动盘"},{level:2,title:"开源操作系统",slug:"开源操作系统"},{level:2,title:"虚拟机",slug:"虚拟机"},{level:2,title:"服务器软件",slug:"服务器软件"},{level:3,title:"DNS",slug:"dns"},{level:3,title:"SSL证书",slug:"ssl证书"},{level:3,title:"集群负载均衡",slug:"集群负载均衡"},{level:3,title:"监控探针",slug:"监控探针"},{level:3,title:"管理面板",slug:"管理面板"},{level:3,title:"建站资源",slug:"建站资源"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" System \n Flag USB启动盘 开源操作系统 虚拟机 服务器软件 DNS SSL证书 集群负载均衡 监控探针 管理面板 建站资源 \n Flag \n \n https://github.com/openbsd \n \n https://www.openbsd.org \n \n \n https://github.com/awesome-foss/awesome-sysadmin \n \n \n Linux中国翻译组  https://github.com/LCTT \n DPDK工程师手册  https://github.com/0voice/dpdk_engineer_manual \n 快捷键查找工具  https://github.com/Acreom/keycheck \n \n \n https://www.gnome.org \n 加密覆盖文件系统  https://github.com/rfjakob/gocryptfs \n 天气卫星  https://github.com/sam210723/xrit-rx \n 家庭自动化  https://github.com/home-assistant/core \n https://github.com/esphome/esphome \n https://github.com/gladysassistant/gladys \n https://github.com/grocy/grocy \n CCProxy  http://www.ccproxy.com \n \n 局域内网的服务器利用跳板机访问互联网 \n \n 序列号：JHEHIHCDDAHC\n注册码：15f7f78febfaee55afeafefff7cb7fdfb3\n \n \n https://github.com/3proxy/3proxy \n 无线渗透硬件  https://github.com/flipperdevices/flipperzero-firmware \n \n https://github.com/DarkFlippers/unleashed-firmware \n \n \n \n \n 键盘快捷键的梳理表  https://en.wikipedia.org/wiki/Table_of_keyboard_shortcuts \n 有人说超威半导体（AMD）没有512位高级矢量扩展指令集（AVX512），属于残废，是真的吗？ \n 如何看待Linus Torvalds对AVX512的评价？ \n 如何为智能手机快速充电：快速充电技术详解 \n USB启动盘 \n \n https://github.com/pbatard/rufus \n https://github.com/balena-io/etcher \n https://github.com/unetbootin/unetbootin \n https://www.pendrivelinux.com \n https://github.com/u-boot/u-boot \n \n https://source.denx.de/u-boot/u-boot \n \n \n https://github.com/Freescale \n https://github.com/alientek-openedv/Products \n \n \n 克隆部署  https://github.com/canonical/cloud-init \n BIOS  https://github.com/coreboot \n 开源操作系统 \n \n https://github.com/topics/operating-system \n 系统映像构建  https://github.com/OSInside/kiwi \n https://www.yoctoproject.org \n Linux发行版本排行 \n Linux主流发行版本 \n \n \n https://github.com/torvalds/linux \n \n https://github.com/Rust-for-Linux \n https://github.com/linux-rdma/rdma-core \n \n \n https://alpinelinux.org \n https://github.com/rocky-linux \n \n https://git.resf.org/sig_cloud/wiki \n CentOS“退役”后选择哪个Linux发行版？ \n \n \n https://github.com/AlmaLinux \n https://github.com/microsoft/CBL-Mariner \n https://www.oracle.com/linux \n https://github.com/openSUSE \n https://github.com/SUSE \n https://github.com/vzlinux \n \n https://www.virtuozzo.com/company/open-source \n \n \n https://github.com/clearos \n http://springdale.math.ias.edu \n https://github.com/cloudlinux \n https://www.debian.org \n \n https://github.com/atzlinux/debian-cn \n https://sourceforge.net/projects/qref \n https://mirror.bahnhof.net \n \n \n https://antixlinux.com \n https://mxlinux.org \n https://github.com/canonical-web-and-design \n https://github.com/BlackArch \n https://gitlab.com/kalilinux \n \n https://www.kali.org \n https://github.com/LandGrey/SpringBootVulExploit \n \n \n https://github.com/SerenityOS \n https://www.haiku-os.org \n https://github.com/linuxmint \n https://github.com/cutefishos-ubuntu \n https://gitlab.archlinux.org/archlinux \n \n https://archlinux.org \n https://github.com/NakanoMikuOrg/arch-guide \n 安装  https://github.com/ChrisTitusTech/ArchTitus \n https://github.com/ArchLinux-x32 \n \n \n https://github.com/NetBSD \n https://github.com/freebsd \n https://github.com/DragonFlyBSD/DragonFlyBSD \n https://github.com/linuxdeepin \n \n https://github.com/martyr-deepin \n \n \n 手机  https://postmarketos.org \n \n https://sxmo.org \n https://phosh.mobi \n \n \n Solus  https://getsol.us \n Windows兼容操作系统  https://github.com/reactos \n 支持Linux和安卓应用  https://github.com/JingOS-team/JingOS \n 编译嵌入式Linux  https://github.com/buildroot \n \n https://buildroot.org \n \n \n https://github.com/littlekernel/lk \n \n Little Kernel 代码走读（一） – 易也技术 \n https://github.com/dahliaOS/fimage \n https://fuchsia.fsf.org.cn \n \n \n https://github.com/hardenedlinux \n \n https://gitlab.com/hardenedlinux \n \n \n 个人云系统  https://github.com/IceWhaleTech/CasaOS \n 类Unix内核  https://github.com/llenotre/maestro \n \n \n https://github.com/topics/openwrt \n \n https://github.com/openwrt/openwrt \n https://github.com/coolsnowwolf/lede \n https://github.com/haiibo/OpenWrt \n https://github.com/gdy666/lucky \n https://github.com/liudf0716/apfree-wifidog \n https://github.com/sirpdboy/NetSpeedTest \n 网关切换  https://github.com/ourines/GateShift \n \n \n https://github.com/open-power \n https://github.com/coolsnowwolf/lede \n https://github.com/Entware \n https://github.com/tock/tock \n \n https://github.com/google/OpenSK \n \n \n https://makecode.microbit.org \n https://github.com/droogmic/microrust \n https://github.com/ARMmbed \n https://github.com/thepowersgang/rust_os \n 物联网  https://github.com/RT-Thread/rt-thread \n https://github.com/zephyrproject-rtos/zephyr \n \n https://github.com/Linaro \n \n \n https://github.com/openLuat \n 树莓派  https://github.com/raspberrypi \n \n https://github.com/guysoft \n https://github.com/coolsnowwolf/lede \n \n \n https://github.com/pftf \n \n \n 交换机操作系统  https://github.com/stratum/stratum \n https://github.com/myspaghetti/macos-virtualbox \n https://github.com/osresearch/heads \n https://github.com/hardenedvault/vaultboot \n https://github.com/pld-linux \n https://github.com/mit-pdos \n 华硕路由器固件  https://github.com/RMerl/asuswrt-merlin.ng \n \n https://sourceforge.net/projects/asuswrt-merlin \n \n \n 摄像头监控  https://github.com/ZoneMinder/zoneminder \n NAS  https://github.com/truenas \n https://github.com/zvaultio \n 虚拟机 \n \n https://github.com/stefanha/git-publish \n Xen  https://github.com/xen-project \n \n https://xenbits.xensource.com \n https://github.com/xapi-project \n \n \n QEMU  https://github.com/qemu/qemu \n \n https://gitlab.com/qemu-project/qemu \n \n \n KVM  https://www.linux-kvm.org \n \n https://github.com/kvmtool/kvmtool \n https://github.com/dmacvicar/terraform-provider-libvirt \n https://github.com/htrefil/rkvm \n https://github.com/deskflow/deskflow \n https://github.com/isard-vdi/isard \n https://github.com/kvm-riscv/linux \n \n \n https://github.com/Parallels \n \n https://bitbucket.org/openvz \n \n https://openvz.org \n \n \n https://www.virtuozzo.com/company/open-source \n \n \n https://gitlab.com/libvirt \n \n https://github.com/virt-manager \n \n \n https://github.com/libguestfs \n https://github.com/vagrant-libvirt/vagrant-libvirt \n https://github.com/proxmoxer \n \n https://www.proxmox.com \n https://github.com/community-scripts/ProxmoxVE \n https://github.com/luchina-gabriel/OSX-PROXMOX \n https://github.com/Telmate/terraform-provider-proxmox \n \n \n https://github.com/checkpoint-restore/criu \n https://github.com/oVirt \n \n https://github.com/cnovirt \n \n \n 虚拟机  https://docs.microsoft.com/zh-cn/virtualization \n https://github.com/vmware \n \n https://customerconnect.vmware.com/cn/downloads \n \n \n https://www.virtualbox.org/wiki/Downloads \n \n https://github.com/hyperbox \n \n \n https://github.com/xenserver \n https://github.com/canonical/multipass \n \n https://github.com/canonical/lxd \n \n \n 微型虚拟机  https://github.com/firecracker-microvm \n https://github.com/kata-containers/kata-containers \n https://github.com/kestra-io/kestra \n IOT虚拟机  https://github.com/projectacrn \n mac上的虚拟机  https://www.parallels.com \n 服务器软件 \n \n https://github.com/bitnami \n 服务器音频播放器  https://github.com/badaix/snapcast \n 桌面  https://github.com/kernelslacker/trinity \n https://github.com/wine-mirror/wine \n https://github.com/ValveSoftware \n https://kde.org/zh-cn/plasma-desktop \n https://www.enlightenment.org \n https://github.com/ukui \n https://github.com/Alexays/Waybar \n https://sourceforge.net/projects/xanmod \n 运行Windows应用  https://github.com/winapps-org/winapps \n https://github.com/TibixDev/winboat \n 屏幕锁定  https://github.com/swaywm/swaylock \n 配置管理  https://github.com/puppetlabs/puppet \n https://github.com/ansible/ansible \n \n https://github.com/ansible-community \n https://github.com/sky22333/ansible-ui \n \n \n https://github.com/saltstack \n https://github.com/chef/chef \n 服务器测评  https://github.com/spiritLHLS/ecs \n https://github.com/axboe/fio \n 云平台  https://github.com/ubicloud/ubicloud \n https://github.com/basecamp/kamal \n https://github.com/capistrano/capistrano \n https://github.com/opentofu/opentofu \n WIFI管理  https://github.com/pythops/impala \n https://github.com/J-Lentz/iwgtk \n https://gitlab.freedesktop.org/NetworkManager/NetworkManager \n 速度测试  https://github.com/gnmyt/myspeed \n 增量快照  https://github.com/linuxmint/timeshift \n 网络管理  https://networkmanager.dev \n 监控网络流量  https://github.com/domcyrus/rustnet \n 端口监控  https://github.com/Mostafa-Wahied/portracker \n https://github.com/crocofied/PortNote \n GPU运行信息  https://github.com/kagehq/gpu-kill \n \n \n 软件构建  https://github.com/easybuilders \n DNS \n \n https://github.com/topics/dns-server \n https://github.com/topics/service-discovery \n https://github.com/topics/cncf \n https://github.com/topics/http3 \n https://github.com/topics/quic \n https://wiki.archlinux.org/title/Domain_name_resolution#DNS_servers \n \n \n https://thekelleys.org.uk/dnsmasq/doc.html \n \n https://dnsmasq.org \n \n \n https://github.com/coredns/coredns \n \n https://sourceforge.net/projects/coredns.mirror \n \n \n https://github.com/skynetservices/skydns \n https://github.com/PowerDNS \n \n https://github.com/Habbie \n https://github.com/ahupowerdns \n https://sourceforge.net/projects/poweradmin \n \n \n https://github.com/isc-projects/bind9 \n \n https://gitlab.isc.org/isc-projects/bind9 \n https://www.isc.org/bind \n https://github.com/cytopia/docker-bind \n \n \n https://cr.yp.to/djbdns.html \n https://github.com/yadifa/yadifa \n https://github.com/TechnitiumSoftware/DnsServer \n https://github.com/google/proto-quic \n https://github.com/google/quiche (https://github.com/google/quiche) \n https://github.com/lucas-clemente/quic-go \n https://github.com/letsencrypt/challtestsrv \n https://github.com/rthalley/dnspython \n https://github.com/bluejekyll/trust-dns \n https://github.com/IrineSistiana/mosdns \n https://github.com/pymumu/smartdns \n \n https://sourceforge.net/projects/smartdns.mirror \n \n \n https://github.com/nextdns/nextdns \n \n https://sourceforge.net/projects/nextdns.mirror \n \n \n https://github.com/samboy/MaraDNS \n \n https://gitlab.com/maradns/maradns \n https://bitbucket.org/maradns/maradns \n https://codeberg.org/samboy/MaraDNS \n https://git.sr.ht/~samiam/MaraDNS \n https://maradns.samiam.org \n \n \n https://github.com/m13253/dns-over-https \n https://github.com/DNSCrypt/dnscrypt-proxy \n https://github.com/getdnsapi/stubby \n https://github.com/NetworkConfiguration/openresolv \n https://github.com/gdnsd/gdnsd \n https://www.knot-dns.cz \n \n https://gitlab.nic.cz/knot/knot-dns \n \n \n https://github.com/kewlfft/opennic-up \n https://github.com/cleanbrowsing/dnsperftest \n https://github.com/folbricht/routedns \n https://github.com/shuLhan/rescached \n https://www.knot-resolver.cz \n https://github.com/TechnitiumSoftware/DnsServer \n https://github.com/gene-git/dns_tools \n https://github.com/NLnetLabs/unbound \n \n https://github.com/NLnetLabs/ldns \n https://github.com/NLnetLabs/nsd \n https://www.nlnetlabs.nl \n \n \n https://github.com/dnsviz/dnsviz \n https://github.com/DNSSEC-Tools/DNSSEC-Tools \n https://github.com/AdguardTeam/dnsproxy \n DNS扫描  https://github.com/pwnesia/dnstake \n https://github.com/zartbot/ztrace \n 客户端  https://github.com/mr-karan/doggo \n https://github.com/ogham/dog \n https://sourceforge.net/projects/acrylic \n https://sourceforge.net/projects/dhcp-dns-server \n https://github.com/ddclient/ddclient \n https://github.com/spc476/SPCDNS \n https://github.com/pmkol/mosdns-x \n IP地址管理  https://github.com/TeemIP \n \n https://sourceforge.net/projects/teemip \n SSL证书 \n \n https://github.com/openssl \n https://github.com/topics/letsencrypt \n https://github.com/topics/certificate \n https://github.com/topics/acme \n \n \n https://github.com/drwetter/testssl.sh \n https://github.com/zerossl \n https://github.com/zeoseven/certple \n https://letsencrypt.org \n https://github.com/zenhack/simp_le \n https://github.com/acmesh-official \n \n HTTPS之acme.sh申请证书 \n 使用GCP公共CA签发Google Trust Services证书 \n \n \n https://github.com/win-acme \n https://github.com/letsencrypt \n https://github.com/webprofusion/certify \n https://github.com/rmbolger/Posh-ACME \n https://github.com/certbot \n \n https://certbot.eff.org \n 获取证书（并选择插件）-官方文档 \n \n \n https://github.com/Keyfactor \n 管理  https://github.com/SSLMate \n https://github.com/mouday/domain-admin \n https://github.com/aaomidi/certbot-dns-google-domains \n https://github.com/anchordotdev \n \n https://anchor.dev/relay \n \n \n https://search.censys.io \n https://github.com/usual2970/certimate \n https://github.com/allinssl/allinssl \n 自动获取证书信息  https://github.com/eryajf/cloud_dns_exporter \n localhost证书  https://github.com/anchordotdev/cli \n \n \n 临时处理OCSP域名无法访问的问题 \n 「Certbot」- ocsp.int-x3.letsencrypt.org Read timed out \n 集群负载均衡 \n \n https://github.com/webserver-llc/angie \n https://github.com/grumpylabs/freenginx \n https://github.com/freenginx-mirror \n https://github.com/apache/httpd \n https://github.com/apache/trafficserver \n https://github.com/lighttpd \n https://github.com/caddyserver/caddy \n \n Caddy2 简明教程 - bleem \n \n \n https://github.com/traefik/traefik \n https://github.com/haproxy/haproxy \n \n HAProxy入门  https://jaminzhang.github.io/lb/HAProxy-Get-Started \n \n \n Nginx和HAProxy对比 \n HAProxy Nginx LVS 对比 \n 负载均衡器对比(LVS、Nginx、Haproxy) \n 各大API网关性能比较 \n \n \n https://github.com/cloudflare/pingora \n https://github.com/envoyproxy/envoy \n \n https://github.com/projectcontour/contour \n https://github.com/datawire/ambassador \n https://github.com/projectcontour/gimbal \n \n \n https://github.com/flomesh-io/pipy \n https://github.com/Kong/kong \n https://github.com/zalando/skipper \n https://github.com/tobychui/zoraxy \n https://github.com/litespeedtech/openlitespeed \n L4LB  https://github.com/facebookincubator/katran \n https://github.com/davidcoles/vc5 \n IP漂移  https://github.com/acassen/keepalived \n \n https://github.com/garenchan/keepalived-doc \n 高可用实践——Keepalived踩坑记录 \n Keepalived Nginx双网络(内外网)故障非同步漂移双主模式 \n 通过keepalived来实现高可用服务 \n 虚拟IP技术 ip地址漂移技术 \n \n \n https://github.com/hardfalcon/ucarp \n 高可用集群  https://github.com/ClusterLabs \n \n https://github.com/corosync \n \n \n Heartbeat  http://www.linux-ha.org \n https://gitlab.com/fredbcode/Vrrpd \n \n https://github.com/fredbcode/Vrrpd \n \n \n LVS  http://www.linuxvirtualserver.org \n \n Linux Virtual Server \n LVS nat模式和DR模式简介 \n VIP和RIP不同网段的LVS和keepalived高可用 \n \n \n https://github.com/tinyproxy/tinyproxy \n 缓存代理  https://github.com/squid-cache/squid \n https://github.com/varnishcache/varnish-cache \n https://github.com/varnish \n 监控探针 \n \n https://github.com/topics/monitor \n https://github.com/topics/monitoring \n https://github.com/topics/system-monitor \n https://github.com/topics/system-information \n https://github.com/topics/process-manager \n https://github.com/topics/process-monitor \n https://github.com/monitoring-plugins \n \n 监控插件开发指南  https://www.monitoring-plugins.org \n \n \n https://github.com/topics/performance-tuning \n https://github.com/topics/performance-monitoring \n \n \n https://github.com/orilights/ServerStatus-Theme-Light \n \n https://github.com/cppla/ServerStatus \n https://github.com/zdz/ServerStatus-Rust \n https://github.com/BotoX/ServerStatus \n \n \n https://github.com/CokeMine/ServerStatus-Hotaru \n https://github.com/ToyoDAdoubi/ServerStatus-Toyo \n \n https://github.com/stilleshan/ServerStatus \n \n \n https://github.com/rajnandan1/kener \n https://github.com/louislam/uptime-kuma \n https://github.com/lyc8503/UptimeFlare \n https://github.com/OneUptime/oneuptime \n https://github.com/abdenasser/neohtop \n https://github.com/StamusNetworks/SELKS \n https://github.com/BetterStackHQ \n https://github.com/star7th/coolmonitor \n https://github.com/opsre/WatchAlert \n https://github.com/chaos-zhu/easynode \n https://github.com/netdata/netdata \n https://github.com/newrelic \n \n https://opensource.newrelic.com \n \n \n https://github.com/Reportr \n https://github.com/tracecompass \n \n https://github.com/lttng \n https://github.com/eclipse-cdt-cloud \n https://github.com/google/perfetto \n \n \n https://github.com/may-fly/mayfly-go \n https://github.com/amuluze/amprobe \n https://github.com/mcoo/status \n https://github.com/henrygd/beszel \n https://github.com/hengyoush/kyanos \n 实时崩溃报告  https://github.com/getsentry \n https://github.com/highlight/highlight \n https://github.com/uptimerobot \n https://github.com/msgbyte/tianji \n https://github.com/bboysoulcn/telemonitor \n https://github.com/TheCoolQATeam/online-inspection-tracker \n \n \n Linux工程师必备的88个监控工具 \n nethogs : 按进程查看流量占用 \n ethtool : 诊断工具 \n 监控总体带宽使用： nload 、 bmon 、 slurm 、 bwm-ng 、 cbm 、 speedometer 、 netload \n 监控总体带宽使用（批量式输出）： vnstat 、 ifstat 、 dstat 、 collectl \n 每个套接字连接的带宽使用： iftop 、 iptraf 、 tcptrack 、 pktstat 、 netwatch 、 trafshow 、 jnettop \n ntopng \n perf、sar、ksar、mpstat、uptime、vmstat、pidstat、time、cpustat、munin、glances、atop、nmon、pcp-gui、nfsstat、netstat、iostat \n 系统信息  https://github.com/fastfetch-cli/fastfetch \n https://github.com/sqshq/sampler \n https://github.com/nokyan/resources \n https://github.com/ClementTsang/bottom \n https://github.com/aksakalli/gtop \n https://github.com/xxxserxxx/gotop \n https://github.com/htop-dev/htop \n https://github.com/aristocratos/btop \n \n 还在用 top htop? 赶紧换 btop 吧，真香！ \n \n \n https://github.com/nicolargo/glances \n https://github.com/sysstat/sysstat \n https://github.com/context-labs/mactop \n https://github.com/wolfpld/tracy \n https://github.com/imsnif/bandwhich \n 视图监视器  https://github.com/paradoxxxzero/gnome-shell-system-monitor-applet \n https://github.com/aristocratos \n https://github.com/magiclen/m-prober \n https://github.com/goksan/Statusnook \n 网站防护  https://github.com/chaitin/SafeLine \n 堡垒机  https://github.com/jimmy201602/webterminal \n https://github.com/warp-tech/warpgate \n https://github.com/bigbully/Dapper-translation \n \n https://bigbully.github.io/Dapper-translation \n \n \n https://github.com/jumpserver/jumpserver \n GitHubActions监控服务  https://github.com/WCY-dt/ponghub \n \n APM \n \n https://github.com/topics/apm \n \n \n https://github.com/naiba/nezha \n https://github.com/pinpoint-apm/pinpoint \n https://github.com/apache/skywalking \n https://github.com/Hygieia/Hygieia \n https://github.com/zabbix \n \n https://github.com/alexanderzobnin/grafana-zabbix \n https://github.com/zhausong/zabbix-book \n \n \n https://github.com/NagiosEnterprises \n \n https://github.com/nagios-plugins \n https://www.nagios.org \n https://www.nagios.com \n https://github.com/HariSekhon/Nagios-Plugins \n \n \n https://github.com/naemon \n https://github.com/naparuba/shinken \n https://github.com/Icinga \n Checkmk  https://github.com/tribe29 \n https://github.com/cacti \n https://github.com/ntop/ntopng \n https://github.com/elastic/apm-server \n https://github.com/prometheus \n \n Prometheus监控tomcat+jvm \n https://iqsing.github.io/categories/prometheus \n \n \n https://github.com/OpenObservability/OpenMetrics \n https://github.com/ccfos/nightingale \n https://github.com/scouter-project/scouter \n 可视化套件  https://github.com/grafana/grafana \n https://github.com/GitSquared/edex-ui \n 仪表盘图标  https://github.com/xushier/HD-Icons \n 自动化测试  https://github.com/tahitimoon/LunarLink \n https://github.com/lihuacai168/AnotherFasterRunner \n https://github.com/bats-core/bats-core \n 管理面板 \n \n https://github.com/tnb-labs/panel \n https://github.com/aaPanel/BaoTa \n \n https://www.bt.cn \n \n \n https://www.xp.cn \n https://github.com/YunoHost \n https://github.com/cockpit-project \n https://github.com/dushixiang/next-terminal \n http://amh.sh \n http://www.batchshell.cn \n https://github.com/hestiacp/hestiacp \n https://github.com/1Panel-dev/1Panel \n https://github.com/midoks/mdserver-web \n https://github.com/TheTNB/panel \n https://github.com/plesk \n \n https://autoinstall.plesk.com/plesk-installer \n \n \n https://securedownloads.cpanel.net \n https://www.directadmin.com/setup.sh \n https://github.com/usmannasir/cyberpanel \n https://github.com/webmin/webmin \n https://github.com/outroll/vesta \n https://www.ispconfig.org \n \n VNC \n \n https://github.com/search?q=VNC%20Server \n https://github.com/topics/vnc \n https://github.com/topics/vnc-client \n \n \n https://github.com/novnc/noVNC \n https://github.com/balena-io-playground/xserver-web-vnc \n https://github.com/kasmtech/KasmVNC \n https://github.com/TigerVNC/tigervnc \n https://github.com/chenall/tightvnc \n https://github.com/ultravnc/UltraVNC \n https://github.com/LibVNC \n https://github.com/bk138/droidVNC-NG \n https://github.com/apache/guacamole-server \n https://archive.realvnc.com/en/connect/download/vnc \n 建站资源 \n \n https://www.lengxi.net \n 萌音影视 - 在线影视应用 \n \n 安装教程 \n \n \n 使用FileManager+基于Python3的爬虫程序建立影音图片库 \n 使用PlayTube搭建私人的视频网站 \n 开源有态度的漫画CMS \n https://github.com/tinacms/tinacms \n https://github.com/Youngxj/YoungxjTools \n https://github.com/netnr/scriptservices \n 媒体服务器  https://github.com/MediaBrowser/Emby.Releases \n https://github.com/jellyfin/jellyfin \n https://github.com/movie-web/movie-web \n https://github.com/blackcandy-org/blackcandy \n https://github.com/paperless-ngx/paperless-ngx \n https://github.com/photoprism/photoprism \n https://github.com/photoview/photoview \n https://github.com/songquanpeng/go-file \n https://github.com/miroslavpejic85/mirotalksfu \n https://github.com/Stremio/stremio-web \n https://github.com/timelinize/timelinize \n 音频编辑  https://github.com/RylanBot/melody-workshop \n 视频编辑  https://github.com/OpenCut-app/OpenCut \n https://github.com/robinroy03/videoeditor \n 有声读物和播客  https://github.com/advplyr/audiobookshelf \n https://github.com/janeczku/calibre-web \n 证件照  https://github.com/zhbhun/idify \n https://github.com/Zeyi-Lin/HivisionIDPhotos \n https://github.com/aoguai/LiYing \n 在线PS  https://github.com/viliusle/miniPaint \n \n https://zaixianps.net \n \n \n https://github.com/CH563/shot-easy-website \n 抠图  https://github.com/imgly/background-removal-js \n 图片编辑  https://github.com/sleepy-zone/fabritor-web \n https://github.com/palxiao/poster-design \n https://github.com/GraphiteEditor/Graphite \n https://github.com/GimelStudio \n 头像生成  https://github.com/multiavatar/Multiavatar \n SVG预览  https://github.com/liujuntao123/new-svg-viewer \n PPT象限编辑器  https://github.com/KwokKwok/slide-lab \n 文字转图片  https://github.com/byodian/oneimg \n AI姿势  https://github.com/AmyangXYZ/MiKaPo \n 图片加水印  https://github.com/pdmaker/watermark-master \n https://github.com/corbindavenport/photostack \n 图片背景文字  https://github.com/RexanWONG/text-behind-image \n 代码图  https://github.com/Idered/chalk.ist \n https://github.com/abi/screenshot-to-code \n https://github.com/daveearley/screenshot.rocks \n 封面图  https://github.com/zobor/photo-relay \n https://github.com/struy-cn/Y-TOC \n https://github.com/slince-zero/IMaker \n 链接图  https://github.com/wind-liang/link-to-image \n 游戏  https://github.com/arianrhodsandlot/nostalgist \n https://github.com/arianrhodsandlot/retro-assembly \n https://github.com/retrobrews \n https://github.com/LizardByte/Sunshine \n 中国历史  https://github.com/liujuntao123/chines-history-video \n 日历  https://github.com/xyxc0673/calendar-remark \n https://github.com/airyland/datetime.app \n IM  https://github.com/tl-open-source/tl-rtc-app \n 知识问答  https://github.com/apache/incubator-answer \n 问卷调查  https://github.com/didi/xiaoju-survey \n https://github.com/bojue/lemon-form \n 白噪音  https://github.com/geekyouth/moodist \n https://github.com/daijinhai/StayFocused \n 动画生成代码  https://animotion.dev \n 财务  https://github.com/maybe-finance/maybe \n https://github.com/actualbudget/actual \n https://github.com/getlago/lago \n https://github.com/tradingview/lightweight-charts \n https://github.com/suyu610/journal-flutter \n 云电脑  https://github.com/HeyPuter/puter \n JSON可视化  https://github.com/AykutSarac/jsoncrack.com \n https://github.com/apvarun/graphize \n https://github.com/obsidianmd/jsoncanvas \n https://github.com/loggerhead/json4u \n https://github.com/xzitlou/jsontr.ee \n 时间线  https://github.com/zhugezifang/ai_timeline \n 天气  https://github.com/vsergeev/briefsky \n 短链接  https://github.com/dubinc/dub \n 项目落地页  https://github.com/weijunext/landing-page-boilerplate \n https://github.com/huglemon/inwind-landing-page \n https://github.com/onwidget/astrowind \n 表单生成  https://github.com/heyform/heyform \n https://github.com/GeekAtTeam/PageTemplatify \n 网页元素拖拽  https://github.com/atlassian/pragmatic-drag-and-drop \n 调色板  https://github.com/NeverCease/uchu \n 管理后台  https://github.com/dashpresshq/dashpress \n https://github.com/huhusmang/Subscription-Management \n 文件共享  https://github.com/stonith404/pingvin-share \n https://github.com/bitiful/send \n https://github.com/timvisee/send \n \n https://send.cyberjake.xyz \n https://send.vis.ee \n \n \n https://github.com/WCY-dt/EasyTransfer \n https://github.com/kern/filepizza \n https://github.com/CoderLim/transfer-files \n https://github.com/schlagmichdoch/PairDrop \n https://github.com/szimek/sharedrop \n \n https://www.w3.org/TR/webrtc \n https://github.com/RTC-Developer/WebRTC-Documentation-in-Chinese \n https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API \n \n \n https://github.com/quick-bin/qbin \n https://github.com/MatrixSeven/file-transfer-go \n https://github.com/fastn-stack/kulfi \n \n https://malai.sh/hello-tcp \n \n \n https://github.com/Forceu/Gokapi \n https://github.com/keven1024/015 \n 二维码分享文件  https://github.com/sz3/libcimbar \n 主页仪表板  https://github.com/glanceapp/glance \n 在线知识库  https://github.com/outline/outline \n https://github.com/chaitin/PandaWiki \n 自定义二维码  https://github.com/kochrt/qr-designer \n https://github.com/uxiaohan/PayQrcode \n https://github.com/liuliangsir/chromium-style-qrcode-generator-with-wasm \n 图床  https://github.com/TiannV/react-epic-project \n https://github.com/besscroft/PicImpact \n https://github.com/linyuxuanlin/Gallery-Portfolio \n Web应用商店  https://github.com/sandstorm-io/sandstorm \n https://github.com/Websoft9/websoft9 \n 桌面录屏  https://github.com/canwdev/web-mediadevices-player \n 搜索  https://github.com/searxng/searxng \n IT资产管理  https://github.com/snipe/snipe-it \n 色彩转换  https://github.com/hsluv/hsluv \n 音乐人声分离  https://github.com/jianchang512/vocal-separate \n 分享代码  https://github.com/yuxiaoy1/simple-pastebin \n 缓存网页  https://github.com/html5-ninja/page-replica \n 深蹲计数  https://github.com/zhaoolee/Sport \n 网页加密  https://github.com/robinmoisson/staticrypt \n 操作PDF  https://github.com/Stirling-Tools/Stirling-PDF \n 管理GPS路径  https://github.com/Flomp/wanderer \n 共享localStorage  https://github.com/FrigadeHQ/remote-storage \n 汇编写的论坛  https://asm32.info/fossil/asmbb \n 数字转中文  https://github.com/Ailln/cn2an \n 麻将游戏  https://github.com/liumengniu/majiang \n 加密工具  https://github.com/dazhengs/tools \n 天空轨道分析  https://github.com/thkruz/keeptrack.space \n 比价  https://github.com/dgtlmoon/changedetection.io \n 个人资产分析  https://github.com/nicejade/wealth-tracker \n 测速  https://github.com/librespeed/speedtest \n https://github.com/openspeedtest \n https://github.com/iitggithub/iperf-web \n AI翻译  https://github.com/ItusiAI/AI-Translation-Assistant-Pro \n 旅行翻译  https://github.com/traveltranslator1/traveltranslator1 \n \n https://besttraveltranslator.com \n \n \n 小说智能转语音  https://github.com/cosin2077/easyVoice \n 关键词搜索  https://github.com/serping/serp-checker \n 共享屏幕  https://github.com/tonghohin/screen-sharing \n https://github.com/echoshare/echoshare \n 演示遥控器  https://github.com/Rico00121/decktap \n 室内跑步巨幕  https://github.com/Jamesun921/cam-run \n 3D文件查看  https://github.com/kovacsv/Online3DViewer \n 网站统计分析  https://github.com/vinceanalytics/vince \n https://github.com/Plausible/analytics \n https://github.com/rybbit-io/rybbit \n https://github.com/umami-software/umami \n 检测网站死链  https://github.com/isixe/LinkChecker \n 超声波发数据  https://gist.github.com/halcy/d20b0bc2de82ceae2f6ba8a83901b265 \n \n https://kal-tsit.halcy.de/ultrasound \n \n \n https://github.com/tanepiper/adOn-soundlib \n 绘制等距图  https://github.com/stan-smith/FossFLOW \n 雨滴下降路径  https://github.com/sdl60660/river-runner \n \n https://github.com/ksonda/global-river-runner \n \n \n 思维导图  https://github.com/hizzgdev/jsmind \n https://github.com/ishubin/schemio \n CI/CD管理  https://github.com/opsre/LiteOps \n API调试  https://github.com/o8oo8o/WebCurl \n 最佳会面地图  https://github.com/JasonRobertDestiny/MeetSpot \n 房价走势  https://github.com/851235550/how-to-buy-house \n AI新闻摘要  https://github.com/kagisearch/kite-public \n 网盘搜索  https://github.com/fish2018/pansou \n \n 协作/在线/协同 \n \n https://github.com/microsoft/FluidFramework \n \n \n 协作办公套件  https://github.com/ONLYOFFICE \n \n https://personal.onlyoffice.com \n https://github.com/cryptpad \n https://github.com/ranuts/document \n \n \n https://github.com/ether/etherpad-lite \n https://github.com/anytypeio \n https://github.com/Teamlinker \n 团队协作和文档  https://www.notion.so \n https://github.com/mayneyao/eidos \n https://github.com/mattermost/focalboard \n https://github.com/AppFlowy-IO/appflowy \n https://github.com/burntcarrot/pairpad \n \n 在 Go 中构建协作文本编辑器 \n \n \n https://github.com/hudy9x/namviek \n https://github.com/nusr/excel \n 任务管理  https://github.com/hamsterbase/tasks \n 特性管理  https://github.com/FeatureProbe/FeatureProbe \n 腾讯文档  http://docs.qq.com \n https://github.com/seatable \n https://slack.com \n \n https://slack.com/get-started \n \n \n https://www.twilio.com \n https://trello.com \n https://airtable.com \n https://www.teambition.com \n https://bitable.feishu.cn \n https://worktile.com \n https://tower.im \n https://www.mingdao.com \n http://github.com/vikadata \n https://www.treelab.com.cn \n https://www.wolai.com \n https://www.qingque.cn \n https://hipacloud.com \n https://www.microsoft.com/zh-cn/microsoft-365/microsoft-lists \n https://clickup.com \n https://coda.io \n https://github.com/kuaifan/dootask \n https://www.cornerstone365.cn \n 画板/白板  https://github.com/topics/whiteboard \n https://github.com/JessYan0913/pictode \n https://github.com/LHRUN/paint-board \n https://github.com/plait-board/drawnix \n https://github.com/excalidraw/excalidraw \n https://github.com/worktile/plait \n https://github.com/chunrapeepat/inscribed \n \n https://storymotion.video \n \n \n 处理音频和视频  https://github.com/xiguaxigua/ffmpeg-online \n CAD  https://github.com/CADmium-Co/CADmium \n https://github.com/xiangechen/chili3d \n 屏幕刷新率区别  https://github.com/MaskerPRC/refresh-rate-expericence \n 比较编程语言  https://github.com/erweixin/langshift.dev \n \n 发卡系统 \n \n github search \n https://github.com/zlkbdotnet/zfaka \n https://github.com/Tai7sy/card-system \n https://github.com/assimon/shanhufaka \n https://github.com/maddog888/kmxts \n \n 企业建站 \n \n https://github.com/topics/cms \n https://github.com/topics/headless-cms \n https://github.com/topics/customizable \n \n \n https://github.com/WordPress/WordPress \n \n https://github.com/topics/wordpress-theme \n https://github.com/syfxlin/origami \n https://github.com/solstice23/argon-theme \n https://github.com/owen0o0/WebStack \n https://github.com/visualmodo/Pollen \n https://github.com/elementor \n https://github.com/ThemeFuse/Brizy \n https://github.com/topics/divi \n https://flatsome3.uxthemes.com/features/ux-page-builder \n https://www.dukeyin.com/product/wordpress-multipurpose-theme-dukeyin \n \n \n https://github.com/primocms/primo \n https://github.com/joomla/joomla-cms \n https://github.com/drupal/drupal \n 织梦CMS  https://github.com/dedecms/DedeCMS \n https://gitee.com/Discuz/DiscuzX \n http://www.pageadmin.net \n https://www.jtbc.cn \n https://github.com/mlogclub/bbs-go \n https://github.com/wejectchen/Ginblog \n https://github.com/BuilderIO/builder \n https://github.com/plone \n Java  https://github.com/halo-dev \n \n",createdTime:1761814324e3},{title:"内网穿透",frontmatter:{description:"ngrok、frp、n2n\nhttp://serveo.net\nhttps://github.com/open-dingtalk/pierced\n    Windows只能使用CMD执行，power shell不兼容，钉钉的内穿透工具包装的是ngrok\n    https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration\n网云穿 https://www.xiaomy.net\nhttps://www.cpolar.com\nhttps://github.com/microsoft/dev-tunnels\n    微软免费开发隧道(内网穿透)\nhttps://github.com/localtunnel/localtunnel\nhttps://github.com/anderspitman/SirTunnel\nhttps://github.com/fosrl/pangolin\nhttps://github.com/ehang-io/nps",meta:[{name:"twitter:title",content:"内网穿透"},{name:"twitter:description",content:"ngrok、frp、n2n\nhttp://serveo.net\nhttps://github.com/open-dingtalk/pierced\n    Windows只能使用CMD执行，power shell不兼容，钉钉的内穿透工具包装的是ngrok\n    https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration\n网云穿 https://www.xiaomy.net\nhttps://www.cpolar.com\nhttps://github.com/microsoft/dev-tunnels\n    微软免费开发隧道(内网穿透)\nhttps://github.com/localtunnel/localtunnel\nhttps://github.com/anderspitman/SirTunnel\nhttps://github.com/fosrl/pangolin\nhttps://github.com/ehang-io/nps"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html"},{property:"og:type",content:"article"},{property:"og:title",content:"内网穿透"},{property:"og:description",content:"ngrok、frp、n2n\nhttp://serveo.net\nhttps://github.com/open-dingtalk/pierced\n    Windows只能使用CMD执行，power shell不兼容，钉钉的内穿透工具包装的是ngrok\n    https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration\n网云穿 https://www.xiaomy.net\nhttps://www.cpolar.com\nhttps://github.com/microsoft/dev-tunnels\n    微软免费开发隧道(内网穿透)\nhttps://github.com/localtunnel/localtunnel\nhttps://github.com/anderspitman/SirTunnel\nhttps://github.com/fosrl/pangolin\nhttps://github.com/ehang-io/nps"},{property:"og:url",content:"https://bajins.com/System/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"内网穿透"},{itemprop:"description",content:"ngrok、frp、n2n\nhttp://serveo.net\nhttps://github.com/open-dingtalk/pierced\n    Windows只能使用CMD执行，power shell不兼容，钉钉的内穿透工具包装的是ngrok\n    https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration\n网云穿 https://www.xiaomy.net\nhttps://www.cpolar.com\nhttps://github.com/microsoft/dev-tunnels\n    微软免费开发隧道(内网穿透)\nhttps://github.com/localtunnel/localtunnel\nhttps://github.com/anderspitman/SirTunnel\nhttps://github.com/fosrl/pangolin\nhttps://github.com/ehang-io/nps"}]},regularPath:"/System/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html",relativePath:"System/内网穿透.md",key:"v-71a93604",path:"/System/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"ngrok",slug:"ngrok"},{level:2,title:"frp",slug:"frp"},{level:3,title:"获取frp最新版本号",slug:"获取frp最新版本号"},{level:3,title:"一键安装脚本",slug:"一键安装脚本"},{level:3,title:"frp-onekey",slug:"frp-onekey"},{level:3,title:"服务端配置",slug:"服务端配置"},{level:2,title:"svp",slug:"svp"},{level:3,title:"PAC",slug:"pac"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 内网穿透 \n Flag ngrok frp 获取frp最新版本号 一键安装脚本 frp-onekey 服务端配置 svp PAC \n Flag \n \n https://github.com/topics/tunnel \n https://github.com/topics/expose \n https://github.com/topics/reverse-proxy \n https://github.com/topics/http-proxy \n https://github.com/topics/proxy \n https://github.com/topics/proxy-server \n https://github.com/topics/tor \n https://github.com/topics/onion \n https://github.com/anderspitman/awesome-tunneling \n \n \n Go 简单而强大的反向代理（Reverse Proxy） \n 网络代理与VPN应用详解 \n 正向代理与反向代理 \n 一种基于Nginx的域名解析与内网穿透方案 \n \n \n ngrok、frp、n2n \n http://serveo.net \n https://github.com/open-dingtalk/pierced \n \n Windows只能使用CMD执行，power shell不兼容，钉钉的内穿透工具包装的是ngrok \n https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration \n \n \n 网云穿  https://www.xiaomy.net \n https://www.cpolar.com \n https://github.com/microsoft/dev-tunnels \n \n 微软免费开发隧道(内网穿透) \n \n \n https://github.com/localtunnel/localtunnel \n https://github.com/anderspitman/SirTunnel \n https://github.com/fosrl/pangolin \n https://github.com/ehang-io/nps \n \n 其他 \n \n https://github.com/ntop/n2n \n \n https://bugxia.com/357.html \n \n \n https://github.com/lwch/natpass \n https://github.com/cnlh/nps \n https://github.com/ffay/lanproxy \n https://github.com/snail007/goproxy \n https://github.com/Wisdom-Projects/holer \n https://github.com/antoniomika/sish \n https://www.nsloop.com/nattunnel \n https://github.com/taichunmin/docker-serveo-server \n https://github.com/heiher/natmap \n https://github.com/pgrok/pgrok \n https://github.com/P001water/yuze \n https://github.com/lbl8603/vnt \n ZeroTier  https://github.com/zerotier \n \n ZeroTier Moon 部署 \n \n \n https://github.com/tailscale \n https://github.com/RingLinkPlatform/RingLink \n https://github.com/robbie-cahill/tunnelmole-client \n \n \n https://github.com/SeaHOH/GotoX \n ngrok \n \n ngrok是一个反向代理，通过在公共的端点和本地运行的Web服务器之间建立一个安全的通道。\nngrok可捕获和分析所有通道上的流量，便于后期分析与响应。 \n \n \n https://github.com/topics/ngrok \n https://github.com/inconshreveable/ngrok \n \n https://ngrok.com \n http://www.ngrok.cn/ \n \n \n https://github.com/bubenshchykov/ngrok \n \n \n CentOS7搭建Ngrok内网穿透 \n 小米球ngrok国内免费服务器 \n wkfg \n frp \n \n https://github.com/fatedier/frp \n https://github.com/luckjiawei/frpc-desktop \n Windows客户端脚本，会自动下载最新版fprc \n \n \n FRP免费服务器 \n 铂金frp - 反向代理工具之铂金frp免费服务 \n chuantou.org的免费Frp内网穿透服务 \n https://freefrp.net \n 获取frp最新版本号 \n wget  -qO- https://github.com/fatedier/frp/releases/latest  |   grep   '<title>'   |   awk   '{print $2}' \n curl   -s  https://github.com/fatedier/frp/releases/latest  |   cut   -d   \\ \"  -f   2   |   awk   -F   \"/\"   '{print $NF}' \n \n curl   -s  https://api.github.com/repos/fatedier/frp/releases/latest  |   grep   'tag_name'   |   cut   -d   \\ \"  -f   4 \n wget  -qO- https://api.github.com/repos/fatedier/frp/releases/latest  |   grep   'tag_name'   |   cut   -d   \\ \"  -f   4 \n 一键安装脚本 \n \n onekey-install-shell \n frpspro \n https://github.com/openapphub/frpc-cli \n frp-onekey \n \n https://github.com/MvsCode/frp-onekey \n下载脚本 \n wget  https://raw.githubusercontent.com/MvsCode/frp-onekey/master/install-frps.sh\n脚本授权 \n chmod   700  ./install-frps.sh\n运行脚本安装 \n./install-frps.sh  install \n升级 \n bash  install-frps.sh update\n卸载 \n bash  install-frps.sh uninstall\n \n 设置参数说明 \n \n bind_port 输入frp提供服务的端口，用于服务器端和客户端通信： \n vhost_http_port 输入frp进行http穿透的http服务端口 \n vhost_https_port 输入frp进行https穿透的https服务端口 \n dashboard_port 输入frp的控制台服务端口，用于查看frp工作状态 \n dashboard_user 输入控制台账号，默认admin \n dashboard_pwd 输入控制台密码，默认随机 \n token 输入frp服务器和客户端通信的密码，默认是随机生成的 \n max_pool_count 设置每个代理可以创建的连接池上限，默认50 \n log_level 设置日志等级，4个选项，默认是 info \n \n 1: info(default) \n 2: warn \n 3: error \n 4: debug \n \n \n log_max_days 设置日志保留天数，范围是1到30天，默认保留3天。 \n log_file 设置是否开启日志记录，默认开启，开启后日志等级及保留天数生效，否则等级和保留天数无效\n \n 1: enable(default) \n 2: disable \n \n \n tcp_mux \n \n 1: enable (default) \n 2: disable \n \n \n kcp support \n \n 1: enable (default) \n 2: disable \n \n \n \n 管理命令 \n /etc/init.d/frps start\n/etc/init.d/frps stop\n/etc/init.d/frps restart\n/etc/init.d/frps status\n/etc/init.d/frps config\n/etc/init.d/frps version\n 服务端配置 \n [ common ] \n服务器IP，0.0.0.0为服务器全局所有IP可用， \n假如你的服务器有多个IP则可以这样做，或者填写为指定其中的一个服务器IP,支持IPV6 \n bind_addr   =   0.0.0.0 \n通讯端口，用于和客户端内网穿透传输数据的端口，可自定义 \n bind_port   =   7000 \nUDP通讯端口，用于点对点内网穿透 \n bind_udp_port   =   7001 \n用于KCP协议UDP通讯端口，在弱网环境下传输效率提升明显， \n但是会有一些额外的流量消耗。设置后frpc客户端须设置protocol = kcp \n kcp_bind_port   =   7000 \nhttp监听端口，注意可能和服务器上其他服务用的80冲突， \n比如centos有些默认有Apache，可自定义 \n vhost_http_port   =   7552 \nhttps监听端口，可自定义 \n vhost_https_port   =   446 \n通过浏览器查看 frp 的状态以及代理统计信息展示端口，可自定义 \n dashboard_port   =   7500 \n信息展示面板用户名 \n dashboard_user   =   admin \n信息展示面板密码 \n dashboard_pwd   =   admin \nAdminUI可以帮助用户通过浏览器来查询和管理客户端的proxy状态和配置。 \n admin_addr   =   127.0.0.1 \n admin_port   =   7400 \n admin_user   =   admin \n admin_pwd   =   admin \n特权模式认证密钥 \n token   =   bajins.com \n端口白名单，为了防止端口被滥用，可以手动指定允许哪些端口被使用 \n #allow_ports = 1-65535 \n每个内网穿透服务限制最大连接池上限，避免大量资源占用，可自定义 \n max_pool_count   =   100 \nfrpc所在机器和frps所在机器的时间相差不能超过15分钟，因为时间戳会被用于加密验证中， \n防止报文被劫持后被其他人利用,单位为秒，默认值为900，即 15 分钟。 \n如果修改为0，则frps将不对身份验证报文的时间戳进行超时校验。 \n国外服务器由于时区的不同，时间会相差非常大，这里需要注意同步时间或者设置此值为0 \n authentication_timeout   =   0 \n配置了此参数，则custom_domains中不能是属于此参数的子域名或者泛域名。 \n客户端使用subdomain指定子域名前缀，custom_domains指定子域名全路径 \n subdomain_host   =   zd966.com \n最多保存多少天日志 \n log_max_days   =   7 \n指定日志输出文件 \n log_file   =   frps.log \n指定日志输出级别 \n log_level   =   info \n svp \n \n https://github.com/search?q=vmess \n https://github.com/search?q=v2ray \n https://github.com/topics/v2ray \n https://github.com/topics/gfw \n https://github.com/Alvin9999/new-pac/wiki \n https://github.com/bannedbook/fanqiang \n https://github.com/hoochanlon/fq-book \n https://github.com/vpncn/vpncn.github.io \n https://github.com/teddysun \n 面板  https://github.com/MHSanaei/3x-ui \n 速度测试  https://github.com/xxf098 \n \n \n https://github.com/ssrsub/ssr \n https://github.com/mianfeifq/share \n \n https://gitlab.com/mianfeifq/share \n \n \n https://github.com/selierlin/Share-SSR-V2ray \n https://github.com/ThinkDevelop/Free-SS-SSR \n https://github.com/ugvf2009/Miles \n \n https://jiang.netlify.app \n \n \n https://github.com/fqshare/free-ssr-v2ray-vpn \n https://github.com/freefq/free \n https://github.com/Pawdroid/Free-servers \n https://github.com/mksshare/mksshare.github.io \n https://github.com/githubvpn007/v2rayNvpn \n https://github.com/abshare/abshare.github.io \n https://github.com/hwanz/SSR-V2ray-Trojan-vpn \n https://github.com/vvbbnn00/WARP-Clash-API \n \n https://github.com/ViRb3/wgcf \n https://gitlab.com/Misaka-blog/warp-script \n \n \n https://github.com/yonggekkk/Cloudflare-workers-pages-vless \n \n https://github.com/bia-pain-bache/BPB-Worker-Panel \n \n \n https://github.com/jhao104/proxy_pool \n https://github.com/dongyubin/Free-AppleId-Serve \n https://github.com/yebekhe/TVC \n https://github.com/wzdnzd/aggregator \n https://github.com/barry-far/V2ray-Configs \n https://github.com/Cry1ngMan/1 \n https://freevpn2025.github.io \n https://clash-meta.github.io \n https://github.com/mihomo-party-org/mihomo-party \n \n https://mihomoparty.github.io \n \n \n https://free-ss.site \n https://www.ssrtool.com \n \n https://ssrtool.us \n \n \n https://v2rayse.com \n \n https://www.cfmem.com \n https://github.com/w1770946466/Auto_proxy \n https://github.com/mahdibland/V2RayAggregator \n https://github.com/peasoft/NoMoreWalls \n \n \n \n 订阅转换器 \n \n https://github.com/CareyWang/sub-web \n https://github.com/tindy2013/subconverter \n https://github.com/lasoychina/v2ray_booking \n https://github.com/Peng-YM/Sub-Store \n \n \n https://subcon.dlj.tf \n https://sub-web.wcc.best \n https://api.nameless13.com \n https://agwa.page \n https://acl4ssr.netlify.app \n https://github.com/acl4ssr-sub/acl4ssr-sub.github.io \n \n https://acl4ssr-sub.github.io \n \n \n https://github.com/youshandefeiyang/sub-web-modify \n https://github.com/tindy2013/subconverter \n \n https://github.com/CareyWang/sub-web \n https://subcon.dlj.tf \n \n \n https://id9.cc \n https://sub.weleven11.com \n https://bianyuan.xyz \n https://sub-web.qingsay.com \n https://web.api.ytoo-163cdn.com \n https://v2tun.vercel.app \n https://sub.suda.cat \n https://oioio.cloud \n https://sub.hxlm.org \n https://ytoo.vercel.app \n https://ts.ek12.live \n https://agwa.page \n https://sublink.dev \n https://github.com/nitezs/sub2sing-box \n \n \n https://github.com/Sansui233/proxypool \n \n 其他 \n \n https://github.com/hugetiny/awesome-vpn \n https://github.com/topics/fanqiang \n https://github.com/Anankke/SSPanel-Uim \n \n \n https://github.com/ValdikSS/GoodbyeDPI \n https://github.com/txthinking/brook \n https://github.com/trojan-gfw/trojan \n https://github.com/atrandys/trojan \n https://github.com/p4gefau1t/trojan-go \n https://github.com/NetchX/Netch \n https://github.com/TelegramMessenger/MTProxy \n \n https://github.com/9seconds/mtg \n https://github.com/whunt1/onekeymakemtg \n https://github.com/seriyps/mtproto_proxy \n https://github.com/alexbers/mtprotoproxy \n \n \n https://github.com/Dreamacro/clash \n \n https://github.com/MetaCubeX \n https://github.com/Fndroid/clash_for_windows_pkg \n Clash for Windows 配置教程 \n https://github.com/Jrohy/cfw-updater \n https://github.com/zzzgydi/clash-verge \n https://github.com/keiko233/clash-nyanpasu \n https://github.com/clash-verge-rev/clash-verge-rev \n https://github.com/Z-Siqi/Clash-for-Windows_Chinese \n https://github.com/Loyalsoldier/clash-rules \n https://github.com/Watfaq/clash-rs \n \n \n https://github.com/sxueck/lvory \n https://github.com/tuic-protocol/tuic \n https://github.com/Itsusinn/tuic \n https://github.com/EAimTY/tuic \n https://github.com/juicity/juicity \n https://github.com/apernet/hysteria \n \n https://github.com/emptysuns/Hi_Hysteria \n \n \n https://github.com/MetaCubeX/mihomo \n \n https://github.com/ModuleList/akashaProxy \n \n \n https://github.com/eycorsican/leaf \n https://github.com/YtFlow/Maple \n https://github.com/topics/traffic \n https://github.com/topics/proxifier \n https://github.com/XX-net/XX-Net \n https://github.com/go-gost/gost \n https://github.com/spongebob888/shadowquic \n https://github.com/JimmyHuang454/JLS \n \n https://github.com/spongebob888/rustls-jls \n https://github.com/spongebob888/quinn-jls \n \n \n 跨平台的设置代理客户端  https://www.proxifier.com \n \n L6Z8A-XY2J4-BTZ3P-ZZ7DF-A2Q9C （Portable Edition） \n 5EZ8G-C3WL5-B56YG-SCXM9-6QZAP （Standard Edition） \n P427L-9Y552-5433E-8DSR3-58Z68 （MAC） \n \n \n https://www.yogadns.com \n https://github.com/mellow-io/mellow \n SocksCap64 HOOK了Windows Sockets API  https://www.sockscap64.com/sockscap64-official-homepage-chinese \n https://github.com/apify/proxy-chain \n https://github.com/klzgrad/naiveproxy \n https://github.com/gwuhaolin/lightsocks \n 端口转发  https://github.com/crabkun/switcher \n https://github.com/getlantern/lantern \n https://m.qq.com/edu/index.html \n https://github.com/ClashDotNetFramework \n \n Clash.NET 食用教程 \n \n \n https://github.com/ginuerzh/gost \n Privoxy  https://sourceforge.net/projects/ijbswa \n \n https://www.privoxy.org \n https://www.silvester.org.uk/privoxy \n \n \n https://github.com/ssrlive/socks-hub \n https://github.com/3proxy/3proxy \n https://gitlab.com/openconnect/ocserv \n 洋葱浏览器  https://github.com/torproject \n https://github.com/haad/proxychains \n https://github.com/shikanon/socks5proxy \n https://github.com/esrrhs/spp \n https://github.com/esrrhs/pingtunnel \n 星云  https://github.com/slackhq/nebula \n https://gitlab.com/accessable-net/naiveproxy \n \n https://zelikk.blogspot.com \n \n \n \n \n https://github.com/ValdikSS/GoodbyeDPI \n https://github.com/kubero-dev/ladder \n https://www.opera.com/zh-cn/features/free-vpn \n https://github.com/Hackl0us/SS-Rule-Snippet \n \n OpenVPN/IPsec/SSLVPN/L2TP/PPTP/IKEv2/Tinc/MeshBird/P2P VPN \n \n https://github.com/OpenVPN \n \n https://openvpn.net \n UI  https://github.com/AirVPN/Eddie \n https://github.com/flant/ovpn-admin \n https://github.com/adamwalach/openvpn-web-ui \n \n \n OpenVPN-转载 \n 如何在 Ubuntu 16.04 上设置 OpenVPN 服务器 \n https://github.com/angristan \n \n \n https://github.com/hwdsl2/setup-ipsec-vpn \n https://github.com/xelerance/openswan \n https://github.com/libreswan/libreswan \n https://github.com/xelerance/xl2tpd \n https://sourceforge.net/projects/vtun \n \n https://github.com/jedisct1/vtun \n \n \n https://github.com/mullvad \n https://github.com/ProtonVPN \n https://github.com/amnezia-vpn/amnezia-client \n https://github.com/ShadowsocksR-Live/overtls \n Tinc VPN  https://github.com/gsliepen/tinc \n \n https://gitlab.com/gsliepen/tinc \n 使用 Tinc VPN 实现远程办公 \n 配置 Tinc VPN \n \n \n \n \n 树莓派  https://github.com/pivpn/pivpn \n \n WireGuard \n \n https://github.com/WireGuard \n \n https://www.wireguard.com \n https://www.wintun.net \n https://github.com/wiresock/ndisapi \n \n https://www.ntkernel.com/windows-packet-filter \n \n \n https://github.com/seladb/PcapPlusPlus \n \n \n Web UI  https://github.com/WeeJeWel/wg-easy \n https://github.com/TunSafe \n \n https://tunsafe.com \n \n \n https://github.com/firezone/firezone \n https://github.com/teddysun/across \n 在 Ubuntu 上设置 WireGuard VPN \n WireGuard一键安装脚本 \n https://github.com/its0x08/wg-install \n https://github.com/wgredlong/WireGuard \n https://github.com/hongwenjun/vps_setup \n https://github.com/trailofbits/algo \n https://github.com/StreisandEffect/streisand \n https://github.com/brittson/wireguard_config_maker \n https://github.com/netbirdio/netbird \n \n \n https://www.wireguardconfig.com \n \n shadowsocks \n \n https://github.com/shadowsocks \n https://github.com/shadowsocksrr \n https://github.com/ShadowsocksR-Live/shadowsocksr-native/wiki \n https://github.com/zhaoweih/Shadowsocks-Tutorial \n https://github.com/Jigsaw-Code \n https://github.com/go-ignite \n \n \n https://api.crhnode.top/subscribe/35394/8AkXSADklmY \n https://viencoding.com/ss-ssr-share \n https://github.com/Shadowsocks-NET \n https://github.com/deezertidal/shadowrocket-rules \n https://github.com/Johnshall/Shadowrocket-ADBlock-Rules-Forever \n \n v2ray \n \n https://github.com/v2fly \n \n https://github.com/v2fly/fhs-install-v2ray \n https://github.com/v2ray \n https://v2raydocs.web.illinois.edu \n \n \n https://github.com/XTLS/Xray-core \n https://github.com/SagerNet/v2ray-core \n \n https://github.com/chika0801/sing-box-examples \n https://github.com/juewuy/ShellCrash \n https://github.com/KaringX/karing \n https://github.com/MatsuriDayo/NekoBoxForAndroid \n \n \n https://github.com/Qv2ray \n https://github.com/MatsuriDayo/nekoray \n https://github.com/zizifn/edgetunnel \n android  https://github.com/2dust/v2rayNG \n https://github.com/XTLS/AnXray \n https://github.com/getsurfboard/surfboard \n https://github.com/hiddify/hiddify-next \n https://github.com/xchacha20-poly1305/husi \n Windows  https://github.com/2dust/v2rayN \n https://github.com/vrnobody/V2RayGCon \n https://github.com/bclswl0827/v2ray-heroku \n MAC  https://github.com/yanue/V2rayU \n https://github.com/Cenmrev/V2RayX \n Linux  https://github.com/jiangxufeng/v2rayL \n https://github.com/v2rayA \n https://github.com/daeuniverse/dae \n OpenWrt  https://github.com/kuoruan/openwrt-v2ray \n \n \n https://github.com/ToutyRater/v2ray-guide \n KubeSail免费无限制容器1核512MB內存搭建V2ray科学上网 \n v2ray-tools \n v2ray教程 \n V2Ray使用帮助  https://v2sx.github.io/Help \n https://github.com/mack-a/v2ray-agent \n https://github.com/233boy/v2ray/tree/master \n https://github.com/flyzy2005/ss-fly/tree/master \n https://github.com/KiriKira/vTemplate \n https://github.com/ToutyRater \n \n https://toutyrater.github.io \n \n \n https://intmainreturn0.com/v2ray-config-gen \n https://github.com/wulabing/V2Ray_ws-tls_bash_onekey \n https://github.com/Jrohy/multi-v2ray \n https://github.com/FunctionClub/V2ray.Fun \n https://github.com/sprov065/v2-ui \n https://github.com/pengchujin/v2rayDocker \n https://github.com/leitbogioro/v2ray.fun \n https://github.com/crazypeace/V2ray_VLESS_WebSocket_TLS_CaddyV2 \n https://tools.sprov.xyz \n 客户端工具大全  https://github.com/V2Server/V2Ray \n \n https://github.com/v2sx/V2Ray \n https://tlanyan.me/v2ray-clients-download \n \n \n https://github.com/i5g5vip/winXray-v3.6 \n https://github.com/pitech007/v2ray \n https://github.com/crazypeace/V2ray_VLESS_WebSocket_TLS_CaddyV2 \n https://github.com/hiifeng/V2ray-for-Doprax \n PAC \n \n https://github.com/topics/gfw \n https://github.com/topics/gfwlist \n https://github.com/topics/chinalist \n https://github.com/search?q=gfwlist2pac \n https://github.com/topics/anticensorship \n https://github.com/topics/censorship \n \n \n https://github.com/gfwlist \n https://github.com/JinnLynn/genpac \n https://github.com/lbp0200/mono_pac \n https://github.com/Loyalsoldier/v2ray-rules-dat \n https://github.com/Loukky/gfwlist-by-loukky \n https://github.com/cdlaimin/gfwlist2pac \n https://github.com/petronny/gfwlist2pac \n https://github.com/ACL4SSR/ACL4SSR \n https://github.com/Dreamacro/maxmind-geoip \n https://github.com/clowwindy/gfwlist2pac \n https://github.com/soffchen/sing-geosite \n \n \n https://github.com/StevenBlack/hosts \n https://github.com/Kisesy/gscan_quic \n https://github.com/googlehosts \n \n 谷歌翻译出现了“远程服务器没有响应”问题 \n Chrome谷歌浏览器翻译功能失效解决办法！ \n 谷歌翻译不能用的解决方案 https://translate.amz.wang translate.googleapis.com\n \n \n \n \n https://github.com/Ponderfly/GoogleTranslateIpCheck \n https://github.com/GoodCoder666/GoogleTranslate_IPFinder \n \n",createdTime:1761814324e3},{title:"Windows",frontmatter:{description:"小米笔记本Pro黑苹果Win10双系统\n恢复Win10任务菜单 https://github.com/valinet/ExplorerPatcher\n手机运行Win10 https://github.com/edk2-porting\nhttps://github.com/WOA-Project\n绕过Windows11硬件限制 https://github.com/builtbybel/Flyby11\nWindows安装Android应用 https://github.com/Paving-Base/APK-Installer\nDPI https://github.com/bol-van/zapret\nhttps://github.com/ValdikSS/GoodbyeDPI\n应用商城 https://github.com/opengapps/opengapps\n自动点击 https://github.com/ahkscript/awesome-AutoHotkey\n    https://github.com/AutoHotkey/AutoHotkey\n    https://github.com/xypha/AHK-v2-scripts",meta:[{name:"twitter:title",content:"Windows"},{name:"twitter:description",content:"小米笔记本Pro黑苹果Win10双系统\n恢复Win10任务菜单 https://github.com/valinet/ExplorerPatcher\n手机运行Win10 https://github.com/edk2-porting\nhttps://github.com/WOA-Project\n绕过Windows11硬件限制 https://github.com/builtbybel/Flyby11\nWindows安装Android应用 https://github.com/Paving-Base/APK-Installer\nDPI https://github.com/bol-van/zapret\nhttps://github.com/ValdikSS/GoodbyeDPI\n应用商城 https://github.com/opengapps/opengapps\n自动点击 https://github.com/ahkscript/awesome-AutoHotkey\n    https://github.com/AutoHotkey/AutoHotkey\n    https://github.com/xypha/AHK-v2-scripts"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/Windows.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Windows"},{property:"og:description",content:"小米笔记本Pro黑苹果Win10双系统\n恢复Win10任务菜单 https://github.com/valinet/ExplorerPatcher\n手机运行Win10 https://github.com/edk2-porting\nhttps://github.com/WOA-Project\n绕过Windows11硬件限制 https://github.com/builtbybel/Flyby11\nWindows安装Android应用 https://github.com/Paving-Base/APK-Installer\nDPI https://github.com/bol-van/zapret\nhttps://github.com/ValdikSS/GoodbyeDPI\n应用商城 https://github.com/opengapps/opengapps\n自动点击 https://github.com/ahkscript/awesome-AutoHotkey\n    https://github.com/AutoHotkey/AutoHotkey\n    https://github.com/xypha/AHK-v2-scripts"},{property:"og:url",content:"https://bajins.com/System/Windows.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Windows"},{itemprop:"description",content:"小米笔记本Pro黑苹果Win10双系统\n恢复Win10任务菜单 https://github.com/valinet/ExplorerPatcher\n手机运行Win10 https://github.com/edk2-porting\nhttps://github.com/WOA-Project\n绕过Windows11硬件限制 https://github.com/builtbybel/Flyby11\nWindows安装Android应用 https://github.com/Paving-Base/APK-Installer\nDPI https://github.com/bol-van/zapret\nhttps://github.com/ValdikSS/GoodbyeDPI\n应用商城 https://github.com/opengapps/opengapps\n自动点击 https://github.com/ahkscript/awesome-AutoHotkey\n    https://github.com/AutoHotkey/AutoHotkey\n    https://github.com/xypha/AHK-v2-scripts"}]},regularPath:"/System/Windows.html",relativePath:"System/Windows.md",key:"v-1b698353",path:"/System/Windows.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"Windows优化",slug:"windows优化"},{level:2,title:"MSDN",slug:"msdn"},{level:2,title:"绿色精简",slug:"绿色精简"},{level:2,title:"WinPE",slug:"winpe"},{level:2,title:"MS激活",slug:"ms激活"},{level:3,title:"KMS",slug:"kms"},{level:3,title:"KEY",slug:"key"},{level:3,title:"家庭升专业",slug:"家庭升专业"},{level:2,title:"快捷键",slug:"快捷键"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' Windows \n Flag Windows优化 MSDN 绿色精简 WinPE MS激活 KMS KEY 家庭升专业 快捷键 \n Flag \n \n 小米笔记本Pro黑苹果Win10双系统 \n 恢复Win10任务菜单  https://github.com/valinet/ExplorerPatcher \n 手机运行Win10  https://github.com/edk2-porting \n https://github.com/WOA-Project \n 绕过Windows11硬件限制  https://github.com/builtbybel/Flyby11 \n Windows安装Android应用  https://github.com/Paving-Base/APK-Installer \n DPI  https://github.com/bol-van/zapret \n https://github.com/ValdikSS/GoodbyeDPI \n 应用商城  https://github.com/opengapps/opengapps \n 自动点击  https://github.com/ahkscript/awesome-AutoHotkey \n \n https://github.com/AutoHotkey/AutoHotkey \n https://github.com/xypha/AHK-v2-scripts \n \n \n \n \n 打开后，随便点一个进程右键，查看-查看进程热键-再右键-显示所有进程热键 \n \n \n 当分区后应该设置主分区为活动分区（选中该主分区右键选择激活分区） \n \n \n 关闭Windows的下载目录的自动分组功能 \n 比较 Windows 10 的不同版本 \n Windows 10 版本的版本信息 \n https://learn.microsoft.com/zh-cn/windows/whats-new \n Windows 10 更新历史记录 \n Windows 生命周期说明书 \n 将 MBR 分区转换为 GPT \n Window环境下的内网NTP时间同步配置 \n 局域网中主机间的时间同步 \n Windows云服务器如何配置多用户登录？（Windows 2012） \n https://github.com/stascorp/rdpwrap \n \n Windows远程桌面单/多用户同时登录 \n \n \n 英特尔® 显卡控制面板从 Microsoft* Store 中下架 \n https://www.intel.cn/content/www/cn/zh/download-center/home.html \n Win11 下蓝牙设备突然消失，不能正常使用解决方法 \n \n \n https://sdi-tool.org \n https://www.iobit.com/en/driver-booster.php \n 网络测试  https://github.com/microsoft/ctsTraffic \n https://github.com/microsoft/ntttcp \n https://github.com/microsoft/latte \n \n 生成电池报告 \n \n https://www.nirsoft.net/utils/battery_information_view.html \n https://batterycare.net/en/download.html \n https://www.cpuid.com/softwares/hwmonitor.html \n https://www.aida64.com/downloads \n \n https://www.52pojie.cn/thread-2024502-1-1.html \n \n \n https://www.passmark.com/products/batmon \n https://www.ccleaner.com/zh-cn/speccy \n https://batterybarpro.com \n Save Battery \n https://github.com/medhachaitanya/Pure-Battery-Analytics \n \n :: DESIGN CAPACITY（设计容量） \n :: FULL CHARGE CAPACITY（当前满电容量） \n :: CYCLE COUNT（循环次数，部分机型可能不显示） \n :: 健康度计算公式：(当前满电容量 ÷ 设计容量) × 100% \n powercfg   /batteryreport   /output   "Desktop\\battery-report.html" \n Windows优化 \n \n Search · install_wim_tweak \n https://github.com/search?q=Optimize-Windows \n \n \n Dism++  https://github.com/Chuyu-Team \n https://ameliorated.io \n \n https://github.com/jointhearkanoid/playbook \n https://github.com/redress-server/playbook \n https://github.com/Atlas-OS/Atlas \n \n \n https://github.com/gordonbay/Windows-On-Reins \n https://github.com/r33int/Windows10-Postinstall \n https://github.com/memstechtips/UnattendedWinstall \n https://github.com/semazurek/ET-Optimizer \n https://github.com/ionuttbara/melody_windows \n https://github.com/simeononsecurity/Windows-Optimize-Debloat \n https://github.com/simeononsecurity/Windows-Optimize-Harden-Debloat \n https://github.com/rahilpathan/Win10Boost \n https://bogdan-patraucean.github.io/about/wintoys \n https://github.com/rayenghanmi/RyTuneX \n https://github.com/5cover/WinClean \n https://github.com/memstechtips/Winhance \n https://github.com/tranht17/WinTune \n 绕过WindowsDefender  https://github.com/es3n1n/defendnot \n \n https://gitee.com/tajang/no-defender \n \n \n 系统调整  https://github.com/ChrisTitusTech/winutil \n 卸载自带应用  https://www.thewindowsclub.com/10appsmanager-windows-10 \n https://github.com/ElPumpo/Win10Clean \n https://github.com/L33Tech/Windows10Tools \n https://github.com/myrtus0x0/Pastebin-Scraping-Results \n https://github.com/simeononsecurity/SAPS \n https://github.com/kyau/win10tweak \n https://github.com/wangzy12306/win10 \n https://github.com/Raphire/Win11Debloat \n https://github.com/builtbybel/Winpilot \n \n https://github.com/TheBobPony/MSEdgeTweaker \n https://github.com/ConditionalException/Windows10Privacy \n https://github.com/Sycnex/Windows10Debloater \n \n \n https://github.com/builtbybel/debotnet \n https://github.com/Daksh777/windows10-debloat \n https://github.com/SucklessWindows/SucklessWindows \n https://github.com/DirtCaps/CapsTweakerSystem \n https://github.com/kampusbiner/windefenderremoval \n https://github.com/pluswait/workPCT \n \n 绕过 Windows 11 24H2 的兼容性检查程序 \n :: 在运行 setup.exe 之前执行 \n reg .exe delete  "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\CompatMarkers"   /f   2 >NUL \n reg .exe delete  "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Shared"   /f   2 >NUL \n reg .exe delete  "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\TargetVersionUpgradeExperienceIndicators"   /f   2 >NUL \n reg .exe add  "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\HwReqChk"   /f   /v  HwReqChkVars  /t  REG_MULTI_SZ  /s  ,  /d   "SQ_SecureBootCapable=TRUE,SQ_SecureBootEnabled=TRUE,SQ_TpmVersion=2,SQ_RamMB=8192," \n reg .exe add  "HKLM\\SYSTEM\\Setup\\MoSetup"   /f   /v  AllowUpgradesWithUnsupportedTPMOrCPU  /t  REG_DWORD  /d   1 \n \n Windows11右键菜单 \n :: 恢复Win10右键菜单 \n reg  add HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\\InprocServer32  /f   /ve \n :: 恢复Win11右键菜单 \n reg .exe delete  "HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\\InprocServer32"   /va   /f \n :: 在任务管理器中，重启资源管理器 \n taskkill   /f   /im  explorer.exe  &   start  explorer.exe \n \n \n Windows 11 Classic Context menu \n \n 软件配置注册表 \n \n 计算机\\HKEY_CLASSES_ROOT\\Local Settings\\Software\\Microsoft\\Windows\\Shell\\MuiCache \n 计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Compatibility Assistant\\Store \n 计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Search\\JumplistData \n 计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FeatureUsage \n 计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders \n 计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders  用户目录 \n 计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Classes\\Local Settings\\Software\\Microsoft\\Windows\\Shell\\MuiCache \n \n Windows睡死无法唤醒 \n \n 控制面板  ->  所有控制面板项  ->  电源选项  ->  更改计划设置  ->  更改高级电源设置(C)  ->  硬盘  ->  在此时间后关闭硬盘  -> 全部设置为 0 \n \n \n 计算机管理(本地)  ->  设备管理器  ->  驱动上右键属性  ->  电源管理  ->  允许计算机关闭此设备以节约电源(A)  -> 取消勾选 \n \n \n Windows徽标键 + P \n \n \n Windows 徽标键 + Ctrl + Shift + B \n \n \n 解决 Windows 计算机无法从挂起或休眠模式唤醒或恢复而不得不重新开机的问题步骤 \n win11睡眠后无法唤醒 \n \n Wifi频繁断线 \n \n 打开 设备管理器  -> 点开 网络适配器  -> 选中网卡 -> 鼠标右键打开菜单 -> 点击 属性  -> 点击 电源管理  ->\n取消勾选 允许计算机关闭此设备以节约电源 \n \n \n 点击 网络和共享中心  ->  更改适配器设置  -> 双击 WLAN  -> 点击 无线属性  -> 勾选 即使网络未广播其名称也连接 \n \n MSTSC删除记录 \n \n Windows键 +  R 打开 运行  输入 regedit  找到  HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Default \n 进入  %USERPROFILE%\\Documents  (或 %HOMEPATH%\\Documents ) 删除 Default.rdp 文件（默认隐藏） \n \n 此电脑中的7个文件夹 \n \n win10删除此电脑中六个文件夹：按 Win  +  r 输入 regedit 进入注册表编辑器，输入并删除其中带 {} 的\n 计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace \n \n :: 删除我的电脑"视频"文件夹 \n REG  DELETE  "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\{f86fa3ab-70d2-4fc7-9c99-fcbf05467f3a}"   /f \n :: 删除我的电脑"文档"文件夹 \n REG  DELETE  "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\{d3162b92-9365-467a-956b-92703aca08af}"   /f \n :: 删除我的电脑"桌面"文件夹 \n REG  DELETE  "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\{B4BFCC3A-DB2C-424C-B029-7FE99A87C641}"   /f \n :: 删除我的电脑"音乐"文件夹 \n REG  DELETE  "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\{3dfdf296-dbec-4fb4-81d1-6a3438bcf4de}"   /f \n :: 删除我的电脑"下载"文件夹 \n REG  DELETE  "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\{088e3905-0323-4b02-9826-5d99428e115f}"   /f \n :: 删除我的电脑"图片"文件夹 \n REG  DELETE  "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}"   /f \n :: 删除我的电脑"3D对象"文件夹 \n REG  DELETE  "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}"   /f \n \n \n win10简单脚本一步卸载Cortana \n \n 系统相关 \n \n 在Windows 10 10586版本手动挂载WIM文件以修复DISM源的方法 \n 清理 WinSxS 文件夹 \n \n Dism.exe /online /Cleanup-Image /StartComponentCleanup /ResetBase;Dism.exe /online /Cleanup-Image /SPSuperseded  清理 \n \n \n Windows 10 DISM Command-Line 选项 \n \n \n 检查映像是否完整： DISM.exe /Online /Cleanup-image /Scanhealth \n 完成后再修复映像： DISM.exe /Online /Cleanup-image /Checkhealth \n 然后再修复系统： DISM.exe /Online /Cleanup-image /Restorehealth \n 最后检查系统是否修复： sfc /scannow \n 关闭休眠： powercfg -h off \n 启用休眠： powercfg -h on \n 关闭虚拟内存： HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\PagingFiles \n 查看预留存储启用状态： Get-WindowsReservedStorageState \n 禁用预留存储： Set-WindowsReservedStorageState -State disabled \n 启用预留存储： Set-WindowsReservedStorageState -State enable \n MSDN \n \n 搜索更新补丁下载  http://www.catalog.update.microsoft.com \n https://www.microsoft.com/zh-cn/software-download \n http://msdn.itellyou.cn \n https://www.iruanmi.com/msdn \n \n https://blogs.iapplee.com/msdn \n \n \n http://www.imsdn.cn \n https://github.com/pbatard/Fido \n https://uup.rg-adguard.net \n \n https://files.rg-adguard.net \n https://store.rg-adguard.net \n \n \n https://github.com/uup-dump \n \n https://uupdump.net \n https://www.uupdump.cn \n \n \n https://msdn.sjjzm.com \n https://github.com/massgravel/Microsoft-Activation-Scripts \n \n https://massgrave.dev/genuine-installation-media.html \n https://activated.win \n https://github.com/gravesoft/msdl \n \n https://msdl.gravesoft.dev \n 绿色精简 \n \n MSMG Toolkit  https://msmgtoolkit.in \n NTLite  https://www.ntlite.com \n https://github.com/ntdevlabs/tiny11builder \n \n \n WINOS  https://www.winos.me \n 绿色系统  http://lvsexitong.com \n 网吧系统  http://down.lansedongli.com \n twm000-导航页被定制可修改 \n Y-OS工作室-导航页被定制可修改 \n 十二星座-导航页被定制可修改 \n win7  https://www.newxitong.com \n 网吧无盘  http://www.wupanbao.com \n https://www.sysmini.com \n WinPE \n \n Windows PE (WinPE) \n Windows USB/DVD 下载工具 \n \n \n 微PE  http://www.wepe.com.cn \n USBOS  https://www.puresys.net/pe \n 优启时代  https://www.uqiba.com \n 优启通EasyU  https://www.itsk.com/forum/10?sort=2 \n https://github.com/ventoy/Ventoy \n http://wintool.cc \n https://github.com/ldpreload/BlackLotus \n https://github.com/VirtualHotBar/HotPEToolBox \n https://github.com/EdgelessPE/Edgeless \n https://www.firpe.cn \n https://www.cmdpe.com \n https://www.sysceo.com/usm \n http://www.bfgho.com \n https://yukaidi.top \n https://www.hirensbootcd.org \n \n 密码重置 \n \n https://github.com/search?q=chntpw \n http://pogostick.net/~pnh/ntpasswd \n \n \n ch＝change ；nt＝window NT；pw＝password； \n \n \n NTPWEdit  http://cdslow.org.ru/en/ntpwedit \n \n https://github.com/linuixtux/NTPWEdit-version-0.7-GPL \n https://github.com/jmclaren7/ntpwedit \n https://github.com/Zerglrisk/NTPWEdit-Mirror \n \n \n Windows Login Unlocker \n https://sourceforge.net/projects/ophcrack \n https://www.lazesoft.com/forgot-windows-admin-password-recovery-freeware.html \n PCUnlocker  https://www.top-password.com \n PassFab 4WinKey \n Passper WinSenior \n https://sourceforge.net/projects/ubcd \n \n \n Windows10登陆密码破解 \n Win10 开机密码破解 \n MS激活 \n \n Windows 10 Digital Activation \n \n https://www.solidfiles.com/folder/bd7165a0d4/ \n \n \n 数字权利  https://github.com/TGSAN/CMWTAT_Digital_Edition \n \n https://tgsan.github.io/CMWTAT_Digital_Edition \n \n \n https://github.com/zbezj/HEU_KMS_Activator \n \n https://github.com/1457384613gh/HEU_KMS_Activator.iso \n \n \n ohook  https://github.com/asdcorp \n https://github.com/dadorner-msft/activationws \n https://archive.org/details/xp_activate32_202305 \n https://github.com/abbodi1406/WHD \n https://github.com/abdullah-erturk/pmas \n KMS \n \n https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys \n https://github.com/search?q=数字权利 \n \n \n https://github.com/abbodi1406/KMS_VL_ALL_AIO \n https://github.com/Wind4/vlmcsd \n https://github.com/Mr-xn/kms-server-deploy \n Windows激活之路 \n https://github.com/netnr/kms \n https://github.com/ikxin/kms-tools \n https://official-kmspico.com \n https://www.coolhub.top/tech-articles/kms_list.html \n https://forums.mydigitallife.net/threads/microsoft-toolkit-continued.82782 \n https://msfree.su/index.php?forums/32/ \n \n \n MicroKMS 神龙版 \n KMS激活Windows/Office口袋指南 \n \n https://github.com/kkkgo \n \n \n kms.mogeko.me \n \n https://github.com/Mogeko \n \n \n \n \n https://v0v.bid \n \n \n https://kms.cangshui.net \n https://kms.loli.beer \n https://www.moerats.com/kms \n \n https://github.com/Tsuk1ko \n \n \n https://www.ghpym.com/kms.html \n https://github.com/EDragon007/EDragonKMS \n KEY \n \n 所谓的win10数字权利激活，是一种win10授权方法。该激活方法会记录你的电脑硬件信息，并保存到微软的服务器，\n无需什么激活密钥。这次激活了，下次重装，联网后就能自动激活，只要你不换电脑主板和cpu，就是永久激活了。 \n \n \n https://jihuo.ma/tool \n http://www.aihao.cc \n https://github.com/FHWWC/KeyCheck \n \n https://pkeytool.com/ShareKeys \n \n \n https://jike.info/category/16/账号密钥 \n 密钥检测的小工具  https://github.com/FHWWC/KeyCheck \n PIDKey Lite  https://msfree.su \n https://webact.sjjzm.com \n SimplePidX \n https://github.com/Superfly-Inc/ShowKeyPlus \n https://khoatoantin.com/cidms（账号：trogiup24h 密码：PHO） \n https://www.nirsoft.net/utils/product_cd_key_viewer.html \n 拨打免费电话激活Windows、Office \n https://getconfirmationid.com \n \n 网页激活 \n \n \n XP密钥生成  https://github.com/Neo-Desktop/WindowsXPKg \n \n \n 在PowerShell（也可在CMD）中输入命令运行 slmgr.vbs /dti ，按 Ctrl  +  C 复制，\n并粘贴到在线获取确认ID网站： http://webact.185.hk \n \n \n 使用命令有两种方式：第一种：按 Win  +  x  +  a 进入PowerShell（也可在CMD中）输入命令运行；\n第二种：按 Win  +  r 输入命令运行，如 slmgr.vbs /dti ，此方式必须有 .vbs 后缀，（推荐使用第一种方式） \n \n 错误代码 \n \n 0xC004C008  是零售版可以电话激活、网页激活 \n 0xC004C020  是批量版可以电话激活、运气好可以网页激活 \n 0xC004C060  已失效 \n 0xC004C003  已失效 \n 0x80072EE2  因网络阻塞导致错误,稍等10分钟再重试 \n \n Windows命令 \n \n 在CMD中输入 slmgr 或 slmgr.exe 即可查看所有命令 \n \n \n systeminfo  系统信息 \n slui 4  调出电话激活窗口 \n slmgr.vbs /ipk 密钥  安装产品密钥 \n slmgr.vbs /upk  卸载密钥 \n slmgr.vbs /ato  激活密钥 \n slmgr.vbs /dti  显示安装ID \n slmgr.vbs /atp 确认ID  输入确认ID（注意这里的ID没有 - 符号） \n slmgr.vbs /dlv  显示详细的许可证信息 \n slmgr.vbs /xpr  当前许可证状态的截止日期 \n slmgr.vbs /dli [激活 ID | All]  显示许可证信息（默认：当前许可证） \n slmgr.vbs /dlv [激活 ID | All]  显示详细的许可证信息 \n slmgr.vbs /cpky  从注册表中清除产品密钥（阻止泄露引起的攻击） \n slmgr.vbs /ilc  许可证文件 安装许可证 \n slmgr.vbs /rilc  重新安装系统许可证文件 \n slmgr.vbs /rearm  重置计算机的授权状态 （去除水印） \n slmgr.vbs /skms  设置KMS服务器 \n slmgr.vbs /ckms  清除KMS服务器名和端口号并设为初始状态 \n \n Office命令 \n \n 用于管理 Office 批量激活的工具 \n \n \n 在PowerShell（也可在CMD）中输入命令运行并切换到office安装目录\n cd "C:\\Program Files (x86)\\Microsoft Office\\Office16" ，如果安装的64位去掉 (x86) \n \n \n cscript ospp.vbs /inpkey:密钥  安装产品密钥 \n cscript ospp.vbs /unpkey:密钥最后五位  卸载密钥 \n cscript ospp.vbs /dinstid  显示安装ID \n cscript ospp.vbs /actcid:确认ID  输入确认ID（注意这里的ID没有 - 符号） \n cscript ospp.vbs /act  在线激活 \n cscript ospp.vbs /dstatus  验证激活 \n 家庭升专业 \n \n https://github.com/TheMMC/In-Place_Upgrade_Helper \n \n \n 注意：Windows10/11家庭版升级Windows10/11专业版的密钥不是激活密钥 \n \n \n 升级：设置 -> 更新和安全 -> 激活 -> 更改产品秘钥，断网后，填入 下方的升级密钥，重启 \n \n 4N7JM-CV98F-WY9XX-9D8CF-369TT\nFMPND-XFTD4-67FJC-HDR8C-3YH26\n4N894-WMB2D-PRGHC-BVYW8-CPQGT\nVK7JG-NPHTM-C97JM-9MPGT-3V66T\nW269N-WFGWX-YVC9B-4J6C9-T83GX\n236TW-X778T-8MV9F-937GT-QVKBB\nWMN7B-Y7TKF-Y49QB-TMQ8T-GMT6T\nFJHWT-KDGHY-K2384-93CT7-323RC\nMH37W-N47XK-V7XM9-C7227-GCQG9\nNYW94-47Q7H-7X9TT-W7TXD-JTYPM\nNJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87\nJ71T3-3GCPG-9GVWT-CH2XR-GMRJM\n6P99N-YF42M-TPGBG-9VMJP-YKHCF\n \n \n 命令转换版本 \n \n :: 查看可升级版本 \n dism   /online  /get-targeteditions \n dism   /online  /set-edition:Professional  /productkey : 升级密钥  /accepteula \n \n \n 联网激活：以管理员打开CMD执行以下命令 \n \n slmgr .vbs  /upk \n slmgr   /ipk  激活密钥 \n slmgr   /skms  zh.us.to \n ::slmgr /skms kms.03k.org \n slmgr   /ato \n 快捷键 \n \n Win + A  打开快速设置面板 \n Win + B  快速跳转系统托盘 \n Win + C  打开 Microsoft Teams \n Win + D  快速显示桌面 \n Win + E  打开资源管理器 \n Win + F  一键提交反馈 \n Win + G  启动 Xbox Game Bar \n Win + H  语音听写 \n Win + I  打开设置 \n Win + K  投屏到其他设备 \n Win + L  锁屏 \n Win + M  窗口最小化 \n Win + N  打开通知面板/月历面板 \n Win + P  修改投影模式 \n Win + Q / Win + S  一键搜索 \n Win + R  运行 \n Win + T  查看已打开程序缩略图 \n Win + V  打开云剪贴板 \n Win + W  呼出资讯与兴趣栏 \n Win + X  呼出简易开始菜单 \n Win + Z  打开窗口布局 \n Win + 空格  切换输入法 \n Win + → / ↑ / ← / ↓  窗口排版 \n Win + TAB  虚拟桌面切换 \n Win + Ctrl + D  新建虚拟桌面 \n Win + Prtscn  一键截屏 \n Win + Shift + S  专业屏幕 \n Win + Home  最小化非活动窗口 \n Win + 1~9  切换任务栏左起第1~9个程序 \n Alt + Shift + ← / →  虚拟桌面窗口移动 \n \n',createdTime:1761814324e3},{title:"文件压缩解压",frontmatter:{description:"rar tar zip 7z 是归档容器，里面可以放多个文件、有目录结构，其中 tar本身不带压缩",meta:[{name:"twitter:title",content:"文件压缩解压"},{name:"twitter:description",content:"rar tar zip 7z 是归档容器，里面可以放多个文件、有目录结构，其中 tar本身不带压缩"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B.html"},{property:"og:type",content:"article"},{property:"og:title",content:"文件压缩解压"},{property:"og:description",content:"rar tar zip 7z 是归档容器，里面可以放多个文件、有目录结构，其中 tar本身不带压缩"},{property:"og:url",content:"https://bajins.com/System/%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"文件压缩解压"},{itemprop:"description",content:"rar tar zip 7z 是归档容器，里面可以放多个文件、有目录结构，其中 tar本身不带压缩"}]},regularPath:"/System/%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B.html",relativePath:"System/文件压缩解压.md",key:"v-db49abd0",path:"/System/%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"tar",slug:"tar"},{level:3,title:"7zip",slug:"_7zip"},{level:2,title:"Deflate",slug:"deflate"},{level:3,title:"zip",slug:"zip"},{level:3,title:"unzip",slug:"unzip"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" 文件压缩解压 \n Flag tar 7zip Deflate zip unzip \n Flag \n \n rar tar zip 7z 是归档容器，里面可以放多个文件、有目录结构，其中 tar本身不带压缩 \n \n \n rar 带单独的压缩算法（据说类 Deflate），加密算法（AES），有相对完善的压缩过滤器 \n \n \n zip 压缩算法Deflate，因为历史问题被迫成为多算法的加密容器（互不兼容的 AES），压缩比相对不太高，\n不识别文件名的编码，有特殊的带过滤格式 zipx。gz是zip算法的一个GNU实现。 \n \n \n 7-zip 压缩算法 LZMA、LZMA2、ppmd、bzip2，加密算法（AES），有初步的过滤能力 \n \n \n tar 可以和压缩或加密格式串用，tar.gz tar.bzip2 tar.xz tar.lzma 都是常见的压缩格式组合压缩算法方面，\n对常规文件现在 7z 自带的 lzma2 是最佳选择，对多媒体文件，可考虑 rar 和 zipx \n \n \n xz的默认压缩级别是6。7z的默认压缩级别是5，至少在字典大小上相当于xz的压缩级别7，另外7z默认开了多线程，有多核可用的时候表现会好些 \n \n \n xz和7z的默认参数压缩算法都是lzma2（tar能解压7z，7-zip也能解压xz），这个算法出自7-zip作者 Igor Pavlov 。 \n \n \n https://github.com/topics/compressor \n \n \n https://sourceforge.net/projects/getgnuwin32 \n https://sourceforge.net/projects/gnuwin32 \n https://github.com/google/zopfli \n https://www.win-rar.com \n https://github.com/bitcookies/winrar-keygen \n https://github.com/onekey-sec/unblob \n https://github.com/inikep/lzbench \n https://www.gzip.org \n http://compression.great-site.net \n \n https://launchpad.net/pbzip2 \n \n \n https://github.com/wummel/patool \n https://sourceforge.net/projects/littleutils \n \n \n 提取  https://github.com/dtrx-py/dtrx \n tar \n \n tar 是在 Linux 中使用得非常广泛的文档打包格式（保留 unix 风格的文件权限）。它只消耗非常少的CPU以及时间去打包文件，\n但它仅仅只是一个打包工具，并不负责压缩。 \n \n \n 实际使用中，除了要打包之外，往往还需要其他的压缩命令一起出现进行一下压缩，提高空间利用率。 \n \n 参数 \n \n \n 命令类型参数： \n \n -c 或 –create ：建立新的备份文件。 \n -x 或 –extract 或 –get ：从备份文件中还原文件。 \n \n \n \n 压缩方式参数： \n \n -j 或 –bzip2 ：以bz2的算法来压缩或者解压文件。 \n -z 或 –gzip 或 –ungzip ：通过 gzip 指令处理备份文件。 \n \n \n \n 其他常用参数： \n \n -v 或 –verbose ：显示指令执行过程。 \n -C <目的目录> 或 –directory=<目的目录> ：切换到指定的目录。 \n \n \n \n 压缩 \n将目标打包成一个*.tar格式的文件 \n tar   -cvf  名称.tar 目录或文件\n将目标打包成一个*.tgz格式的文件 \n tar   -czvf  名称.tgz 目录或文件\n将目标打包并压缩成一个*.tar.gz格式的文件 \n tar   -czvf  名称.tar.gz 目录或文件\n将目标打包并压缩成一个*.tar.bz2格式的文件 \n tar   -cjvf  名称.tar.bz2 目录或文件\n将打包好的tar文件压缩成一个*.tar.xz格式的文件\t\t\t\t \nxz  -z  名称.tar.xz\n或者一条命令执行 \n tar   -Jcvf  文件名.tar.xz 目录或文件\n将目标打包并压缩成一个*.tar.7z格式的文件 \n tar  cvf - 目录或文件  |  7z a  -si  文件名.tar.7z\n \n \n 注意：在使用 tar 的 --exclude 命令排除打包时，末尾不能加 / 或者路径为绝对路径，否则还是会把排除目录以及其下的文件打包进去。 \n打包的时候我们要排除 tomcat/logs 目录，命令如下： \n tar   -zcvf  tomcat.tar.gz  --exclude = tomcat/logs tomcat\n如果要排除多个目录，增加 --exclude 即可，如下命令排除logs和libs两个目录及文件xiaoshan.txt \n tar   -zcvf  tomcat.tar.gz  --exclude = tomcat/logs  --exclude = tomcat/libs  --exclude = tomcat/xiaoshan.txt tomcat\n \n 解压 \n \n 参数 -C 解压到指定目录下 \n解压一个*.tar的文件包内容到当前目录下 \n tar   -xvf  pakage_name.tar\n解压一个*.tgz的文件包内容到当前目录下\t\t\t\t\t\t\t \n tar   -xzvf  pakage_name.tgz\n解压一个*.tar.gz的压缩包内容到当前目录下 \n tar   -xzvf  pakage_name.tar.gz\n解压一个*.tar.bz2的压缩包内容到当前目录下 \n tar   -xjvf  pakage_name.tar.bz2\ntar.xz压缩包需要先解压为tar格式包 \nxz  -d  pakage_name.tar.xz\n再解开tar格式包到当前目录下 \n tar   -xvf  pakage_name.tar\n或者一条命令执行 \n tar   -Jxvf  文件名.tar.xz\n 7zip \n \n https://github.com/ip7z/7zip \n https://sourceforge.net/projects/sevenzip \n \n https://www.7-zip.org/download.html \n 打开7zip -> 点击菜单栏上的 工具  ->  选项  -> 点击两个 + 号关联所有默认解压方式到当前账户和所有账户 \n \n \n https://microsoft.github.io/VirtualClient/docs/workloads/compression/7zip \n https://github.com/M2Team/NanaZip \n \n https://github.com/mcmilk/7-Zip-zstd \n https://github.com/myfreeer/7z-build-nsis \n \n \n https://github.com/peazip/PeaZip \n \n https://sourceforge.net/projects/peazip \n \n \n https://github.com/nmoinvaz/minizip \n https://www.breezip.com \n \n \n 注意：所有的参数和值之间是没有空格的 \n \n 参数 \n \n a  添加文件或文件夹到压缩包。 \n b  基准 \n d  从存档中删除文件 \n e  从存档中提取文件（不使用目录名） \n h  计算文件的哈希值 \n i  显示有关受支持格式的信息 \n l  列出档案内容 \n rn  重命名存档中的文件 \n t  测试档案的完整性 \n u  更新文件以存档 \n x  解压文件，保留原来的目录结构 \n \n \n -t  指定压缩类型，默认7z。 \n -r  表示递归所有的子文件夹。 \n -mmt[N]  设置CPU线程数 \n -mx=值  设置压缩级别： -mx1 （最快）， -mx9 （最慢，压缩比最高），默认为5。 \n -ao  设置覆盖模式， a 全部覆盖 \n -o  指定解压到的目录 \nCentOS安装7zip \nyum –y  install  p7zip\n解压到当前目录下,不保留原来的目录结构 \n7za e 文件名\n解压到当前目录下,但保留原来的目录结构 \n7za x 文件名\n用7z压缩成tar \n7za a  -ttar  文件名.tar 文件夹\n用7z把tar压缩成gz \n7za a  -tgzip  文件名.tar.gz 文件名.tar\n Deflate \n \n 在1990年左右，Info-ZIP组编写了可移植的，免费开源的实用程序zip和unzip实用程序，使用Deflate进行压缩以及对zip和早期格式进行解压缩 \n \n \n 在90年代初期，gzip格式被开发为Unix compress实用程序的替代，它是从Info-ZIP实用程序中的Deflate代码衍生而来 \n \n \n zlib 是通用的压缩库，提供了一套 in-memory 压缩和解压函数，并能检测解压出来的数据的完整性(integrity)。zlib是从gzip代码改编而来 \n zip \n \n zip 是压缩程序 \n \n 参数 \n \n A  调整可执行的自动解压缩文件。 \n d  从压缩文件内删除指定的文件。 \n D  压缩文件内不建立目录名称。 \n F  尝试修复已损坏的压缩文件。 \n g  将文件压缩后附加在既有的压缩文件之后，而非另行建立新的压缩文件。 \n j  只保存文件名称及其内容，而不存放任何目录名称。 \n m  将文件压缩并加入压缩文件后，删除原始文件，即把文件移到压缩文件中。 \n o  以压缩文件内拥有最新更改时间的文件为准，将压缩文件的更改时间设成和该文件相同。 \n q  不显示指令执行过程。 \n r  递归处理，将指定目录下的所有文件和子目录一并处理。 \n S  包含系统和隐藏文件。 \n v  显示指令执行过程或显示版本信息。 \n <压缩效率> 压缩效率是一个介于 1-9 的数值。 \n \n zip  文件名.zip 文件或目录\n unzip \n \n https://sourceforge.net/projects/infozip \n \n \n unzip是解压程序。 \n \n 参数 \n \n f  更新现有的文件。 \n l  显示压缩文件内所包含的文件。 \n v  执行是时显示详细的信息。 \n C  压缩文件中的文件名称区分大小写。 \n j  不处理压缩文件中原有的目录路径。 \n L  将压缩文件中的全部文件名改为小写。 \n n  解压缩时不要覆盖原有的文件。 \n o  不必先询问用户，unzip 执行后覆盖原有文件。 \n P<密码>  使用 zip 的密码选项。 \n q  执行时不显示任何信息。 \n [.zip 文件]  指定.zip 压缩文件。 \n [文件]  指定要处理.zip 压缩文件中的哪些文件。 \n d<目录>  指定文件解压缩后所要存储的目录。 \n x<文件>  指定不要处理.zip 压缩文件中的哪些文件。 \n \n unzip  文件名.zip\n \n ",createdTime:1761814324e3},{title:"邮箱服务",frontmatter:{description:"https://tourcoder.com/install-postfix-on-centos-7/\nhttps://github.com/denghongcai/forsaken-mail\nhttps://github.com/malaohu/forsaken-mail\nhttps://github.com/flashmob/go-guerrilla\nhttps://github.com/PHPMailer\nhttps://github.com/knadh/listmonk\nhttps://github.com/postalserver/postal\nhttps://github.com/albertito/chasquid\nhttps://github.com/Exim/exim\nhttps://github.com/vdukhovni/postfix\nhttps://github.com/postfixadmin/postfixadmin\nhttps://github.com/mailserver2/mailserver\nhttps://github.com/docker-mailserver/docker-mailserver\nhttps://sendmail.org\nhttps://github.com/marlam/msmtp\nhttps://sourceforge.net/projects/dkim-milter\nhttps://sourceforge.net/projects/opendkim\nhttps://github.com/yesmore/vmail\nhttps://github.com/mail-in-a-box/mailinabox\n测试邮箱\n邮件营销 https://github.com/aaPanel/BillionMail",meta:[{name:"image",content:"https://bajins.com/images/YandexMailDNS.png"},{name:"twitter:title",content:"邮箱服务"},{name:"twitter:description",content:"https://tourcoder.com/install-postfix-on-centos-7/\nhttps://github.com/denghongcai/forsaken-mail\nhttps://github.com/malaohu/forsaken-mail\nhttps://github.com/flashmob/go-guerrilla\nhttps://github.com/PHPMailer\nhttps://github.com/knadh/listmonk\nhttps://github.com/postalserver/postal\nhttps://github.com/albertito/chasquid\nhttps://github.com/Exim/exim\nhttps://github.com/vdukhovni/postfix\nhttps://github.com/postfixadmin/postfixadmin\nhttps://github.com/mailserver2/mailserver\nhttps://github.com/docker-mailserver/docker-mailserver\nhttps://sendmail.org\nhttps://github.com/marlam/msmtp\nhttps://sourceforge.net/projects/dkim-milter\nhttps://sourceforge.net/projects/opendkim\nhttps://github.com/yesmore/vmail\nhttps://github.com/mail-in-a-box/mailinabox\n测试邮箱\n邮件营销 https://github.com/aaPanel/BillionMail"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/YandexMailDNS.png"},{name:"twitter:url",content:"https://bajins.com/System/%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1.html"},{property:"og:type",content:"article"},{property:"og:title",content:"邮箱服务"},{property:"og:description",content:"https://tourcoder.com/install-postfix-on-centos-7/\nhttps://github.com/denghongcai/forsaken-mail\nhttps://github.com/malaohu/forsaken-mail\nhttps://github.com/flashmob/go-guerrilla\nhttps://github.com/PHPMailer\nhttps://github.com/knadh/listmonk\nhttps://github.com/postalserver/postal\nhttps://github.com/albertito/chasquid\nhttps://github.com/Exim/exim\nhttps://github.com/vdukhovni/postfix\nhttps://github.com/postfixadmin/postfixadmin\nhttps://github.com/mailserver2/mailserver\nhttps://github.com/docker-mailserver/docker-mailserver\nhttps://sendmail.org\nhttps://github.com/marlam/msmtp\nhttps://sourceforge.net/projects/dkim-milter\nhttps://sourceforge.net/projects/opendkim\nhttps://github.com/yesmore/vmail\nhttps://github.com/mail-in-a-box/mailinabox\n测试邮箱\n邮件营销 https://github.com/aaPanel/BillionMail"},{property:"og:image",content:"https://bajins.com/images/YandexMailDNS.png"},{property:"og:url",content:"https://bajins.com/System/%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"邮箱服务"},{itemprop:"description",content:"https://tourcoder.com/install-postfix-on-centos-7/\nhttps://github.com/denghongcai/forsaken-mail\nhttps://github.com/malaohu/forsaken-mail\nhttps://github.com/flashmob/go-guerrilla\nhttps://github.com/PHPMailer\nhttps://github.com/knadh/listmonk\nhttps://github.com/postalserver/postal\nhttps://github.com/albertito/chasquid\nhttps://github.com/Exim/exim\nhttps://github.com/vdukhovni/postfix\nhttps://github.com/postfixadmin/postfixadmin\nhttps://github.com/mailserver2/mailserver\nhttps://github.com/docker-mailserver/docker-mailserver\nhttps://sendmail.org\nhttps://github.com/marlam/msmtp\nhttps://sourceforge.net/projects/dkim-milter\nhttps://sourceforge.net/projects/opendkim\nhttps://github.com/yesmore/vmail\nhttps://github.com/mail-in-a-box/mailinabox\n测试邮箱\n邮件营销 https://github.com/aaPanel/BillionMail"},{itemprop:"image",content:"https://bajins.com/images/YandexMailDNS.png"}]},regularPath:"/System/%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1.html",relativePath:"System/邮箱服务.md",key:"v-411bea41",path:"/System/%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"域名邮箱",slug:"域名邮箱"},{level:3,title:"Yandex配置步骤",slug:"yandex配置步骤"},{level:2,title:"邮件服务器",slug:"邮件服务器"},{level:3,title:"邮件服务器概述",slug:"邮件服务器概述"},{level:3,title:"设置域名解析",slug:"设置域名解析"},{level:3,title:"卸载sendmail",slug:"卸载sendmail"},{level:3,title:"安装Postfix和Dovecot",slug:"安装postfix和dovecot"},{level:3,title:"查看版本",slug:"查看版本"},{level:3,title:"修改邮件传输代理",slug:"修改邮件传输代理"},{level:3,title:"查看是否修改成功",slug:"查看是否修改成功"},{level:3,title:"修改Postfix配置",slug:"修改postfix配置"},{level:3,title:"修改Dovecot配置",slug:"修改dovecot配置"},{level:3,title:"修改防火墙配置",slug:"修改防火墙配置"},{level:3,title:"配置用户及权限",slug:"配置用户及权限"},{level:3,title:"启动服务",slug:"启动服务"},{level:3,title:"使用mail测试发信",slug:"使用mail测试发信"},{level:3,title:"使用telnet测试收信",slug:"使用telnet测试收信"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' 邮箱服务 \n Flag 域名邮箱 Yandex配置步骤 邮件服务器 邮件服务器概述 设置域名解析 卸载sendmail 安装Postfix和Dovecot 查看版本 修改邮件传输代理 查看是否修改成功 修改Postfix配置 修改Dovecot配置 修改防火墙配置 配置用户及权限 启动服务 使用mail测试发信 使用telnet测试收信 \n Flag \n \n https://dkim.org \n \n \n https://tourcoder.com/install-postfix-on-centos-7/ \n https://github.com/denghongcai/forsaken-mail \n https://github.com/malaohu/forsaken-mail \n https://github.com/flashmob/go-guerrilla \n https://github.com/PHPMailer \n https://github.com/knadh/listmonk \n https://github.com/postalserver/postal \n https://github.com/albertito/chasquid \n https://github.com/Exim/exim \n https://github.com/vdukhovni/postfix \n https://github.com/postfixadmin/postfixadmin \n https://github.com/mailserver2/mailserver \n https://github.com/docker-mailserver/docker-mailserver \n https://sendmail.org \n https://github.com/marlam/msmtp \n https://sourceforge.net/projects/dkim-milter \n https://sourceforge.net/projects/opendkim \n https://github.com/yesmore/vmail \n https://github.com/mail-in-a-box/mailinabox \n 测试邮箱 \n 邮件营销  https://github.com/aaPanel/BillionMail \n 域名邮箱 \n \n 宝塔邮局管理器 \n httpsmail \n 使用Gmail+Resend+Cloudflare搭建免费的企业邮箱 \n Yandex配置步骤 \n \n https://hky.moe/archives/21 \n \n 端口 \n \n SMTP ： smtp.yandex.com:465 SSL \n IMAP ： imap.yandex.com:993 SSL \n POP3 ： pop.yandex.com:995 SSL \n \n \n 注意：如果是添加第二个域名（一个域名是一个组织），进入 账户管理页面 ，\n然后点击顶部的域名后弹出下拉菜单有一个 New organization 按钮来添加新域名，然后按照步骤（跳过1、2）操作即可 \n \n \n \n 1、注册账户  https://mail.yandex.com \n \n \n 2、添加域名  https://connect.yandex.com/pdd/ \n \n \n 3、验证域名所有权 \n \n \n \n 此时已经进入到管理页面，在左侧菜单 Domains 中点击域名（此时域名右侧是 禁止符号 ）验证域名所有权，\n验证成功后左侧菜单栏会多出几个菜单（这时域名右侧是 感叹号 ） \n \n \n 4、DNS配置 SPF Record 、 MX 、二级域名  https://connect.yandex.com/portal/admin/customization/dns \n \n \n 按照上面链接中的DNS配置（或者点击左侧菜单栏 DNS management ）到自己域名所在服务商添加DNS解析，\n注意末尾的点不要丢了，等待几分钟刷新（域名右侧是 绿色的勾 ） \n \n \n 5、DNS配置 DKIM signature   https://connect.yandex.com/portal/admin/customization/mail \n \n \n 点击上面的连接（就是左侧 Email 菜单）进入界面后点击 DKIM signatures 点击 Copy ,然后在域名所在服务商添加一条TXT记录DNS解析，\n主机记录（name）为 mail._domainkey ,值就是刚刚复制的 DKIM signatures \n \n \n \n 6、添加邮箱账户 \n \n \n 点击  Все сотрудники （就是左侧第一个菜单），然后点击页面下方有一个带 + 的 add 按钮，\n再点击 Add a person ，在弹出的页面输入，带 * 的为必填，填完后就点击 橙色的add按钮 \n \n \n 7、新添加的账户需要去登录并同意一个协议才能使用 \n \n \n 点击 https://mail.yandex.com 登录新账户并点击 Complete registration 按钮同意协议 \n \n \n 8、pop3/imap无法使用的解决办法 \n \n \n 点击 https://mail.yandex.com/#setup/client \n登陆邮箱按照下图中步骤操作即可，登录后重新点击链接可省略下图中的1、2、3步 \n \n \n \n 9、域名验证不通过解决办法 \n \n \n 进入 https://webmaster.yandex.com/sites 点击没有通过验证域名上的 X 按钮进行删除，\n然后点击页面顶部的 + 按钮重新添加域名再验证。 \n \n \n 我的域名验证不通过发现是因为：添加不带 www 的域名，自动添加了 www 二级域名 \n \n 验证码填写 \n \n 使用Google翻译的软键盘 \n \n \n \n 使用 俄语字母表 一个个复制粘贴 \n 邮件服务器 \n 邮件服务器概述 \n \n MUA ： Mail User Agent ，邮件用户代理 \n \n \n 接收邮件所使用的邮件客户端，使用 IMAP 或 POP3 协议与服务器通信； \n 如： Outlook 、 Foxmail 、 thunderbird 、 Mac Mail 、 mutt \n \n \n MTA ： Mail Transfer Agent ，邮件传输代理代为传递 \n \n \n 通过 SMTP 协议发送、转发邮件； \n 如： Sendmail 、 Postfix \n \n \n MDA ： Mail Delivery Agent ，邮件投递代理 \n \n \n 将 MTA 接收到的邮件保存到磁盘或指定地方，通常会进行垃圾邮件及病毒扫描； \n 如： procmail 、 dropmail \n \n \n MRA ： Mail Receive Agent ，邮件接收代理 \n \n \n 负责实现 IMAP 与 POP 3协议，与 MUA 进行交互； \n 如： dovecot \n \n \n SMTP ： Simple Mail Transfer Protocol ，传输发送邮件所使用的标准协议； \n IMAP ： Internet Message Access Protocol ，接收邮件使用的标准协议之一； \n POP3 ： Post Office Protocol 3 ，接收邮件使用的标准协议之一。 \n \n 流程 \n \n 邮件服务器基本都有 MTA ， MDA ， MRA 组成 \n \n \n MUA (发件人发送) --\x3e (若干个) MTA  --\x3e  MDA  --\x3e  MRA  <–-  MUA (收件人收取) \n \n \n 协议： MUA 到 MTA ，以及 MTA 到 MTA 之间使用 SMTP 协议，而收邮件时， MUA 到 MDA 之间使用 POP3 或 IMAP 协议。 \n \n \n 一、用户利用 MUA 寄信到 MTA 。配置 MUA 时要配上 SMTP 服务器域名,然后发送邮件。\n \n 比如使用网易账户发送邮件就要在配置 smtp.163.com ,这样邮件就发送到网易 MTA 。 \n \n \n 二、  MTA 检查收件人服务器如果不是自己则传递到下一跳 MTA ，直到传递到目的 MTA 。 \n 三、 目的 MTA 收到邮件后将邮件存储到 MDA 中， MDA 对邮件进行垃圾过滤，病毒查杀。 \n 四、  MRA 把邮件从 MDA 收取到用户的收件箱中。 \n 五、  MUA 收取邮件，此时收取邮件只是将 MRA 中的邮件下载到本地。 \n 设置域名解析 \n \n \n \n 记录类型 \n 主机记录 \n 解析线路(isp) \n 记录值 \n MX优先级 \n TTL值 \n \n \n \n \n A \n mail \n 默认 \n 服务器IP地址 \n – \n 10 分钟 \n \n \n MX \n @ \n 默认 \n mail.域名 \n 10 \n 10 分钟 \n 卸载sendmail \n yum remove  -y   sendmail \n 安装 Postfix 和Dovecot \n yum  install   -y  postfix dovecot\n 查看版本 \n rpm   -qa   |   grep   "postfix\\|dovecot" \n或者 \n rpm   -qa   |   grep   -e  postfix  -e  dovecot\n或者 \n rpm   -qa   |   grep   -E   "postfix|dovecot" \n或者 \n rpm   -qa   |   egrep   "postfix|dovecot" \n或者 \n rpm   -qa   |   awk   "/postfix|dovecot/" \n 修改邮件传输代理 \n alternatives  --config  mta\n或者先查看邮件传输代理程序，再设置 \n/usr/sbin/alternatives  --set  mta /usr/sbin/sendmail.postfix\n \n \n 会提示找到几个可用程序，输入自己需要的那个程序的数字即可 \n 查看是否修改成功 \n alternatives  --display  mta\n \n \n 第一行显示 mta - status is manual. 则表示设置成功 \n 修改Postfix配置 \n \n http://blog.leanote.com/post/colin_xia@yeah.net/postfix-官方文档笔记 \n https://www.cnblogs.com/operationhome/p/9056870.html \n \n \n 在 main.cf 中配置的值会自动分散到多个指定的配置文件中去 \n \n 查看配置 \n输出所有postfix配置项以及默认值 \npostconf\n不输出#开头和空行 \n grep   -v   \'^#\\|^$\'  /etc/postfix/main.cf\n \n 编辑配置 \n vi  /etc/postfix/main.cf\n \n 修改以下内容 \n75行:主机名 \n myhostname   =   mail.example.com \n83行:设置本地网络的邮件域 \n mydomain   =   example.com \n99行:要外发邮件时发件人的邮件域名，这里取的mydomain变量值 \n myorigin   =   $mydomain \n116行:默认是localhost，修改成all，即监听所有网络接口 \n inet_interfaces   =   all \n119行:网络协议 ipv6、ipv4或者all \n inet_protocols   =   all \n164行:设置可接收邮件的主机名或域名，来自其他主机名或域名的邮件将拒绝接收 \n mydestination   =   $myhostname, localhost.$mydomain, localhost, $mydomain \n210行:制定接收邮件的规则，可以是hash文件，可以直接注释 \n local_recipient_maps   = \n264行:收发客户端的地址 \n mynetworks   =   0.0.0.0/0 \n296行:设置可转发来自哪些域名或主机名的邮件 \n relay_domains   =   $mydestination \n419行:邮件存储的位置 \n home_mailbox   =   Maildir/ \n572行:指定MUA通过smtp连接postfix时返回的header头信息，定义欢迎信息 \n smtpd_banner   =   $myhostname ESMTP $mail_name \n \n 在文件结尾加入 \n启用SMTP认证 \n smtpd_sasl_type   =   dovecot \n \n smtpd_sasl_path   =   /var/spool/postfix/private/auth \n指定postfix使用sasl验证：就是启用smtp并要求进行账号、密码效验 \n smtpd_sasl_auth_enable   =   yes \n指定SMTP认证的本地域名：可以使用\'\'或注释掉，默认为空 \n smtpd_sasl_local_domain   =   $myhostname \n支持非标准验证规定的行为， \n指定postfix兼容MUA使用不规则的smtp协议，主要针对老版本的outlook \n broken_sasl_auth_clients   =   yes \n当客户端引发错误时,postfix的初始等待时间  \n smtpd_error_sleep_time   =   0s \n收件人限制条件 \n smtpd_recipient_restrictions   =   permit_mynetworks,permit_sasl_authenticated,reject_unauth_destination,reject_unknown_sender_domain \n客户端限制 \n smtpd_client_restrictions   =   permit_sasl_authenticated \n取消smtp的匿名登录 \n smtpd_sasl_security_options   =   noanonymous \n \n proxy_read_maps   =   $local_recipient_maps $mydestination $virtual_alias_maps $virtual_alias_domains $virtual_mailbox_maps $virtual_mailbox_domains $relay_recipient_maps $relay_domains $canonical_maps $sender_canonical_maps $recipient_canonical_maps $relocated_maps $transport_maps $mynetworks \n指定通过postfix发送邮件的体积大小，此处表示5M \n message_size_limit   =   5242880 \n \n \n smtpd_recipient_restrictions （收件人限制）有以下可用值： \n \n permit_mynetworks 允许本地的网络接收 \n permit_sasl_authenticated 允许通过 SASL 验证的用户（也就是 smtp 链接时通过了账号、密码效验的用户）的所有用户 \n reject_unauth_destination 拒绝无法认证的目的地 \n 修改Dovecot配置 \n vi  /etc/dovecot/dovecot.conf\n \n auth_mechanisms = plain login\nbase_dir = /var/run/dovecot/\ndebug_log_path = /var/log/dovecot_debug.log\ndisable_plaintext_auth = no\nfirst_valid_uid = 1000\ninfo_log_path = /var/log/dovecot_info.log\nlogin_trusted_networks = 0.0.0.0/0\nmail_location = mbox:~/mail:INBOX=/var/mail/%u\nmbox_write_locks = fcntl\nnamespace inbox {\n  inbox = yes\n  location = mbox:~/mail:INBOX=/var/mail/%u\n  mailbox Drafts {\n    special_use = \\Drafts\n  }\n  mailbox Junk {\n    special_use = \\Junk\n  }\n  mailbox Sent {\n    special_use = \\Sent\n  }\n  mailbox "Sent Messages" {\n    special_use = \\Sent\n  }\n  mailbox Trash {\n    special_use = \\Trash\n  }\n  prefix =\n}\npassdb {\n  args = dovecot\n  driver = pam\n}\nservice auth {\n  unix_listener /var/spool/postfix/private/auth {\n    mode = 0666\n    user = postfix\n  }\n  unix_listener auth-userdb {\n    group = noreply\n    mode = 0666\n    user = noreply\n  }\n}\nservice imap-login {inet_listener imap {\n    port = 143\n  }\n}\nservice pop3-login {\n  inet_listener pop3 {\n    port = 110\n  }\n}\nssl = no\nssl_cert = </etc/pki/dovecot/certs/dovecot.pem\nssl_key = </etc/pki/dovecot/private/dovecot.pem\nuserdb {\n  driver = passwd\n}\n \n \n 其实上面的配置文件并非一个，而是修改了 /etc/dovecot/conf.d 文件夹下的以下几个文件\n \n 10-auth.conf \n 10-ssl.conf \n 10-mail.conf \n 10-master.conf \n 10-logging.conf \n \n \n \n \n 修改完成以后使用 doveconf -n > dovecot-new.conf 命令生成一个全新的综合的配置文件。 \n 修改防火墙配置 \n firewall-cmd  --zone = public  --permanent  --add-service = imap\nfirewall-cmd  --zone = public  --permanent  --add-service = smtp\nfirewall-cmd  --zone = public  --permanent  --add-service = pop3\nfirewall-cmd  --zone = public --add-port = 25 /tcp  --permanent \nfirewall-cmd  --zone = public --add-port = 25 /udp  --permanent \nfirewall-cmd  --zone = public --add-port = 110 /tcp  --permanent \nfirewall-cmd  --zone = public --add-port = 110 /udp  --permanent \nfirewall-cmd  --zone = public --add-port = 143 /tcp  --permanent \nfirewall-cmd  --zone = public --add-port = 143 /udp  --permanent \nfirewall-cmd  --reload \n 配置用户及权限 \n添加用户 \n useradd  用户名\n设置密码 \n echo   "密码"   |   passwd   --stdin  用户名\n授权 \n sudo   chmod  0775 /var/spool/mail/*\n 启动服务 \n开启postfix服务 \nsystemctl  enable  postfix\n设置postfix开机启动 \n chkconfig  postfix on\n开启dovecot服务 \nsystemctl  enable  dovecot\n设置dovecot开机启动 \n chkconfig  dovecot on\n重启postfix/dovecot \nsystemctl restart postfix/dovecot\n查看postfix/dovecot状态 \nsystemctl status postfix/dovecot\n 使用mail测试发信 \n \n 未做明确配置时， mail 默认将本机作为发信、收信的服务器，所以此步骤中的测试操作在邮件服务器本机完成。 \n \n echo   "邮件内容"   |  mail  -s   "邮件主题"   -r  发送人邮件地址 接收人邮件地址\n 使用telnet测试收信 \n yum  install   -y  telnet\n \n telnet 域名  25 \n \n ',createdTime:1761814324e3},{title:"Windows软件",frontmatter:{description:"浏览器下载",meta:[{name:"twitter:title",content:"Windows软件"},{name:"twitter:description",content:"浏览器下载"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/System/Windows%E8%BD%AF%E4%BB%B6.html"},{property:"og:type",content:"article"},{property:"og:title",content:"Windows软件"},{property:"og:description",content:"浏览器下载"},{property:"og:url",content:"https://bajins.com/System/Windows%E8%BD%AF%E4%BB%B6.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Windows软件"},{itemprop:"description",content:"浏览器下载"}]},regularPath:"/System/Windows%E8%BD%AF%E4%BB%B6.html",relativePath:"System/Windows软件.md",key:"v-f9343602",path:"/System/Windows%E8%BD%AF%E4%BB%B6.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"聊天社交",slug:"聊天社交"},{level:2,title:"下载器",slug:"下载器"},{level:3,title:"BitTorrent",slug:"bittorrent"},{level:3,title:"Aria2",slug:"aria2"},{level:3,title:"云盘网盘",slug:"云盘网盘"},{level:2,title:"音视频",slug:"音视频"},{level:3,title:"录屏",slug:"录屏"},{level:2,title:"图片",slug:"图片"},{level:3,title:"Gif软件",slug:"gif软件"},{level:3,title:"截图",slug:"截图"},{level:2,title:"程序打包",slug:"程序打包"},{level:3,title:"AutoIt",slug:"autoit"},{level:3,title:"NSIS",slug:"nsis"},{level:3,title:"自解压",slug:"自解压"},{level:2,title:"Office",slug:"office"},{level:3,title:"wps",slug:"wps"},{level:2,title:"开始菜单",slug:"开始菜单"},{level:2,title:"剪贴板/剪切板",slug:"剪贴板-剪切板"},{level:2,title:"调色护眼",slug:"调色护眼"},{level:2,title:"邮箱客户端",slug:"邮箱客户端"},{level:2,title:"远程控制",slug:"远程控制"},{level:2,title:"文件管理",slug:"文件管理"},{level:2,title:"清理卸载工具",slug:"清理卸载工具"},{level:2,title:"密码管理",slug:"密码管理"},{level:2,title:"Other",slug:"other"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Windows软件 \n Flag 聊天社交 下载器 BitTorrent Aria2 云盘网盘 音视频 录屏 图片 Gif软件 截图 程序打包 AutoIt NSIS 自解压 Office wps 开始菜单 剪贴板/剪切板 调色护眼 邮箱客户端 远程控制 文件管理 清理卸载工具 密码管理 Other \n Flag \n 浏览器下载 \n \n Windows 10 有哪些值得推荐的必装软件？ \n \n \n https://github.com/topics/desktop-app \n https://www.solvusoft.com/zh-cn/file-extensions \n https://www.fileviewpro.com/zh-cn \n https://alternativeto.net \n https://github.com/aaronparker/evergreen \n \n 博客 \n \n http://cracksurl.com \n https://www.softdownload.com.br \n QiuQuan's Blog \n th_sjy \n 大眼仔旭 \n 反斗软件 \n 果核剥壳 \n zdBryan \n 落尘之木 \n 懒得勤快 \n 殁漂遥 \n 轻狂志 \n 伤逝的安详 \n 释怀 \n 宋永志博客 \n 我天哪鸡哥 \n 星空软件共享绿化园地 \n 飞扬时空作品 \n 翠竹成林 \n https://myqqjd.com \n http://www.ypojie.com \n https://www.ccava.net \n 苦瓜甘甜 \n https://ylface.com \n https://diakov.net \n \n 论坛 \n \n JIKE \n 52破解 \n hwh0488-远景论坛 \n 风之暇想-52破解 \n 风铃夜思雨 \n \n other \n \n Mac  https://www.naodai.org \n \n https://yun.naodai.org/Software \n https://go.naodai.org/Software \n \n \n Mac  https://www.macbl.com \n https://github.com/QiuChenlyOpenSource/InjectLib \n https://xclient.info \n https://github.com/xyjoey/fxxkmakeding \n \n https://www.fxxkmakeding.xyz \n \n \n https://cloud.189.cn/u/29617367 \n \n \n 万能命令  https://wanneng.run \n 聊天社交 \n \n E2EE(端到端加密)： Diffie-Hellman 密钥交换算法、AES(-CBC)对称加密算法 \n \n \n https://github.com/emilebosch/awesome-fediverse \n https://github.com/landrok/activitypub \n https://github.com/bluesky-social \n https://github.com/erskingardner/nostr-how \n https://gitlab.com/minds/minds \n \n https://github.com/Minds/minds \n \n \n https://github.com/aethereans \n https://github.com/diaspora \n \n \n https://github.com/keybase \n http://potato.manre.me \n https://github.com/tootsuite \n https://github.com/signalapp \n \n https://signal.org \n \n \n https://github.com/threema-ch \n https://github.com/Viber \n https://trello.com \n https://libera.chat \n https://teams.microsoft.com \n https://discord.com \n \n 与Discord的API进行交互  https://github.com/skwair/harmony \n https://github.com/discordjs/discord.js \n https://github.com/jagrosh/MusicBot \n \n \n P2P  https://github.com/berty/berty \n https://github.com/matrix-org \n \n https://gitlab.matrix.org/matrix-org \n https://github.com/vector-im \n \n \n https://github.com/GetStream \n https://github.com/RocketChat \n https://github.com/TrevorAttema/OTGMessenger \n https://github.com/igniterealtime \n https://github.com/chatwoot \n https://github.com/mastodon/mastodon \n \n https://github.com/nolanlawson/pinafore \n https://github.com/tuskyapp/Tusky \n \n \n https://github.com/pixelfed/pixelfed \n https://github.com/napthedev/fireverse \n https://github.com/papercups-io/papercups \n https://github.com/rumsystem/quorum \n https://github.com/owncast/owncast \n https://github.com/LemmyNet/lemmy \n https://github.com/superseriousbusiness/gotosocial \n https://github.com/friendica/friendica \n https://framagit.org/hubzilla/core \n \n https://hubzilla.org \n \n \n https://github.com/diaspora \n https://github.com/misskey-dev/misskey \n https://git.pleroma.social/pleroma/pleroma \n https://github.com/Minds \n https://github.com/jeremyckahn/chitchatter \n https://www.imdodo.com \n https://github.com/wireapp \n https://github.com/vasanthv/talk \n https://github.com/OpenIMSDK \n https://github.com/katzenpost/katzenpost \n https://github.com/dtube \n https://github.com/yggdrasil-network \n https://github.com/zulip/zulip \n 视频通话  https://github.com/miroslavpejic85/call-me \n \n \n https://github.com/topics/curses \n https://github.com/topics/ncurses \n https://github.com/profanity-im/profanity \n https://github.com/irssi/irssi \n https://github.com/fonoster/fonoster \n Instagram  https://github.com/jigar-sable/instagram-mern \n https://github.com/Linen-dev \n https://github.com/lensterxyz/lenster \n \n Telegram \n \n https://github.com/topics/telegram \n https://github.com/topics/telegram-api \n \n \n https://github.com/goq/telegram-list \n https://telegram.org/apps#source-code \n \n https://translations.telegram.org/zh-hans \n 跨平台库  https://github.com/tdlib \n Android  https://github.com/DrKLO/Telegram \n https://github.com/Telegram-FOSS-Team/Telegram-FOSS \n https://github.com/NekoX-Dev/NekoX \n iOS  https://github.com/TelegramMessenger/Telegram-iOS \n macOS  https://github.com/overtake/TelegramSwift \n Windows  https://github.com/telegramdesktop/tdesktop \n https://github.com/UnigramDev/Unigram \n web  https://github.com/morethanwords/tweb \n \n https://webk.telegram.org \n https://webz.telegram.org \n \n \n https://github.com/Ajaxy/telegram-tt \n https://telegram.zczc.men \n https://github.com/zhukov/webogram \n \n https://zhukov.github.io/webogram \n \n \n https://github.com/evgeny-nadymov/telegram-react \n \n https://evgeny-nadymov.github.io/telegram-react \n \n \n 命令行  https://github.com/vysheng/tg \n https://github.com/kenorb-contrib/tg \n python api框架  https://github.com/pyrogram \n https://github.com/Dineshkarthik/telegram_media_downloader \n https://github.com/alfem/telegram-download-daemon \n https://github.com/Nekmo/telegram-upload \n https://github.com/jarvis2f/telegram-files \n https://github.com/krau/SaveAny-Bot \n https://github.com/IvanGlinkin/CCTV \n \n \n https://github.com/idealclover/Telegram-Channel-Mirror \n https://github.com/kiwiirc \n \n https://freenode.net \n https://webchat.freenode.net \n \n \n \n \n 搜索  https://github.com/tgscan-dev/tgscan \n https://congcong0806.github.io/tags/#Telegram \n https://github.com/itgoyo/TelegramGroup \n https://www.tg-me.com \n https://www.hottg.com \n 群组导航bot  https://t.me/zh_groups_bot \n https://t.me/hao1234bot \n 资源频道搜索  http://www.sssoou.com \n Telegram群组/频道/机器人推荐 \n Telegram一份更完整的群组推荐，包含社群/频道/机器人 \n 下载器 \n \n https://github.com/search?q=downloader \n https://github.com/topics/downloader \n https://github.com/topics/download \n https://github.com/topics/download-manager \n https://github.com/topics/filedownloader \n \n \n https://github.com/XiaoYouChR/Ghost-Downloader-3 \n https://github.com/amir1376/ab-download-manager \n XDown  https://github.com/xdown-org \n \n https://xdown.org \n https://dl.xdown.org \n \n \n Qdown  https://lightzhan.xyz/index.php/qdown \n NDM  https://www.neatdownloadmanager.com \n IDM  https://www.internetdownloadmanager.com \n \n https://github.com/MotooriKashin/ef2 \n 闻雷  https://www.lanzoui.com/b0i6zkze \n \n \n 猎鹰下载器  http://www.eagleget.com \n FDM  http://www.freedownloadmanager.org \n https://github.com/subhra74/xdm \n https://github.com/hugetiny/negibox \n https://github.com/agalwood/Motrix \n https://github.com/imfile-io/imfile-desktop \n https://sourceforge.net/projects/urlget \n https://github.com/axel-download-accelerator/axel \n https://github.com/GopeedLab/gopeed \n https://github.com/SaptarshiSarkar12/Drifty \n https://github.com/blaze-shubhojeet14/FilumDLWPF \n https://jdownloader.org \n 迅雷、快车、旋风下载链接转换脚本  https://github.com/chinsyo/delink \n BitTorrent \n \n https://github.com/bittorrent \n \n https://www.bittorrent.com/zh-cn/ \n \n \n ED2K（eMule电驴）  https://sourceforge.net/projects/emule \n \n https://github.com/irwir/eMule \n https://github.com/amule-project \n https://sourceforge.net/projects/amule \n https://github.com/emulefanscom \n https://emulefans.com \n http://ed2k.iscool.net \n http://www.emule-mods.de \n http://www.emule-web.de \n http://www.nodes-dat.com \n http://upd.emule-security.org/nodes.dat \n http://ed2k.im/nodes.dat \n \n \n https://github.com/pt-plugins/PT-Plugin-Plus \n https://sourceforge.net/projects/frostwire \n \n 磁力搜索 \n \n https://github.com/Olament/gDHT \n 流媒体播放  https://github.com/Stremio \n 磁力链接聚合搜索  https://github.com/xiandanin/magnetW \n 阿虚同学的储物间 \n BT导航网： http://wherebt.com \n 全网最全BT 磁力搜索引擎索引-持续更新中 \n 2020年可用、好用、值得推荐的磁力搜索引擎【更新版】 \n https://github.com/fwonggh/Bthub \n https://github.com/jubtnet/jubt \n https://bteve.com/tags \n https://www.cilixiong.com \n https://www.btsj5.com \n http://www.2btjia.com \n https://www.pianku.tv \n https://cili001.com \n https://github.com/2004content/rarbg \n \n \n 特征码（该字符串，一般是40个字的一串字母和数字的组合）下载：打开BT下载工具（迅雷、BitComet、BitTorrent、uTorrent等等），\n例如比特彗星，点击磁链，直接粘贴下载即可。如果使用迅雷的话还需要在特征码前面加上 magnet:?xt=urn:btih: \n \n 客户端 \n \n https://www.bitcomet.com \n \n https://www.lanzoui.com/b073c7g4f \n \n \n https://github.com/qbittorrent/qBittorrent \n*  https://www.lanzoui.com/b073jjwta \n https://github.com/c0re100/qBittorrent-Enhanced-Edition \n \n https://www.lanzoui.com/b073dnr7g \n \n \n https://transmissionbt.com \n https://deluge-torrent.org \n https://www.utorrent.com \n https://github.com/webtorrent \n https://github.com/arvidn/libtorrent \n https://github.com/popcorn-official/popcorn-desktop \n \n BT-Trackers \n \n https://github.com/XIU2/TrackersListCollection \n https://github.com/ngosang/trackerslist \n https://github.com/CorralPeltzer/newTrackon \n https://dns.icoa.cn/tracker \n https://torrents.io/tracker-list \n https://newtrackon.com/list \n http://github.itzmx.com/1265578519/OpenTracker/master/tracker.txt \n https://tinytorrent.net/best-torrent-tracker-list-updated \n https://torrenttrackerss.com/torrent-tracker-list \n http://www.torrenttrackerlist.com/torrent-tracker-list \n https://github.com/DeSireFire/animeTrackerList \n https://github.com/1265578519/OpenTracker \n http://opentrackr.org \n https://github.com/sabersalv/awesome-pt \n \n 迅雷 \n \n 由于总所周知的原因（大家都将迅雷叫吸血雷：只下载不上传），下载Magnet链接（磁力）、Torrent文件（比特流种子）、\nED2K（eMule电驴）等请使用 Bit Torrent 工具 \n \n \n https://github.com/cnk3x/xunlei \n Aria2 \n \n https://github.com/aria2/aria2 \n https://github.com/binux/yaaw \n https://github.com/ziahamza/webui-aria2 \n https://github.com/mayswind/AriaNg \n https://github.com/persepolisdm/persepolis \n https://github.com/P3TERX/aria2.conf \n https://github.com/boypt/simple-torrent \n https://github.com/SuperNG6 \n http://lightzhan.xyz/index.php/qdown \n GUI  https://github.com/Xmader/aria-ng-gui \n https://github.com/Xmader/aria-ng-gui-android \n 云盘网盘 \n \n https://github.com/search?q=BaiduPCS \n https://github.com/topics/baiduyun \n https://cloud189.1t.workers.dev/web \n https://github.com/yuantuo666/baiduwp-php \n https://pan.baidu.com/youth/pan/main \n https://github.com/qjfoidnh/BaiduPCS-Go \n https://github.com/ihmily/QuarkPanTool \n https://github.com/HkList \n https://github.com/OpenListTeam/OpenList \n \n https://github.com/OpenListApp/OpenListApp \n \n \n \n \n 【诚通网盘下载提示】：点击下载后，立马取消（就是点击浏览器左上角的 X 按钮停止访问），然后再次点击下载，可以提速好几倍 \n \n \n 网赚网盘下载辅助工具 \n \n \n 蓝奏云网盘最新地址： lanzou.com   lanzoui.com   lanzoux.com \n 音视频 \n \n https://github.com/topics/music-app \n https://github.com/topics/music-app \n \n \n https://cue-splitter.medieval.it \n http://www.medieval.it/cuesplitter-pc/menu-id-71.html \n \n \n foobar2000 \n \n https://github.com/dream7180/foobox-cn \n \n \n https://github.com/lyswhut/lx-music-desktop \n https://github.com/nukeop/nuclear \n \n https://github.com/NuclearPlayer/nuclear-xrd \n \n \n https://github.com/mpv-player/mpv \n \n https://github.com/shinchiro/mpv-winbuild-cmake \n https://sourceforge.net/projects/mpv-player-windows \n https://github.com/hooke007/MPV_lazy \n https://github.com/diana7127/mpv.net-DW \n \n \n Kodi  https://github.com/xbmc \n \n https://kodi.tv/download \n \n \n powerDVD \n MPC-BE  https://sourceforge.net/projects/mpcbe \n https://github.com/clsid2/mpc-hc \n \n https://sourceforge.net/projects/mpc-hc \n \n \n VLC  https://www.videolan.org \n https://sourceforge.net/projects/qtav \n https://www.getmusicbee.com \n https://github.com/Frank-Friemel/Shairport4w \n https://github.com/maotoumao/MusicFreeDesktop \n \n https://gitlab.com/acoolbook/musicfree \n https://gitee.com/raycn120/musicfree \n \n \n https://github.com/synctv-org \n https://github.com/Hunlongyu/ZY-Player \n https://github.com/algerkong/AlgerMusicPlayer \n https://www.un4seen.com \n 3D电影  https://github.com/marlam/bino \n \n https://github.com/ThreeDeeJay/bino \n \n \n https://www.3dtv.at/Downloads \n \n \n https://github.com/Chocobozzz/PeerTube \n \n https://framagit.org/framasoft/peertube/search-index \n \n \n https://github.com/soimort/you-get \n https://www.midomi.com \n https://github.com/musescore/MuseScore \n https://github.com/Xmader/musescore-downloader \n https://github.com/qier222/YesPlayMusic \n 字幕  https://github.com/foxofice/sub_share \n https://github.com/solidSpoon/DashPlayer \n 编码解码器  https://www.free-codecs.com \n 视频编辑  https://github.com/mltframework/shotcut \n https://invent.kde.org/multimedia/kdenlive \n \n https://kdenlive.org/zh-cn/download \n \n \n https://github.com/mifi/lossless-cut \n https://github.com/ozmartian/vidcutter \n https://github.com/olive-editor/olive \n https://www.capcut.cn \n https://www.kuaishou.com/kuaiying \n https://www.topazlabs.com \n https://shana.pe.kr/shanaencoder_download \n https://github.com/tnfe/FFCreator \n https://sourceforge.net/projects/vidiot \n https://sourceforge.net/projects/shotcut \n https://github.com/k4yt3x/video2x \n https://github.com/Gpower2/gMKVExtractGUI \n \n https://sourceforge.net/projects/gmkvextractgui \n \n \n YouTube  https://github.com/FreeTubeApp/FreeTube \n https://github.com/iv-org/invidious \n 直播录制  https://github.com/WhiteMinds/LiveAutoRecord \n https://github.com/chenfan0/fideo-live-record \n \n Potplayer \n \n http://potplayer.daum.net \n https://potplayer.tv \n Public Version 32-bit \n Public Version 64-bit \n Developer Version 32-bit \n Developer Version 64-bit \n 解码组件包（Open Codec）只要提取HEVC(H265)解码器(FFmpeg.dll) 32-bit \n 解码组件包（Open Codec）只要提取HEVC(H265)解码器(FFmpeg.dll) 64-bit \n DTS音频解码器（FFmpegMininum.dll） 32-bit \n DTS音频解码器（FFmpegMininum.dll） 64-bit \n \n \n 以上是官网下载地址，将 DNS 改为 8.8.8.8 就可以顺利下载了，若为默认的自动模式（国内DNS）则无法下载。或者使用迅雷下载 \n \n \n https://www.lanzoui.com/b0f1k59qh \n \n 电视盒子/TVBOX \n \n https://github.com/topics/tv \n https://github.com/topics/live \n https://github.com/topics/playlist \n https://github.com/topics/iptv \n https://github.com/topics/m3u \n https://github.com/iptv-org \n https://github.com/fanmingming/live \n https://github.com/Free-TV \n https://github.com/Cyril0563/lanjing_live \n https://github.com/imDazui/Tvlist-awesome-m3u-m3u8 \n https://github.com/gaotianliuyun/gao \n https://github.com/xianyuyimu/TVBOX- \n https://github.com/qwerttvv/Beijing-IPTV \n https://github.com/cyao2q/files \n https://github.com/Ftindy/IPTV-URL \n https://jihulab.com/moyuer/momoyu \n https://github.com/shidahuilang/shuyuan \n https://github.com/HerbertHe/iptv-sources \n https://github.com/EvilCult/iptv-m3u-maker \n https://github.com/joevess/IPTV \n https://github.com/Meroser/IPTV \n https://github.com/tansuotv/IPTVindex \n https://github.com/wcb1969/iptv \n https://github.com/22705/IPTV-2 \n https://github.com/biancangming/wtv \n https://github.com/Guovin/iptv-api \n \n \n https://github.com/zhimin-dev/iptv-checker \n https://github.com/lizongying/my-tv \n https://github.com/Eanya-Tonic/CCTV_Viewer \n https://github.com/llazyl/TVBox \n https://github.com/q215613905/TVBoxOS \n https://github.com/EdenwareApps/Megacubo \n \n https://sourceforge.net/projects/megacubo-br \n \n \n https://github.com/FongMi/TV \n https://github.com/NAStool/nas-tools \n https://github.com/liu673cn/box \n \n https://github.com/CatVodTVOfficial/TVBoxOSC \n \n \n https://github.com/tianya7981/jiekou \n https://bitbucket.org/xduo/duoapi \n https://notabug.org/qizhen15800/My9394 \n https://github.com/nilaoda/N_m3u8DL-RE \n \n \n https://xn--sss604efuw.top \n https://www.lige.fit/tvbox \n 非正版影视/直播(网站/应用)收集 \n 录屏 \n \n https://github.com/topics/screen-recorder \n https://github.com/topics/screen-recording \n https://github.com/topics/video-recording \n \n \n https://github.com/027xiguapi/pear-rec \n https://github.com/obsproject/obs-studio \n https://github.com/aseprite/aseprite \n https://github.com/akon47/ScreenRecorder \n https://github.com/CapSoftware/Cap \n https://github.com/wulkano/Kap \n 班迪录屏Bandicam  https://www.bandicam.com \n 傲软录屏ApowerREC  https://www.apowersoft.com \n https://fraps.com \n https://exkode.com/dxtory-features-en.html \n Snagit/Camtasia  https://www.techsmith.com \n \n https://www.snagit.com \n \n \n https://www.nvidia.com/en-us/geforce/geforce-experience/shadowplay \n https://www.nvidia.cn/geforce/geforce-experience/shadowplay \n EVCapture  https://www.ieway.cn/evcapture.html \n https://lusun.com \n ZD Screen Recorder  http://www.zdsoft.com \n 图片 \n \n https://github.com/topics/image-processing \n https://github.com/topics/image-viewer \n https://github.com/topics/photo-viewer \n \n \n HEIC  https://github.com/sylikc/jpegview \n \n https://sourceforge.net/projects/jpegview \n \n \n https://github.com/nomacs/nomacs \n \n https://github.com/jakar/qt-heif-image-plugin \n \n \n https://www.copytrans.net/copytransheic \n https://www.fonepaw.com/heic-converter \n https://imazing.com/zh/converter \n 图片查看  https://invent.kde.org/graphics/digikam \n https://github.com/BLumia/pineapple-pictures \n https://github.com/d2phap/ImageGlass \n https://github.com/ImageGlass \n https://github.com/Ruben2776/PicView \n https://www.irfanview.com \n \n https://www.irfanview.com/languages.htm \n https://www.irfanview.net \n https://github.com/UB-Mannheim/tesseract \n \n \n https://www.retouchpics.com \n https://affinity.serif.com \n https://eagle.cool \n https://www.hellofont.cn \n https://www.wallpaperengine.io \n https://www.rainmeter.net \n \n https://zhutix.com/tag/rainmeter \n \n \n https://al.chemy.org \n https://www.xnview.com/en/xnview \n https://www.apowersoft.com/photo-viewer \n https://www.nyam.pe.kr/dev/imagine \n http://www.photoscape.org \n https://cn.bandisoft.com/honeyview \n https://www.freshdevices.com \n https://www.meitu.com \n https://github.com/027xiguapi/pear-rec \n 图片压缩  https://github.com/GoogleChromeLabs/squoosh \n \n https://github.com/jamsinclair/jSquash \n https://github.com/unplugin/unplugin-imagemin \n https://github.com/SalOne22/rimage \n \n \n https://github.com/renzhezhilu/webp2jpg-online-demo \n https://github.com/Dreamer365/topspeed-image-compressor \n https://github.com/autergame/JpegView-Rust \n https://github.com/Lymphatus/caesium-clt \n https://github.com/AkiraBit/PicSharp \n 上传并获取图片URL  https://github.com/Molunerfinn/PicGo \n https://www.polaxiong.com \n https://icons8.cn/lunacy \n https://www.getpaint.net \n https://gitlab.gnome.org/GNOME/gimp \n \n https://www.gimp.org \n \n \n https://github.com/KDE/krita \n \n https://invent.kde.org/graphics/krita \n https://krita.org/zh-cn/download \n https://github.com/Acly/krita-ai-diffusion \n https://github.com/Falano/kritaSpritesheetManager \n \n \n https://invent.kde.org/graphics/digikam \n \n https://www.digikam.org \n \n \n https://github.com/darktable-org/darktable \n \n https://www.darktable.org \n \n \n https://github.com/RawTherapee/RawTherapee \n \n https://rawtherapee.com/downloads \n \n \n 3D创作  https://www.blender.org \n Icon矢量图  https://github.com/inkscape/inkscape \n \n https://gitlab.com/inkscape/inkscape \n https://inkscape.org/zh-hans \n \n \n https://github.com/svg \n https://github.com/ImageMagick \n \n https://github.com/dlemstra/magick-wasm \n \n \n https://icofx.ro \n Axialis-IconWorkshop 官网  https://www.axialis.com/download/#software \n https://amadine.com \n 提高分辨率  https://github.com/Djdefrag/QualityScaler \n 图像校正和漂白工具 PM lite \n 水印  https://github.com/topics/watermark \n https://github.com/dxcweb/watermark \n 模拟iPhone截图  https://shots.so \n https://app.jellylade.com \n \n Photoshop \n \n https://github.com/search?q=Photoshop \n Adobe替代品  https://github.com/KenneyNL/Adobe-Alternatives \n https://weibo.com/vposy \n TEAmo (茶末余香) \n Adobe软件单独下载方法-官方 \n https://sysin.cn/archive \n 全套插件一键安装无限制版,无需填写注册码，直接点击“继续” https://cloud.189.cn/t/iqm6jiJJZBVv \n Extensions Plus For PS CC https://lanzoui.com/iapsbaj \n https://inmac.org \n https://cmacapps.com \n https://mac-torrent-download.net \n https://tntzii.com \n https://github.com/webmproject/WebPShop \n \n \n Adobe Photoshop键盘快捷键 \n Photoshop快捷键大全 \n 最详细的PS快捷键大全 \n Gif软件 \n \n https://github.com/topics/webcam \n https://github.com/davisonio/awesome-gif \n \n \n https://github.com/NickeManarin/ScreenToGif \n https://github.com/phw/peek \n \n https://github.com/firatkiral/pypeek \n https://github.com/MaartenBaert/ssr \n \n \n https://www.bandisoft.com/honeycam \n GifCam  http://blog.bahraniapps.com \n https://github.com/justinfrankel/licecap \n https://github.com/chenjing1294/GifCapture \n \n \n Gif压缩  https://gifcompressor.com/zh/ \n 截图 \n \n https://github.com/topics/screen-capture \n https://github.com/topics/screencast \n https://github.com/topics/screenshot \n https://github.com/topics/image-editing \n https://github.com/topics/image-processing \n https://github.com/topics/capture \n \n \n https://github.com/flameshot-org/flameshot \n https://github.com/ShareX \n https://github.com/greenshot \n https://github.com/ckaiser/Lightscreen \n Lightshot  https://app.prntscr.com \n https://github.com/Snipaste \n \n https://www.snipaste.com \n \n \n https://picpick.app/zh/download \n HyperSnap  https://www.hyperionics.com \n VeryCapture https://wwr.lanzoui.com/b026bvydi 9zzn \n Snagit  https://www.techsmith.com/screen-capture.html \n https://www.ashampoo.com/zh-cn/snap \n https://pixpin.cn \n https://github.com/tylearymf/SETUNA2 \n \n FastStone Capture \n \n 官网  https://www.faststone.org \n 官网被屏蔽，没有被屏蔽的下载地址（最新版本去掉版本号）：\n \n https://www.faststonesoft.net/DN/FSCaptureSetup版本号.exe \n https://www.faststonesoft.net/DN/FSCapture版本号.zip \n https://www.faststonesoft.net/DN/FSCaptureSetup版本号.zip \n \n \n \n 用户名：1028 \n注册码：AXJQI-RWMDW-YBXZC-LOPHI\n\n企业版序列号：\n用户名：bluman\n注册码：VPISCJULXUFGDDXYAUYF\n\n用户名：TEAM_BRAiGHTLiNG_2007\n注册码：XPNMF-ISDYF-LCSED-BPATU\n注册码：RPTME-IMDHD-MIEPX-VLXAW\n\n用户名：www.orsoon.com\n注册码：AXSQR-RNMXG-CVOPF-FKXHY\n \n \n WinSnap  https://www.ntwind.com/software/winsnap.html \n 程序打包 \n \n https://github.com/topics/installer \n https://github.com/topics/packager \n https://github.com/topics/msi \n \n https://learn.microsoft.com/zh-cn/windows/msix \n \n \n https://github.com/topics/exe \n \n \n Enigma Virtual Box  https://enigmaprotector.com/cn/aboutvb.html \n 单文件制作程序byJexChan \n 单文件程序制作一键通by:杏雨梨云 \n https://github.com/lxfly2000/7zsfx \n UltraModernUI  https://github.com/SuperPat45/UltraModernUI \n Inno-by-KngStr  https://github.com/KngStr/Inno-All-in-One-Setup \n Advanced Installer官方 \n https://github.com/upx/upx \n \n UPXShell汉化版 \n \n \n Inno Setup  https://jrsoftware.org \n \n InnoSetup中文定制版 \n https://github.com/kira-96/Inno-Setup-Chinese-Simplified-Translation \n https://sourceforge.net/projects/istool \n https://github.com/dscharrer/innoextract \n https://github.com/jrsoftware/issrc \n https://github.com/jrathlev/InnoUnpacker-Windows-GUI \n \n \n https://www.revenera.com/install/products/installshield \n https://learn.microsoft.com/zh-cn/windows/win32/msi/standard-installer-command-line-options \n \n \n https://github.com/wixtoolset/wix3 \n \n https://wixtoolset.org \n https://github.com/firegiant \n \n \n https://www.ej-technologies.com/download/install4j/files \n https://www.ej-technologies.com/download/exe4j/files \n 查看和提取msi  https://github.com/activescott/lessmsi \n 打包URL  https://github.com/tw93/pake \n \n https://github.com/Sjj1024/PakePlus \n AutoIt \n \n AutoIt v3 官方主页 \n AutoIt v3 中文论坛 \n Au3编程学习 \n NSIS \n \n https://github.com/topics/nsis \n \n \n https://sourceforge.net/projects/nsis \n \n https://nsis.sourceforge.io/Category:Plugins \n https://github.com/NSIS-Dev \n NSIS中文论坛  http://www.nsisfans.com \n \n \n https://sourceforge.net/projects/hmne \n \n http://hmne.sourceforge.net \n \n \n 基于NSIS工具自定义XML漂亮UI打包工具  https://github.com/bajins/NSIS_SetupSkin \n \n \n 内置NSIS命令自动完成  https://github.com/idleberg/sublime-nsis \n 自解压 \n \n https://sourceforge.net/projects/sfx-maker \n \n 7-ZIP SFX Maker v3.3 完整汉化版 \n 7-ZIP SFX Maker v3.3 完美汉化版 \n \n \n https://sourceforge.net/projects/s-zipsfxbuilder \n Office \n \n https://github.com/topics/office \n https://github.com/topics/office-tools \n Office 部署工具概述 \n \n \n https://github.com/apache/openoffice \n https://github.com/LibreOffice \n \n https://zh-cn.libreoffice.org \n https://github.com/djemos/libreoffice \n https://github.com/unoconv \n https://github.com/vladholubiev/serverless-libreoffice \n \n \n https://github.com/KDE/calligra \n \n https://calligra.org \n \n \n https://github.com/YerongAI/Office-Tool \n \n https://otp.landian.vip \n https://www.coolhub.top \n \n \n https://github.com/OdysseusYuan/LKY_OfficeTools \n https://github.com/seeumail/OfficeRTool \n https://github.com/abbodi1406/BatUtil \n https://github.com/YesandYeah/Office-C2R-Install \n Office 2013-2024 C2R Install \n https://github.com/farag2/Office \n \n \n Office 卸载支持工具  https://outlookdiagnostics.azureedge.net/sarasetup/SetupProd_OffScrub.exe \n 手动卸载 Office \n wps \n \n 打开WPS的安装目录（默认为 %UserProfile%\\AppData\\Local\\Kingsoft\\WPS Office ），找到 ksomisc.exe ，\n切换到最后一个选项卡，取消勾选广告和推送相关项目。 \n 在WPS的安装目录找到 product.dat ，用任意文本编辑器打开，将内容替换为： [Product]\nIcFjFBshxFLQCPSDLPAlXA..=t214Nk2CiIjrcDPrikX5Iw..\n \n \n \n wps key \n2019密钥\n694BF-YUDBG-EAR69-BPRGB-ATQXH\nFLHAP-TEUGA-9MA3A-3TY3Q-V9EPD\n2016密钥\n9DP6T-9AGWG-KWV33-9MPC8-JDCVF\n7G2HE-JR8KL-ABB9D-Y7789-GLNFL\nU2PWU-H7D9H-69T3B-JEYC2-3R2NG\nR8R8P-MTT6F-KLRPM-J7CAB-PJM8C\nA4XV7-QP9JN-E7FCB-VQFRD-4NLKC\nU272H-HH2F6-WDG36-ULUPX-PCHTJ\n7LR67-WTXPA-KLUHV-GEK2E-QW4CK\nEUYTH-3KWKL-PJMX7-XBCPW-9U2DD\nR7AKQ-KLBXV-RNX3F-BPACQ-NQDGE （该序列号来自石家庄人社局）\nTHUV2-32HH7-6NMHN-PTX7Y-QQCTH（该序列号来自昔阳县政府)\n 开始菜单 \n \n https://github.com/Open-Shell/Open-Shell-Menu \n \n https://github.com/coddec/Classic-Shell \n \n \n https://www.startisback.com \n 剪贴板/剪切板 \n \n https://github.com/topics/clipboard \n https://github.com/topics/paste \n https://github.com/topics/pastebin \n \n \n https://github.com/hluk/CopyQ  可设置 Win  +  v 快捷键 \n https://github.com/ayangweb/EcoPaste \n https://github.com/PasteBar/PasteBarApp \n https://github.com/EcoPasteHub/EcoPaste \n https://github.com/Jeric-X/SyncClipboard \n https://github.com/projectsend/projectsend \n https://github.com/CrossPaste/crosspaste-desktop \n https://github.com/lemon-codehub/lemonPush \n \n https://github.com/HaujetZhao/web_remote_input \n \n \n https://www.clipboardfusion.com \n https://clipber.com \n \n https://github.com/cissusnar/cpluginscript \n https://kuaitie.cloud \n \n \n https://github.com/sabrogden/Ditto \n \n https://sourceforge.net/projects/ditto-cp \n https://ditto-cp.sourceforge.io \n http://ditto-cp.sourceforge.net \n \n \n https://www.nakka.com/soft/clcl/index_eng.html \n https://github.com/Carson-Shook/Winclipper \n https://ccyixia.com \n https://jianqiezhushou.com \n https://www.52pojie.cn/thread-953460-1-1.html \n http://1clipboard.io \n 粘贴到文件  https://github.com/huiyadanli/PasteEx \n http://clipdiary.com \n \n \n https://copiedapp.com \n 一个实用的剪贴板小工具——TimeClip \n 调色护眼 \n \n https://github.com/search?q=eye+strain&type=Repositories \n \n \n Iris Pro  https://iristech.co \n CareUEyes  https://care-eyes.com \n https://github.com/Tyrrrz/LightBulb \n f.lux  https://justgetflux.com \n https://github.com/emoacht/Monitorian \n 邮箱客户端 \n \n https://github.com/topics/smtp-client \n https://github.com/topics/imap-client \n https://github.com/topics/e-mail \n https://github.com/topics/mail \n \n \n Thunderbird  https://github.com/thundernest \n \n https://github.com/mozilla-comm \n https://www.thunderbird.net \n https://github.com/fastaddons/WebTranslate \n https://github.com/itagagaki/DeepL-Selected-Text \n K-9邮件  https://github.com/k9mail \n https://github.com/M66B/FairEmail \n \n \n https://github.com/Foundry376/Mailspring \n https://www.foxmail.com \n https://mail.163.com/dashi \n https://sparkmailapp.com \n http://help.cy-email.com \n https://github.com/ProtonMail \n The Bat  https://www.ritlabs.com \n https://www.emailtray.com \n https://www.emclient.com \n https://www.getmailbird.com \n https://www.twobird.com \n https://sparkmailapp.com \n Outlook 使用时有自动删除邮件的BUG \n 远程控制 \n \n https://github.com/topics/remote \n https://github.com/topics/remote-desktop \n https://github.com/topics/remote-access \n https://github.com/topics/remote-control \n https://github.com/topics/rdp \n \n \n https://github.com/miroslavpejic85/p2p \n https://github.com/pikvm/pikvm \n https://github.com/jetkvm/kvm \n Comet  https://github.com/gl-inet \n 远程桌面客户端 | Microsoft Remote Desktop \n \n 使用 Windows 应用连接到 Windows 设备和应用 \n \n \n https://www.teamviewer.com \n https://anydesk.com \n TrustViewer  http://trustviewer.com \n https://github.com/rustdesk/rustdesk \n https://www.todesk.com \n https://parsec.app \n https://uuyc.163.com/download \n 向日葵  https://sunlogin.oray.com/download \n 投屏  https://github.com/pavlobu/deskreen \n https://github.com/topics/second-screen \n https://github.com/quasar/Quasar \n https://github.com/fmeringdal/nettu-meet \n https://github.com/RGAA-Software/GammaRay \n https://github.com/mistweaverco/bananas \n 一键远控  https://www.yijianyuankong.com \n GotoHTTP  https://gotohttp.com \n 灰鸽子远程  http://www.huigezi.org \n 即启远程  https://www.jqyou.com \n DBadmin  https://slser.com \n Zoho Assist  https://www.zoho.com/assist \n https://www.zoho.com \n https://www.anyviewer.com \n https://www.remoteutilities.com \n https://remotedesktop.google.com \n https://github.com/kimmknight/remoteapptool \n https://www.solarwinds.com/zh/dameware \n https://www.radmin.com \n https://github.com/Cool-Coding/remote-desktop-control \n https://www.ultraviewer.net \n \n \n ScreenWings 反截屏 \n 文件管理 \n \n https://github.com/topics/compare \n https://github.com/topics/compare-files \n \n \n 文件搜索  https://www.listary.com/pro \n https://winfindr.com \n https://github.com/dnGrep/dnGrep \n Everything  https://www.voidtools.com \n \n https://github.com/stnkl/EverythingToolbar \n https://github.com/Chaoses-Ib/IbEverythingExt \n https://github.com/MaskerPRC/everything-ai-chat \n \n \n https://github.com/Flow-Launcher/Flow.Launcher \n https://github.com/Wox-launcher/Wox \n https://www.wisecleaner.com/wise-jetsearch.html \n https://www.fileseek.ca \n https://www.jam-software.com/ultrasearch \n https://www.mythicsoft.com/agentransack \n https://www.nirsoft.net/utils/search_my_files.html \n https://github.com/gsidhu/buzee-tauri \n 批量重命名 ReNamer  http://www.den4b.com \n https://github.com/Arman19941113/rename-photos \n https://github.com/cyhuajuan/FreeReNamer \n 文件去重  http://www.alldup.info \n 文件资源管理器  https://github.com/files-community/Files \n https://www.ghisler.com \n https://github.com/tablacus/TablacusExplorer \n https://github.com/derceg/explorerplusplus \n https://www.softwareok.com/?seite=Freeware/Q-Dir \n https://www.xyplorer.com \n http://www.uderzo.it/main_products/space_sniffer \n Windows File Recovery \n https://github.com/FarGroup/FarManager \n https://github.com/violet7pan/XYplorer_Help \n http://multicommander.com \n https://www.ghisler.com/download.htm \n https://biu.evercraft.co \n https://resource.dopus.com \n https://filepilot.tech \n https://www.diskinternals.com/download \n \n 读取EXT 类型数据盘  http://www.diskinternals.com/download/Linux_Reader.exe \n \n \n 傲梅分区助手PartAssist \n 文件快速复制  https://fastcopy.jp \n \n https://github.com/shirouzu/FastCopy \n https://github.com/Mapaler/FastCopy-M \n \n \n https://github.com/kevinwu1024/ExtremeCopy \n https://www.codesector.com/teracopy \n 文件清理  https://github.com/bleachbit/bleachbit \n 哈希值计算  https://github.com/hrpzcf/HashCalculator \n 文件查看器  https://github.com/stardustai/dataset-viewer \n \n 文件对比 \n \n https://github.com/winmerge/winmerge \n \n https://sourceforge.net/projects/winmerge \n \n \n https://github.com/qarmin/czkawka \n https://github.com/arsenetar/dupeguru \n https://gitlab.gnome.org/GNOME/meld \n \n https://meldmerge.org \n \n \n https://sourceforge.net/projects/diffuse \n https://www.sourcegear.com/diffmerge \n Beyond Compare  https://www.scootersoftware.com \n https://github.com/cxasm/cc-compare \n https://www.ultraedit.com/products/ultracompare \n Code Compare  https://www.devart.com/codecompare \n https://www.beyondcomparepro.com \n https://www.deltawalker.com \n Altova DiffDog  https://www.altova.com/diffdog \n Araxis Merge  https://www.araxis.com/merge \n https://github.com/zbuzhi/diff-excel \n \n 磁盘空间分析器 \n \n WizTree  https://diskanalyzer.com \n Treesize  https://www.jam-software.com/treesize_free \n https://sourceforge.net/projects/windirstat \n SpaceSniffer  http://www.uderzo.it/main_products/space_sniffer/index.html \n 清理卸载工具 \n \n W10Privacy  https://www.winprivacy.de/deutsch-start/download \n Windows 10 Manager  https://www.yamicsoft.com \n \n WMXD7-RG8FP-OYKS3-KHTN6 \n \n \n https://uninstalr.com \n Total Uninstall  https://www.martau.com \n HiBit Uninstaller  https://www.hibitsoft.ir/Uninstaller.html \n BCUninstaller  https://github.com/Klocman/Bulk-Crap-Uninstaller \n \n https://sourceforge.net/projects/bulk-crap-uninstaller \n \n \n Uninstall Tool  https://github.com/crystalidea \n \n https://crystalidea.com/uninstall-tool \n \n \n UninstallTool／Geek／IObitUninstaller／RevoUninstalle \n RegWorkshop／RegCool \n https://kurtzimmermann.com \n Revo Uninstaller  https://www.revouninstaller.com \n Geek Uninstaller  https://github.com/geekuninstaller/translations \n \n https://geekuninstaller.com \n \n \n IObit Uninstaller  https://www.iobit.com/en/advanceduninstaller.php \n https://www.totaluninstaller.com \n Registry Finder \n http://www.hibitsoft.ir \n Windows Install Clean Up  安装后在安装目录找到 msicuu.exe 运行，然后选中程序点击 remove \n https://www.ccleaner.com \n https://www.wisecleaner.com \n 强制删除  https://github.com/differentrain/Delapp \n 密码管理 \n \n two-factor (2FA)：TOTP(Time-based One-Time Password), HOTP(HMAC-based one-time password) \n \n \n https://github.com/topics/2fa \n https://github.com/topics/totp \n https://github.com/topics/hotp \n \n \n https://github.com/1Password \n https://github.com/ftyszyx/lockpass \n https://authy.com \n \n https://github.com/momaek/authy \n https://github.com/BrandonPotter/GoogleAuthenticator \n https://github.com/alexzorin/authy \n \n \n https://github.com/beemdevelopment/Aegis \n LastPass Authenticator \n Microsoft Authenticator \n https://github.com/google/google-authenticator-android \n KeePass  https://sourceforge.net/projects/keepass \n \n https://keepass.info \n https://sourceforge.net/projects/kpenhentryview \n https://github.com/smorks/keepassnatmsg \n https://sourceforge.net/projects/webautotype \n \n \n https://www.keepersecurity.com \n Eziriz IntelliLock \n https://github.com/lastpass \n \n https://www.lastpass.com \n \n \n https://github.com/bitwarden \n \n https://github.com/dani-garcia/vaultwarden \n \n \n https://www.passwordstore.org \n https://github.com/Infisical/infisical \n https://www.microfocus.com/zh-cn/cyberres/identity-access-management \n https://www.secureauth.com \n Dashlane \n N-able Passportal \n Teleport \n https://proton.me/pass \n https://github.com/buttercup \n https://github.com/passbolt/passbolt_api \n https://github.com/keepassxreboot/keepassxc \n https://github.com/PhilippC/keepass2android \n https://www.yubico.com/products/yubico-authenticator \n https://www.authenticid.com/products/identity-pass \n Other \n \n 删除广告  https://github.com/xM4ddy/OFGB \n https://github.com/ZenPrivacy/zen-desktop \n 监控网速CPU及内存  https://github.com/zhongyang219/TrafficMonitor \n https://github.com/processhacker/processhacker \n http://wenlei.ys168.com \n https://www.hwinfo.com \n https://www.aida64.com \n https://entropy6.com/xmeters \n https://bitsum.com \n https://pragmar.com/appstat \n https://github.com/winsiderss/systeminformer \n \n https://sourceforge.net/projects/systeminformer \n \n \n https://www.mitec.cz/tmx.html \n Process Lasso  https://bitsum.com \n 磁盘信息  https://github.com/hiyohiyo/CrystalDiskInfo \n \n https://sourceforge.net/projects/crystaldiskinfo \n \n \n 性能测试  https://github.com/xmrig/xmrig \n https://www.aida64.com/downloads \n 硬件检测  http://www.tbtool.cn \n 流量监控  https://www.glasswire.com \n https://github.com/TheCGDF/NetSpeed \n MSI Afterbuner  https://www.msi.com/Landing/afterburner/graphics-cards \n RTSS  https://www.guru3d.com/files-details/rtss-rivatuner-statistics-server-download.html \n 热键占用  https://github.com/BlackINT3/OpenArk \n 全局快捷键  https://github.com/C5H12O5/TextGO \n PCHunter  http://www.xuetr.com \n FindGlobalHotkey \n https://sourceforge.net/projects/powertool \n https://github.com/mdelura/GHotKeys \n Windows Hotkey Explorer \n 火绒安全  https://www.huorong.cn \n 可视化创建符号链接  https://github.com/imDema/FreeMove \n 快捷启动  https://github.com/cuiliang/Quicker \n https://github.com/ParthJadhav/verve \n https://www.sordum.org \n https://u.tools \n https://github.com/he55/DreamScene2 \n https://github.com/hui-Zz/RunAny \n https://github.com/fanchenio/DawnLauncher \n https://github.com/szzhiyang \n \n https://github.com/PowerKeys \n \n \n https://www.raycast.com \n 鼠标手势  https://github.com/yingDev \n https://github.com/maplelost/lazyeat \n 鼠标增强  https://github.com/majorworld/MousePlus \n https://github.com/mgth/LittleBigMouse \n 键鼠输入可视化  https://github.com/mulaRahul/keyviz \n 键盘控制鼠标  https://github.com/lesderid/keynavish \n https://github.com/jordansissel/keynav \n 远程鼠标控制  https://github.com/feschber/lan-mouse \n https://github.com/deskflow/deskflow \n 蓝牙管理  https://github.com/m2jean/ToothTray \n 便携式软件  https://sourceforge.net/projects/portableapps \n 右键菜单  https://github.com/moudey/shell \n 活动跟踪  https://github.com/ActivityWatch/activitywatch \n https://github.com/Planshit/Tai \n https://github.com/undergroundwires/privacy.sexy \n https://github.com/shion-app/shion \n 风扇控制  https://github.com/Rem0o/FanControl.Releases \n 便签  https://github.com/Blakeinstein/Bloop \n 加强Capslock键  https://github.com/wo52616111/capslock-plus \n 快速查看  https://github.com/QL-Win/QuickLook \n https://github.com/shibayan/WinQuickLook \n https://github.com/ccseer/Seer \n https://github.com/25H/Maya \n https://getrolan.com \n 黑暗模式  https://github.com/Armin2208/Windows-Auto-Night-Mode \n https://github.com/jonls/redshift \n 休息提醒  https://github.com/rcaelers/workrave \n 喝水提醒  https://github.com/rock-zhang/Shui \n EarTrumpet 为每个软件单独设置音量 \n 桌面  https://www.coodesker.com \n https://github.com/eythaann/Seelen-UI \n 宠物  https://github.com/ayangweb/BongoCat \n 桌面排版  https://sourceforge.net/projects/scribus \n \n https://github.com/scribusproject/scribus \n \n \n https://www.softwareok.com/?seite=Freeware/DesktopOK \n 窗口管理  https://github.com/LGUG2Z/komorebi \n https://github.com/glzr-io/glazewm \n https://github.com/agent-kilo/jwno \n https://github.com/ramensoftware/windhawk \n 放大镜  https://github.com/hugoattal/milky-warp \n 壁纸  https://github.com/DaZiYuan/LiveWallpaper \n https://www.microsoft.com/zh-cn/bing/bing-wallpaper-msn \n https://timeline.ink \n https://www.pinnula.ca \n https://johnsad.ventures/software/backgroundswitcher/windows \n 创建交互壁纸  https://github.com/underpig1/octos \n 磁贴美化  https://github.com/XIU2/TileTool \n 仿MacOS美化  https://github.com/mydockfinder/mydockfinder \n \n https://www.mydockfinder.com \n \n \n 任务栏透明化  https://github.com/TranslucentTB \n 任务监控  https://github.com/gsass1/NTop \n 网络流量监控  https://github.com/GyulyVGC/sniffnet \n 获取本机WiFi密码二维码  https://github.com/sdushantha/wifi-password \n 禁用触摸板  https://touchfreeze.net \n https://github.com/VoodooI2C/VoodooI2CELAN \n \n https://www.penghubingzhou.cn/tags/I2C \n \n \n 查找泄漏密码  https://github.com/HaveIBeenPwned \n 文件病毒检测  https://github.com/SamuelTulach/VirusTotalUploader \n 服务管理  https://git.nssm.cc/nssm/nssm \n 游戏项目  https://github.com/leereilly/games \n https://github.com/SuperTux/supertux \n https://github.com/OpenTTD/OpenTTD \n https://github.com/CleverRaven/Cataclysm-DDA \n https://github.com/azerothcore/azerothcore-wotlk \n GTA游戏  https://github.com/GTAmodding/re3 \n https://github.com/theVakhovskeIsTaken/holoiso \n https://github.com/Plagman/gamescope \n https://github.com/open-goal/jak-project \n https://github.com/alexbatalov/fallout1-ce \n https://github.com/yuzu-emu \n https://github.com/HolographicWings/TOTK-Mods-collection \n https://github.com/SwagSoftware/Kisak-Strike \n https://github.com/gbdev \n https://github.com/Ryujinx/Ryujinx \n https://github.com/Atmosphere-NX/Atmosphere \n https://github.com/switchbrew \n https://github.com/skyline-emu/skyline \n https://github.com/StrongPC123/Far-Cry-1-Source-Full \n https://github.com/jamespetts/simutrans-extended \n https://github.com/halpz/re3 \n https://github.com/PixelGuys/Cubyz \n 电子书阅读器  https://github.com/btpf/Alexandria \n 翻译  https://github.com/pot-app/pot-desktop \n https://github.com/xxnuo/MTranServer \n 背单词  https://github.com/Uahh/ToastFish \n 共享键鼠和剪贴板给安卓  https://github.com/BHznJNs/InputShare \n CAD  https://github.com/leozide/leocad \n 数据可视化  https://labplot.org \n 输入法  https://github.com/rime \n https://github.com/studyzy/imewlconverter \n \n \n http://www.downloadsoftware.ir \n https://www.0daydown.com \n https://downloadly.ir \n https://repack.me \n https://lrepacks.ru \n https://mac-torrents.io \n https://4howcrack.com \n https://free4pc.org \n https://github.com/cuifengcn/TAICHI-flet \n 有哪些可以替代常用软件的开源软件？ \n 教学资源  https://github.com/52beijixing/smartedu-download \n \n",createdTime:1761814324e3},{title:"HTML",frontmatter:{description:"Hypertext Markup Language：定义网页的内容",meta:[{name:"twitter:title",content:"HTML"},{name:"twitter:description",content:"Hypertext Markup Language：定义网页的内容"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Web/HTML.html"},{property:"og:type",content:"article"},{property:"og:title",content:"HTML"},{property:"og:description",content:"Hypertext Markup Language：定义网页的内容"},{property:"og:url",content:"https://bajins.com/Web/HTML.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"HTML"},{itemprop:"description",content:"Hypertext Markup Language：定义网页的内容"}]},regularPath:"/Web/HTML.html",relativePath:"Web/HTML.md",key:"v-6c4cc6cd",path:"/Web/HTML.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"Meta标签",slug:"meta标签"},{level:2,title:"页面刷新汇总",slug:"页面刷新汇总"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' HTML \n Flag Meta标签 页面刷新汇总 \n Flag \n \n Hypertext Markup Language：定义网页的内容 \n \n \n 标准规范  https://github.com/whatwg/html \n https://github.com/whatwg/dom \n HTML全局属性  https://www.w3.org/wiki/HTML/Attributes/_Global \n https://developer.mozilla.org/zh-CN/docs/Web/HTML \n https://github.com/thedaviddias/Front-End-Checklist \n \n \n https://github.com/gustavoguanabara/html-css \n https://github.com/bradtraversy/50projects50days \n https://github.com/atherosai/ui \n 响应式  https://github.com/bedimcode \n \n \n Window对象 -> Parent对象 -> Frame对象 -> Document对象 -> Form对象 \n \n template代码片段 \n \n https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/template \n https://www.html5rocks.com/zh/tutorials/webcomponents/template \n \n 文档片段  https://developer.mozilla.org/zh-CN/docs/Web/API/DocumentFragment \n \n \n https://caniuse.com/?search=template \n 关于template标签用法总结(含vue中的用法总结) \n \n \n <script>  和  <template> （推荐） 标签内的内容页面不会渲染，浏览器会默认添加 display: none; ，也不能使用选择器定位子元素 \n <script type=text/html >  或  <script type="text/template" >  定义一个被JS调用的代码，内容不会被执行 \n <div style="display: none">  与复用DOM结构后的id等重复：可以把DOM结构缓存到JS变量或标签属性内容，然后移除这个标签 \n \n select框默认选项为空白 \n < option   selected = " selected "   disabled = " disabled "    style = \' display :  none \'   value = \' \' > </ option > \n Meta标签 \n \x3c!-- 声明文档使用的字符编码 --\x3e \n < meta   charset = \' utf-8 \' > \n \x3c!-- 优先使用 IE 最新版本和 Chrome --\x3e \n < meta   http-equiv = " X-UA-Compatible "   content = " IE=edge,chrome=1 " /> \n \x3c!-- 页面描述 --\x3e \n < meta   name = " description "   content = " 不超过150个字符 " /> \n \x3c!-- 页面关键词 --\x3e \n < meta   name = " keywords "   content = " " /> \n \x3c!-- 网页作者 --\x3e \n < meta   name = " author "   content = " name, email@gmail.com " /> \n \x3c!-- 搜索引擎抓取 --\x3e \n < meta   name = " robots "   content = " index,follow " /> \n \x3c!-- 为移动设备添加 viewport --\x3e \n < meta   name = " viewport "   content = " initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no " > \n \x3c!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --\x3e \n\n \x3c!-- iOS 设备 begin --\x3e \n < meta   name = " apple-mobile-web-app-title "   content = " 标题 " > \n \x3c!-- 添加到主屏后的标题（iOS 6 新增） --\x3e \n < meta   name = " apple-mobile-web-app-capable "   content = " yes " /> \n \x3c!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --\x3e \n\n < meta   name = " apple-itunes-app "   content = " app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL " > \n \x3c!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --\x3e \n < meta   name = " apple-mobile-web-app-status-bar-style "   content = " black " /> \n \x3c!-- 设置苹果工具栏颜色 --\x3e \n < meta   name = " format-detection "   content = " telphone=no, email=no " /> \n \x3c!-- 忽略页面中的数字识别为电话，忽略email识别 --\x3e \n \x3c!-- 启用360浏览器的极速模式(webkit) --\x3e \n < meta   name = " renderer "   content = " webkit " > \n \x3c!-- 避免IE使用兼容模式 --\x3e \n < meta   http-equiv = " X-UA-Compatible "   content = " IE=edge " > \n \x3c!-- 不让百度转码 --\x3e \n < meta   http-equiv = " Cache-Control "   content = " no-siteapp "   /> \n \x3c!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --\x3e \n < meta   name = " HandheldFriendly "   content = " true " > \n \x3c!-- 微软的老式浏览器 --\x3e \n < meta   name = " MobileOptimized "   content = " 320 " > \n \x3c!-- uc强制竖屏 --\x3e \n < meta   name = " screen-orientation "   content = " portrait " > \n \x3c!-- QQ强制竖屏 --\x3e \n < meta   name = " x5-orientation "   content = " portrait " > \n \x3c!-- UC强制全屏 --\x3e \n < meta   name = " full-screen "   content = " yes " > \n \x3c!-- QQ强制全屏 --\x3e \n < meta   name = " x5-fullscreen "   content = " true " > \n \x3c!-- UC应用模式 --\x3e \n < meta   name = " browsermode "   content = " application " > \n \x3c!-- QQ应用模式 --\x3e \n < meta   name = " x5-page-mode "   content = " app " > \n \x3c!-- windows phone 点击无高光 --\x3e \n < meta   name = " msapplication-tap-highlight "   content = " no " > \n \x3c!-- iOS 图标 begin --\x3e \n < link   rel = " apple-touch-icon-precomposed "   href = " /apple-touch-icon-57x57-precomposed.png " /> \n \x3c!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --\x3e \n < link   rel = " apple-touch-icon-precomposed "   sizes = " 114x114 "   href = " /apple-touch-icon-114x114-precomposed.png " /> \n \x3c!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --\x3e \n < link   rel = " apple-touch-icon-precomposed "   sizes = " 144x144 "   href = " /apple-touch-icon-144x144-precomposed.png " /> \n \x3c!-- Retina iPad，144x144 像素，可以没有，但推荐有 --\x3e \n \x3c!-- iOS 图标 end --\x3e \n\n \x3c!-- iOS 启动画面 begin --\x3e \n < link   rel = " apple-touch-startup-image "   sizes = " 768x1004 "   href = " /splash-screen-768x1004.png " /> \n \x3c!-- iPad 竖屏 768 x 1004（标准分辨率） --\x3e \n < link   rel = " apple-touch-startup-image "   sizes = " 1536x2008 "   href = " /splash-screen-1536x2008.png " /> \n \x3c!-- iPad 竖屏 1536x2008（Retina） --\x3e \n < link   rel = " apple-touch-startup-image "   sizes = " 1024x748 "   href = " /Default-Portrait-1024x748.png " /> \n \x3c!-- iPad 横屏 1024x748（标准分辨率） --\x3e \n < link   rel = " apple-touch-startup-image "   sizes = " 2048x1496 "   href = " /splash-screen-2048x1496.png " /> \n \x3c!-- iPad 横屏 2048x1496（Retina） --\x3e \n\n < link   rel = " apple-touch-startup-image "   href = " /splash-screen-320x480.png " /> \n \x3c!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --\x3e \n < link   rel = " apple-touch-startup-image "   sizes = " 640x960 "   href = " /splash-screen-640x960.png " /> \n \x3c!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --\x3e \n < link   rel = " apple-touch-startup-image "   sizes = " 640x1136 "   href = " /splash-screen-640x1136.png " /> \n \x3c!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --\x3e \n \x3c!-- iOS 启动画面 end --\x3e \n\n \x3c!-- iOS 设备 end --\x3e \n < meta   name = " msapplication-TileColor "   content = " #000 " /> \n \x3c!-- Windows 8 磁贴颜色 --\x3e \n < meta   name = " msapplication-TileImage "   content = " icon.png " /> \n \x3c!-- Windows 8 磁贴图标 --\x3e \n\n < link   rel = " alternate "   type = " application/rss+xml "   title = " RSS "   href = " /rss.xml " /> \n \x3c!-- 添加 RSS 订阅 --\x3e \n < link   rel = " shortcut icon "   type = " image/ico "   href = " /favicon.ico " /> \n \x3c!-- 添加 favicon icon --\x3e \n\n \x3c!-- sns 社交标签 begin --\x3e \n \x3c!-- 参考微博API --\x3e \n < meta   property = " og:type "   content = " 类型 "   /> \n < meta   property = " og:url "   content = " URL地址 "   /> \n < meta   property = " og:title "   content = " 标题 "   /> \n < meta   property = " og:image "   content = " 图片 "   /> \n < meta   property = " og:description "   content = " 描述 "   /> \n \x3c!-- sns 社交标签 end --\x3e \n 页面刷新汇总 \n \n history.go(0) // 刷新当前页 \n history.go(1) // 返回上一页 \n location.reload() \n location=location \n location.assign(location) \n document.execCommand(\'Refresh\') \n window.navigate(location) \n location.replace(location) \n document.URL=location.href \n \n 刷新页面内嵌框架 \n \n window.parent.frames[1].location.reload(); \n window.parent.frames.bottom.location.reload(); \n window.parent.frames["bottom"].location.reload(); \n window.parent.frames.item(1).location.reload(); \n window.parent.frames.item(\'bottom\').location.reload(); \n window.parent.bottom.location.reload(); \n window.parent[\'bottom\'].location.reload(); \n \n 页面自动刷新 \n < meta   http-equiv = " refresh "   content = " 20 " > \n \x3c!-- 其中20指每隔20秒刷新一次页面 --\x3e \n \n 页面开窗口或关闭时自动刷新 \n < body   onload = " opener . location . reload ( ) " >  开窗时刷新 \n < body   onUnload = " opener . location . reload ( ) " >  关闭时刷新 \n < script   language = " javascript " >  \nwindow . opener . document . location . reload ( )  \n </ script > \n \n 参考： \n \n JS中实现页面跳转和刷新方法总结 \n JS刷新当前页面的几种方法总结 \n \n',createdTime:1761814324e3},{title:"CSS",frontmatter:{description:"Cascading Style Sheets：规定网页的布局",meta:[{name:"twitter:title",content:"CSS"},{name:"twitter:description",content:"Cascading Style Sheets：规定网页的布局"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Web/CSS.html"},{property:"og:type",content:"article"},{property:"og:title",content:"CSS"},{property:"og:description",content:"Cascading Style Sheets：规定网页的布局"},{property:"og:url",content:"https://bajins.com/Web/CSS.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"CSS"},{itemprop:"description",content:"Cascading Style Sheets：规定网页的布局"}]},regularPath:"/Web/CSS.html",relativePath:"Web/CSS.md",key:"v-4c4ad226",path:"/Web/CSS.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"第三方库",slug:"第三方库"},{level:2,title:"CSS3新单位和计算",slug:"css3新单位和计算"},{level:2,title:"Media Queries",slug:"media-queries"},{level:3,title:"设备类型",slug:"设备类型"},{level:3,title:"设备特性",slug:"设备特性"},{level:3,title:"外联和内嵌样式",slug:"外联和内嵌样式"},{level:3,title:"混合应用",slug:"混合应用"},{level:2,title:"文本溢出处理",slug:"文本溢出处理"},{level:3,title:"隐藏溢出内容",slug:"隐藏溢出内容"},{level:2,title:"Footer固定在页面底部",slug:"footer固定在页面底部"},{level:2,title:"Footer固定在窗口底部",slug:"footer固定在窗口底部"},{level:2,title:"水平排列",slug:"水平排列"},{level:2,title:"动画",slug:"动画"},{level:2,title:"伪类和伪元素",slug:"伪类和伪元素"},{level:2,title:"优先级权重恢复",slug:"优先级权重恢复"},{level:2,title:"输入框勾选样式",slug:"输入框勾选样式"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' CSS \n Flag 第三方库 CSS3新单位和计算 Media Queries 设备类型 设备特性 外联和内嵌样式 混合应用 文本溢出处理 隐藏溢出内容 Footer固定在页面底部 Footer固定在窗口底部 水平排列 动画 伪类和伪元素 优先级权重恢复 输入框勾选样式 \n Flag \n \n Cascading Style Sheets：规定网页的布局 \n \n \n https://drafts.csswg.org/css-cascade \n https://developer.mozilla.org/zh-CN/docs/Web/CSS \n https://github.com/chokcoco/iCSS \n https://github.com/Afif13 \n \n https://css-loaders.com \n https://css-generators.com \n \n \n CSS3/CSS2/CSS 教程  http://www.w3chtml.com/css3 \n https://github.com/5t3ph/moderncss-dot-dev \n https://github.com/adrianhajdin/brainwave \n HTML系列教程  https://www.w3school.com.cn/h.asp \n http://css.doyoe.com/ \n CSS/CSS3 中文参考文档手册  http://css.cuishifeng.cn \n https://github.com/adamschwartz/magic-of-css \n CSS规约  https://github.com/stylelint/stylelint \n CSS灵感  https://github.com/chokcoco/CSS-Inspiration \n https://github.com/mezzoblue/csszengarden.com \n https://github.com/ubershmekel/cssbed \n CSS练习  https://github.com/TheOdinProject/css-exercises \n 界面灵感类网站合集 \n https://ui.aceternity.com/components \n 现代 CSS 高阶技巧，完美的波浪进度条效果 \n 可折叠树  https://iamkate.com/code/tree-views \n CSS In 2023 \n head标签  https://getoutofmyhead.dev \n \n 各种隐藏HTML元素的区别 \n \n display:none;  一旦显示为隐藏，则其子元素也隐藏，并且不占用任何位置，JS将获取不到子元素 \n visiblity:hidden  设置为隐藏，占据页面空间，其子元素不隐藏，占用位置，不可点击 \n transform:scale(0);  缩放为0，占据页面空间，占用位置，不可点击 \n height:0  高度为0，不可点击 \n opacity:0  透明度，取值范围（0-1），0不显示，占据页面空间，占用位置，并且可以点击 \n z-index:-10; position:relative;  层级， z-index 属性需要搭配 positon 属性一块使用，不然设置了不起作用 \n position:absolute; left:-5000; top:-5000;  绝对定位方式移出可视区域，不影响页面布局，脱标 \n cli-path:polygon(0px 0px , 0px 0px,0px 0px,0px 0px)  通过裁剪盒子，不脱标 \n position:absolute; clip:rect(0px 0px 0px 0px);  通过裁剪绝对定位的盒子，脱标 \n removeChild  用JS暂时从DOM树上摘下，但并未从后台清除，如需再次生成必须要用 appendChild 来生成 \n \n 颜色 \n \n 十六进制色  background-color:#0000ff; \n RGB 颜色  background-color:rgb(255,0,0); \n RGBA 颜色  background-color:rgba(255,0,0,0.5);  最后一个参数是介于 0.0（完全透明）与 1.0（完全不透明）的数字 \n HSL 颜色  background-color:hsl(120,65%,75%);  是hue（色调）、saturation（饱和度）、lightness（亮度），颜色柱面坐标表示法 \n HSLA 颜色  background-color:hsla(120,65%,75%,0.3); \n 预定义/跨浏览器颜色名  background-color:red; \n \n \n https://kigen.design/color \n CSS颜色代码大全 \n CSS 颜色名称 \n \n 17种标准颜色（HTML 4标准只定义了16种颜色，CSS2.1添加橙色） \n \n \n \n 英文名 \n 中文 \n 示例 \n \n \n \n \n aqua \n 浅绿色 \n ▇▇ \n \n \n black \n 黑色 \n ▇▇ \n \n \n blue \n 蓝色 \n ▇▇ \n \n \n fuchsia \n 紫红色 \n ▇▇ \n \n \n gray \n 灰色 \n ▇▇ \n \n \n green \n 绿色 \n ▇▇ \n \n \n lime \n 石灰 \n ▇▇ \n \n \n maroon \n 栗色 \n ▇▇ \n \n \n navy \n 海军 \n ▇▇ \n \n \n olive \n 橄榄色 \n ▇▇ \n \n \n orange \n 橙色 \n ▇▇ \n \n \n purple \n 紫色 \n ▇▇ \n \n \n red \n 红色 \n ▇▇ \n \n \n silver \n 银色 \n ▇▇ \n \n \n teal \n 蓝绿色 \n ▇▇ \n \n \n white \n 白色 \n ▇▇ \n \n \n yellow \n 黄色 \n ▇▇ \n \n \n \n \n \n \n 英文名 \n 中文 \n RGB对照 \n 示例 \n \n \n \n \n blue \n 蓝 \n #007bff \n ▇▇ \n \n \n cyan \n 青 \n #17a2b8 \n ▇▇ \n \n \n dark \n 黑 \n #343a40 \n ▇▇ \n \n \n gray \n 灰 \n #6c757d \n ▇▇ \n \n \n gray-dark \n 灰黑 \n #343a40 \n ▇▇ \n \n \n green \n 绿 \n #28a745 \n ▇▇ \n \n \n indigo \n 靛蓝 \n #6610f2 \n ▇▇ \n \n \n orange \n 橙 \n #fd7e14 \n ▇▇ \n \n \n pink \n 粉 \n #e83e8c \n ▇▇ \n \n \n purple \n 紫 \n #6f42c1 \n ▇▇ \n \n \n red \n 红 \n #dc3545 \n ▇▇ \n \n \n teal \n 蓝绿 \n #20c997 \n ▇▇ \n \n \n white \n 白 \n #fff \n ▇▇ \n \n \n yellow \n 黄 \n #ffc107 \n ▇▇ \n \n \n – \n – \n – \n – \n \n \n primary \n 主要 \n #007bff \n ▇▇ \n \n \n secondary \n 次要 \n #6c757d \n ▇▇ \n \n \n success \n 成功 \n #28a745 \n ▇▇ \n \n \n info \n 信息 \n #17a2b8 \n ▇▇ \n \n \n warning \n 警告 \n #ffc107 \n ▇▇ \n \n \n danger \n 危险 \n #dc3545 \n ▇▇ \n \n \n light \n 浅色 \n #f8f9fa \n ▇▇ \n 第三方库 \n \n https://github.com/topics/css-framework \n \n \n https://github.com/filamentgroup \n https://github.com/pure-css/pure \n \n https://www.purecss.cn \n \n \n https://github.com/wintermute-cell/magick.css \n https://github.com/louismerlin/concrete.css \n https://github.com/milligram/milligram \n https://github.com/dhg/Skeleton \n https://github.com/necolas/normalize.css \n https://github.com/picturepan2/spectre \n https://github.com/semantic-org/semantic-ui \n https://github.com/Dogfalo/materialize \n \n http://www.materializecss.cn \n \n \n https://github.com/jgthms/bulma \n \n https://lqzhgood.github.io/bulma-docs-cn \n \n \n https://github.com/Chalarangelo/mini.css \n https://github.com/olton/Metro-UI-CSS \n https://github.com/saadeghi/daisyui \n https://github.com/windicss/windicss \n https://github.com/tailwindlabs/tailwindcss \n \n https://www.tailwindcss.cn \n https://github.com/mdbootstrap/Tailwind-Elements \n https://github.com/sonofmagic/weapp-tailwindcss \n https://github.com/Simon-He95/transformToTailwindcss \n \n \n https://github.com/sailboatui/sailboatui \n https://github.com/dufu1991/stdf \n https://github.com/FullHuman/purgecss \n \n https://www.purgecss.cn \n \n \n https://github.com/codazoda/neatcss \n https://github.com/tw-in-js/twind \n https://github.com/bigskysoftware/missing \n https://github.com/BlazeSoftware \n https://github.com/postcss/postcss \n \n https://www.postcss.com.cn \n \n \n https://github.com/unocss/unocss \n https://github.com/ansible-semaphore/semaphore \n https://www.telerik.com/kendo-ui \n https://github.com/shadcn/ui \n \n https://github.com/shadcn-ui/ui \n https://ui.shadcn.com/charts \n \n \n https://github.com/franken-ui/ui \n https://github.com/magicuidesign/magicui \n https://github.com/radix-ui \n https://github.com/shoelace-style/shoelace \n https://github.com/felix-bohlin/ui \n https://github.com/cferdinandi/kelp \n CSS布局引擎  https://github.com/chearon/dropflow \n 解析  https://github.com/csstree/csstree \n 矢量图标  https://github.com/FortAwesome/Font-Awesome \n \n https://github.com/l-lin/font-awesome-animation \n \n \n https://www.iconfont.cn \n https://www.iconbolt.com \n https://icomoon.io \n https://www.flaticon.com/authors/freepik \n https://glyphicons.com \n https://iconbuddy.app \n https://useanimations.com \n https://github.com/primer/octicons \n https://yesicon.app \n \n https://github.com/rotick/yesicon-forum \n \n \n https://github.com/simple-icons \n https://github.com/pheralb/svgl \n https://iconce.com \n https://github.com/KanjiVG/kanjivg \n https://github.com/lucide-icons/lucide \n https://shipfa.st/tools/logo-fast \n https://www.svgviewer.dev \n https://github.com/hugeicons/hugeicons-react \n https://github.com/pqoqubbw/icons \n https://github.com/YuheshPandian/ICONIC \n 生成SVG  https://github.com/chaseFunny/svg-backend \n https://www.hyvector.com \n https://github.com/JiuRanYa/text-to-svg \n SVG路径动画  https://github.com/YYsuni/path-motion \n \n \n 最受程序员欢迎的 20 个 CSS 框架 \n https://github.com/sass \n \n https://www.sass.hk/docs \n SASS用法指南(阮一峰) \n \n \n https://github.com/less \n \n https://less.bootcss.com \n \n \n https://github.com/cssnano/cssnano \n \n https://www.cssnano.cn \n \n \n SVG 的友好介绍 \n CSS3新单位和计算 \n \n https://www.w3.org/TR/css3-values/#lengths \n https://developer.mozilla.org/zh-CN/docs/Web/CSS/length \n https://www.raresportan.com/css-units \n \n \n \n \n 单位 \n 说明 \n \n \n \n \n px \n 一像素（pixel） \n \n \n cm \n 一厘米。 1cm = 96px / 2.54 \n \n \n mm \n 一毫米。 1mm = 1/10 * 1cm \n \n \n in \n 一英寸。 1in = 2.54cm = 96px \n \n \n pc \n 一磅（point），72 分之一英寸。 1pc = 12pt = 1/6 * 1in \n \n \n pt \n 一磅（point），72 分之一英寸。 1pt = 1/12 * 1pc = 1/72 * 1in \n \n \n ch \n 数字 0 的宽度 \n \n \n em \n 相对于应用在当前元素的字体尺寸。一般浏览器字体大小默认为16px，则2em == 32px； \n \n \n ex \n 依赖于英文字母小 x 的高度 \n \n \n rem \n 根元素（html）的 font-size \n \n \n vh \n viewpoint height，视窗高度，1vh=视窗高度的1% \n \n \n vw \n viewpoint width，视窗宽度，1vw=视窗宽度的1% \n \n \n vmin \n vw和vh中较小的那个。 \n \n \n vmax \n vw和vh中较大的那个。 \n \n \n \n \n vw 、 vh 、 vmin 、 vmax  是一种由视窗（ Viewport ）大小来决定的视窗单位，也是相对单位。它相对的不是父节点或者页面的根节点。 \n \n \n 视窗( Viewport )是你的浏览器实际显示内容的区域，换句话说是你的不包括工具栏和按钮的网页浏览器。 \n \n \n 做移动页面开发时，如果使用 vw 、 wh 设置字体大小，在竖屏和横屏状态下显示的字体大小是不一样的。\n这里就可以用到 vmin 和 vmax 使得文字大小在横竖屏下保持一致。 \n \n \n vw 和 vh  与 % 百分比的区别\n \n % 是相对于父元素的大小设定的比率， vw 、 vh  是视窗大小决定的。 \n vw 、 vh 优势在于能够直接获取高度，而用 % 在没有设置 body 高度的情况下，无法正确获得可视区域的高度。 \n \n \n \n \n 当元素没有内容时候，设置 height:100% ，该元素不会被撑开，此时高度为 0 ，但是设置 height:100vh ，该元素会被撑开屏幕高度一致。 \n \n calc() 动态计算长度值 \n \n https://developer.mozilla.org/zh-CN/docs/Web/CSS/calc \n \n \n 使用 + 、 - 、 *  和  / 四则运算 \n 可以使用 % 、 px 、 em 、 rem 等单位 \n 可以混合使用各种单位进行计算 \n 表达式中有 + 和 - 时，其前后必须要有空格，如 widht: calc(12%+5em) 这种没有空格的写法是错误的 \n 表达式中有 * 和 / 时，其前后可以没有空格，但建议留有空格 \n Media Queries \n \n Media Queries 能在不同的条件下使用不同的样式，使页面在不同在终端设备下达到不同的渲染效果。 \n \n \n https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries \n https://developer.mozilla.org/zh-CN/docs/Web/HTML/Viewport_meta_tag \n https://viewportsizer.com/devices \n https://experienceleague.adobe.com/docs/target/using/experiences/vec/mobile-viewports.html \n \n \n HTML页面适应移动端 \n 到底什么是像素 \n 使用meta标签设置viewport \n visual viewport、layout viewport和ideal viewport介绍 \n viewport 深入理解 \n \n \n https://github.com/search?q=viewport \n https://github.com/pazguille/viewport \n \n \x3c!-- 使用 Media Queries 必须先在页面中声明，移动设备上的`viewport`就是其屏幕上能用来显示我们的网页的那一块区域。\n    该标签最大的作用是让当前viewport的宽度等于设备的宽度，即将viewport由默认变为ideal viewport，\n    同时不允许用户缩放网页（缩放是相对于 ideal viewport来进行缩放的） --\x3e \n < meta   name = " viewport "   content = " width=device-width, initial-scale=1 " > \n \n \n width = device-width ：宽度等于当前设备的宽度 \n initial-scale ：初始的缩放比例（默认设置为1.0） \n minimum-scale ：允许用户缩放到的最小比例（默认设置为1.0） \n maximum-scale ：允许用户缩放到的最大比例（默认设置为1.0） \n user-scalable ：用户是否可以手动缩放（默认设置为no，因为我们不希望用户放大缩小页面） \n \n \n 完整示例 MediaQueriesExample.html \n \n \n 使用 Media Queries 必须要使用 @media 开头，然后指定媒体类型（也可以称为设备类型），随后是指定媒体特性（也可以称之为设备特性）。 \n \n \n 语法：  @media 设备类型 and|not|only （设备特性）{样式代码} \n \n and 将多个媒体特性结合在一起。可以包含0到多个表达式，表达式又可以包含0到多个关键字，以及一种媒体类型。 \n only 的作用是，让那些不支持 Media Query 但是能够读取 Media Type 的设备的浏览器将表达式中的样式隐藏起来。\n \n 示例： @media only screen and (min-width: 768px) {body {background: blue;}} \n \n \n 对于不支持 Media Query 但能够读取 Media Type 的设备，由于先读取到的是 only 而不是 screen ，将忽略该样式。 \n not 是用来排除某种制定的媒体类型，也就是用来排除符合表达式的设备。换句话说， not 关键词表示对后面的表达式执行取反操作。 \n 设备类型 \n \n \n \n 值 \n 描述 \n \n \n \n \n all \n 用于所有设备 \n \n \n print \n 用于打印机和打印预览 \n \n \n screen \n 用于电脑屏幕，平板电脑，智能手机等。 \n \n \n speech \n 应用于屏幕阅读器等发声设备 \n 设备特性 \n \n 媒体特性的书写方式和样式的书写方式非常相似，主要分为两个部分，而且这两个部分之间使用冒号分隔：\n \n 第一个部分指的是媒体特性 \n 第二部分为媒体特性所指定的值 \n \n \n \n \n \n \n 值 \n 描述 \n \n \n \n \n aspect-ratio \n 定义输出设备中的页面可见区域宽度与高度的比率 \n \n \n color \n 定义输出设备每一组彩色原件的个数。如果不是彩色设备，则值等于0 \n \n \n color-index \n 定义在输出设备的彩色查询表中的条目数。如果没有使用彩色查询表，则值等于0 \n \n \n device-aspect-ratio \n 定义输出设备的屏幕可见宽度与高度的比率。 \n \n \n device-height \n 定义输出设备的屏幕可见高度。 \n \n \n device-width \n 定义输出设备的屏幕可见宽度。 \n \n \n grid \n 用来查询输出设备是否使用栅格或点阵。 \n \n \n height \n 定义输出设备中的页面可见区域高度。 \n \n \n max-aspect-ratio \n 定义输出设备的屏幕可见宽度与高度的最大比率。 \n \n \n max-color \n 定义输出设备每一组彩色原件的最大个数。 \n \n \n max-color-index \n 定义在输出设备的彩色查询表中的最大条目数。 \n \n \n max-device-aspect-ratio \n 定义输出设备的屏幕可见宽度与高度的最大比率。 \n \n \n max-device-height \n 定义输出设备的屏幕可见的最大高度。 \n \n \n max-device-width \n 定义输出设备的屏幕最大可见宽度。 \n \n \n max-height \n 定义输出设备中的页面最大可见区域高度。 \n \n \n max-monochrome \n 定义在一个单色框架缓冲区中每像素包含的最大单色原件个数。 \n \n \n max-resolution \n 定义设备的最大分辨率。 \n \n \n max-width \n 定义输出设备中的页面最大可见区域宽度。 \n \n \n min-aspect-ratio \n 定义输出设备中的页面可见区域宽度与高度的最小比率。 \n \n \n min-color \n 定义输出设备每一组彩色原件的最小个数。 \n \n \n min-color-index \n 定义在输出设备的彩色查询表中的最小条目数。 \n \n \n min-device-aspect-ratio \n 定义输出设备的屏幕可见宽度与高度的最小比率。 \n \n \n min-device-width \n 定义输出设备的屏幕最小可见宽度。 \n \n \n min-device-height \n 定义输出设备的屏幕的最小可见高度。 \n \n \n min-height \n 定义输出设备中的页面最小可见区域高度。 \n \n \n min-monochrome \n 定义在一个单色框架缓冲区中每像素包含的最小单色原件个数 \n \n \n min-resolution \n 定义设备的最小分辨率。 \n \n \n min-width \n 定义输出设备中的页面最小可见区域宽度。 \n \n \n monochrome \n 定义在一个单色框架缓冲区中每像素包含的单色原件个数。如果不是单色设备，则值等于0 \n \n \n orientation \n 定义输出设备中的页面可见区域高度是否大于或等于宽度。 \n \n \n resolution \n 定义设备的分辨率。如： 96dpi ,  300dpi ,  118dpcm \n \n \n scan \n 定义电视类设备的扫描工序。 \n \n \n width \n 定义输出设备中的页面可见区域宽度。 \n 外联和内嵌样式 \n /* 外联 */ \n @import   url ( style.css )  screen  and   ( min-width : 1000px ) ; \n \n \x3c!-- 外联 --\x3e \n < link   rel = " stylesheet "   href = " style.css "   media = " only screen and (max-width:640px) " > \n\n \x3c!-- 内联 --\x3e \n < style > \n     @media  screen  and   ( min-width : 640px )   { \n       body { \n         background : coral ; \n       } \n     } \n </ style > \n 混合应用 \n @media  all  and   ( orientation   :  portrait )   { \n /*竖屏*/ \n } \n @media  all  and   ( orientation   :  landscape )   { \n /*横屏*/ \n } \n @media  screen  and   ( min-width :  1200px )   { \n     /*>=1200的设备*/ \n } \n @media  screen  and   ( min-width :  960px )   and   ( max-width :  1199px )   { \n     /*>=960,<=1200的设备*/ \n } \n @media  screen  and   ( min-width :  768px )   and   ( max-width :  959px )   { \n     /*>=768,<=960的设备*/ \n } \n @media   only  screen  and   ( min-width :  480px )   and   ( max-width :  767px )   { \n     /*>=480,<=768的设备*/ \n } \n @media   only  screen  and   ( max-width :  479px )   { \n     /*<=480的设备*/ \n } \n \n Bootstrap \n \n 先看下面的代码,这是从 bootstrap 中遍历出来的， min-width 来确认分别是 768 、 992 、 1200 。 \n 当然了过去也有些设备宽度是 600   480 的，哪些小分辨率的我们都归类为小于 767 的。 \n 为什么是小于 767 而不是 768 呢，那是因为在 css 中 @media (min-width: 768px) 表示最小是 768 也就是 >=768 ，\n这里有等于，所以我们判断更小的设备用 @media (max-width: 767px) 这边表示 <=767 就不会有冲突了 \n \n \n 运用 @media 实现网页自适应中的几个关键分辨率 \n \n @media   ( min-width :  768px ) { \n /*>=768的设备*/ \n } \n @media   ( min-width :  992px ) { \n /*>=992的设备*/ \n } \n @media   ( min-width :  1200px ) { \n /*>=1200的设备*/ \n } \n \n \n 注意下顺序，如果你把上面的分辨率大小顺序反过来，按从大到小写那么很悲剧，因为如果是 1440 ,由于 1440>768 那么你的 1200 就会失效。 \n 所以我们用 min-width 时，小的放上面大的在下面，同理如果是用 max-width 那么就是大的在上面，小的在下面 \n \n @media   ( max-width :  1199px ) { \n /*<=1199的设备*/ \n } \n @media   ( max-width :  991px ) { \n /*<=991的设备*/ \n } \n @media   ( max-width :  767px ) { \n /*<=768的设备*/ \n } \n 文本溢出处理 \n \n \n white-space: normal|pre|nowrap|pre-wrap|pre-line|inherit;  设置如何处理元素内的空白 \n \n normal  默认。空白会被浏览器忽略 \n pre  空白会被浏览器保留。其行为方式类似 HTML 中的 pre 标签 \n nowrap  文本不会换行，文本会在在同一行上继续，直到遇到 br 标签为止 \n pre-wrap  保留空白符序列，但是正常地进行换行 \n pre-line  合并空白符序列，但是保留换行符 \n inherit  规定应该从父元素继承 white-space 属性的值 \n \n \n \n overflow-wrap: normal|break-word;  标明是否允许浏览器在单词内进行断句，防止当一个字符串太长而找不到它的自然断句点时产生溢出现象。 \n \n normal  只在允许的断字点换行(浏览器保持默认处理) \n break-word  在长单词或URL地址内部进行换行 \n \n \n \n word-break: normal|break-all|keep-all;  标明怎么样进行单词内的断句。 \n \n normal  使用浏览器默认的换行规则 \n break-all  允许在单词内换行 \n keep-all  只能在半角空格或连字符处换行 \n \n \n \n text-overflow: clip|ellipsis|string;  规定当文本溢出包含元素时发生的事情。 \n \n clip  修剪文本 \n ellipsis  显示省略符号来代表被修剪的文本 \n string  使用给定的字符串来代表被修剪的文本 \n 隐藏溢出内容 \n div { \n     /*必须指定宽度*/ \n     width :  200px ; \n     /*处理行内元素标签*/ \n     display :  block ; \n     /*隐藏溢出内容*/ \n     overflow :  hidden ; \n     word-break :  keep-all ; \n     /*强制文本不能换行*/ \n     white-space :  nowrap ; \n     text-overflow :  ellipsis ; \n } \n /*光标移动到div上，就能够看到全部文本。*/ \n div:hover { \n    text-overflow : inherit ; \n    overflow : visible ; \n } \n Footer固定在页面底部 \n \n Sticky Footer  并不是什么新的前端概念和技术，它指的就是一种网页效果：\n \n 如果页面内容不足够长时，页脚固定在浏览器窗口的底部； \n 如果内容足够长时，页脚固定在页面的最底部。但如果网页内容不够长，置底的页脚就会保持在浏览器窗口底部。 \n \n \n \n \n \n CSS-Footer底部固定实现 \n \n \n fix-footer-page-bottom-margin-top.html \n \n \n \n 这是个比较主流的用法，把内容部分最小高度设为100%，\n再利用内容部分的负底部外边距值来达到当高度不满时，页脚保持在窗口底部，当高度超出则随之推出的效果。 \n \n \n 需要容器里有额外的占位元素（如.ph），以防止 content 区域的内容被 footer 覆盖 \n \n \n 需要注意的是 .content 的 margin-bottom 值需要和 .footer 的负的 height 值保持一致，这一点不太友好。 \n \n \n fix-footer-page-bottom-calc.html \n \n \n calc 的用法比较简单，但是需要注意 calc 与 ( 之间不要有空格，另外运算符前后应该有空格。如： min-height: calc(100% - 50px); \n \n \n 通过计算函数 calc 计算（视窗高度 - 页脚高度）赋予内容区最小高度，不需要任何额外样式处理，代码量最少、最简单。 \n 如果不需考虑 calc() 以及 vh 单位的兼容情况，这是个很理想的实现方案。同样的问题是 footer 的高度值需要与 content 其中的计算值一致。 \n \n \n fix-footer-page-bottom-absolute.html \n \n \n 注意： div.container 设置最小高度为 100% ，以保证当内容区高度小于浏览器高度时， footer 仍位于底部 \n \n \n 这个方案需指定 html 、 body 的 100% 高度，且 content 的 padding-bottom 需要与 footer 的 height 一致。 \n \n \n fix-footer-page-bottom-flex.html \n Footer固定在窗口底部 \n \n fix-footer-window-bottom-fixed.html \n fix-footer-window-bottom-sticky.html \n 水平排列 \n \n 字体居中需使元素与父级元素等宽 \n \n \n CSS Flex弹性布局，多个div自动换行，源码 \n \n \n horizontal-arrangement-flex.html \n horizontal-arrangement-float-left.html \n horizontal-arrangement-inline-block.html \n 动画 \n \n 动画 \n 过渡 \n \n 属性 \n \n \n \n 属性 \n 描述 \n CSS \n \n \n \n \n transform \n 向元素应用 2D 或 3D 转换。 \n 3 \n \n \n transform-origin \n 允许你改变被转换元素的位置。 \n 3 \n \n \n transform-style \n 规定被嵌套元素如何在 3D 空间中显示。 \n 3 \n \n \n perspective \n 规定 3D 元素的透视效果。 \n 3 \n \n \n perspective-origin \n 规定 3D 元素的底部位置。 \n 3 \n \n \n backface-visibility \n 定义元素在不面对屏幕时是否可见。 \n 3 \n \n \n transition \n 简写属性，用于在一个属性中设置四个过渡属性。 \n 3 \n \n \n transition-property \n 规定应用过渡的 CSS 属性的名称。 \n 3 \n \n \n transition-duration \n 定义过渡效果花费的时间。默认是 0。 \n 3 \n \n \n transition-timing-function \n 规定过渡效果的时间曲线。默认是 "ease"。 \n 3 \n \n \n transition-delay \n 规定过渡效果何时开始。默认是 0。 \n 3 \n \n \n @keyframes \n 规定动画。 \n 3 \n \n \n animation \n 所有动画属性的简写属性，除了 animation-play-state 属性。 \n 3 \n \n \n animation-name \n 规定 @keyframes 动画的名称。 \n 3 \n \n \n animation-duration \n 规定动画完成一个周期所花费的秒或毫秒。默认是 0。 \n 3 \n \n \n animation-timing-function \n 规定动画的速度曲线。默认是 "ease"。 \n 3 \n \n \n animation-delay \n 规定动画何时开始。默认是 0。 \n 3 \n \n \n animation-iteration-count \n 规定动画被播放的次数。默认是 1。 \n 3 \n \n \n animation-direction \n 规定动画是否在下一周期逆向地播放。默认是 "normal"。 \n 3 \n \n \n animation-play-state \n 规定动画是否正在运行或暂停。默认是 "running"。 \n 3 \n \n \n animation-fill-mode \n 规定对象动画时间之外的状态。 \n 3 \n \n \n \n 圆形进度条 \n \n circle-progress-bar \n round-progress-bar \n \n \n 首先：是定义三个动画，第一个是最外层，让他只显示一半，然后运行3s，同时右边运行3s,从0到180度。 \n \n \n 接着：到了180度之后，释放外层的显示一半，让他自动显示其他。然后右边的停止动画并停在那里。 \n \n \n 最后：左边的在原来的基础（跟右边一样运行3s，同样转过180度）再继续转动180度。 \n 伪类和伪元素 \n \n 伪类 - CSS（层叠样式表） | MDN \n 伪元素 - CSS（层叠样式表） | MDN \n 伪元素组成的时间线 \n \n \n 分割线 \n \n .split-line:before   { \n     padding :  0 5px ; \n     color :  #ccc ; \n     content :   "|\\00a0" ; \n } \n 优先级权重恢复 \n \n 权重决定了你css规则怎样被浏览器解析直到生效。css权重关系到你的css规则是怎样显示的 \n \n \n 权重记忆口诀。从0开始，一个行内样式+1000，一个id+100，一个属性选择器/class或者伪类+10，一个元素名，或者伪元素+1 \n \n \n 优先级从高到底显示：!important>行内样式表>id选择器>类选择器>标签选择器>继承 \n \n \n \n \n 类型 \n 示例 \n 权重 \n \n \n \n \n !important \n 加在样式属性值后 \n 无穷 \n \n \n 内联样式 \n style="" \n 1000 \n \n \n ID选择器 \n #content \n 100 \n \n \n 类、伪类和属性选择器 \n .page、content、:hover \n 10 \n \n \n 标签选择器和伪元素选择器 \n div、p、:before \n 1 \n \n \n 通用选择器 \n * \n 0 \n \n \n 子选择器 \n > \n 0 \n \n \n 相邻选择器 \n + \n 0 \n \n \n 同胞选择器 \n - \n 0 \n \n \n \n \n css的优先级 和 权重 \n \n \n inherit  该值使得属性能够继承祖先设置 \n initial  属于CSS-wide关键字，属性初始值 \n unset  擦除属性申明，如果属性是默认继承属性，等同于inherit，如果属性是非继承属性，等同于initial，unset属于CSS-wide关键字 \n revert  重置当前样式来源（style origin）的样式 \n 输入框勾选样式 \n input[type=\'checkbox\']   { \n     cursor :  pointer ; \n     position :  relative ; \n     width :  18px ; \n     height :  18px ; \n     font-size :  16px ; \n     visibility :  hidden ; \n } \n input[type=\'checkbox\']::after   { \n     position :  absolute ; \n     top :  0 ; \n     background-color :  #fff ; \n     color :  #fff ; \n     border :  1px solid #b1b1b1 ; \n     width :  18px ; \n     height :  18px ; \n     display :  inline-block ; \n     visibility :  visible ; \n     padding-left :  0px ; \n     text-align :  center ; \n     content :   \' \' ; \n     /*border-radius: 50%;*/ \n     box-sizing :  border-box ; \n } \n\n input[type=\'checkbox\']:checked::after   { \n     background-color :  #4db7ff ; \n     border :  none ; \n     content :   \'\\2713\' ; \n     font-size :  14px ; \n     font-weight :  bold ; \n } \n \n input[type=\'checkbox\']   { \n     cursor :  pointer ; \n     position :  relative ; \n     width :  13px ; \n     height :  13px ; \n     font-size :  13px ; \n     margin-right :  5px ; \n     visibility :  hidden ; \n } \n input[type=\'checkbox\']::after   { \n     position :  absolute ; \n     top :  2px ; \n     color :  #fff ; \n     border :  1px solid #4db7ff ; \n     width :  13px ; \n     height :  13px ; \n     display :  inline-block ; \n     visibility :  visible ; \n     padding-left :  0px ; \n     text-align :  center ; \n     content :   \' \' ; \n     box-sizing :  border-box ; \n } \n \n input[type=\'checkbox\']:checked::after   { \n     color :  #4db7ff ; \n     border :  1px solid #4db7ff ; \n     content :   \'\\2713\' ; \n     font-size :  12px ; \n } \n \n ',createdTime:1761814324e3},{title:"JavaScript框架",frontmatter:{description:"https://github.com/angular/angular\n\tUI https://github.com/akveo/nebular\n\thttps://github.com/DevCloudFE\nhttps://github.com/angular/angular.js\n    https://angularjs.org\n    https://angular.cn\nhttps://github.com/emberjs\nhttps://github.com/BuilderIO/qwik\nhttps://github.com/alpinejs/alpine\n\thttps://www.alpinejs.cn\nhttps://github.com/litejs/litejs\nhttps://github.com/riot\nhttps://github.com/h5bp/html5-boilerplate\nhttps://github.com/zdhxiong/mdui\nhttps://github.com/baidu/amis\nhttps://github.com/alienzhou/web-highlighter\nhttps://github.com/jashkenas/backbone\nhttps://github.com/horizon-ui/horizon-ui-chakra\nhttps://github.com/withastro/astro\nhttps://github.com/micro-zoe/micro-app\nhttps://github.com/honojs/hono\nhttps://github.com/elysiajs/elysia\nWEB组件 https://github.com/ing-bank/lion\nhttps://github.com/open-wc/open-wc\nhttps://github.com/modernweb-dev/web\nhttps://github.com/lit\n\thttps://github.com/Polymer\nhttps://github.com/denoland/fresh\nhttps://github.com/QwikDev/qwik\nhttps://github.com/solidjs/solid\nhttps://github.com/preactjs/preact\n\thttps://www.preactjs.com.cn\n单页网站 https://github.com/alvarotrigo/fullPage.js\nhttp://www.jeasyui.com\nhttps://github.com/visjs\nhttps://github.com/nuejs/nuejs\n响应式框架 https://github.com/foundation\nhttps://github.com/jorgebucaran/hyperapp\nhttps://github.com/umijs\nServerless https://github.com/midwayjs\nhttps://github.com/modern-js-dev\n游戏 https://github.com/4ian/GDevelop\n框架环境 https://github.com/meteor\n仪表盘 https://github.com/keen/dashboards\nhttps://github.com/Smashing/smashing\n    https://github.com/Shopify/dashing\n    https://github.com/keen\nhttps://github.com/storybookjs\nhttps://github.com/redwoodjs\n数据获取 https://github.com/tanstack/query",meta:[{name:"image",content:"https://bajins.com/images/vue生命周期详解.png"},{name:"twitter:title",content:"JavaScript框架"},{name:"twitter:description",content:"https://github.com/angular/angular\n\tUI https://github.com/akveo/nebular\n\thttps://github.com/DevCloudFE\nhttps://github.com/angular/angular.js\n    https://angularjs.org\n    https://angular.cn\nhttps://github.com/emberjs\nhttps://github.com/BuilderIO/qwik\nhttps://github.com/alpinejs/alpine\n\thttps://www.alpinejs.cn\nhttps://github.com/litejs/litejs\nhttps://github.com/riot\nhttps://github.com/h5bp/html5-boilerplate\nhttps://github.com/zdhxiong/mdui\nhttps://github.com/baidu/amis\nhttps://github.com/alienzhou/web-highlighter\nhttps://github.com/jashkenas/backbone\nhttps://github.com/horizon-ui/horizon-ui-chakra\nhttps://github.com/withastro/astro\nhttps://github.com/micro-zoe/micro-app\nhttps://github.com/honojs/hono\nhttps://github.com/elysiajs/elysia\nWEB组件 https://github.com/ing-bank/lion\nhttps://github.com/open-wc/open-wc\nhttps://github.com/modernweb-dev/web\nhttps://github.com/lit\n\thttps://github.com/Polymer\nhttps://github.com/denoland/fresh\nhttps://github.com/QwikDev/qwik\nhttps://github.com/solidjs/solid\nhttps://github.com/preactjs/preact\n\thttps://www.preactjs.com.cn\n单页网站 https://github.com/alvarotrigo/fullPage.js\nhttp://www.jeasyui.com\nhttps://github.com/visjs\nhttps://github.com/nuejs/nuejs\n响应式框架 https://github.com/foundation\nhttps://github.com/jorgebucaran/hyperapp\nhttps://github.com/umijs\nServerless https://github.com/midwayjs\nhttps://github.com/modern-js-dev\n游戏 https://github.com/4ian/GDevelop\n框架环境 https://github.com/meteor\n仪表盘 https://github.com/keen/dashboards\nhttps://github.com/Smashing/smashing\n    https://github.com/Shopify/dashing\n    https://github.com/keen\nhttps://github.com/storybookjs\nhttps://github.com/redwoodjs\n数据获取 https://github.com/tanstack/query"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/vue生命周期详解.png"},{name:"twitter:url",content:"https://bajins.com/Web/JavaScript%E6%A1%86%E6%9E%B6.html"},{property:"og:type",content:"article"},{property:"og:title",content:"JavaScript框架"},{property:"og:description",content:"https://github.com/angular/angular\n\tUI https://github.com/akveo/nebular\n\thttps://github.com/DevCloudFE\nhttps://github.com/angular/angular.js\n    https://angularjs.org\n    https://angular.cn\nhttps://github.com/emberjs\nhttps://github.com/BuilderIO/qwik\nhttps://github.com/alpinejs/alpine\n\thttps://www.alpinejs.cn\nhttps://github.com/litejs/litejs\nhttps://github.com/riot\nhttps://github.com/h5bp/html5-boilerplate\nhttps://github.com/zdhxiong/mdui\nhttps://github.com/baidu/amis\nhttps://github.com/alienzhou/web-highlighter\nhttps://github.com/jashkenas/backbone\nhttps://github.com/horizon-ui/horizon-ui-chakra\nhttps://github.com/withastro/astro\nhttps://github.com/micro-zoe/micro-app\nhttps://github.com/honojs/hono\nhttps://github.com/elysiajs/elysia\nWEB组件 https://github.com/ing-bank/lion\nhttps://github.com/open-wc/open-wc\nhttps://github.com/modernweb-dev/web\nhttps://github.com/lit\n\thttps://github.com/Polymer\nhttps://github.com/denoland/fresh\nhttps://github.com/QwikDev/qwik\nhttps://github.com/solidjs/solid\nhttps://github.com/preactjs/preact\n\thttps://www.preactjs.com.cn\n单页网站 https://github.com/alvarotrigo/fullPage.js\nhttp://www.jeasyui.com\nhttps://github.com/visjs\nhttps://github.com/nuejs/nuejs\n响应式框架 https://github.com/foundation\nhttps://github.com/jorgebucaran/hyperapp\nhttps://github.com/umijs\nServerless https://github.com/midwayjs\nhttps://github.com/modern-js-dev\n游戏 https://github.com/4ian/GDevelop\n框架环境 https://github.com/meteor\n仪表盘 https://github.com/keen/dashboards\nhttps://github.com/Smashing/smashing\n    https://github.com/Shopify/dashing\n    https://github.com/keen\nhttps://github.com/storybookjs\nhttps://github.com/redwoodjs\n数据获取 https://github.com/tanstack/query"},{property:"og:image",content:"https://bajins.com/images/vue生命周期详解.png"},{property:"og:url",content:"https://bajins.com/Web/JavaScript%E6%A1%86%E6%9E%B6.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"JavaScript框架"},{itemprop:"description",content:"https://github.com/angular/angular\n\tUI https://github.com/akveo/nebular\n\thttps://github.com/DevCloudFE\nhttps://github.com/angular/angular.js\n    https://angularjs.org\n    https://angular.cn\nhttps://github.com/emberjs\nhttps://github.com/BuilderIO/qwik\nhttps://github.com/alpinejs/alpine\n\thttps://www.alpinejs.cn\nhttps://github.com/litejs/litejs\nhttps://github.com/riot\nhttps://github.com/h5bp/html5-boilerplate\nhttps://github.com/zdhxiong/mdui\nhttps://github.com/baidu/amis\nhttps://github.com/alienzhou/web-highlighter\nhttps://github.com/jashkenas/backbone\nhttps://github.com/horizon-ui/horizon-ui-chakra\nhttps://github.com/withastro/astro\nhttps://github.com/micro-zoe/micro-app\nhttps://github.com/honojs/hono\nhttps://github.com/elysiajs/elysia\nWEB组件 https://github.com/ing-bank/lion\nhttps://github.com/open-wc/open-wc\nhttps://github.com/modernweb-dev/web\nhttps://github.com/lit\n\thttps://github.com/Polymer\nhttps://github.com/denoland/fresh\nhttps://github.com/QwikDev/qwik\nhttps://github.com/solidjs/solid\nhttps://github.com/preactjs/preact\n\thttps://www.preactjs.com.cn\n单页网站 https://github.com/alvarotrigo/fullPage.js\nhttp://www.jeasyui.com\nhttps://github.com/visjs\nhttps://github.com/nuejs/nuejs\n响应式框架 https://github.com/foundation\nhttps://github.com/jorgebucaran/hyperapp\nhttps://github.com/umijs\nServerless https://github.com/midwayjs\nhttps://github.com/modern-js-dev\n游戏 https://github.com/4ian/GDevelop\n框架环境 https://github.com/meteor\n仪表盘 https://github.com/keen/dashboards\nhttps://github.com/Smashing/smashing\n    https://github.com/Shopify/dashing\n    https://github.com/keen\nhttps://github.com/storybookjs\nhttps://github.com/redwoodjs\n数据获取 https://github.com/tanstack/query"},{itemprop:"image",content:"https://bajins.com/images/vue生命周期详解.png"}]},regularPath:"/Web/JavaScript%E6%A1%86%E6%9E%B6.html",relativePath:"Web/JavaScript框架.md",key:"v-9bfdc082",path:"/Web/JavaScript%E6%A1%86%E6%9E%B6.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"React",slug:"react"},{level:2,title:"VueJS",slug:"vuejs"},{level:3,title:"VueJS框架",slug:"vuejs框架"},{level:3,title:"动态导入组件",slug:"动态导入组件"},{level:2,title:"jQuery",slug:"jquery"},{level:3,title:"jQuery插件/组件",slug:"jquery插件-组件"},{level:3,title:"事件点击一次执行多次",slug:"事件点击一次执行多次"},{level:2,title:"Bootstrap",slug:"bootstrap"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' JavaScript框架 \n Flag React VueJS VueJS框架 动态导入组件 jQuery jQuery插件/组件 事件点击一次执行多次 Bootstrap \n Flag \n \n https://github.com/angular/angular \n \n UI  https://github.com/akveo/nebular \n https://github.com/DevCloudFE \n \n \n https://github.com/angular/angular.js \n \n https://angularjs.org \n https://angular.cn \n \n \n https://github.com/emberjs \n https://github.com/BuilderIO/qwik \n https://github.com/alpinejs/alpine \n \n https://www.alpinejs.cn \n \n \n https://github.com/litejs/litejs \n https://github.com/riot \n https://github.com/h5bp/html5-boilerplate \n https://github.com/zdhxiong/mdui \n https://github.com/baidu/amis \n https://github.com/alienzhou/web-highlighter \n https://github.com/jashkenas/backbone \n https://github.com/horizon-ui/horizon-ui-chakra \n https://github.com/withastro/astro \n https://github.com/micro-zoe/micro-app \n https://github.com/honojs/hono \n https://github.com/elysiajs/elysia \n WEB组件  https://github.com/ing-bank/lion \n https://github.com/open-wc/open-wc \n https://github.com/modernweb-dev/web \n https://github.com/lit \n \n https://github.com/Polymer \n \n \n https://github.com/denoland/fresh \n https://github.com/QwikDev/qwik \n https://github.com/solidjs/solid \n https://github.com/preactjs/preact \n \n https://www.preactjs.com.cn \n \n \n 单页网站  https://github.com/alvarotrigo/fullPage.js \n http://www.jeasyui.com \n https://github.com/visjs \n https://github.com/nuejs/nuejs \n 响应式框架  https://github.com/foundation \n https://github.com/jorgebucaran/hyperapp \n https://github.com/umijs \n Serverless  https://github.com/midwayjs \n https://github.com/modern-js-dev \n 游戏  https://github.com/4ian/GDevelop \n 框架环境  https://github.com/meteor \n 仪表盘  https://github.com/keen/dashboards \n https://github.com/Smashing/smashing \n \n https://github.com/Shopify/dashing \n https://github.com/keen \n \n \n https://github.com/storybookjs \n https://github.com/redwoodjs \n 数据获取  https://github.com/tanstack/query \n \n \n 测试  https://github.com/karma-runner/karma \n https://github.com/qunitjs \n https://github.com/jasmine/jasmine \n https://github.com/dequelabs/axe-core \n React \n \n https://github.com/facebook/react \n \n https://zh-hans.reactjs.org \n https://reactjs.bootcss.com \n \n \n https://github.com/reactjs \n https://github.com/reactwg \n https://github.com/vercel/next.js \n \n https://www.nextjs.cn \n https://github.com/t3-oss/create-t3-app \n https://github.com/shuding/nextra \n https://github.com/qufei1993/nextjs-learn-cn \n \n \n \n \n https://github.com/reduxjs \n \n https://github.com/react-guide \n https://github.com/camsong/redux-in-chinese \n https://www.reduxjs.cn \n \n \n https://github.com/onejs/one \n 状态管理  https://github.com/pmndrs/valtio \n https://github.com/facebookexperimental/Recoil \n \n https://www.recoiljs.cn \n \n \n https://github.com/pulse-framework/pulse \n https://github.com/softchris/react-book \n https://github.com/react-hook-form \n https://github.com/gajus/babel-plugin-react-css-modules \n https://github.com/emotion-js/emotion \n https://github.com/gatsbyjs/gatsby \n \n https://www.gatsbyjs.cn \n \n \n https://github.com/streamich/react-use \n https://github.com/reacttips-dev/codebases \n https://github.com/refinedev \n https://github.com/mui-org/material-ui \n https://github.com/ant-design/ant-design \n \n https://gitee.com/ant-design/ant-design \n https://github.com/ant-design-blazor \n \n \n https://github.com/DouyinFE/semi-design \n https://github.com/nextui-org/nextui \n https://github.com/scratchfoundation/scratch-gui \n https://github.com/uiwjs/uiw \n https://github.com/alibaba/ice \n https://github.com/tannerlinsley/react-query \n https://github.com/Shopify/hydrogen \n https://github.com/alan2207/bulletproof-react \n https://github.com/lyh0371/vv-react-table \n https://github.com/rsuite/rsuite-table \n https://github.com/reach/reach-ui \n https://github.com/heroui-inc/heroui \n https://github.com/YYsuni/react18-json-view \n https://github.com/wasp-lang/wasp \n https://github.com/dafengzhen/bootstrap-react-logic \n 表格  https://github.com/iddan/react-spreadsheet \n https://github.com/react-csv \n https://github.com/silevis/reactgrid \n 测试  https://github.com/testing-library \n 服务器组件  https://github.com/dai-shi/waku \n 画板  https://github.com/tldraw/tldraw \n SSR（服务端渲染）框架  https://github.com/childrentime/pareto \n 视频编辑  https://github.com/redotvideo/revideo \n CI  https://github.com/vadimdemedes/ink \n PDF  https://github.com/htmldocs-js/htmldocs \n \n \n https://github.com/Asabeneh/30-Days-Of-React \n VueJS \n \n https://github.com/topics/vue \n \n \n https://github.com/vuejs \n \n https://cn.vuejs.org \n \n \n https://github.com/x-extends \n vue学习笔记 \n \n \n \n https://github.com/PanJiaChen/vue-element-admin \n 3D可视化  https://github.com/hawk86104/icegl-three-vue-tres \n VueJS框架 \n \n https://github.com/nuxt \n \n https://www.nuxtjs.cn \n \n \n https://madewithvuejs.com \n https://github.com/vuetifyjs/vuetify \n https://github.com/buefy/buefy \n https://github.com/bootstrap-vue/bootstrap-vue \n https://github.com/vuematerial/vue-material \n https://github.com/uikit/uikit \n https://github.com/quasarframework \n https://github.com/TuSimple/naive-ui \n https://github.com/epicmaxco/vuestic-ui \n https://github.com/sdc-alibaba/sui \n https://github.com/FE-Driver/vue-beauty \n https://github.com/chenz24/vue-blu \n https://github.com/heyui/heyui \n https://github.com/view-design/ViewUI \n https://github.com/vueComponent/ant-design-vue \n https://github.com/ElemeFE/element \n https://github.com/mint-ui \n https://github.com/varletjs/varlet \n https://github.com/ElementUI \n https://github.com/element-plus/element-plus \n https://github.com/at-ui/at-ui \n https://github.com/opentiny/tiny-vue \n https://github.com/gridsome/gridsome \n \n https://www.gridsome.cn \n \n \n https://github.com/cherryful/unocss-ui \n https://github.com/v-vibe/vue-styled-components \n \n 插件/组件 \n \n https://github.com/TerryZ/vue-plugins \n \n https://github.com/TerryZ/v-selectpage \n https://github.com/TerryZ/v-page \n \n \n 动态表单生成  https://github.com/xaboy/form-create \n https://github.com/vform666/variant-form3-vite \n https://github.com/dev-zl/vccvalidate \n https://github.com/ferrinweb/vue-scroll-box \n https://github.com/kazupon/vue-i18n \n 表格  https://github.com/handsontable \n https://github.com/nathantsoi/vue-native-websocket \n JSON生成SQL  https://github.com/liyupi/sql-generator \n 验证  https://github.com/logaretm/vee-validate \n 图片编辑器  https://github.com/nihaojob/vue-fabric-editor \n \n Mobile \n \n https://github.com/airyland/vux \n https://github.com/sdc-alibaba/SUI-Mobile \n https://github.com/ElemeFE/mint-ui \n https://github.com/didi/cube-ui \n \n 项目 \n \n https://github.com/zhontai/Admin.UI \n https://github.com/HalseySpicy/Geeker-Admin \n https://github.com/pure-admin/vue-pure-admin \n 扫描PDF  https://github.com/rwv/lookscanned.io \n 动态导入组件 \n ( )   =>   import ( ` @ ${ _this . files . path } .vue ` ) \n\n //component(resolve) {require([`@${_this.files.path}.vue`], resolve)} \n resolve   =>   require ( [ ` @ ${ _this . files . path } .vue ` ] ,  resolve ) \n\n resolve   =>  require . ensure ( [ ] ,   ( )   =>   resolve ( require ( ` @ ${ _this . files . path } .vue ` ) ) ) \n\n const   resolveRequire   =   ( path )   =>   { \n     return   resolve   =>   { \n        require . ensure ( [ ] ,   ( require )   =>   { \n             resolve ( require ( ` @ ${ path } .vue ` ) ) ;         \n         } ) ; \n     } \n } \n jQuery \n \n https://github.com/jquery \n https://github.com/topics/jquery \n https://github.com/topics/jquery-plugin \n https://jquery.cuishifeng.cn \n https://www.jquery123.com \n https://github.com/JsAaron/jQuery \n \n \n css选择器和jQuery选择器 \n \n // 扩展jQuery实例函数 \njQuery . fn . extend ( { \n\t /**\n\t * 交换任意两个jQuery对象的位置\n\t * @param another\n\t */ \n\t swap :   function ( another ) { \n\t\t var  me  =   this ;     \n\t\t var  cloneMe  =  me . clone ( ) ; \n\t\t var  temp  =   $ ( \'<span/>\' ) ; \n\t\tanother . before ( temp ) ; \n\t\tme . replaceWith ( another ) ; \n\t\ttemp . replaceWith ( cloneMe ) ; \n\t\t return   this ; \n\t } \n } ) ; \n\n /* ***调用举例*** */ \n var  $t1  =   $ ( "#t1" ) ; \n var  $t2  =   $ ( "#t2" ) ; \n$t1 . swap ( $t2 ) ; \n\n // 扩展jQuery实例函数 \njQuery . fn . extend ( { \n\t /**\n\t * 在同辈元素中向上或向下移动\n\t * @param direction \'up\'或\'down\'\n\t */ \n\t move :   function ( direction ) { \n\t\t var  me  =   this ; \n\t\t var  another  =   null ; \n\t\t if ( direction  ==   \'up\' ) { \n\t\t\tanother  =  me . prev ( ) ; \n\t\t\tanother . before ( me ) ; \n\t\t } else   if ( direction  ==   \'down\' ) { \n\t\t\tanother  =  me . next ( ) ;         \n\t\t\tanother . after ( me ) ; \n\t\t } \n\t\t return   this ; \n\t } \n } ) ; \n\n /* *** 调用举例  ***/ \n var  $p  =   $ ( \'p#id_2\' ) ; \n var  success  =  $p . move ( \'up\' ) ; \t //移动成功则为true，否则false \n \n // 原生JS DOM里有一个内置属性outerHTML，用来获取当前节点的html代码(包含当前节点本身) \n $ ( ".test" ) . prop ( "outerHTML" ) ; \n\n // Jquery设置outerHTML \n $ ( \'.test\' ) . prop ( \'outerHTML\' ,   \'<div>\' ) ; \n \n attr() 和 prop() 的区别 \n \n jQuery中attr()与prop()的区别 \n jQuery中prop和attr区别 \n \n \n attr()  方法设置或返回被选元素的 属性值 。 attribute  是  HTML  标签上的特性（属性），它的值只能够是字符串； \n prop()  方法设置或返回被选元素的 属性和值 。 property  是  DOM  中的属性，是  JavaScript  里的对象； \n \n \n 官方建议具有 true 或 false 两个值的属性，如 checked 、 selected 、 disabled 应同时使用 prop() 和 attr() \n \n $ . attr ( "checked" ,   "true" ) ; \n$ . attr ( "checked" ,   true ) ; \n$ . attr ( "checked" ,   "checked" ) ; \n$ . attr ( "checked" ,   "false" ) ;   // 不会生效 \n$ . attr ( "checked" ,   false ) ; \n$ . removeAttr ( "checked" ) ; \n // 只使用prop的情况下，可以看到标签元素上没有checked属性，但页面有渲染动作 \n$ . prop ( "checked" ,   "true" ) ; \n$ . prop ( "checked" ,   true ) ; \n$ . prop ( "checked" ,   "checked" ) ; \n$ . prop ( "checked" ,   "false" ) ;   // 不会生效 \n$ . prop ( "checked" ,   false ) ; \n$ . removeProp ( "checked" ) ; \n\n$ . attr ( "checked" ) ;   // 1.6+返回"checked"或"undefined";1.5-返回 true或false \n$ . prop ( "checked" ) ;   // 1.6+返回 true/false \n$ . is ( ":checked" ) ; \n \n readonly 属性对 radio 、 select 、 checkbox 这三个表单无效，设置 disabled 属性后，读取不到值 \n \n 把表单值存入 <input type="hidden" > 中，如果代码中要改变选中则同时要赋值给该输入框 \n 提交表单前先移除 disabled 属性，不提交表单时或提交表单后设置 disabled 属性（代码中要改变选中前先移除 disabled 属性） \n 只设置没有选中的input框 disabled 属性 （代码中要改变选中时先移除 disabled 属性）\n \n 设置单选框radio不可选（禁用） \n \n \n \n 根据文本获取元素 \n $ . fn . findByContentText   =   function   ( text )   { \n     return   $ ( this ) . contents ( ) . filter ( function   ( )   { \n         return   $ ( this ) . text ( ) . trim ( )   ==  text . trim ( ) ; \n     } ) ; \n } ; \n\n var  search  =   $ (   "ul li label"   ) . filter (   function   ( )   { \n     return   $ (   this   ) . text ( ) . toLowerCase ( ) . indexOf (   "text" . toLowerCase ( )   )   >=   0 ; \n } ) . first ( ) ;   // .last() \n\n \n $ ( \'div:contains("test"):not(:has(*)):last\' ) . css ( \'background-color\' ,   \'red\' ) ; \n jQuery插件/组件 \n \n https://github.com/topics/validation \n https://github.com/topics/validator \n https://plugins.jquery.com \n \n \n 添加XHR2 responseType支持  https://github.com/acigna/jquery-ajax-native \n https://github.com/topics/jquery-validation \n \n https://github.com/jquery-validation \n \n https://www.runoob.com/jquery/jquery-plugin-validate.html \n \n \n https://github.com/DiegoLopesLima/Validate \n \n \n 表格  https://github.com/tonytomov/jqGrid \n https://github.com/DataTables/DataTables \n https://github.com/malihu/malihu-custom-scrollbar-plugin \n https://github.com/rochal/jQuery-slimScroll \n 提示  https://github.com/calebjacob/tooltipster \n https://github.com/devbridge/jQuery-Autocomplete \n https://github.com/rampatra/animatescroll.js \n https://github.com/wmh/jquery-scrollbox \n https://github.com/omcg33/jquery.limarquee \n https://github.com/kamranahmedse/jquery-toast-plugin \n 分页  https://github.com/superRaytin/paginationjs \n 视频播放  https://github.com/jplayer/jPlayer \n https://github.com/davatron5000/FitVids.js \n 弹幕  https://github.com/chiruom/jquery.danmu.js \n https://github.com/jeromeetienne/jquery-qrcode \n https://github.com/jquery-i18n-properties/jquery-i18n-properties \n 使用旧版IE警报  https://github.com/nmsdvid/ie-alert \n 图像放大镜  https://github.com/mrenzidev/jqzoom \n 文件上传  https://github.com/kartik-v/bootstrap-fileinput \n \n https://plugins.krajee.com/file-input \n http://www.bootstrap-fileinput.com \n \n \n https://github.com/jquery-form/form \n https://github.com/FineUploader/fine-uploader \n 下拉选择框  https://github.com/snapappointments/bootstrap-select \n \n https://www.bootstrapselect.cn \n \n \n https://github.com/davidstutz/bootstrap-multiselect \n https://github.com/selectize/selectize.js \n https://github.com/select2/select2 \n https://github.com/wenzhixin/multiple-select \n https://github.com/ciaoca/cxSelect \n https://github.com/Eonasdan/tempus-dominus \n https://github.com/harvesthq/chosen \n https://github.com/Robdel12/DropKick \n https://github.com/lou/multi-select \n https://github.com/gfranko/jquery.selectBoxIt.js \n https://github.com/harvesthq/chosen \n 模态框  https://github.com/kylefox/jquery-modal \n https://github.com/layui/layui \n \n https://gitee.com/layui/layui \n \n \n https://github.com/maxazan/jquery-treegrid \n 日期和时间选择器  https://github.com/xdan/datetimepicker \n UI  https://github.com/IgniteUI/ignite-ui \n https://github.com/madrobby/zepto \n https://github.com/ded/script.js \n https://github.com/malsup/blockui \n https://github.com/onokumus/metisMenu \n 模拟数据  https://github.com/jakerella/jquery-mockjax \n \n \n https://github.com/jakerella/jquery-mockjax \n 事件点击一次执行多次 \n // 先移除再绑定，jQuery 3.0中已弃用此方法 \n $ ( \'#id\' ) . unbind ( \'click\' ) . on ( \'click\' , function ( ) { \n    consoel . log ( "ok" ) ; \n } ) ; \n // 先移除再绑定 \n $ ( "#id" ) . off ( "click" ) . on ( "click" , function ( ) { \n    consoel . log ( "ok" ) ;         \n } ) ; \n Bootstrap \n \n https://github.com/topics/bootstrap \n https://github.com/twbs/bootstrap \n \n https://www.bootcss.com \n https://getbootstrap.com \n \n \n \n \n https://github.com/fastbootstrap/atlassian-design-for-bootstrap \n https://github.com/jquery/jquery-ui \n 颜色选择器  https://github.com/itsjavi/bootstrap-colorpicker \n https://github.com/wenzhixin/bootstrap-table \n \n JS组件系列——BootstrapTable 行内编辑解决方案：x-editable \n \n \n 编辑器  https://github.com/vitalets/x-editable \n \n \n https://github.com/vinorodrigues/bootstrap-dark \n https://github.com/yuantuo666/bootstrap-dark \n https://github.com/themefisher \n https://github.com/keaukraine/bootstrap4-fs-modal \n 仪表板  https://github.com/tabler/tabler \n \n',createdTime:1761814324e3},{title:"挂载网盘",frontmatter:{description:"https://github.com/mickael-kerjean/filestash\n挂载网盘 https://github.com/reruin/sharelist\nhttps://github.com/alist-org\n归档 | 无岸海\nhttps://github.com/apachecn/CDNDrive\nhttps://github.com/Hsury/BiliDrive",meta:[{name:"image",content:"https://bajins.com/images/Rclone_access_token.png"},{name:"twitter:title",content:"挂载网盘"},{name:"twitter:description",content:"https://github.com/mickael-kerjean/filestash\n挂载网盘 https://github.com/reruin/sharelist\nhttps://github.com/alist-org\n归档 | 无岸海\nhttps://github.com/apachecn/CDNDrive\nhttps://github.com/Hsury/BiliDrive"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/Rclone_access_token.png"},{name:"twitter:url",content:"https://bajins.com/System/%E6%8C%82%E8%BD%BD%E7%BD%91%E7%9B%98.html"},{property:"og:type",content:"article"},{property:"og:title",content:"挂载网盘"},{property:"og:description",content:"https://github.com/mickael-kerjean/filestash\n挂载网盘 https://github.com/reruin/sharelist\nhttps://github.com/alist-org\n归档 | 无岸海\nhttps://github.com/apachecn/CDNDrive\nhttps://github.com/Hsury/BiliDrive"},{property:"og:image",content:"https://bajins.com/images/Rclone_access_token.png"},{property:"og:url",content:"https://bajins.com/System/%E6%8C%82%E8%BD%BD%E7%BD%91%E7%9B%98.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"挂载网盘"},{itemprop:"description",content:"https://github.com/mickael-kerjean/filestash\n挂载网盘 https://github.com/reruin/sharelist\nhttps://github.com/alist-org\n归档 | 无岸海\nhttps://github.com/apachecn/CDNDrive\nhttps://github.com/Hsury/BiliDrive"},{itemprop:"image",content:"https://bajins.com/images/Rclone_access_token.png"}]},regularPath:"/System/%E6%8C%82%E8%BD%BD%E7%BD%91%E7%9B%98.html",relativePath:"System/挂载网盘.md",key:"v-86654e08",path:"/System/%E6%8C%82%E8%BD%BD%E7%BD%91%E7%9B%98.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"GoogleDrive",slug:"googledrive"},{level:3,title:"复制共享文件",slug:"复制共享文件"},{level:3,title:"直链获取",slug:"直链获取"},{level:2,title:"OneDrive",slug:"onedrive"},{level:3,title:"获取access_token",slug:"获取access-token"},{level:3,title:"安装配置Rclone",slug:"安装配置rclone"},{level:2,title:"Rclone",slug:"rclone"},{level:3,title:"Rclone全局参数",slug:"rclone全局参数"},{level:3,title:"rclone mount",slug:"rclone-mount"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' 挂载网盘 \n Flag GoogleDrive 复制共享文件 直链获取 OneDrive 获取access_token 安装配置Rclone Rclone Rclone全局参数 rclone mount \n Flag \n \n https://github.com/topics/webdav \n https://github.com/topics/synchronization \n https://github.com/topics/sync \n https://github.com/topics/peer-to-peer \n https://github.com/topics/p2p \n \n \n https://github.com/mickael-kerjean/filestash \n 挂载网盘  https://github.com/reruin/sharelist \n https://github.com/alist-org \n 归档 | 无岸海 \n https://github.com/apachecn/CDNDrive \n https://github.com/Hsury/BiliDrive \n \n \n \n https://koofr.eu \n \n \n MOVER.IO文件迁移到OneDrive \n \n https://mover.io \n \n \n \n Air Explorer：全球各大网盘服务之间文件同步工具 \n \n https://www.airexplorer.net \n \n \n \n https://github.com/RaiDrive \n \n https://www.raidrive.com \n \n \n \n https://github.com/maple3142/heroku-aria2c \n \n 利用Heroku部署Aria2离线下载并同步上传到Onedrive等网盘 \n \n \n \n https://github.com/moeik/Heroku_aria2 \n \n \n https://github.com/ukuq/onepoint \n \n \n 阿里云盘WebDAV服务  https://github.com/messense/aliyundrive-webdav \n \n \n https://github.com/dromara/x-file-storage \n \n \n 申请某些洛杉矶社区大学（通过openccc申请的社区大学）的模板 \n \n \n 美国圣莫尼卡学院教育邮箱申请超详细图文教程 \n \n \n 本地网盘/文件管理 \n \n https://github.com/topics/drive \n https://github.com/topics/storage \n https://github.com/topics/cloud-storage \n https://github.com/topics/cloudstorage \n https://github.com/topics/file-sharing \n https://github.com/topics/filemanager \n https://github.com/topics/file-manager \n https://github.com/topics/file-browser \n https://github.com/topics/file-explorer \n https://github.com/topics/plex \n \n \n https://github.com/filebrowser/filebrowser  设置 baseurl 注意 / \n https://github.com/prasathmani/tinyfilemanager \n https://github.com/thecoshman/http \n https://github.com/DirectoryLister \n https://github.com/bajins/DirectoryLister \n https://github.com/cloudreve \n https://github.com/quhailong/NetworkDisk_Storage \n Seafile  https://github.com/haiwen \n https://github.com/nextcloud \n https://github.com/owncloud \n https://github.com/syncany/syncany \n https://github.com/kalcaddle/kodbox \n https://github.com/kalcaddle/KodExplorer \n https://github.com/zhaojun1998/zfile \n \n https://github.com/zhaojun1998/zfile-vue \n \n \n https://github.com/lrsjng/h5ai \n https://github.com/helloxz/zdir \n https://github.com/DrizzleTime/Foxel \n https://github.com/xlzy520/CloundDisk3.0 \n https://github.com/jamebal/jmal-cloud-view \n https://github.com/cozy/cozy-stack \n https://github.com/mtlynch/picoshare \n https://github.com/Xhofe/alist \n https://github.com/spacedriveapp/spacedrive \n 基于Git  https://github.com/hbons/SparkleShare \n https://github.com/MoeClub/vList \n DRBD  https://github.com/LINBIT \n 备份同步  https://github.com/restic \n https://github.com/kopia/kopia \n https://github.com/laurent22/rsync-time-backup \n https://github.com/perkeep/perkeep \n https://github.com/bcpierce00/unison \n https://sourceforge.net/projects/freefilesync \n https://github.com/Hellager/mission-backup \n https://github.com/bit-team/backintime \n https://github.com/rsnapshot/rsnapshot \n https://github.com/duplicati/duplicati \n https://github.com/bareos/bareos \n https://gitlab.bacula.org/bacula-community-edition \n \n https://www.bacula.org \n https://github.com/bacula-web/bacula-web \n \n \n https://github.com/librsync/librsync \n https://gitlab.com/duplicity/duplicity \n https://github.com/zmanda/amanda \n \n https://sourceforge.net/projects/amanda \n https://www.amanda.org \n \n \n https://github.com/uroni/urbackup_backend \n \n https://github.com/uroni/urbackup_frontend_wx \n \n \n https://github.com/borgbackup/borg \n SMB协议共享  https://github.com/samba-team/samba \n \n https://www.samba.org \n \n \n https://github.com/syncthing/syncthing \n \n Syncthing 开源文件同步工具 \n \n \n https://github.com/canton7/SyncTrayzor \n Resilio Sync  https://github.com/bt-sync \n \n https://www.resilio.com/platforms/desktop \n \n \n https://www.itefix.net/cwrsync \n https://freefilesync.org \n https://www.goodsync.com/cn \n 微力同步国内  http://www.verysync.com \n https://github.com/schollz/croc \n \n 号称 croc 通过压缩和多路复用比 wormhole ， rsync ， scp 更快（加速 1.5 倍至 4 倍） \n \n \n https://github.com/magic-wormhole/magic-wormhole \n \n https://github.com/LeastAuthority/destiny \n https://github.com/pavelsof/mobile-wormhole \n https://github.com/psanford/wormhole-william \n \n \n https://github.com/simon-budig/woof \n https://github.com/stackp/Droopy \n https://github.com/Peergos/Peergos \n 命令行共享文件  https://github.com/dutchcoders/transfer.sh \n 可恢复文件上传  https://github.com/tus \n 相册  https://github.com/ente-io/ente \n https://github.com/photoprism/photoprism \n https://github.com/immich-app/immich \n https://github.com/zyx0814/Pichome \n \n 对象存储 \n \n https://github.com/topics/object-storage \n https://github.com/topics/objectstorage \n https://github.com/topics/nfs \n https://github.com/topics/distributed-storage \n https://github.com/topics/distributed-file-system \n https://github.com/topics/nfs-server \n https://github.com/topics/s3-storage \n https://github.com/topics/fuse \n \n \n https://sourceforge.net/projects/nfs \n \n https://sourceforge.net/projects/rpcbind \n NFS服务器搭建与配置 \n 搭建NFS文件服务器 \n 教你快速搭建NFS服务 \n \n \n https://github.com/nfs-ganesha/nfs-ganesha \n https://github.com/sahlberg/libnfs \n https://github.com/dCache/nfs4j \n https://github.com/willscott/go-nfs \n https://github.com/minio/minio \n \n https://github.com/journeymidnight/yig \n \n \n https://github.com/seaweedfs/seaweedfs \n https://git.deuxfleurs.fr/Deuxfleurs/garage \n https://github.com/sjqzhang/go-fastdfs \n https://github.com/happyfish100/fastdfs \n https://github.com/openzfs \n https://github.com/moosefs \n \n https://sourceforge.net/projects/moosefs \n \n \n https://github.com/mogilefs \n https://github.com/gluster/glusterfs \n https://github.com/ceph/ceph \n https://github.com/apache/jackrabbit \n https://github.com/leo-project/leofs \n https://github.com/sheepdog/sheepdog \n https://www.lustre.org \n https://github.com/openstack \n https://github.com/opencurve/curve \n https://github.com/chrislusf/seaweedfs \n 分布式  https://github.com/mtth/hdfs \n https://github.com/datenlord/datenlord \n https://github.com/dragonflyoss \n https://github.com/Alluxio/alluxio \n https://github.com/filecoin-project \n 分布式POSIX文件系统  https://github.com/juicedata/juicefs \n \n \n https://github.com/cifsd-team/cifsd \n https://github.com/openkm/document-management-system \n https://github.com/libfuse/libfuse \n \n https://github.com/Xuanwo/hdrs \n https://github.com/Kimahriman/hdfs-native \n \n \n https://github.com/fangfufu/httpdirfs \n https://github.com/stratis-storage/stratisd \n https://github.com/lizardfs/lizardfs \n https://github.com/open-io/oio-sds \n JSON存储服务  https://github.com/Kinto/kinto \n \n \n https://github.com/Storj \n \n https://storj.io \n \n \n https://github.com/Backblaze \n \n https://www.backblaze.com \n Backblaze(B2)套用CloudFlare可用于静态文件存储 \n \n \n \n \n Ceph,TFS,FastDFS,MogileFS,MooseFS,GlusterFS 对比 \n \n \n Google分布式文件系统GFS \n GoogleDrive \n \n GoogleDrive一天好像最多750G，跑多就出问题 \n \n \n https://github.com/googleworkspace \n https://developers.google.com/drive \n Create a OAuth client ID \n Google身份平台指南 \n Google Drive API \n Google Drive API Client Credentials - 如何开启 Google Drive API 并获得客户端证书？ \n https://github.com/nisrulz/app-privacy-policy-generator \n \n https://app-privacy-policy-generator.firebaseapp.com \n 解决google 创建oauth 同意屏幕时 设置隐私政策声明问题 \n授权链接。在浏览器中访问并复制接受作用域后返回的代码。\nhttps://accounts.google.com/o/oauth2/auth\n?client_id=202264815644.apps.googleusercontent.com\n&redirect_uri=urn:ietf:wg:oauth:2.0:oob\n&response_type=code\n&access_type=offline\n&scope=https://www.googleapis.com/auth/drive\n&approval_prompt=auto\n获取token，或使用wget --post-data="" 或者curl -X POST -d \'\' \n curl   --request  POST  --data   \\ \n "code=在浏览器请求上面的url返回的授权代码\\\n&client_id=202264815644.apps.googleusercontent.com\\\n&client_secret=X4Z3ca8xfWDb1Voo-F9a7ZxJ\\\n&redirect_uri=urn:ietf:wg:oauth:2.0:oob\\\n&grant_type=authorization_code"   \\ \nhttps://www.googleapis.com/oauth2/v4/token\n刷新token \n curl   --request  POST  --data   \\ \n \'client_id=202264815644.apps.googleusercontent.com\\\n&client_secret=X4Z3ca8xfWDb1Voo-F9a7ZxJ\\\n&refresh_token=第二步获取的refresh_token值\\\n&grant_type=refresh_token\'   \\ \nhttps://accounts.google.com/o/oauth2/token\n \n \n https://github.com/Aicirou/goindex-quick-install \n \n \n https://github.com/topics/google-drive \n https://github.com/topics/google-drive-api \n https://github.com/search?q=gdindex \n https://github.com/topics/goindex \n https://github.com/search?q=goindex \n \n https://github.com/maple3142/GDIndex \n https://github.com/yanzai/goindex \n https://github.com/Aicirou/goindex-theme-acrou \n https://github.com/5MayRain/goIndex-theme-nexmoe \n https://github.com/alx-xlx/goindex \n https://gitlab.com/ParveenBhadooOfficial/Google-Drive-Index \n https://github.com/OneFusionPlus/Google-Drive-Index \n https://github.com/atlonxp/recursive-goIndex-downloader \n https://github.com/tks18/gindex-v4 \n \n \n create-share-teamdrive  https://github.com/yyuueexxiinngg/some-scripts \n 一个无需服务器的Google Drive目录索引程序 \n Plexdrive/Rclone+Google Drive搭建无限容量的媒体库 \n 在Debian/Ubuntu上使用rclone挂载Google Drive网盘 \n Rclone高级玩法--利用服务账号突破日流量750G限制 \n Google Drive 百宝箱  https://github.com/iwestlin/gd-utils \n https://github.com/cugxuan/gonelist \n 媒体库管理器  https://github.com/libDrive \n https://github.com/plexdrive/plexdrive \n https://github.com/astrada/google-drive-ocamlfuse \n https://github.com/stewartmcgown/uds \n https://github.com/patheticGeek/gdrive-index \n https://github.com/prasmussen/gdrive \n 复制共享文件 \n \n 复制共享文件夹/下载远程文件到自己的GoogleDrive \n https://github.com/ericyd/gdrive-copy \n Google Drive 之间转存  https://gsuitetips.com/tools/copy-folder \n https://github.com/Spazzlo/folderclone \n https://github.com/MannyHackers/FolderClone \n https://github.com/RobertZeledon/Multifolderclone \n \n \n 资源转存之Rclone使用教程 可直接用folder id，而不用管快捷方式 \n \n 搜索 copy 并安装以下应用 \n \n Copy, URL to Google Drive™ \n Drive Files to OneDrive™ \n \n \n 方式一：在文件夹上右键选择【打开方式】->【关联更多应用】 \n \n \n 方式二：打开链接 https://www.google.com/enterprise/marketplace \n 直链获取 \n \n Cloudflare Workers版直链工具 \n \n https://link.reruin.workers.dev \n \n \n https://link.gimhoy.com \n https://api.moeclub.org/GoogleDrive/单文件ID \n https://gdlink.432100.xyz/?id=单文件ID \n Google Drive网盘文件直链获取一键脚本 \n https://gdlink.vrt.app \n https://direct.gdrive.vip \n OneDrive \n \n https://github.com/topics/onedrive \n https://github.com/OneDrive \n https://github.com/microsoftgraph \n https://developer.microsoft.com/zh-cn/onedrive \n https://www.office.com \n \n https://office.com/login \n https://office.live.com/start/onedrive.aspx \n https://login.microsoftonline.com \n https://www.microsoft.com/zh-cn/microsoft-365/onedrive/download \n \n \n 教育 SKU 参考 \n \n \n https://github.com/zayabighead/msautocreate \n https://github.com/HuJK/O365-UC \n https://github.com/xb2016/New-Mso-User \n https://github.com/zayabighead/Office-User-Auto-Create \n \n \n https://github.com/jstaf/onedriver \n https://github.com/vcheckzen/FODI \n \n 使用CloudFlare Workers 零成本部署 OneDrive 文件列表程序FODI（Fast OneDrive Index） \n Onedrive分享型网盘搭建 - FODI \n \n \n https://github.com/qkqpttgf/OneManager-cfworkerskv \n https://github.com/qkqpttgf/OneManager-php \n \n 利用heroku搭建Onedrive目录列表 \n \n \n https://github.com/Tai7sy/OneDriveFly \n https://github.com/WangNingkai/OLAINDEX \n https://github.com/YukiCoco/OLAINDEX-Magic \n https://github.com/MoeClub/OneList \n https://github.com/0oVicero0/OneList \n https://github.com/malaohu/OneList-- \n https://github.com/xieqifei/OneindexN \n https://github.com/abbeyokgo/PyOne \n https://github.com/SomeBottle/OdIndex \n https://github.com/steven52880/Oneindex-Mod \n \n \n https://github.com/spencerwooo/onedrive-cf-index \n 保持E5开发活跃  https://github.com/ZYong9908/AutoApiSecret-1 \n https://github.com/huxx16/AutoApiSecret \n \n \n https://www.kskb.eu.org \n \n \n onedrive默认只同步指定的onedrive文件夹，为了让它同步其他的文件夹，可以在命令行（以管理员身份运行的）使用以下代码创建一个软链接 \n \n mklink  / j  "onedrive文件夹地址\\需要同步的文件夹名"   "需要同步的文件夹地址" \n / D 创建目录符号链接，默认为文件符号链接\n / H 创建硬链接，而不是符号链接\n / J 创建目录联接\n \n \n 注意：服务器最好是 KVM 的， OpenVZ 需要给你的服务商发TK告诉他们开一下 FUSE ，如果没有 FUSE 是没办法挂载的。 \n 获取access_token \n 下载Windows版 Rclone \n \n https://github.com/rclone/rclone/releases \n \n \n 解压后进入文件夹，在路径地址栏中输入 cmd 打开CMD \n \n 执行命令 \n rclone  authorize  "onedrive" \n \n \n 运行后会自动打开浏览器，然后登录帐号，会进入接受许可页面，点击接受，然后后会跳转到授权成功的页面，此时页面显示 Success! 。 \n \n 查看 access_token \n \n 切换到CMD窗口，此时已经有 access_token 了。 \n 把 {} 包含里面的内容复制下来保存好，后面需要用到（包含括号一起复制保存） \n 安装配置Rclone \n 安装基础工具 \n yum  -y   install   wget   unzip   screen  fuse fuse-devel\n \n 安装 Rclone \n curl  https://rclone.org/install.sh  |   sudo   bash \n \n \n 安装完成后最后两行显示 \n \n rclone v1.48.0 has successfully installed. \n Now run "rclone config" for setup. Check https://rclone.org/docs/ for more details. \n \n \n 可根据自动配置脚本自行配置 https://github.com/bajins/scripts-python/rclone_expect_config.py \n 配置好后可以 挂载 \n 卸载 \n fusermount  -qzu  LocalFolder\n Rclone \n \n https://github.com/rclone/rclone \n \n rclone配置  https://rclone.org/commands/rclone_config \n 过滤文件或目录  https://rclone.org/filtering \n https://github.com/liriliri/rem \n \n \n https://softlns.github.io/2016/11/28/rclone-guide \n Rclone 进阶使用教程 - 常用命令参数详解 \n 常用的rclone命令 \n 使用 rclone \n \n \n rclone Web GUI  https://github.com/ElonH/RcloneNg \n https://github.com/xyou365/AutoRclone \n https://github.com/donwa/gclone \n \n gclone实现google drive不同账户及目录间的转存(非链接) \n \n \n https://github.com/mawaya/rclone \n \n Fclone教程 \n \n \n https://github.com/cjnaz/rclonesync-V2 \n \n \n rclone 自动配置  rclone_expect_config.py \n 命令  https://rclone.org/commands \n 子指令  https://github.com/rclone/rclone/blob/master/docs/content/docs.md#subcommands \n以控制会话的形式添加rclone的配置，配置保存在rclone.conf文件中。 \nrclone config  --help \n将网盘挂载为本地磁盘 \nrclone  mount   --help \n将文件从源复制到目的地址，跳过已复制完成的，复制的文件默认保留源信息 \n`–no-traverse` 标志用于控制是否列出目的地址目录 \nrclone copy  --help \n将源数据同步到目的地址，只更新目的地址的数据。 \n–dry-run 标志来检查要复制、删除的数据 \nrclone  sync   --help \n将源数据移动到目的地址，如果无法移动，可使用copy和sync \nrclone move  --help \n删除指定路径下的文件内容 \n不同于`purge`，该命令可使用`include/exclude`过滤器选择删除文件内容 \nrclone delete  --help \n清空指定路径下所有文件数据，`include/exclude`过滤器无效 \nrclone purge  --help \n创建一个新目录 \nrclone  mkdir   --help \n删除空目录，不能删除非空的目录 \nrclone  rmdir   --help \n检查源和目的地址数据是否匹配 \n`–size-only`标志用于指定，只比较大小，不比较MD5SUMs \nrclone check  --help \n列出指定路径下所有的文件以及文件大小和路径 \nrclone  ls   --help \n列出指定路径下所有的目录/容器/桶 \nrclone lsd  --help \n列出指定路径下所有文件以及修改时间、文件大小和路径 \nrclone lsl  --help \n为指定路径下的所有文件产生一个md5sum文件 \nrclone md5sum  --help \n为指定路径下的所有文件产生一个sha1sum文件 \nrclone sha1sum  --help \n获取指定路径下，文件内容的总大小 \nrclone size  --help \n清空remote \nrclone cleanup  --help \n交互式查找重复文件，进行删除/重命名操作 \n--dedupe-mode interactive(互动，默认)|skip(跳过)|first(第一个)|newest(最新)|oldest(最老的)|rename(改名) \nrclone dedupe  --help \n查看当前版本 \nrclone version\n先检查哪些文件将被删除 \n使用rclone lsl 列出大于100M的文件 \nrclone lsl remote:path --min-size 100M\n使用--dry-run 检查将要被删除的文件 \nrclone delete remote:path --dry-run --min-size 100M\n删除最大100k的图片 \nrclone delete onedrive:/images --dry-run --max-size 100k\n使用 rclone delete 进行文件删除 \nrclone delete remote:path --min-size 100M\n Rclone全局参数 \n \n https://github.com/rclone/rclone/blob/master/docs/content/flags.md \n \n \n 点击查看全局参数 \n \n https://rclone.org/flags/#non-backend-flags \n \n \n \n \n 参数 \n 说明 \n \n \n \n \n --ask-password \n 允许提示输入密码以进行加密配置。 （默认为true） \n \n \n --auto-confirm \n 如果启用，请勿请求控制台确认。 \n \n \n --backup-dir string \n 将备份制作成基于DIR的层次结构。 \n \n \n --bind string \n 绑定到传出连接，IPv4，IPv6或名称的本地地址。 \n \n \n --buffer-size SizeSuffix \n 读取每个--transfer文件时的内存缓冲区大小。 （默认为16M） \n \n \n --bwlimit BwTimetable \n 带宽限制（千字节/秒），或使用后缀b | k | M | G或完整的时间表。 \n \n \n --ca-cert string \n 用于验证服务器的CA证书 \n \n \n --cache-dir string \n 目录rclone将用于缓存。 （默认为“ $ HOME / .cache / rclone”） \n \n \n --check-first \n 开始转移之前，请先进行所有检查。 \n \n \n --checkers int \n 要并行运行的检查程序数。 （默认为8） \n \n \n -c, --checksum \n 根据校验和（如果有）和大小（而不是修改时间和大小）跳过 \n \n \n --client-cert string \n 用于相互TLS身份验证的客户端SSL证书（PEM） \n \n \n --client-key string \n 用于相互TLS身份验证的客户端SSL私钥（PEM） \n \n \n --compare-dest string \n 比较期间包括其他服务器端路径。 \n \n \n --config string \n 配置文件。 （默认为“ $ HOME / .config / rclone / rclone.conf”） \n \n \n --contimeout duration \n 连接超时（默认1m0s） \n \n \n --copy-dest string \n 表示--compare-dest，但也将文件从路径复制到目标位置。 \n \n \n --cpuprofile string \n 将cpu配置文件写入文件 \n \n \n --cutoff-mode string \n 达到最大传输限制时停止传输的模式HARD | SOFT | CAUTIOUS（默认为“ HARD”） \n \n \n --delete-after \n 同步时，传输后删除目标位置上的文件（默认） \n \n \n --delete-before \n 同步时，请在传输前删除目标文件 \n \n \n --delete-during \n 同步时，在传输过程中删除文件 \n \n \n --delete-excluded \n 从同步中删除目标上的文件 \n \n \n --disable string \n 禁用以逗号分隔的功能列表。使用帮助查看列表。 \n \n \n -n, --dry-run \n 在没有永久更改的情况下进行试运行 \n \n \n --dump DumpFlags \n 要转储的项目列表：标头，正文，请求，响应，auth，过滤器，goroutines，openfiles \n \n \n --dump-bodies \n 转储HTTP标头和正文-可能包含敏感信息 \n \n \n --dump-headers \n 转储HTTP标头-可能包含敏感信息 \n \n \n --error-on-no-transfer \n 如果没有文件传输，则设置退出代码9，在脚本中有用 \n \n \n --exclude stringArray \n 排除文件匹配模式 \n \n \n --exclude-from stringArray \n 读取文件中的模式（使用-从标准输入中读取） \n \n \n --exclude-if-present string \n 如果文件名存在，则排除目录 \n \n \n --expect-continue-timeout duration \n 在HTTP中使用Expect / 100-continue时超时（默认1s） \n \n \n --fast-list \n 如果可用，请使用递归列表。使用更多的内存，但更少的事务。 \n \n \n --files-from stringArray \n 从文件中读取源文件名列表（使用-从标准输入中读取） \n \n \n --files-from-raw stringArray \n 从文件中读取源文件名列表，不进行任何行处理（使用-从stdin中读取） \n \n \n -f, --filter stringArray \n 添加文件过滤规则 \n \n \n --filter-from stringArray \n 从文件中读取过滤模式（使用-从标准输入中读取） \n \n \n --header stringArray \n 为所有交易设置HTTP标头 \n \n \n --header-download stringArray \n 设置下载交易的HTTP标头 \n \n \n --header-upload stringArray \n 为上传交易设置HTTP标头 \n \n \n --ignore-case \n 忽略过滤器中的大小写（不区分大小写） \n \n \n --ignore-case-sync \n 同步时忽略大小写 \n \n \n --ignore-checksum \n 跳过校验和的过帐副本检查。 \n \n \n --ignore-errors \n 即使有I / O错误也要删除 \n \n \n --ignore-existing \n 跳过目标上存在的所有文件 \n \n \n --ignore-size \n 跳过使用mod-time或checksum时忽略大小。 \n \n \n -I, --ignore-times \n 不要跳过匹配大小和时间的文件-传输所有文件 \n \n \n --immutable \n 不要修改文件。如果现有文件已被修改，则失败。 \n \n \n --include stringArray \n 包含文件匹配模式 \n \n \n --include-from stringArray \n 从文件读取包含模式（使用-从标准输入读取） \n \n \n --log-file string \n 将所有内容记录到该文件 \n \n \n --log-format string \n 日志格式选项的逗号分隔列表（默认为“日期，时间”） \n \n \n --log-level string \n 日志级别DEBUG | INFO | NOTICE | ERROR（默认为“ NOTICE”） \n \n \n --low-level-retries int \n 低级重试次数。 （默认为10） \n \n \n --max-age duration \n 仅传输s或后缀ms | s | m | h | d | w | M | y小于此值的文件（默认关闭） \n \n \n --max-backlog int \n 同步或检查积压的最大对象数。 （默认为10000） \n \n \n --max-delete int \n 同步时，限制删除次数（默认为-1） \n \n \n --max-depth int \n 如果设置，则将递归深度限制为此。 （默认为-1） \n \n \n --max-duration duration \n rclone将为其传输数据的最大持续时间。 \n \n \n --max-size SizeSuffix \n 仅传输k或后缀b | k | M | G中小于此大小的文件（默认关闭） \n \n \n --max-stats-groups int \n 要保留在内存中的统计信息组的最大数量。在最大的最旧位置将被丢弃。 （默认为1000） \n \n \n --max-transfer SizeSuffix \n 要传输的最大数据大小。 （默认关闭） \n \n \n --memprofile string \n 将内存配置文件写入文件 \n \n \n --min-age duration \n 仅传输s或后缀ms | s | m | h | d | w | M | y大于此长度的文件（默认关闭） \n \n \n --min-size SizeSuffix \n 仅传输大于k或后缀b | k | M | G的文件（默认为关闭） \n \n \n --modify-window duration \n 认为最大时间差相同（默认为1ns） \n \n \n --multi-thread-cutoff SizeSuffix \n 对于此大小以上的文件，请使用多线程下载。 （默认为250M） \n \n \n --multi-thread-streams int \n 用于多线程下载的最大流数。 （默认为4） \n \n \n --no-check-certificate \n 不要验证服务器SSL证书。不安全 \n \n \n --no-check-dest \n 不要检查目的地，无论如何都要复制。 \n \n \n --no-gzip-encoding \n 不要设置Accept-Encoding：gzip。 \n \n \n --no-traverse \n 不要遍历副本上的目标文件系统。 \n \n \n --no-unicode-normalization \n 不要规范化文件名中的Unicode字符。 \n \n \n --no-update-modtime \n 如果文件相同，请不要更新目标模块时间。 \n \n \n --order-by string \n 有关如何订购转账的说明，例如“大小，降序” \n \n \n --password-command SpaceSepList \n 提供用于加密配置的密码的命令。 \n \n \n -P, --progress \n 在传输过程中显示进度。 \n \n \n -q, --quiet \n 打印尽可能少的东西 \n \n \n --RC \n 启用远程控制服务器。 \n \n \n --RC-addr string \n IP地址：端口或：端口绑定服务器。 （默认为“ localhost：5572”） \n \n \n --RC-Allow-origin string \n 设置允许的CORS原点。 \n \n \n --RC-baseurl string \n URL的前缀-根目录留空。 \n \n \n --RC-cert string \n SSL PEM密钥（证书和CA证书的组合） \n \n \n --RC-client-ca string \n 客户证书颁发机构用来验证客户端 \n \n \n --RC-enable-metrics \n 在/ metrics上启用普罗米修斯指标 \n \n \n --RC-files string \n 要在HTTP服务器上投放的本地文件的路径。 \n \n \n --RC-htpasswd string \n htpasswd文件-如果未提供，则不进行身份验证 \n \n \n --RC-job-expire-duration duration \n 使已完成的异步作业过期，且早于该值（默认值为1m0s） \n \n \n --RC-job-expire-interval duration \n 检查过期的异步作业的时间间隔（默认为10s） \n \n \n --RC-key string \n SSL PEM私钥 \n \n \n --RC-max-header-bytes int \n 请求标头的最大大小（默认为4096） \n \n \n --RC-no-auth \n 某些方法不需要身份验证。 \n \n \n --RC-pass string \n 认证密码。 \n \n \n --RC-realm string \n 身份验证领域（默认为“ rclone”） \n \n \n --RC-serve \n 启用投放远程对象。 \n \n \n --RC-server-read-timeout duration \n 服务器读取数据的超时时间（默认为1h0m0s） \n \n \n --RC-server-write-timeout duration \n 服务器写入数据的超时时间（默认为1h0m0s） \n \n \n --RC-template string \n 用户指定的模板。 \n \n \n --RC-user string \n 认证用户名。 \n \n \n --RC-web-fetch-url string \n 用于获取webgui发行版的URL。 （默认为“   https://api.github.com/repos/rclone/rclone-webui-react/releases/latest”） \n \n \n --RC-web-gui \n 在本地主机上启动WebGUI \n \n \n --RC-web-gui-force-update \n 强制更新到Web GUI的最新版本 \n \n \n --RC-web-gui-no-open-browser \n 不要自动打开浏览器 \n \n \n --RC-web-gui-update \n 检查并更新到最新版本的Web GUI \n \n \n --retries int \n 如果操作失败，请重试此操作多次（默认值为3） \n \n \n --retries-sleep duration \n 重试操作失败之间的间隔，例如500ms，60s，5m。 （0禁用） \n \n \n --size-only \n 仅基于大小跳过，不基于调制时间或校验和 \n \n \n --stats duration \n 打印状态之间的间隔，例如500ms，60s，5m。 （0禁用）（默认1m0s） \n \n \n --stats-file-name-length int \n 统计资料中的最大档案名称长度。 0为无限制（默认为45） \n \n \n --stats-log-level string \n 显示--stats输出的日志级别DEBUG | INFO | NOTICE | ERROR（默认为“ INFO”） \n \n \n --stats-one-line \n 使统计数据适合一行。 \n \n \n --stats-one-line-date \n 启用--stats-one-line并添加当前日期/时间前缀。 \n \n \n --stats-one-line-date-format string \n 启用--stats-one-line-date并使用自定义格式的日期。将日期字符串括在双引号（“）中。请参见https://golang.org/pkg/time/#Time.Format \n \n \n --stats-unit string \n 以“位”或“字节” /秒（默认“字节”）的形式在统计数据中显示数据速率 \n \n \n --streaming-upload-cutoff SizeSuffix \n 如果文件大小未知，则切换到分块上传的截止时间。上载到截止时间或文件结束时开始。 （默认为100k） \n \n \n --suffix string \n 添加到已更改文件的后缀。 \n \n \n --suffix-keep-extension \n 使用--suffix时保留扩展名。 \n \n \n --syslog \n 使用Syslog进行记录 \n \n \n --syslog-facility string \n syslog的功能，例如KERN，USER，...（默认为“ DAEMON”） \n \n \n --timeout duration \n IO空闲超时（默认为5m0s） \n \n \n --tpslimit float \n 将每秒HTTP事务数限制为此。 \n \n \n --tpslimit-burst int \n --tpslimit的最大事务突发次数。 (默认为1) \n \n \n --track-renames \n 同步时，请重命名跟踪文件并在可能的情况下进行服务器端移动 \n \n \n --track-renames-strategy string \n 使用Track-Renames hash | modtime（默认为“ hash”）进行同步时要使用的策略 \n \n \n --transfers int \n 要并行运行的文件传输数。 （默认为4） \n \n \n -u, --update \n 跳过目标上较新的文件。 \n \n \n --use-cookies \n 启用会话cookiejar。 \n \n \n --use-json-log \n 使用json日志格式。 \n \n \n --use-mmap \n 使用mmap分配器（请参阅文档）。 \n \n \n --use-server-modtime \n 使用服务器修改时间而不是对象元数据 \n \n \n --user-agent string \n 将用户代理设置为指定的字符串。默认值为rclone /版本（默认为“ rclone / v1.52.2”） \n \n \n -v, --verbose count \n 打印更多的东西（重复更多） \n \n \n \n \n \n 点击查看指定网盘的全局参数 \n \n https://rclone.org/flags/#backend-flags \n \n \n \n \n 参数 \n 说明 \n \n \n \n \n --acd-auth-url string \n 验证服务器URL。 \n \n \n --acd-client-id  string \n Amazon Application Client ID。 \n \n \n --acd-client-secret  string \n Amazon Application Client Secret。 \n \n \n --acd-encoding  MultiEncoder \n 这将设置后端的编码。 (default Slash,InvalidUtf8,Dot) \n \n \n --acd-templink-threshold  SizeSuffix \n > =此大小的文件将通过其tempLink下载。 （预设9G） \n \n \n --acd-token-url  string \n 令牌服务器网址。 \n \n \n --acd-upload-wait-per-gb  Duration \n 完整上传失败后，每GB需要等待的额外时间，以查看是否出现。 （默认3m0s） \n \n \n --alias-remote  string \n 远程或别名路径。 \n \n \n --azureblob-access-tier  string \n Blob的访问层：热，酷或存档。 \n \n \n --azureblob-account  string \n 存储帐户名称（保留空白以使用SAS URL或仿真器） \n \n \n --azureblob-chunk-size  SizeSuffix \n 上传块大小（<= 100MB）。 （默认为4M） \n \n \n --azureblob-disable-checksum \n 不要将MD5校验和与对象元数据一起存储。 \n \n \n --azureblob-encoding  MultiEncoder \n 这将设置后端的编码。(default Slash,BackSlash,Del,Ctl,RightPeriod,InvalidUtf8) \n \n \n --azureblob-endpoint  string \n 服务端点 \n \n \n --azureblob-key  string \n 存储帐户密钥（保留空白以使用SAS URL或Emulator） \n \n \n --azureblob-list-chunk  int \n Blob列表的大小。 （默认为5000） \n \n \n --azureblob-memory-pool-flush-time  Duration \n 内部存储器缓冲池多长时间刷新一次。 （默认为1m0s） \n \n \n --azureblob-memory-pool-use-mmap \n 是否在内部内存池中使用mmap缓冲区。 \n \n \n --azureblob-sas-url  string \n SAS URL仅用于容器级别的访问 \n \n \n --azureblob-upload-cutoff  SizeSuffix \n 切换到分块上传的截止时间（<= 256MB）。 （预设256M） \n \n \n --azureblob-use-emulator \n 如果提供为“ true”，则使用本地存储仿真器（如果使用真实的Azure存储端点，则留空） \n \n \n --B2-account  string \n 帐户ID或应用程序密钥ID \n \n \n --B2-chunk-size  SizeSuffix \n 上传块大小。必须适合内存。 （预设96M） \n \n \n --B2-disable-checksum \n 禁用大文件（>上载截止文件）的校验和 \n \n \n --B2-download-auth-Duration  Duration \n 授权令牌到期之前的时间，单位为s或后缀ms | s | m | h | d。 （预设1w） \n \n \n --B2-download-url  string \n 自定义下载端点。 \n \n \n --B2-encoding  MultiEncoder \n 这将设置后端的编码。(default Slash,BackSlash,Del,Ctl,InvalidUtf8,Dot) \n \n \n --B2-endpoint  string \n 服务的端点。 \n \n \n --B2-hard-delete \n 远程删除时永久删除文件，否则隐藏文件。 \n \n \n --B2-key    string \n 应用密钥 \n \n \n --B2-test-mode  string \n X-Bz-Test-Mode标头的标志字符串，用于调试。 \n \n \n --B2-upload-cutoff  SizeSuffix \n 切换到分块上传的截止时间。 （默认200M） \n \n \n --B2-versions \n 在目录列表中包括旧版本。 \n \n \n --box-box-config-file  string \n Box App config.json位置 \n \n \n --box-box-sub-type  string \n （默认为“用户”） \n \n \n --box-client-id  string \n Box App Client Id \n \n \n --box-client-secret  string \n Box App Client Secret \n \n \n --box-commit-retries  int \n 尝试提交多部分文件的最大次数。 （默认为100） \n \n \n --box-encoding  MultiEncoder \n 这将设置后端的编码。 (default Slash,BackSlash,Del,Ctl,RightSpace,InvalidUtf8,Dot) \n \n \n --box-root-folder-id  string \n 填写rclone以使用非根文件夹作为起点。 \n \n \n --box-upload-cutoff  SizeSuffix \n 切换到分段上传的截止时间（> = 50MB）。 （默认为50M） \n \n \n --cache-chunk-clean-interval  Duration \n 缓存应该多久执行一次清理块存储。 （默认为1m0s） \n \n \n --cache-chunk-no-memory \n 禁用内存中缓存以在流式传输期间存储块。 \n \n \n --cache-chunk-path  string \n 缓存块文件的目录。 (default "$HOME/.cache/rclone/cache-backend") \n \n \n --cache-chunk-size  SizeSuffix \n 块的大小（部分文件数据）。 （默认5M） \n \n \n --cache-chunk-total-size  SizeSuffix \n 这些块可以在本地磁盘上占用的总大小。 （预设10G） \n \n \n --cache-db-path  string \n 存储文件结构元数据数据库的目录。 (default "$HOME/.cache/rclone/cache-backend") \n \n \n --cache-db-purge \n 启动时清除此远程服务器的所有缓存数据。 \n \n \n --cache-db-wait-time  Duration \n 等待数据库可用的时间-0是无限的（默认为1s） \n \n \n --cache-info-age  Duration \n 缓存文件结构信息（目录列表，文件大小，时间等）的时间。 （默认为6h0m0s） \n \n \n --cache-plex-insecure  string \n 连接到Plex服务器时跳过所有证书验证 \n \n \n --cache-plex-password  string \n Plex用户的密码（模糊） \n \n \n --cache-plex-url  string \n Plex服务器的URL \n \n \n --cache-plex-username  string \n Plex用户的用户名 \n \n \n --cache-read-retries  int \n 重试从高速缓存存储读取的次数。 （默认为10） \n \n \n --cache-remote  string \n 远程缓存。 \n \n \n --cache-rps  int \n 将每秒请求数限制到源FS（禁用为-1）（默认为-1） \n \n \n --cache-tmp-upload-path  string \n 临时文件保留到上载之前的目录。 \n \n \n --cache-tmp-wait-time  Duration \n 在上传文件之前，文件应在本地缓存中存储多长时间（默认15秒） \n \n \n --cache-workers  int \n 应该有多少工作线程并行运行来下载块。（默认值4） \n \n \n --cache-writes \n 通过FS写入时缓存文件数据 \n \n \n --chunker-chunk-size  SizeSuffix \n 大于块大小的文件将被拆分为多个块。 （预设2G） \n \n \n --chunker-fail-hard \n 选择分块器应如何处理缺少或无效块的文件。 \n \n \n --chunker-hash-type  string \n 选择分块器如何处理哈希和。除“ none”外，所有模式都需要元数据。 （默认为“ md5”） \n \n \n --chunker-meta-format  string \n 元数据对象的格式或“无”。默认情况下为“ simplejson”。 （默认为“ simplejson”） \n \n \n --chunker-name-format  string \n 块文件名的字符串格式。 (default "*.rclone_chunk.###") \n \n \n --chunker-remote  string \n Remote to chunk/unchunk \n \n \n --chunker-start-from  int \n 最小有效块数。通常为0或1。（默认为1） \n \n \n -L,    --copy-links \n 按照符号链接并复制指向的项目。 \n \n \n --crypt-directory-name-encryption \n 可以选择加密目录名称或保留目录名称不变。 （默认为true） \n \n \n --crypt-filename-encryption  string \n 如何加密文件名。 （默认为“标准”） \n \n \n --crypt-password  string \n 密码或密码短语进行加密。 （模糊） \n \n \n --crypt-password2  string \n 盐的密码或密码。可选，但推荐。 （模糊） \n \n \n --crypt-remote  string \n 远程加密/解密。 \n \n \n --crypt-show-mapping \n 对于列出的所有文件，请显示名称的加密方式。 \n \n \n --drive-acknowledge-abuse \n 设置为允许下载返回无法下载的文件。 \n \n \n --drive-allow-import-name-change \n 上传Google文档时，允许更改文件类型（例如，将file.doc转换为file.docx）。每次都会混淆同步和重新上传。 \n \n \n --drive-alternate-export \n 使用备用导出网址进行Google文档导出。 \n \n \n --drive-auth-owner-only \n 仅考虑经过身份验证的用户拥有的文件。 \n \n \n --drive-chunk-size  SizeSuffix \n 上传块大小。必须为2> = 256k的幂。 （默认为8M） \n \n \n --drive-client-id  string \n Google Application Client Id \n \n \n --drive-client-secret  string \n Google Application Client Secret \n \n \n --drive-disable-http2 \n 使用http2禁用驱动器（默认为true） \n \n \n --drive-encoding  MultiEncoder \n 这将设置后端的编码。 （默认为InvalidUtf8） \n \n \n --drive-export-formats  string \n 以逗号分隔的首选格式列表，用于下载Google文档。(default "docx,xlsx,pptx,svg") \n \n \n --drive-formats  string \n 不推荐使用：请参见export_formats \n \n \n --drive-impersonate  string \n 使用服务帐户时模拟该用户。 \n \n \n --drive-import-formats  string \n 用逗号分隔的用于上传Google文档的首选格式列表。 \n \n \n --drive-keep-revision-forever \n 永久保留每个文件的新的主修订版。 \n \n \n --drive-list-chunk  int \n 列表块的大小100-1000。 0禁用。 （默认为1000） \n \n \n --drive-pacer-burst  int \n 允许不休眠的API调用数。 （默认为100） \n \n \n --drive-pacer-min-sleep  Duration \n API调用之间的最短睡眠时间。 （默认100毫秒） \n \n \n --drive-root-folder-id  string \n 根文件夹的ID \n \n \n --drive-scope  string \n rclone从驱动器请求访问时应使用的范围。 \n \n \n --drive-server-side-across-configs \n 允许服务器端操作（例如，复制）跨不同的驱动器配置工作。 \n \n \n --drive-service-account-credentials  string \n 服务帐户凭据JSON Blob \n \n \n --drive-service-account-file  string \n 服务帐户凭据JSON文件路径 \n \n \n --drive-shared-with-me \n 只显示与我共享的文件。 \n \n \n --drive-size-as-quota \n 将大小显示为存储配额使用情况，而不是实际大小。 \n \n \n --drive-skip-checksum-gphotos \n 仅在Google照片和视频上跳过MD5校验和。 \n \n \n --drive-skip-gdocs \n 跳过所有列表中的google文档。 \n \n \n --drive-skip-shortcuts \n 如果设置跳过快捷方式文件 \n \n \n --drive-stop-on-upload-limit \n 使上传限制错误是致命的 \n \n \n --drive-team-drive  string \n 团队驱动器的ID \n \n \n --drive-trashed-only \n 仅显示垃圾箱中的文件。 \n \n \n --drive-upload-cutoff  SizeSuffix \n 切换到分块上传的截止时间（默认8M） \n \n \n --drive-use-created-date \n 使用文件创建日期而不是修改日期。 \n \n \n --drive-use-shared-date \n 共享使用日期文件，而不是修改日期。 \n \n \n --drive-use-trash \n 将文件发送到回收站，而不是永久删除。 （默认为true） \n \n \n --drive-V2-download-min-size  SizeSuffix \n 如果对象更大，请使用驱动器v2 API下载。 （默认关闭） \n \n \n --dropbox-chunk-size  SizeSuffix \n 上传块大小。 （<150M）。 （默认48M） \n \n \n --dropbox-client-id  string \n Dropbox App Client Id \n \n \n --dropbox-client-secret  string \n Dropbox App Client Secret \n \n \n --dropbox-encoding  MultiEncoder \n 这将设置后端的编码。 (default Slash,BackSlash,Del,RightSpace,InvalidUtf8,Dot) \n \n \n --dropbox-impersonate  string \n 在使用公司帐户时模拟该用户。 \n \n \n --fichier-api-key  string \n 您的API密钥，可从https://1fichier.com/console/params.pl获得 \n \n \n --fichier-encoding  MultiEncoder \n 这将设置后端的编码。 (default   Slash,LtGt,DoubleQuote,SingleQuote,BackQuote,Dollar,BackSlash,Del,Ctl,LeftSpace,RightSpace,InvalidUtf8,Dot) \n \n \n --fichier-shared-folder  string \n 如果要下载共享文件夹，请添加此参数 \n \n \n --ftp-concurrency  int \n FTP同时连接的最大数量，0表示无限制 \n \n \n --ftp-disable-epsv \n 即使服务器宣布支持，也禁用使用EPSV \n \n \n --ftp-encoding  MultiEncoder \n 这将设置后端的编码。(default Slash,Del,Ctl,RightSpace,Dot) \n \n \n --ftp-host  string \n FTP主机连接 \n \n \n --ftp-no-check-certificate \n 不验证服务器的TLS证书 \n \n \n --ftp-pass  string \n FTP密码（模糊） \n \n \n --ftp-port  string \n FTP端口，保留空白以使用默认值（21） \n \n \n --ftp-tls \n 在TLS上使用FTP（隐式） \n \n \n --ftp-user  string \n FTP用户名，当前用户名$ USER留空 \n \n \n --gcs-bucket-acl  string \n 新存储桶的访问控制列表。 \n \n \n --gcs-bucket-policy-only \n 访问检查应使用存储桶级IAM策略。 \n \n \n --gcs-client-id  string \n Google Application Client Id \n \n \n --gcs-client-secret  string \n Google Application Client Secret \n \n \n --gcs-encoding  MultiEncoder \n 这将设置后端的编码。 (default Slash,CrLf,InvalidUtf8,Dot) \n \n \n --gcs-location  string \n 新创建的存储桶的位置。 \n \n \n --gcs-object-acl  string \n 新对象的访问控制列表。 \n \n \n --gcs-project-number  string \n 项目编号。 \n \n \n --gcs-service-account-file  string \n 服务帐户凭据JSON文件路径 \n \n \n --gcs-storage-class  string \n 在Google Cloud Storage中存储对象时要使用的存储类。 \n \n \n --gphotos-client-id  string \n Google Application Client IdID \n \n \n --gphotos-client-secret  string \n Google Application Client Secret \n \n \n --gphotos-read-only \n 设置为使Google Photos后端为只读。 \n \n \n --gphotos-read-size \n 设置为读取媒体项目的大小。 \n \n \n --gphotos-start-year  int \n “年份”将要下载的照片限制为在给定年份之后上传的照片（默认为2000） \n \n \n --http-headers  CommaSepList \n 为所有交易设置HTTP标头 \n \n \n --http-no-head \n 不要使用HEAD请求在目录列表中查找文件大小 \n \n \n --http-no-slash \n 如果网站没有以/结尾的目录，请设置此值 \n \n \n --http-url  string \n 要连接的http主机的URL \n \n \n --hubic-chunk-size  SizeSuffix \n 超过此大小的文件将被分块到_segments容器中。 （预设5G） \n \n \n --hubic-client-id  string \n Hubic客户编号 \n \n \n --hubic-client-secret  string \n 中心客户秘密 \n \n \n --hubic-encoding  MultiEncoder \n 这将设置后端的编码。 (default Slash,InvalidUtf8) \n \n \n --hubic-no-chunk \n 在流式上传期间不要分块文件。 \n \n \n --jottacloud-encoding  MultiEncoder \n 这将设置后端的编码。 (default    Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,Del,Ctl,InvalidUtf8,Dot) \n \n \n --jottacloud-hard-delete \n 永久删除文件，而不是将它们放入垃圾箱。 \n \n \n --jottacloud-MD5-memory-limit  SizeSuffix \n 如果需要，大于此大小的文件将被缓存在磁盘上以计算MD5。 （默认为10M） \n \n \n --jottacloud-trashed-only \n 仅显示垃圾箱中的文件。 \n \n \n --jottacloud-unlink \n 使用链接命令删除现有的公共链接到文件/文件夹，而不是创建。 \n \n \n --jottacloud-upload-resume-limit  SizeSuffix \n 如果上传失败，大于该大小的文件可以恢复。 （默认为10M） \n \n \n --koofr-encoding  MultiEncoder \n 这将设置后端的编码。(default Slash,BackSlash,Del,Ctl,InvalidUtf8,Dot) \n \n \n --koofr-endpoint  string \n 要使用的Koofr API端点(default "https://app.koofr.net") \n \n \n --koofr-mountid  string \n 要使用的安装的安装ID。如果省略，则使用主支架。 \n \n \n --koofr-password  string \n 您的rclone的Koofr密码（在https://app.koofr.net/app/admin/preferences/password生成一个）（模糊） \n \n \n --koofr-setmtime \n 后端是否支持设置修改时间。如果您使用指向Dropbox或Amazon Drive后端的装载ID，请将其设置为false。 （默认为true） \n \n \n --koofr-user  string \n 您的Koofr用户名 \n \n \n -l, --links \n 将符号链接与扩展名为.rclonelink的常规文件相互转换 \n \n \n --local-case-insensitive \n 强制文件系统将自身报告为不区分大小写 \n \n \n --local-case-sensitive \n 强制文件系统将其自身报告为区分大小写。 \n \n \n --local-encoding  MultiEncoder \n 这将设置后端的编码。 （默认斜杠，点） \n \n \n --local-no-check-updated \n 不要检查上传期间文件是否更改 \n \n \n --local-no-sparse \n 禁用稀疏文件进行多线程下载 \n \n \n --local-no-unicode-normalization \n 不要对路径和文件名应用unicode规范化（已弃用） \n \n \n --local-nounc  string \n 在Windows上禁用UNC（长路径名）转换 \n \n \n --mailru-check-hash \n 如果文件校验和不匹配或无效（默认为true），应该怎么做 \n \n \n --mailru-encoding  MultiEncoder \n 这将设置后端的编码。(default    Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,BackSlash,Del,Ctl,InvalidUtf8,Dot) \n \n \n --mailru-pass  string \n 密码（模糊） \n \n \n --mailru-speedup-enable \n 如果存在另一个具有相同数据哈希值的文件，请跳过完整上传。 （默认为true） \n \n \n --mailru-speedup-file-patterns  string \n 逗号分隔的可加速文件名模式列表（按哈希排序）。 (default    " .mkv, .avi, .mp4, .mp3, .zip, .gz, .rar, .pdf") \n \n \n --mailru-speedup-max-disk  SizeSuffix \n 此选项使您可以禁用大型文件（默认为3G）的加速（按哈希输入） \n \n \n --mailru-speedup-max-memory  SizeSuffix \n 大于以下大小的文件将始终在磁盘上散列。 （默认为32M） \n \n \n --mailru-user  string \n 用户名（通常是电子邮件） \n \n \n --mega-debug \n 从Mega输出更多调试信息。 \n \n \n --mega-encoding  MultiEncoder \n 这将设置后端的编码。 （默认斜杠，InvalidUtf8，点） \n \n \n --mega-hard-delete \n 永久删除文件，而不是将它们放入垃圾箱。 \n \n \n --mega-pass  string \n 密码。 （模糊） \n \n \n --mega-user  string \n 用户名 \n \n \n -x,    --one-file-system \n 不要越过文件系统的边界（仅限unix / macOS）。 \n \n \n --onedrive-chunk-size  SizeSuffix \n 用来上传文件的块大小-必须为320k（327,680字节）的倍数。 （默认为10M） \n \n \n --onedrive-client-id  string \n Microsoft App客户端ID \n \n \n --onedrive-client-secret  string \n Microsoft App Client Secret \n \n \n --onedrive-drive-id  string \n 要使用的驱动器的ID \n \n \n --onedrive-drive-type  string \n 驱动器的类型（personal | business | documentLibrary） \n \n \n --onedrive-encoding  MultiEncoder \n 这将设置后端的编码。 （default   Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,Hash,Percent,BackSlash,Del,Ctl,LeftSpace,LeftTilde,RightSpace,RightPeriod,InvalidUtf8,Dot） \n \n \n --onedrive-expose-onenote-files \n 设置为使OneNote文件显示在目录列表中。 \n \n \n --onedrive-server-side-across-configs \n 允许服务器端操作（例如，复制）跨不同的onedrive配置工作。 \n \n \n --opendrive-chunk-size  SizeSuffix \n 文件将按此大小分块上传。 （默认为10M） \n \n \n --opendrive-encoding  MultiEncoder \n 这将设置后端的编码。 （default    Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,BackSlash,LeftSpace,LeftCrLfHtVt,RightSpace,RightCrLfHtVt,InvalidUtf8,Dot） \n \n \n --opendrive-password  string \n 密码。 （模糊） \n \n \n --opendrive-username  string \n 用户名 \n \n \n --pcloud-client-id  string \n Pcloud App客户端ID \n \n \n --pcloud-client-secret  string \n Pcloud App客户端机密 \n \n \n --pcloud-encoding  MultiEncoder \n 这将设置后端的编码。 (default Slash,BackSlash,Del,Ctl,InvalidUtf8,Dot) \n \n \n --pcloud-root-folder-id  string \n 填写rclone以使用非根文件夹作为起点。 （默认为“ d0”） \n \n \n --premiumizeme-encoding  MultiEncoder \n 这将设置后端的编码。(default Slash,DoubleQuote,BackSlash,Del,Ctl,InvalidUtf8,Dot) \n \n \n --putio-encoding  MultiEncoder \n 这将设置后端的编码。 (default Slash,BackSlash,Del,Ctl,InvalidUtf8,Dot) \n \n \n --qingstor-access-key-id  string \n QingStor访问密钥ID \n \n \n --qingstor-chunk-size  SizeSuffix \n 用于上传的块大小。 （默认为4M） \n \n \n --qingstor-connection-retries  int \n 连接重试次数。 （默认3） \n \n \n --qingstor-encoding  MultiEncoder \n 这将设置后端的编码。 （默认为Slash，Ctl，InvalidUtf8） \n \n \n --qingstor-endpoint  string \n 输入端点URL以连接QingStor API。 \n \n \n --qingstor-env-auth \n 从运行时获取QingStor凭据。仅在access_key_id和secret_access_key为空白时适用。 \n \n \n --qingstor-secret-access-key  string \n QingStor秘密访问密钥（密码） \n \n \n --qingstor-upload-concurrency  int \n 分段上传的并发性。 （默认为1） \n \n \n --qingstor-upload-cutoff  SizeSuffix \n 切换到分块上传的截止时间（默认200M） \n \n \n --qingstor-zone  string \n 要连接的区域。 \n \n \n --S3-access-key-id  string \n AWS访问密钥ID。 \n \n \n --S3-acl    string \n 创建存储桶以及存储或复制对象时使用的罐头ACL。 \n \n \n --S3-bucket-acl  string \n 创建存储区时使用的罐头ACL。 \n \n \n --S3-chunk-size  SizeSuffix \n 用于上传的块大小。 （默认5M） \n \n \n --S3-copy-cutoff  SizeSuffix \n 切换到多份副本的截止值（默认5G） \n \n \n --S3-disable-checksum \n 不要将MD5校验和与对象元数据一起存储 \n \n \n --S3-encoding  MultiEncoder \n 这将设置后端的编码。 (default Slash,InvalidUtf8,Dot) \n \n \n --S3-endpoint  string \n S3 API的端点。 \n \n \n --S3-env-auth \n 从运行时获取AWS凭证（如果没有环境变量，则获取环境变量或EC2 / ECS元数据）。 \n \n \n --S3-force-path-style \n 如果为true，则使用路径样式访问；如果为false，则使用虚拟托管样式。 （默认为true） \n \n \n --S3-leave-parts-on-error \n 如果为true，则避免在失败时调用中止上传，而将所有成功上传的部分保留在S3上以进行手动恢复。 \n \n \n --S3-list-chunk  int \n 列表块的大小（每个ListObject S3请求的响应列表）。 （默认为1000） \n \n \n --S3-location-constraint  string \n 位置限制-必须设置为与区域匹配。 \n \n \n --S3-memory-pool-flush-time  Duration \n 内部存储器缓冲池多长时间刷新一次。 （默认为1m0s） \n \n \n --S3-memory-pool-use-mmap \n 是否在内部内存池中使用mmap缓冲区。 \n \n \n --S3-provider  string \n 选择您的S3提供程序。 \n \n \n --S3-region  string \n 要连接的区域。 \n \n \n --S3-secret-access-key  string \n AWS秘密访问密钥（密码） \n \n \n --S3-server-side-encryption  string \n 在S3中存储此对象时使用的服务器端加密算法。 \n \n \n --S3-session-token  string \n 一个AWS会话令牌 \n \n \n --S3-sse-customer-algorithm  string \n 如果使用SSE-C，则在将此对象存储在S3中时使用服务器端加密算法。 \n \n \n --S3-sse-customer-key  string \n 如果使用SSE-C，则必须提供用于加密/解密数据的秘密加密密钥。 \n \n \n --S3-sse-customer-key-MD5  string \n 如果使用SSE-C，则必须提供秘密加密密钥MD5校验和。 \n \n \n --S3-sse-kms-key-id  string \n 如果使用KMS ID，则必须提供密钥的ARN。 \n \n \n --S3-storage-class  string \n 在S3中存储新对象时要使用的存储类。 \n \n \n --S3-upload-concurrency  int \n 分段上传的并发性。 （默认为4） \n \n \n --S3-upload-cutoff  SizeSuffix \n 切换到分块上传的截止时间（默认200M） \n \n \n --S3-use-accelerate-endpoint \n 如果为true，请使用AWS S3加速终端节点。 \n \n \n --S3-V2-auth \n 如果为true，请使用v2身份验证。 \n \n \n --seafile-2fa \n 两因素身份验证（如果帐户启用了2FA，则为“ true”） \n \n \n --seafile-create-library \n 如果rclone不存在，是否应该创建一个库 \n \n \n --seafile-encoding  MultiEncoder \n 这将设置后端的编码。(default Slash,DoubleQuote,BackSlash,Ctl,InvalidUtf8) \n \n \n --seafile-library  string \n 库的名称。留空以访问所有未加密的库。 \n \n \n --seafile-library-key  string \n 库密码（仅适用于加密的库）。如果通过命令行将其留空。 （模糊） \n \n \n --seafile-pass  string \n 密码（模糊） \n \n \n --seafile-url  string \n 要连接的seafile主机的URL \n \n \n --seafile-user  string \n 用户名（通常是电子邮件地址） \n \n \n --sftp-ask-password \n 允许在需要时询问SFTP密码。 \n \n \n --sftp-disable-hashcheck \n 禁用SSH命令的执行以确定远程文件哈希是否可用。 \n \n \n --sftp-host  string \n SSH主机连接 \n \n \n --sftp-key-file  string \n PEM编码的私钥文件的路径，保留为空白或将key-use-agent设置为使用ssh-agent。 \n \n \n --sftp-key-file-pass  string \n 解密PEM编码的私钥文件的密码。 （模糊） \n \n \n --sftp-key-pem  string \n 原始PEM编码的私钥（如果指定）将覆盖key_file参数。 \n \n \n --sftp-key-use-agent \n 设置时强制使用ssh-agent。 \n \n \n --sftp-md5sum-command  string \n 用于读取md5哈希的命令。保留空白以进行自动检测。 \n \n \n --sftp-pass  string \n SSH密码，保留空白以使用ssh-agent。 （模糊） \n \n \n --sftp-path-override  string \n SSH连接使用的替代路径。 \n \n \n --sftp-port  string \n SSH端口，保留空白以使用默认值（22） \n \n \n --sftp-set-modtime \n 如果已设置，请在遥控器上设置修改的时间。 （默认为true） \n \n \n --sftp-sha1sum-command  string \n 用于读取sha1哈希的命令。保留空白以进行自动检测。 \n \n \n --sftp-skip-links \n 设置为跳过任何符号链接和任何其他非常规文件。 \n \n \n --sftp-use-insecure-cipher \n 启用不安全的密码和密钥交换方法。 \n \n \n --sftp-user  string \n SSH用户名，当前用户名ncw留空 \n \n \n --sharefile-chunk-size  SizeSuffix \n 上传块大小。必须为2> = 256k的幂。 （默认为64M） \n \n \n --sharefile-encoding  MultiEncoder \n 设置后端的编码 (default    Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,BackSlash,Ctl,LeftSpace,LeftPeriod,RightSpace,RightPeriod,InvalidUtf8,Dot) \n \n \n --sharefile-endpoint  string \n API调用的端点。 \n \n \n --sharefile-root-folder-id  string \n 根文件夹的ID \n \n \n --sharefile-upload-cutoff  SizeSuffix \n 切换到分段上传的临界值。 （默认为128M） \n \n \n --skip-links \n 不要警告跳过符号链接。 \n \n \n --sugarsync-access-key-id  string \n Sugarsync访问密钥ID。 \n \n \n --sugarsync-app-id  string \n Sugarsync应用程序ID。 \n \n \n --sugarsync-authorization  string \n Sugarsync授权 \n \n \n --sugarsync-authorization-expiry  string \n Sugarsync授权到期 \n \n \n --sugarsync-deleted-id  string \n Sugarsync删除的文件夹ID \n \n \n --sugarsync-encoding  MultiEncoder \n 这将设置后端的编码。 （默认斜杠，Ctl，InvalidUtf8，点） \n \n \n --sugarsync-hard-delete \n 如果为true，则永久删除文件 \n \n \n --sugarsync-private-access-key  string \n Sugarsync专用访问密钥 \n \n \n --sugarsync-refresh-token  string \n Sugarsync刷新令牌 \n \n \n --sugarsync-root-id  string \n Sugarsync根ID \n \n \n --sugarsync-user  string \n Sugarsync用户 \n \n \n --swift-application-credential-id  string \n 应用程序凭证ID（OS_APPLICATION_CREDENTIAL_ID） \n \n \n --swift-application-credential-name  string \n 应用程序凭证名称（OS_APPLICATION_CREDENTIAL_NAME） \n \n \n --swift-application-credential-secret  string \n 应用程序凭证机密（OS_APPLICATION_CREDENTIAL_SECRET） \n \n \n --swift-auth  string \n 服务器的认证URL（OS_AUTH_URL）。 \n \n \n --swift-auth-token  string \n 来自备用身份验证的身份验证令牌-可选（OS_AUTH_TOKEN） \n \n \n --swift-auth-version  int \n AuthVersion-可选-如果您的身份验证URL没有版本（ST_AUTH_VERSION），则设置为（1,2,3） \n \n \n --swift-chunk-size  SizeSuffix \n 超过此大小的文件将被分块到_segments容器中。 （预设5G） \n \n \n --swift-domain  string \n 用户域-可选（v3身份验证）（OS_USER_DOMAIN_NAME） \n \n \n --swift-encoding  MultiEncoder \n 这将设置后端的编码。 （默认斜杠，InvalidUtf8） \n \n \n --swift-endpoint-type  string \n 要从服务目录中选择的端点类型（OS_ENDPOINT_TYPE）(default "public") \n \n \n --swift-env-auth \n 从标准OpenStack形式的环境变量中获取快速凭证。 \n \n \n --swift-key  string \n API密钥或密码（OS_PASSWORD）。 \n \n \n --swift-no-chunk \n 在流式上传期间不要分块文件。 \n \n \n --swift-region  string \n 区域名称-可选（OS_REGION_NAME） \n \n \n --swift-storage-policy  string \n 创建新容器时要使用的存储策略 \n \n \n --swift-storage-url  string \n 存储URL-可选（OS_STORAGE_URL） \n \n \n --swift-tenant  string \n 租户名称-v1身份验证的可选名称，否则需要此名称或tenant_id（OS_TENANT_NAME或OS_PROJECT_NAME） \n \n \n --swift-tenant-domain  string \n 租户域-可选（v3身份验证）（OS_PROJECT_DOMAIN_NAME） \n \n \n --swift-tenant-id  string \n 租户ID-对于v1身份验证是可选的，否则需要此或租户（OS_TENANT_ID） \n \n \n --swift-user  string \n 登录的用户名（OS_USERNAME）。 \n \n \n --swift-user-id  string \n 要登录的用户ID-可选-大多数快速系统使用用户并将其保留为空白（v3 auth）（OS_USER_ID）。 \n \n \n --tardigrade-access-grant  string \n 访问授权。 \n \n \n --tardigrade-api-key  string \n API密钥。 \n \n \n --tardigrade-passphrase  string \n 加密密码短语。要访问现有对象，请输入用于上传的密码。 \n \n \n --tardigrade-provider  string \n 选择身份验证方法。 （默认为“现有”） \n \n \n --tardigrade-satellite-address \n 卫星地址。自定义卫星地址应与格式匹配： <nodeid>@<address>:<port>  (default   "us-central-1.tardigrade.io") \n \n \n --union-action-policy  string \n 在ACTION类别上选择上游的策略。 （默认为“ epall”） \n \n \n --union-cache-time  int \n 使用率和可用空间的缓存时间（以秒为单位）。仅当使用路径保留策略时，此选项才有用。 （默认为120） \n \n \n --union-create-policy  string \n 在CREATE类别上选择上游的策略。 （默认为“ epmfs”） \n \n \n --union-search-policy  string \n 在SEARCH类别上选择上游的政策。 （默认为“ ff”） \n \n \n --union-upstreams  string \n 上游分隔的空间列表。 \n \n \n --webdav-bearer-token  string \n 不记名令牌而不是用户/密码（例如，蛋白杏仁饼干） \n \n \n --webdav-bearer-token-command  string \n 运行以获取承载令牌的命令 \n \n \n --webdav-pass  string \n 密码。 （模糊） \n \n \n --webdav-url  string \n 要连接的http主机的URL \n \n \n --webdav-user  string \n 用户名 \n \n \n --webdav-vendor  string \n 您正在使用的Webdav网站/服务/软件的名称 \n \n \n --yandex-client-id  string \n Yandex客户ID \n \n \n --yandex-client-secret  string \n Yandex客户机密 \n \n \n --yandex-encoding  MultiEncoder \n 这将设置后端的编码。(default Slash,Del,Ctl,InvalidUtf8,Dot) \n \n \n --yandex-unlink \n 使用链接命令删除现有的公共链接到文件/文件夹，而不是创建。 \n rclone mount \n \n 将网盘挂载为本地磁盘 \n \n \n rclone挂载 \n \n \n 在运行挂载命令后， SSH窗口会出现中断，光标丢失 ，需要断开重新连接。 \n \n \n 命令格式：只需修改 DriveName:Folder LocalFolder \n \n DriveName  这里就是配置第二步输入的 name \n Folder  网盘的中的文件夹， / 或者留空为网盘根目录 \n LocalFolder  本地文件夹 \n \n \n \n rclone  mount  DriveName:Folder LocalFolder  \\ \n--copy-links --no-gzip-encoding --no-check-certificate  \\ \n--allow-other --allow-non-empty  --umask  000  \\ \n --transfers   4  --buffer-size 32M --low-level-retries  200   \\ \n--dir-cache-time 12h --vfs-read-chunk-size 32M  \\ \n--vfs-read-chunk-size-limit 1G\n \n \n 点击查看挂载参数 \n \n \n \n 参数 \n 说明 \n \n \n \n \n --allow-non-empty \n 允许在非空目录上挂载。 \n \n \n --allow-other \n 允许访问其他用户。 \n \n \n --allow-root \n 允许访问root用户。 \n \n \n --attr-timeout duration \n 缓存文件/目录属性的时间。 （默认1秒） \n \n \n --daemon \n 将mount作为守护程序运行（后台模式）。 \n \n \n --daemon-timeout duration \n rclone响应内核的时间限制（并非所有操作系统都支持）。 \n \n \n --debug-fuse \n 调试FUSE内部-需要-v。 \n \n \n --default-permissions \n 使内核根据文件模式强制执行访问控制。 \n \n \n --dir-cache-time duration \n 是时候缓存目录条目了。 （默认为5m0s） \n \n \n --dir-perms FileMode \n 目录权限（默认0777） \n \n \n --file-perms FileMode \n 文件权限（默认0666） \n \n \n --fuse-flag stringArray \n 直接传递给libfuse / WinFsp的标志或参数。如果需要，请重复。 \n \n \n --gid uint32 \n 覆盖文件系统设置的gid字段。 （默认为1000） \n \n \n -h, --help \n 帮助安装 \n \n \n --max-read-ahead SizeSuffix \n 可以为顺序读取预取的字节数。 （默认为128k） \n \n \n --no-checksum \n 不要比较下载/下载时的校验和。 \n \n \n --no-modtime \n 不要读/写修改时间（可以加快修改速度）。 \n \n \n --no-seek \n 不允许在文件中查找。 \n \n \n -o, --option stringArray \n libfuse / WinFsp的选项。如果需要，请重复。 \n \n \n --poll-interval duration \n 等待两次轮询更改之间的时间。必须小于dir-cache-time。仅在受支持的遥控器上。设置为0禁用。 （默认为1m0s） \n \n \n --read-only \n 挂载为只读。 \n \n \n --uid uint32 \n 覆盖文件系统设置的uid字段。 （默认为1000） \n \n \n --umask int \n 覆盖文件系统设置的权限位。 \n \n \n --vfs-cache-max-age duration \n 缓存中对象的最长期限。 （默认为1h0m0s） \n \n \n --vfs-cache-max-size SizeSuffix \n 缓存中对象的最大总大小。 （默认关闭） \n \n \n --vfs-cache-mode CacheMode \n 缓存模式 关闭(off)|最小(minimal)|写入(writes)|完全(full)（默认关闭） \n \n \n --vfs-cache-poll-interval duration \n 轮询缓存以查找陈旧对象的时间间隔。 （默认为1m0s） \n \n \n --vfs-read-chunk-size SizeSuffix \n 逐块读取源对象。 （默认为128M） \n \n \n --vfs-read-chunk-size-limit SizeSuffix \n 如果大于--vfs-read-chunk-size，则在每次读取块后将块大小加倍，直到达到限制。 “关闭”是无限的。 （默认关闭） \n \n \n --volname string \n 设置卷名（并非所有操作系统都支持）。 \n \n \n --write-back-cache \n 使内核缓冲区写入，然后再将其发送到rclone。否则，将使用直写式缓存。 \n \n \n \n \n 查看是否挂载成功 \n df   -h \n \n 设置自启动 \n \n 第一种 \n \n \n 在 vi /etc/rc.local 文件中按 Shift  +  g （就是大写的 G ）跳转到末尾添加挂载命令 \n \n \n 为防止启动执行失败，最好执行一次 chmod +x /etc/rc.d/rc.local 进行授权 \n \n /usr/bin/rclone  mount  gdrive:/ /gdrive  \\ \n--copy-links --no-gzip-encoding  \\ \n--no-check-certificate --allow-other  \\ \n--allow-non-empty  --umask  000  >  /dev/null  2 > &1   & \n \n 或者使用 tmux \n创建新会话并在后台执行命令 \ntmux new  -s  onedrive  -d   "/usr/bin/rclone mount gdrive:/ /gdrive \\\n--copy-links --no-gzip-encoding --no-check-certificate \\\n--allow-other --allow-non-empty --umask 000" \n \n \n 第二种 \n \n \n 下载 rcloned 文件到 /etc/init.d/ 目录下，修改文件中的 NAME 、 REMOTE 、 LOCAL 变量，\n chmod +x /etc/init.d/rcloned 执行授权， update-rc.d -f rcloned defaults 执行更新， bash /etc/init.d/rcloned start 运行 \n \n',createdTime:1761814324e3},{title:"JavaScript第三方库",frontmatter:{description:"NPM依赖：类库工具\n前端开发中用到的npm工具\nhttps://www.yuque.com/zaotalk/team/st",meta:[{name:"twitter:title",content:"JavaScript第三方库"},{name:"twitter:description",content:"NPM依赖：类库工具\n前端开发中用到的npm工具\nhttps://www.yuque.com/zaotalk/team/st"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Web/JavaScript%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{property:"og:type",content:"article"},{property:"og:title",content:"JavaScript第三方库"},{property:"og:description",content:"NPM依赖：类库工具\n前端开发中用到的npm工具\nhttps://www.yuque.com/zaotalk/team/st"},{property:"og:url",content:"https://bajins.com/Web/JavaScript%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"JavaScript第三方库"},{itemprop:"description",content:"NPM依赖：类库工具\n前端开发中用到的npm工具\nhttps://www.yuque.com/zaotalk/team/st"}]},regularPath:"/Web/JavaScript%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",relativePath:"Web/JavaScript第三方库.md",key:"v-3d9b1a2a",path:"/Web/JavaScript%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",headers:[{level:2,title:"Flag",slug:"flag"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" JavaScript第三方库 \n Flag \n Flag \n \n https://github.com/topics/front-end \n https://github.com/topics/component \n https://github.com/component \n https://github.com/mobxjs \n https://github.com/CreateJS \n https://github.com/kangax \n https://github.com/alyssaxuu \n https://github.com/tomayac \n https://github.com/helpers \n https://github.com/DevExpress \n https://github.com/XboxYan \n https://github.com/yued-fe \n https://github.com/ibm-js \n https://github.com/denysdovhan \n https://github.com/blueimp \n https://github.com/sorrycc/awesome-javascript \n https://github.com/developit \n https://github.com/request \n https://github.com/herodevs \n \n \n NPM依赖：类库工具 \n 前端开发中用到的npm工具 \n https://www.yuque.com/zaotalk/team/st \n \n \n 转换编译器  https://github.com/babel \n \n https://babeljs.io \n https://www.babeljs.cn \n \n \n 使浏览器支持require  https://github.com/browserify \n https://github.com/babel/babelify \n 标准库  https://github.com/zloirock/core-js \n https://github.com/engine262/engine262 \n https://github.com/metaes/metaes \n https://github.com/Siubaak/sval \n https://github.com/NeilFraser/JS-Interpreter \n https://github.com/standard-things/esm \n \n \n https://github.com/jashkenas/coffeescript \n \n 编译成 JS 的语言列表 \n \n \n https://github.com/observablehq \n https://github.com/documentcloud \n 模板引擎  https://github.com/handlebars-lang \n https://github.com/mustache \n \n https://github.com/janl/mustache.js \n \n \n 当前设备  https://github.com/matthewhudson/current-device \n 拷贝文字  https://github.com/zenorocha/clipboard.js \n \n http://www.clipboardjs.cn \n \n \n https://github.com/zeroclipboard/zeroclipboard \n 绑定按键  https://github.com/jamiebuilds/tinykeys \n 语法高亮  https://github.com/PrismJS \n https://github.com/shikijs/shiki \n https://github.com/zTree/zTree_v3 \n https://github.com/highlightjs/highlight.js \n https://github.com/shikijs/shiki \n https://github.com/ajaxorg/ace-builds \n 验证  https://github.com/validatorjs/validator.js \n https://github.com/jquense/yup \n 国际化  https://github.com/rxaviers/javascript-globalization \n https://github.com/messageformat/messageformat \n https://github.com/formatjs/formatjs \n https://github.com/i18next/i18next \n https://github.com/iLib-js \n https://github.com/zhangfisher/voerka-i18n \n 模拟数据生成  https://github.com/nuysoft/Mock \n https://github.com/dankogai/js-base64 \n 选色器  https://github.com/bgrins/spectrum \n 手势交互  https://github.com/hammerjs/hammer.js \n https://github.com/material-motion/material-motion-js \n 自动执行  https://github.com/gruntjs \n velocity模板语法的JS实现  https://github.com/shepherdwind/velocity.js \n banner  https://github.com/kenwheeler/slick \n 范围滑块  https://github.com/leongersen/noUiSlider \n 动画加载指示器  https://github.com/tobiasahlin/SpinKit \n 级联网格布局库  https://github.com/desandro/masonry \n 数字和货币格式  https://github.com/leongersen/wnumb \n CSS的编码样式格式化  https://github.com/csscomb/csscomb.js \n https://github.com/styled-components/styled-components \n https://github.com/vercel/styled-jsx \n XSS清理器  https://github.com/cure53/DOMPurify \n https://github.com/capricorn86/happy-dom \n 识别手写  https://github.com/jadeocr/jadeocr \n 全文搜索  https://github.com/nextapps-de/flexsearch \n https://github.com/lucaong/minisearch \n https://github.com/mister-hope/slimsearch \n https://github.com/typesense/typesense \n https://github.com/MihaiValentin/lunr-languages \n https://github.com/cjinhuo/text-search-engine \n https://github.com/cloudcannon/pagefind \n 自动建议  https://github.com/knadh/floatype.js \n https://github.com/TarekRaafat/autoComplete.js \n 类型检查  https://github.com/facebook/flow \n 树视图/树网格插件  https://github.com/mar10/fancytree \n 交互式地图  https://github.com/openlayers/openlayers \n \n https://github.com/ghettovoice/ol-mapscale \n \n \n https://github.com/openstreetmap \n book阅读  https://github.com/johnfactotum/foliate \n 并发  https://github.com/rxaviers/async-pool \n https://github.com/caolan/async \n 控制导入行为  https://github.com/WICG/import-maps \n https://github.com/humanwhocodes/module-importer \n 进度  https://github.com/search?q=progress \n 代码格式化  https://github.com/prettier/prettier \n \n https://www.prettier.cn \n \n \n https://github.com/beautify-web/js-beautify \n https://github.com/brodybits/prettierx \n ESLint   https://github.com/eslint \n \n https://github.com/eslint-stylistic \n https://github.com/eslint-community \n \n \n https://github.com/oxc-project/oxc \n https://github.com/biomejs/biome \n https://github.com/humanwhocodes/config-array \n 测试  https://github.com/jestjs \n \n https://www.jestjs.cn \n \n \n 状态管理  https://github.com/statelyai/xstate \n iFrame宽高自适应  https://github.com/davidjbradshaw/iframe-resizer \n 运行C/C++代码  https://github.com/luoxuhai/clang.js \n 汉字拼音  https://github.com/hotoo/pinyin \n 甘特图  https://github.com/frappe/gantt \n 电子签名  https://github.com/OpenSignLabs/OpenSign \n 响应式电子邮件  https://github.com/mjmlio/mjml \n 路由  https://github.com/kwhitley/itty-router \n 不可变对象  https://github.com/tnfe/limu \n https://github.com/unadlib/mutative \n 火焰图  https://github.com/jlfwong/speedscope \n https://github.com/lahmatiy/cpupro \n 动态背景图  https://github.com/winterx/color4bg.js \n 数学公式  https://github.com/arnog/mathlive \n 页面切换效果  https://github.com/barbajs/barba \n 获取两个数组差异  https://github.com/DoneDeal0/superdiff \n 组件库  https://github.com/shoelace-style \n DX/DevEx  https://github.com/wxt-dev/wxt \n https://github.com/PlasmoHQ/plasmo \n https://github.com/crxjs/chrome-extension-tools \n CAPTCHA  https://github.com/tiagorangel1/cap \n CSS Paged Media  https://github.com/pagedjs/pagedjs \n \n https://docraptor.com/css-paged-media \n \n \n 字体加载器  https://github.com/bramstein/fontfaceobserver \n 表单引擎  https://github.com/surveyjs \n https://github.com/formio/formio.js \n \n \n https://github.com/Rob--W/cors-anywhere \n https://github.com/HTMLElements \n 第三方认证  https://github.com/openauthjs/openauth \n \n 弹窗/提示框 \n \n https://github.com/topics/dialog \n https://github.com/topics/popup \n https://github.com/topics/confirm \n https://github.com/topics/alert \n https://github.com/topics/ajax \n \n \n https://github.com/sweetalert2/sweetalert2 \n \n https://www.sweetalert2.cn \n https://github.com/t4t5/sweetalert \n \n \n https://github.com/simple-notify/simple-notify \n https://github.com/floating-ui/floating-ui \n 提示和弹出框  https://github.com/popperjs/popper-core \n alert()和confirm()包装  https://github.com/makeusabrew/bootbox \n 提示引导  https://github.com/kamranahmedse/driver.js \n \n 存储/缓存 \n \n https://github.com/topics/storage \n https://github.com/topics/localstorage \n https://github.com/topics/indexeddb \n \n \n https://github.com/amark/gun \n https://github.com/ustbhuangyi/storage \n https://github.com/jaywcjlove/store.js \n https://github.com/localForage/localForage \n \n https://github.com/xmoyking/localForage-cn \n \n https://localforage.docschina.org \n \n \n \n \n https://github.com/typicode/lowdb \n https://github.com/marcuswestin/store.js \n https://github.com/KID-joker/stokado \n https://github.com/adiwajshing/keyed-db \n https://github.com/gruns/ImmortalDB \n https://github.com/dfahlander/Dexie.js \n https://github.com/pouchdb/pouchdb \n https://github.com/jakearchibald/idb \n https://github.com/jakearchibald/idb-keyval \n https://github.com/ujjwalguptaofficial/JsStore \n https://github.com/google/lovefield \n https://github.com/dexie/Dexie.js \n https://github.com/pamelafox/lscache \n https://github.com/pubkey/rxdb \n https://github.com/aspen-cloud/triplit \n \n 编辑器 \n \n https://github.com/slab/quill \n https://github.com/notadd/neditor \n https://github.com/mycolorway/simditor \n https://github.com/summernote/summernote \n https://github.com/yabwe/medium-editor \n https://github.com/wangeditor-team/wangEditor \n https://github.com/ckeditor/ckeditor5 \n https://github.com/kindsoft/kindeditor \n https://github.com/ianstormtaylor/slate \n https://github.com/quilljs/quill \n https://github.com/alibaba/GGEditor \n https://github.com/facebook/lexical \n https://github.com/Hufe921/canvas-editor \n https://github.com/Alex-D/Trumbowyg \n https://github.com/mdx-js/mdx \n \n https://www.mdxjs.cn \n \n \n https://github.com/JiHong88/suneditor \n \n 工具 \n \n https://github.com/topics/workers \n https://github.com/topics/web-worker \n \n \n https://github.com/emmetio \n http://github.com/mootools \n https://github.com/sdkcarlos \n https://github.com/jrainlau \n https://github.com/liriliri/licia \n https://github.com/lodash/lodash \n https://github.com/toss/es-toolkit \n https://github.com/jashkenas \n \n https://github.com/jashkenas/underscore \n https://underscorejs.net \n \n \n https://github.com/ramda/ramda \n https://github.com/proYang/outils \n https://github.com/jsuites/jsuites \n https://github.com/o0101/- \n https://github.com/kennyfrc/cami.js \n 工具库  https://github.com/tnfe/bbo \n https://github.com/blitz-js \n \n https://www.blitzjs.cn \n \n \n 转换HTML/XML  https://github.com/posthtml/posthtml \n https://github.com/cheeriojs/cheerio \n 幻灯片  https://github.com/webslides/webslides \n https://github.com/gnab/remark \n 正则表达式  https://github.com/slevithan/XRegExp \n 编码转换  https://github.com/ashtuchkin/iconv-lite \n HTML复选框  https://github.com/bryanbraun/checkboxland \n 加密  https://github.com/travist/jsencrypt \n https://github.com/dmarman/sha256algorithm \n https://github.com/digitalbazaar/forge \n https://github.com/SocketDev \n 数据库可视化  https://github.com/lana-k/sqliteviz \n JSON增强  https://github.com/blitz-js/superjson \n JSON校验  https://github.com/ozkxr/match-json \n 二维码  https://github.com/ciaochaos/qrbtf \n https://github.com/mumuy/widget-qrcode \n 随机数  https://github.com/ChrisCavs/aimless.js \n Promise  https://github.com/petkaantonov/bluebird \n 矩阵计算  https://github.com/mateogianolio/vectorious \n 日历  https://github.com/schedule-x/schedule-x \n 字符串解析和格式化  https://github.com/ljharb/qs \n 日志  https://github.com/winstonjs/winston \n https://github.com/dahlia/logtape \n 主线程上运行  https://github.com/astoilkov/main-thread-scheduling \n 埋点  https://github.com/M-cheng-web/web-tracing \n 校验  https://github.com/yiminghe/async-validator \n 提取颜色  https://github.com/ppzreboot/k-colors.js \n \n \n 数字精度  https://github.com/topics/arbitrary-precision \n https://github.com/topics/bigdecimal \n https://github.com/topics/math \n https://github.com/topics/units \n https://github.com/topics/matrices \n https://github.com/topics/complex-numbers \n https://github.com/topics/expression-evaluator \n https://github.com/topics/bignumbers \n https://github.com/josdejong/mathjs \n https://github.com/MikeMcl \n \n https://github.com/MikeMcl/decimal.js \n https://github.com/MikeMcl/bignumber.js \n https://github.com/MikeMcl/big.js \n \n \n https://github.com/BenjaminVanRyseghem/numbro \n https://github.com/gastonmesseri/numerable \n https://github.com/adamwdraper/Numeral-js \n https://github.com/entronad/number-display \n \n \n mock  https://github.com/chancejs/chancejs \n https://github.com/TommyLemon/APIAuto \n \n \n Eval压缩/混淆  https://github.com/ben-sb/javascript-deobfuscator \n https://github.com/javascript-obfuscator/javascript-obfuscator \n https://github.com/mishoo/UglifyJS \n https://github.com/terser/terser \n https://github.com/beautifier/js-beautify \n https://github.com/kuizuo/js-deobfuscator \n https://github.com/Tsaiboss/decodeObfuscator \n https://github.com/mindedsecurity/jstillery \n https://dev-coco.github.io/Online-Tools/JavaScript-Deobfuscator.html \n https://github.com/DingZaiHub/ob-decrypt \n https://github.com/VasiaB/etacsufbo \n https://github.com/hax0r31337/JSDec \n https://github.com/lelinhtinh/de4js \n https://github.com/aemkei/jsfuck \n https://github.com/w2sft/JavaScript-diabolic-tricks-and-wicked-craft \n https://freejsobfuscator.com \n https://www.h5pack.com/js-obfuscator \n http://jsnice.org \n \n 日期时间 \n \n https://github.com/topics/picker \n https://github.com/topics/datepicker \n https://github.com/topics/timepicker \n https://github.com/topics/datetimepicker \n 替换Moment.js列表  https://github.com/you-dont-need/You-Dont-Need-Momentjs \n \n \n 日期处理类库  https://github.com/moment \n \n http://momentjs.cn \n https://github.com/moment/luxon \n \n \n https://github.com/iamkun/dayjs \n https://github.com/js-joda \n https://github.com/date-fns \n https://github.com/hustcc/timeago.js \n https://github.com/flatpickr \n https://github.com/fullcalendar/fullcalendar \n https://github.com/uxsolutions/bootstrap-datepicker \n \n HTTP \n \n https://github.com/wendux/fly \n https://github.com/github/fetch \n https://github.com/qubyte/fetch-ponyfill \n https://github.com/matthew-andrews/isomorphic-fetch \n https://github.com/axios/axios \n https://github.com/umijs/umi-request \n https://github.com/seanmonstar/reqwest \n https://github.com/ladjs/superagent \n 在html元素绑定请求  https://github.com/bigskysoftware/intercooler-js \n https://github.com/bigskysoftware/htmx \n https://github.com/js-cookie \n https://github.com/zimv/websocket-heartbeat-js \n https://github.com/JustinGastby/supa-simple-socket \n https://github.com/socketio \n \n https://github.com/darrachequesne/socket.io-sticky \n https://github.com/indutny/sticky-session \n https://github.com/wzrdtales/socket-io-sticky-session \n \n \n \n \n https://github.com/wicg/file-system-access \n \n https://wicg.github.io/file-system-access \n https://web.dev/file-system-access \n https://developer.mozilla.org/docs/Web/API/File_System_Access_API \n \n \n https://github.com/w3c/FileAPI \n \n https://w3c.github.io/FileAPI \n \n \n https://github.com/GoogleChromeLabs/browser-fs-access \n https://github.com/whatwg/fs \n 文件上传  https://github.com/fex-team/webuploader \n https://github.com/imcuttle/moUploader \n https://github.com/lovefc/fcup2 \n https://github.com/moxiecode/plupload \n \n https://chaping.github.io/plupload/doc \n \n \n https://github.com/23/resumable.js \n 保存文件  https://github.com/eligrey/FileSaver.js \n https://github.com/rndme/download \n https://github.com/jimmywarting/StreamSaver.js \n https://github.com/jimmywarting/native-file-system-adapter \n \n 文件 \n \n 压缩或编码解码库  https://github.com/photopea \n 压缩  https://github.com/photopea \n 读取和编辑zip  https://github.com/Stuk/jszip \n https://gitlab.pagedmedia.org/tools/pagedjs \n API文档  https://github.com/stoplightio \n https://github.com/yeyan1996/free-swagger \n https://github.com/swagger-api/swagger-js \n https://github.com/superwf/ts-gear \n https://github.com/acacode/swagger-typescript-api \n https://github.com/Manweill/swagger-axios-codegen \n \n 数据表格 \n \n https://github.com/topics/data-table \n https://github.com/topics/grid \n https://github.com/topics/table \n https://github.com/topics/datatable \n \n \n https://github.com/frappe/datatable \n https://github.com/fiduswriter/Simple-DataTables \n https://github.com/baukh789/GridManager \n https://github.com/ag-grid/ag-grid \n https://github.com/future-architect/cheetah-grid \n https://github.com/alibaba/x-render \n https://github.com/TonyGermaneri/canvas-datagrid \n https://github.com/VisActor \n 交互式  https://github.com/olifolkerd/tabulator \n \n 拖动/拖拽/拖放 \n \n https://github.com/topics/drag-and-drop \n https://github.com/topics/drag-drop \n https://github.com/topics/vanilla \n https://github.com/topics/dragging \n \n \n 拖曳  https://github.com/desandro/draggabilly \n 拖放  https://github.com/bevacqua/dragula \n 拖动表格行  https://github.com/isocra/TableDnD \n https://github.com/SortableJS \n \n 媒体/图片/图像 \n \n 图片懒加载  https://github.com/tuupola/lazyload \n Metro风兼瀑布流布局  https://github.com/desandro/masonry \n 图片查看  https://github.com/fengyuanchen \n https://github.com/dimsemenov/PhotoSwipe \n https://github.com/openseadragon/openseadragon \n 响应式导航  https://github.com/VPenkov/okayNav \n 图像缩放  https://github.com/kingdido999/zooming \n 图像中提取颜色  https://github.com/briangonzalez/rgbaster.js \n SVG渲染图像占位符  https://github.com/imsky/holder \n 交互式医学图像  https://github.com/cornerstonejs/cornerstone \n https://github.com/impress/impress.js \n 照片库  https://github.com/SimonAKing/AnimatedGallery \n DOM生成图片  https://github.com/tsayen/dom-to-image \n https://github.com/niklasvh/html2canvas \n \n https://github.com/yorickshan/html2canvas-pro \n https://github.com/html2canvas/html2canvas \n \n \n https://github.com/zumerlab/snapdom \n https://github.com/1904labs/dom-to-image-more \n https://github.com/zumerlab/snapdom \n \n 流程图 \n \n https://github.com/topics/diagram \n https://github.com/topics/flowchart \n \n \n 图表库  https://github.com/NorthwoodsSoftware/GoJS \n https://github.com/jsplumb \n https://github.com/antvis \n https://github.com/noflo \n https://github.com/fex-team \n https://github.com/highcharts \n https://github.com/apache/incubator-echarts \n \n https://github.com/apache/echarts-handbook \n \n \n https://github.com/novus/nvd3 \n https://github.com/plotly/plotly.js \n https://github.com/bernii/gauge.js \n https://github.com/timqian/chart.xkcd \n https://github.com/imgcook/imove \n https://github.com/jgraph/mxgraph \n \n https://github.com/jinzhanye/pokemon-diagram \n mxGraph 入门实例教程 \n https://github.com/maxGraph/maxGraph \n \n \n https://github.com/dagrejs \n https://github.com/cytoscape \n https://github.com/d3 \n https://github.com/freegroup/draw2d \n https://github.com/projectstorm/react-diagrams \n https://github.com/auto-workflow/AWorkflow \n https://github.com/mermaidjs/mermaid-live-editor \n https://github.com/observablehq/plot \n 实体建模  https://github.com/jscad \n \n https://github.com/uetchy/cadmio \n https://github.com/gilboonet \n \n \n https://github.com/adrai \n https://www.jointjs.com \n \n https://resources.jointjs.com/tutorials/joint/tutorials/ports.html \n \n \n https://github.com/jwilber/roughViz \n https://github.com/didi/LogicFlow \n https://github.com/jagenjo/litegraph.js \n \n 动画/WebGL \n \n https://github.com/KhronosGroup/WebGL \n \n \n https://github.com/animate-css/animate.css \n https://github.com/juliangarnier/anime \n \n https://github.com/willin/anime.js.cool \n \n \n https://github.com/greensock/GSAP \n 3D库  https://github.com/mrdoob/three.js \n https://github.com/kovacsv/Online3DViewer \n https://github.com/galacean \n 3D地球和2D地图  https://github.com/CesiumGS/cesium \n 2D渲染器  https://github.com/pixijs/pixijs \n https://github.com/erincatto/box2d \n https://github.com/KilledByAPixel/LittleJS \n https://github.com/le5le-com \n https://github.com/leaferjs \n 用于缩放图像  https://github.com/francoischalifour/medium-zoom \n https://github.com/pa7/heatmap.js \n https://github.com/konvajs/konva \n https://github.com/processing/p5.js \n https://github.com/photonstorm/phaser \n https://github.com/williamngan/pts \n https://github.com/KaliedaRik/Scrawl-canvas \n https://github.com/jeremyckahn/rekapi \n https://github.com/danzen/zimjs \n SVG绘图编辑器  https://github.com/SVG-Edit \n https://github.com/fabricjs \n https://github.com/paperjs \n https://github.com/apexcharts \n https://github.com/clientIO/joint \n 图标字体自定义  https://github.com/uuware/icons-font-customization \n https://github.com/07akioni/xicons \n https://github.com/IanLunn/Hover \n https://github.com/matthieua/WOW \n https://github.com/jlmakes/scrollreveal \n https://github.com/miniMAC/magic \n https://github.com/fians/Waves \n https://github.com/visionmedia/move.js \n https://github.com/julianshapiro/velocity \n https://github.com/ustbhuangyi/better-scroll \n https://github.com/mescroll/mescroll \n https://github.com/tweenjs/tween.js \n https://github.com/d3/d3 \n \n https://github.com/xswei/d3js_doc \n https://github.com/mauriciopoppe/function-plot \n https://github.com/gwtd3/gwt-d3 \n \n \n 动画引擎  https://github.com/julianshapiro/velocity \n https://github.com/toji/gl-matrix \n https://github.com/playcanvas/engine \n \n https://playcanvas.com \n \n \n https://github.com/redcamel/RedGL2 \n https://github.com/kitware/vtk-js \n https://github.com/scottcgi/MojoJS-Animation \n https://github.com/drawcall/Proton \n https://github.com/dromara/newcar \n \n Player \n \n https://github.com/topics/html5-video \n https://github.com/topics/video-player \n \n \n https://github.com/videojs \n https://github.com/shaka-project \n https://github.com/canalplus/rx-player \n https://github.com/MoePlayer \n https://github.com/sampotts/plyr \n https://github.com/Chimeejs/chimee \n https://github.com/bilibili/flv.js \n https://github.com/xqq/mpegts.js \n https://github.com/google/shaka-player \n https://gitee.com/niandeng/ckplayer \n https://github.com/Aaaaaaaty/Blog/tree/master/html5player \n https://github.com/chiruom/DanmuPlayer \n https://github.com/Dash-Industry-Forum/dash.js \n 字体滚动  https://github.com/chenjianfang/scroxt \n https://github.com/kalkih/mini-media-player \n https://github.com/jwplayer/jwplayer \n https://github.com/phoboslab/jsmpeg \n https://github.com/wangrongding/tiny-player \n https://github.com/codeacme17/echo-ui \n \n 反爬虫 \n \n https://github.com/antoinevastel/fpscanner \n https://github.com/ta7sudan/secan \n 前端如何检测Chrome-Headless不被爬虫虐 \n \n",createdTime:1761814324e3},{title:"文件",frontmatter:{description:"",meta:[{name:"twitter:title",content:"文件"},{name:"twitter:description",content:""},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/files.html"},{property:"og:type",content:"article"},{property:"og:title",content:"文件"},{property:"og:description",content:""},{property:"og:url",content:"https://bajins.com/files.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"文件"},{itemprop:"description",content:""}]},regularPath:"/files.html",relativePath:"files.md",key:"v-007e978d",path:"/files.html",content:" 文件 \n Eclipse配置mars2.zip \n Eclipse配置mars2以上版本.zip \n FiddlerCore_4-45.7z \n IDEA设置.zip \n JDK版本生命周期.html \n MediaQueriesExample.html \n circle-progress-bar.html \n css-animation.html \n fix-footer-page-bottom-absolute.html \n fix-footer-page-bottom-calc.html \n fix-footer-page-bottom-flex.html \n fix-footer-page-bottom-margin-top.html \n fix-footer-window-bottom-fixed.html \n fix-footer-window-bottom-sticky.html \n gradle-wrapper.properties \n horizontal-arrangement-flex.html \n horizontal-arrangement-inline-block.html \n horizontal-arrangement-float-left.html \n init.gradle \n init.gradle.kts \n round-progress-bar.html \n Get-COM-Objects.bat \n MySQL同步远程数据库到本地.sh \n Get-COM-Objects.ps1 \n MySQL备份并删除历史.sh \n deltas_pack_war.vbs \n frpc.bat \n git-pull.bat \n git-pull.sh \n go_pack_7z.bat \n go_pack_embed.sh \n go_pack_rice.sh \n go_pack_zip.sh \n hidden_run_jar.bat \n hidden_run_jar.vbs \n learning-example.ps1 \n mountDataDisk.sh \n rcloned \n rememory.sh \n reset_jetbrains_eval_mac_linux.sh \n reset_jetbrains_eval_windows.vbs \n vbscript_hta_example.vbs \n 文件编码转换.vbs \n 编译项目部署到指定目录.sh \n 添加快捷方式.bat \n 设置必应壁纸.bat \n 设置必应壁纸转换.bat \n settings.gradle \n settings.xml \n 禁用Intel显卡驱动设置.igp \n"},{title:"NodeJS",frontmatter:{description:"https://github.com/nodeschool\nhttps://github.com/workshopper\nhttp://www.npmdoc.org\nhttps://github.com/goldbergyoni/nodebestpractices\nNodeJs小册\nhttps://developer.ibm.com/zh/technologies/node-js\nhttps://github.com/alsotang/node-lessons\nhttps://github.com/cnodejs\nhttps://github.com/amplication\nhttps://github.com/i5ting/asynchronous-flow-control\n基准测试 https://github.com/RafaelGSS/nodejs-bench-operations\n实时协作 https://github.com/partykit/partykit\n版本支持情况 https://github.com/williamkapke/node-compat-table",meta:[{name:"twitter:title",content:"NodeJS"},{name:"twitter:description",content:"https://github.com/nodeschool\nhttps://github.com/workshopper\nhttp://www.npmdoc.org\nhttps://github.com/goldbergyoni/nodebestpractices\nNodeJs小册\nhttps://developer.ibm.com/zh/technologies/node-js\nhttps://github.com/alsotang/node-lessons\nhttps://github.com/cnodejs\nhttps://github.com/amplication\nhttps://github.com/i5ting/asynchronous-flow-control\n基准测试 https://github.com/RafaelGSS/nodejs-bench-operations\n实时协作 https://github.com/partykit/partykit\n版本支持情况 https://github.com/williamkapke/node-compat-table"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Web/NodeJS.html"},{property:"og:type",content:"article"},{property:"og:title",content:"NodeJS"},{property:"og:description",content:"https://github.com/nodeschool\nhttps://github.com/workshopper\nhttp://www.npmdoc.org\nhttps://github.com/goldbergyoni/nodebestpractices\nNodeJs小册\nhttps://developer.ibm.com/zh/technologies/node-js\nhttps://github.com/alsotang/node-lessons\nhttps://github.com/cnodejs\nhttps://github.com/amplication\nhttps://github.com/i5ting/asynchronous-flow-control\n基准测试 https://github.com/RafaelGSS/nodejs-bench-operations\n实时协作 https://github.com/partykit/partykit\n版本支持情况 https://github.com/williamkapke/node-compat-table"},{property:"og:url",content:"https://bajins.com/Web/NodeJS.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"NodeJS"},{itemprop:"description",content:"https://github.com/nodeschool\nhttps://github.com/workshopper\nhttp://www.npmdoc.org\nhttps://github.com/goldbergyoni/nodebestpractices\nNodeJs小册\nhttps://developer.ibm.com/zh/technologies/node-js\nhttps://github.com/alsotang/node-lessons\nhttps://github.com/cnodejs\nhttps://github.com/amplication\nhttps://github.com/i5ting/asynchronous-flow-control\n基准测试 https://github.com/RafaelGSS/nodejs-bench-operations\n实时协作 https://github.com/partykit/partykit\n版本支持情况 https://github.com/williamkapke/node-compat-table"}]},regularPath:"/Web/NodeJS.html",relativePath:"Web/NodeJS.md",key:"v-7b788ccd",path:"/Web/NodeJS.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"构建打包",slug:"构建打包"},{level:2,title:"第三方库",slug:"第三方库"},{level:2,title:"版本管理",slug:"版本管理"},{level:2,title:"依赖管理",slug:"依赖管理"},{level:3,title:"管理yarn",slug:"管理yarn"},{level:3,title:"依赖镜像",slug:"依赖镜像"},{level:3,title:"更新依赖包",slug:"更新依赖包"},{level:3,title:"yarn和npm命令",slug:"yarn和npm命令"},{level:3,title:"正式发布包",slug:"正式发布包"},{level:2,title:"解析",slug:"解析"},{level:2,title:"爬虫",slug:"爬虫"},{level:2,title:"小程序",slug:"小程序"},{level:3,title:"自定义组件",slug:"自定义组件"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" NodeJS \n Flag 构建打包 第三方库 版本管理 依赖管理 管理yarn 依赖镜像 更新依赖包 yarn和npm命令 正式发布包 解析 爬虫 小程序 自定义组件 \n Flag \n \n https://github.com/topics/nodejs \n https://github.com/topics/node-js \n https://github.com/nodejs \n \n https://nodejs.org/zh-cn \n \n \n \n \n https://github.com/nodeschool \n https://github.com/workshopper \n http://www.npmdoc.org \n https://github.com/goldbergyoni/nodebestpractices \n NodeJs小册 \n https://developer.ibm.com/zh/technologies/node-js \n https://github.com/alsotang/node-lessons \n https://github.com/cnodejs \n https://github.com/amplication \n https://github.com/i5ting/asynchronous-flow-control \n 基准测试  https://github.com/RafaelGSS/nodejs-bench-operations \n 实时协作  https://github.com/partykit/partykit \n 版本支持情况  https://github.com/williamkapke/node-compat-table \n \n \n node 执行脚本时获取参数 process.argv 数组，下标 0 为执行程序的绝对路径，下标 1 为脚本的绝对路径，\n所以真正的参数从下标 2 开始 process.argv.splice(2) \n \n \n Web标准实现  https://github.com/jsdom/jsdom \n https://github.com/stylus \n 自动重启Node  https://github.com/remy/nodemon \n 2023年最受欢迎的node.js框架 \n 构建打包 \n \n 前端构建工具进化历程 \n \n \n https://github.com/webpack/webpack \n \n https://github.com/webpack-contrib \n https://webpack.js.org \n https://www.webpackjs.com \n 深入浅出 Webpack  https://github.com/gwuhaolin/dive-into-webpack \n \n \n https://github.com/parcel-bundler/parcel \n \n https://www.parceljs.cn \n \n \n https://github.com/snowpackjs/snowpack \n https://github.com/rollup/rollup \n \n https://www.rollupjs.com \n https://github.com/rolldown-rs/rolldown \n \n \n https://github.com/TurboPack \n https://github.com/vitejs/vite \n https://github.com/evanw/esbuild \n https://github.com/web-infra-dev \n https://github.com/bower/bower \n https://github.com/gulpjs/gulp \n \n https://www.gulpjs.com.cn \n \n \n 2009年，npm \n 2012年，grunt \n 2012年，bower \n 2013年，yeoman  https://github.com/yeoman \n 2014年，gulp \n 2015年，fis3 \n 2017年，webpack3 \n \n \n https://github.com/wuhao000/aegis-tools \n https://github.com/fuchengwei/deploy-cli-service \n https://github.com/Tencent/hel \n 打包单个可执行文件  https://github.com/Ray-D-Song/lexe \n 第三方库 \n \n https://github.com/parro-it/awesome-micro-npm-packages \n https://github.com/TanninOne \n https://github.com/dylang \n https://github.com/isaacs \n https://github.com/nodeca \n https://github.com/dominictarr \n https://github.com/kentcdodds \n https://github.com/unjs \n \n \n https://github.com/eggjs/egg \n glob  https://github.com/micromatch/extglob \n https://github.com/mrmlnc/fast-glob \n https://github.com/reworkcss \n https://github.com/visionmedia \n CMS  https://github.com/strapi/strapi \n \n https://www.strapi.cn \n \n \n ORM  https://github.com/prisma/prisma \n https://github.com/jugglingdb \n https://github.com/dresende/node-orm2 \n https://github.com/sequelize/sequelize \n https://github.com/vincit/objection.js \n https://github.com/bookshelf/bookshelf \n https://github.com/balderdashy/waterline \n https://github.com/sutandojs/sutando \n https://github.com/jaynath-d/node-jdbc-driver \n SQL查询  https://github.com/knex/knex \n https://github.com/TryGhost/node-sqlite3 \n https://github.com/sql-js/sql.js \n SQLite REST API  https://github.com/thevahidal/soul \n 解析器、压缩器、压缩器和美化  https://github.com/mishoo/UglifyJS \n https://github.com/solzimer/nsyslog-parser \n 日志  https://github.com/trentm/node-bunyan \n https://github.com/pillarjs/send \n https://github.com/pinojs/pino \n https://github.com/debug-js/debug \n 断言  https://github.com/chaijs \n Expect交互  https://github.com/facebook/jest \n https://github.com/sinonjs \n 命令行  https://github.com/tj/commander.js \n https://github.com/SBoudrias/Inquirer.js \n https://github.com/oclif/oclif \n https://github.com/yargs/yargs \n https://github.com/shelljs/shelljs \n USB  https://github.com/schakko/node-usb \n https://github.com/node-usb \n 字体管理  https://github.com/foliojs/font-manager \n 访问头文件  https://github.com/charto/nbind \n 正则表达式  https://github.com/CJex/regulex \n 特性开关  https://github.com/Unleash/unleash \n 分布式ID  https://github.com/cloudyan/snowflake \n REST  https://github.com/restify \n https://github.com/senchalabs/connect \n 压缩解压文件  https://github.com/quentinrossetti/node-7z \n WEB框架  https://github.com/marblejs/marble \n https://github.com/nestjs/nest \n https://github.com/fastify/fastify \n https://github.com/koajs/koa \n \n https://github.com/demopark/koa-docs-Zh-CN \n \n \n https://github.com/expressjs/express \n \n https://expressjs.com/zh-cn/guide/writing-middleware.html \n \n \n 键值存储  https://github.com/jaredwray/keyv \n https://github.com/microlinkhq/keyvhq \n https://github.com/sindresorhus/quick-lru \n 图片压缩  https://gitlab.com/ramiel/caravaggio \n https://github.com/lovell/sharp \n C交互接口  https://github.com/Koromix/koffi \n 游戏框架  https://github.com/greenheartgames/greenworks \n https://github.com/ceifa/steamworks.js \n 检测文字语言  https://github.com/komodojp/tinyld \n 表单验证  https://github.com/vinejs/vine \n 代理HLS视频流  https://github.com/warren-bank/HLS-Proxy \n 文件操作  https://github.com/jprichardson/node-fs-extra \n 文件监视  https://github.com/paulmillr/chokidar \n 环境变量加载  https://github.com/motdotla/dotenv \n 密码哈希处理  https://github.com/kelektiv/node.bcrypt.js \n Canvas  https://github.com/Automattic/node-canvas \n 静态HTTP服务器  https://github.com/http-party/http-server \n 发送邮件  https://github.com/dahlia/upyo \n 版本管理 \n \n https://github.com/topics/versioning \n https://github.com/topics/version-manager \n https://github.com/topics/dependency-manager \n https://github.com/topics/environment \n \n \n https://nodejs.org/zh-cn/download/package-manager \n \n \n https://github.com/tj/n \n \n https://github.com/mklement0/n-install \n \n \n https://github.com/Jrohy/nodejs-install \n https://github.com/jasongin/nvs \n https://github.com/nodenv/nodenv \n https://github.com/nodesource/distributions \n https://github.com/Schniz/fnm \n https://github.com/jdxcode/rtx \n https://github.com/volta-cli/volta \n https://github.com/jetify-com/devbox \n检查Node.js和NPM版本 \n node   -v   &&   npm   -v \n \n NVM \n \n nodeJs版本管理工具,管理nodejs版本和npm版本 \n \n \n https://github.com/nvm-sh/nvm \n https://github.com/coreybutler/nvm-windows \n https://github.com/lukechilds/zsh-nvm \n \n curl  -o- https://raw.githubusercontent.com/creationix/nvm/master/install.sh  |   bash \n刷新 \n source  ~/.bashrc\n查询最新版本号 \nnvm ls-remote  --lts \n安装稳定版 Nodejs \nnvm  install   < 最新的版本号 > \n 依赖管理 \n \n https://github.com/Unitech/pm2 \n https://github.com/npm \n \n https://www.npmjs.cn \n \n \n https://github.com/yarnpkg \n \n https://www.yarnpkg.com.cn \n \n \n https://github.com/pnpm/pnpm \n \n \n https://github.com/xthezealot/npmprune \n https://github.com/antfu/ni \n 管理yarn \n安装 \n npm   install   -g   yarn \n \n 卸载 \n查找目录并删除 \n yarn  global bin\n卸载 \n npm  uninstall  -g   yarn \n 依赖镜像 \n \n npm i -g nrm  安装 nrm ， nrm ls  查看下载镜像源， nrm use taobao  切换镜像源 \n \n 更多镜像源 \n \n https://github.com/cnpm \n \n https://npmmirror.com \n \n \n \n 手动配置 \n \n 如果使用 yarn ，就把命令开头的 npm 替换为 yarn \n查看仓库地址 \n npm  config get registry\n设置官方仓库地址 \n npm  config  set  registry https://registry.npmjs.org\n设置淘宝镜像仓库地址 \n npm  config  set  registry https://registry.npmmirror.com\n阿里云镜像 \n npm  config  set  registry https://npm.aliyun.com/\n腾讯云镜像 \n npm  config  set  registry https://mirrors.cloud.tencent.com/npm/\n华为云镜像 \n npm  config  set  registry https://mirrors.huaweicloud.com/repository/npm/\n网易镜像 \n npm  config  set  registry https://mirrors.163.com/npm/\n中国科学技术大学开源镜像站 \n npm  config  set  registry https://mirrors.ustc.edu.cn/npm/\n清华大学开源镜像站 \n npm  config  set  registry https://mirrors.tuna.tsinghua.edu.cn/npm/\n查看代理地址 \n npm  config get proxy\n npm  config get https-proxy\n设置代理地址 \n npm  config  set  proxy http://127.0.0.1:1080\n设置https代理地址 \n npm  config  set  https-proxy http://server:port\n设置代理用户名和密码 \n npm  config  set  proxy http://username:password@server:port\n npm  confit  set  https-proxy http://username:password@server:port\n删除代理地址 \n npm  config delete proxy\n npm  config delete https-proxy\n 更新依赖包 \n yarn \n \n yarn.lock 和 package.json 都会更新，但是会进行版本锁定 \n \n \n 更新所有到最新版本 \n \n \n 需要手动选择升级的依赖包， a 键选择所有， i 键反向选择 \n \n yarn  upgrade-interactive  --latest \n \n \n 更新单个到指定版本 \n \n yarn  upgrade package@latest\n \n npm \n \n 更新 dependencies 到最新版本 \n先检查更新 \n npm  outdated\n安装 \n npm   install   -g  npm-check-updates\n检查可更新依赖，ncu \nnpm-check-updates\n更新，ncu -u \nncu  --upgrade \n安装最新版本依赖 \n npm   install \n yarn和npm命令 \n \n \n \n npm \n yarn \n 说明 \n \n \n \n \n npm install(i) \n yarn/yarn install \n 根据package.json安装依赖 \n \n \n npm uninstall(un) 包名 –-global(-g) \n yarn global remove 包名 \n 卸载全局依赖包 \n \n \n npm uninstall(un) 包名 -–save(-S) \n yarn remove 包名 \n 卸载依赖，并删除package.json中的 \n \n \n npm uninstall(un) 包名 -–save-dev(-D) \n yarn remove 包名 –dev(-D) \n 卸载开发环境依赖 \n \n \n npm install 包名 –-global(-g) \n yarn global add 包名 \n 安装全局依赖包 \n \n \n npm install 包名 -–save(-S) \n yarn add 包名 \n 安装依赖，并保存到package.json \n \n \n npm install 包名 -–save-dev(-D) \n yarn add 包名 –dev(-D) \n 安装开发环境依赖 \n \n \n npm update 包名 –-global(-g) \n yarn global upgrade 包名 \n 更新全局依赖 \n \n \n npm update 包名 -–save(-S) \n yarn upgrade 包名 \n 更新依赖 \n \n \n npm update 包名 -–save-dev(-D) \n yarn upgrade 包名 –dev(-D) \n 更新开发环境依赖 \n \n \n npm cache clean \n yarn cache clean \n 清除缓存 \n \n \n rm -rf node_modules && npm install \n yarn upgrade \n 重装 \n \n \n npm init \n yarn init \n 初始化某个项目 \n \n \n npm publish/login/logout \n yarn publish/login/logout \n 发布/登录/登出，NPM Registry操作 \n \n \n npm run/test 命令 \n yarn run/test 命令 \n 运行某个命令 \n 正式发布包 \n \n 不要使用其他npm源，如：taobao \n先去https://www.npmjs.com注册个账号，然后在命令行使用 \n根据提示输入用户名密码即可 \n npm  adduser\n发布 \n npm  publish\n升级补丁版本号 \n npm  version patch\n升级小版本号 \n npm  version minor\n升级大版本号 \n npm  version major\n 解析 \n /**\n * https://www.npmjs.com/search?q=keywords:xml2js\n */ \n\n const  fs  =   require ( \"fs\" ) ; \n //模拟发送http请求 \n const  request  =   require ( \"request\" ) ; \n // npm install xpath \n // https://github.com/yaronn/xpath.js \n const  xpath  =   require ( 'xpath' ) ; \n\n //get请求 \n request ( 'https://jolx-1256021553.cos.ap-chengdu.myqcloud.com' ,   function   ( error ,  response ,  body )   { \n     if   ( ! error  &&  response . statusCode  ==   200 )   { \n         // npm install xmlreader \n         // const xmlreader = require(\"xmlreader\"); \n         // xmlreader.read(body, function (errors, res) { \n         //     if (null !== errors) { \n         //         console.log(errors) \n         //         return; \n         //     } \n         //     console.log(res); \n         // }); \n\n         // npm install xml2js \n         // const Xml2js = require('xml2js'); \n         // const Parser = new Xml2js.Parser({ explicitArray: false, ignoreAttrs: false }); \n\n         // Parser.parseString(body, function (err, result) { \n         //     console.log(result); \n         // }); \n\n         // npm install xmldom \n         // https://github.com/goto100/xpath \n         // const dom = require('xmldom').DOMParser; \n         // let doc = new dom().parseFromString(body); \n         // console.log(doc); \n\n         // npm install fast-xml-parser \n         // const parser = require('fast-xml-parser'); \n         // const doc = parser.parse(body); \n         // console.log(doc); \n\n         // npm install xml-js \n         const  convert  =   require ( 'xml-js' ) ; \n         const  doc  =  convert . xml2js ( body ) ; \n        console . log ( doc ) ; \n     } \n } ) ; \n\n //post请求 \n request ( { \n     url :   \"https://jolx-1256021553.cos.ap-chengdu.myqcloud.com\" , \n     method :   \"post\" , //如果是post就涉及到跨域的问题了 \n     json :   true , \n     headers :   { \n         \"content-type\" :   \"application/json\" , \n     } , \n     body :   { \n         account :   'admin' , \n         pwd :   'admin' \n     } \n } ,   function   ( error ,  response ,  body )   { \n     if   ( ! error  &&  response . statusCode  ==   200 )   { \n        console . log ( body ) ; \n     } \n } ) ; \n 爬虫 \n \n https://github.com/search?q=pup \n \n \n https://github.com/webdriverio \n https://github.com/puppeteer \n \n https://github.com/adieuadieu/serverless-chrome \n https://github.com/N0taN3rd/chrome-remote-interface-extra \n https://github.com/cowchimp/headless-devtools \n Puppeteer配置小记 \n https://github.com/zhaoqize/puppeteer-api-zh_CN \n https://github.com/ebidel/try-puppeteer \n https://github.com/berstend/puppeteer-extra \n \n \n 自动化  https://github.com/microsoft/playwright \n https://github.com/cypress-io/cypress \n https://github.com/aerokube \n https://github.com/getgauge/taiko \n https://github.com/milankinen/cuic \n https://github.com/CheshireCaat/bas-remote-node \n 基于webkit  https://github.com/ariya/phantomjs \n \n PhantomJS -- JavaScript 标准参考教程（alpha） \n https://github.com/tapir-dream/berserkJS \n https://github.com/JeffreyZhao/wind \n https://github.com/casperjs/casperjs \n \n \n https://github.com/krisselden/chrome-debugging-client \n https://github.com/cyrus-and/chrome-remote-interface \n https://github.com/node-inspector \n https://github.com/TracerBench/chrome-debugging-client \n 基于Gecko  https://github.com/laurentj/slimerjs \n https://github.com/vitest-dev/vitest \n \n \n https://github.com/NaiboWang/EasySpider \n https://github.com/inu1255/soulsign-chrome \n \n xpath和css选择器 \n chromedriver \n 脚本 \n \n https://github.com/Peng-YM/QuanX \n https://github.com/dompling/Script \n 小程序 \n \n https://github.com/search?q=weapp \n https://github.com/topics/wxapp \n https://github.com/topics/weapp \n https://github.com/topics/wechat \n https://github.com/topics/minapp \n https://github.com/topics/wechat-app \n https://github.com/topics/wechat-mini-program \n https://github.com/topics/weixin \n \n \n https://github.com/Wechat-Group \n \n \n https://github.com/justjavac/awesome-wechat-weapp \n https://github.com/qiushi123/xiaochengxu_demos \n https://github.com/YanxinNet/uView \n \n \n 使用Golang开发的微信SDK:  https://github.com/silenceper/wechat \n \n 框架 \n \n https://github.com/dcloudio/uni-app \n \n https://github.com/novlan1/press-ui \n \n \n https://github.com/NervJS/taro \n \n https://taro.aotu.io \n \n \n https://github.com/tinajs/tina \n https://github.com/didi/chameleon \n https://github.com/didi/mpx \n https://github.com/kaola-fed/megalo \n https://github.com/Tencent/wepy \n https://github.com/Meituan-Dianping/mpvue \n \n Other \n \n https://gitee.com/laeser/demo-weapp \n 小程序海报组件-生成朋友圈分享海报并生成图片 \n 微信小程序Markdown渲染库 \n 手持弹幕微信小程序版 \n https://github.com/super456/weapp_expressTime \n https://github.com/ecomfe/echarts-for-weixin \n 照片修复  https://github.com/shifu-group/inpaint_wechat \n 自定义组件 \n \n https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component \n \n 组件库 \n \n https://github.com/youzan/vant-weapp \n https://github.com/jisida/VtuWeapp \n https://github.com/wux-weapp/wux-weapp \n https://github.com/Tencent/weui \n https://github.com/weilanwl/ColorUI \n \n 日历 \n \n https://github.com/treadpit/wx_calendar \n \n 授权 \n \n https://github.com/misterxu1567/wxMiniProgram-components \n https://github.com/GRW999/auth-component \n https://github.com/yeyi361936738/mini-login-component \n https://github.com/Skura23/authModal \n \n 搜索 \n \n https://github.com/fancaixia/SearchBar \n https://github.com/mindawei/wsSearchView \n \n",createdTime:1761814324e3},{title:"JavaScript笔记",frontmatter:{description:"性能提速：debounce（防抖）、throttle（节流／限频）\njs实现 throttle 和 debounce\n7分钟理解JS的节流、防抖及使用场景\nJavaScript中高阶函数的魅力\n函数节流与函数防抖\nJS进阶篇1---函数节流（throttle）\njs防止重复触发事件\nJS中的call、apply、bind方法详解\njs实现replaceAll方法\n如何在 JavaScript 中清空数组？\n利用html5读取本地文本文件及图片文件\n探秘神奇的IntersectionObserver：释放网页性能的黑科技！\n上传文件net::ERRUPLOADFILE_CHANGED\n改变世界的 17 个方程式 - 用 JavaScript 重写",meta:[{name:"twitter:title",content:"JavaScript笔记"},{name:"twitter:description",content:"性能提速：debounce（防抖）、throttle（节流／限频）\njs实现 throttle 和 debounce\n7分钟理解JS的节流、防抖及使用场景\nJavaScript中高阶函数的魅力\n函数节流与函数防抖\nJS进阶篇1---函数节流（throttle）\njs防止重复触发事件\nJS中的call、apply、bind方法详解\njs实现replaceAll方法\n如何在 JavaScript 中清空数组？\n利用html5读取本地文本文件及图片文件\n探秘神奇的IntersectionObserver：释放网页性能的黑科技！\n上传文件net::ERRUPLOADFILE_CHANGED\n改变世界的 17 个方程式 - 用 JavaScript 重写"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Web/JavaScript%E7%AC%94%E8%AE%B0.html"},{property:"og:type",content:"article"},{property:"og:title",content:"JavaScript笔记"},{property:"og:description",content:"性能提速：debounce（防抖）、throttle（节流／限频）\njs实现 throttle 和 debounce\n7分钟理解JS的节流、防抖及使用场景\nJavaScript中高阶函数的魅力\n函数节流与函数防抖\nJS进阶篇1---函数节流（throttle）\njs防止重复触发事件\nJS中的call、apply、bind方法详解\njs实现replaceAll方法\n如何在 JavaScript 中清空数组？\n利用html5读取本地文本文件及图片文件\n探秘神奇的IntersectionObserver：释放网页性能的黑科技！\n上传文件net::ERRUPLOADFILE_CHANGED\n改变世界的 17 个方程式 - 用 JavaScript 重写"},{property:"og:url",content:"https://bajins.com/Web/JavaScript%E7%AC%94%E8%AE%B0.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"JavaScript笔记"},{itemprop:"description",content:"性能提速：debounce（防抖）、throttle（节流／限频）\njs实现 throttle 和 debounce\n7分钟理解JS的节流、防抖及使用场景\nJavaScript中高阶函数的魅力\n函数节流与函数防抖\nJS进阶篇1---函数节流（throttle）\njs防止重复触发事件\nJS中的call、apply、bind方法详解\njs实现replaceAll方法\n如何在 JavaScript 中清空数组？\n利用html5读取本地文本文件及图片文件\n探秘神奇的IntersectionObserver：释放网页性能的黑科技！\n上传文件net::ERRUPLOADFILE_CHANGED\n改变世界的 17 个方程式 - 用 JavaScript 重写"}]},regularPath:"/Web/JavaScript%E7%AC%94%E8%AE%B0.html",relativePath:"Web/JavaScript笔记.md",key:"v-ec9ad94a",path:"/Web/JavaScript%E7%AC%94%E8%AE%B0.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"异步协程",slug:"异步协程"},{level:2,title:"正则表达式",slug:"正则表达式"},{level:2,title:"HTTP",slug:"http"},{level:2,title:"标签默认事件",slug:"标签默认事件"},{level:2,title:"Storage和Cache",slug:"storage和cache"},{level:2,title:"自动触发事件",slug:"自动触发事件"},{level:2,title:"合并对象",slug:"合并对象"},{level:2,title:"选择器特殊符转义",slug:"选择器特殊符转义"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:' JavaScript笔记 \n Flag 异步协程 正则表达式 HTTP 标签默认事件 Storage和Cache 自动触发事件 合并对象 选择器特殊符转义 \n Flag \n \n 性能提速：debounce（防抖）、throttle（节流／限频） \n js实现 throttle 和 debounce \n 7分钟理解JS的节流、防抖及使用场景 \n JavaScript中高阶函数的魅力 \n 函数节流与函数防抖 \n JS进阶篇1---函数节流（throttle） \n js防止重复触发事件 \n JS中的call、apply、bind方法详解 \n js实现replaceAll方法 \n 如何在 JavaScript 中清空数组？ \n 利用html5读取本地文本文件及图片文件 \n 探秘神奇的IntersectionObserver：释放网页性能的黑科技！ \n 上传文件net::ERR_UPLOAD_FILE_CHANGED \n 改变世界的 17 个方程式 - 用 JavaScript 重写 \n \n 回调地狱 \n \n 浅谈js中的回调地狱问题 \n JavaScript中的回调地狱及解决方法 \n \n \n 什么是回调地狱:通常以javaScript的执行顺序来编写代码,在执行异步代码时,无论以什么顺序简单的执行代码,通常情况会变成许多层级的回调函数堆积 \n \n \n 解决方法: 1.放弃使用匿名函数,给所有的函数都命名,以名字的方式传递回调函数;2.代码简洁;3.模块儿化,将重复代码写入一个函数体内;\n4. Promise \n \n 循环loop \n \n JS中集合对象(Array、Map、Set)及类数组对象的使用与对比 \n \n \n for/i  多次遍历代码块 \n forEach  遍历对象属性，不能中断循环（使用 break 语句或使用 return 语句） \n for/in  遍历对象属性，实际是为循环 enumerable 对象而设计，不推荐用 for/in 来循环一个数组 \n for/of  可遍历 Array 、 String 、 TypedArray 、 Map 、 Set 、 DOM collections 、 enumerable 、 generators ，弥补了 forEach 和 for/in 循环的短板 \n while  当指定条件为 true 时循环一段代码块 \n do/while  当指定条件为 true 时循环一段代码块 \n 异步协程 \n \n JavaScript中的协程 \n JS 中的协程（Coroutine） \n \n ES6 co/yield方案 \n \n Generator 函数的异步应用 \n \n \n Generator 函数是协程在 ES6 的实现，可以交出函数的执行权， function* \n \n yield  是Generator关键字，异步操作需要暂停的地方（主动交出执行权暂停执行），都用yield语句注明 \n next() 恢复执行 \n yield* 移交执行权调用另一个协程 \n \n \n co: co 模块是著名程序员 TJ Holowaychuk 于 2013 年 6 月发布的一个小工具，用于 Generator 函数的自动执行。 \n \n ES7 async/await 方案 \n \n async/await是es7的新标准，async函数就是将 Generator 函数的 * 替换成async，将yield替换成await，仅此而已。 \n 正则表达式 \n \n exec 是正则表达式的方法，参数是字符串 \n match 字符串的方法，参数是正则表达 \n \n \n 当正则表达式无子表达式，并且定义为非全局匹配时：exec和match执行的结果是一样，均返回第一个匹配的字符串内容； \n 当正则表达式无子表达式，并且定义为全局匹配时：exec和match执行，做存在多处匹配内容，则match返回的是多个元素数组； \n 当正则表达式有子表示时，并且定义为非全局匹配：exec和match执行的结果是一样返回多个匹配内容数组； \n 当正则表达式有子表示时，并且定义为全局匹配：exec和match执行的结果不一样，此时match将忽略子表达式，只查找全匹配正则表达式并返回所有内容； \n \n \n 也就说，exec与全局是否定义无关系，而match则于全局相关联，当定义为非全局，两者执行结果相同；\nexec没有匹配返回null，匹配有子表达式返回匹配结果数组下标0值为所有表达式结果，其他下标为子表达式的匹配 \n \n var  str  =   ` test https://www.bajins.com ` ;  \nconsole . log ( new   RegExp ( "var servers = (.*)" , "ig" ) . exec ( str ) ) ; \nconsole . log ( str . match ( new   RegExp ( "var servers = (.*)" , "ig" ) ) ) ; \nconsole . log ( new   RegExp ( "test(.*)" , "ig" ) . exec ( str ) ) ; \nconsole . log ( str . match ( new   RegExp ( "test(.*)" , "ig" ) ) ) ; \n\n // 匹配多个${} \n var  reg  =   / (\\${.*?\\}) / g ; \n var  reg  =   / \\$\\{[^\\}]+\\} / g ; \n var  str  =   "如何匹配到 ${A0111}${A0117}  现在好像只能匹配一个。" ; \nstr . match ( reg ) ; \n HTTP \n \n 如果在业务场景中需要请求后端并使用返回数据（理想状态是拿到返回数据后下面的代码才执行），并且在多个地方使用相同请求后端代码， \n Ajax中如果使用同步那么有可能会导致不可达异常，如果使用异步请求就不能按时序拿到后端返回值（会跳过）再执行后面的代码， \n 解决方案 ：应该在封装请求后端代码（异步）函数的参数上传入要在（回调匿名函数中）返回值处理后调用其他代码的函数，\n这里使用了 尾调用   图解尾调用优化 \n \n \n flyio \n HTTP封装 \n XMLHttpRequest—必知必会 \n XMLHttpRequest封装源码 \n \n \n Fetch各浏览器支持情况  https://caniuse.com/?search=fetch \n Fetch标准  https://github.com/whatwg/fetch \n https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API \n \n http,XMLHttpRequest,Ajax的关系 \n \n http是浏览器和web服务器交换数据的协议,规范 \n XMLHttpRequest是JavaScript的一个对象,是浏览器实现的一组api函数(方法),使用这些函数,浏览器再通过http协议请求和发送数据 \n Ajax最核心的依赖是浏览器提供的XMLHttpRequest对象 \n axios 是一个基于Promise实现版本，本质上也是对原生XMLHttpRequest的封装，符合最新的ES规范 \n fetch不是ajax的进一步封装，而是原生js，没有使用XMLHttpRequest对象，使用了ES6中的promise对象 \n 标签默认事件 \n \n https://developer.mozilla.org/zh-CN/docs/Web/API/Event \n \n 阻止其他事件触发 \n \n 事件捕获其实有三种方式，事件冒泡只是其中的一种：\n \n （1）IE从里到外（inside→outside）的冒泡型事件。 \n （2）Netscape4.0从外到里（outside→inside）的捕获型事件。 \n （3）DOM事件流，先从外到里，再从里到外回到原点（outside→inside→outside）的事件捕获方法。 \n \n \n 以下事件不冒泡：blur、focus、load、unload。 \n \n \n focus事件是在冒泡到document之后再返回到原来的元素上面才被触发 \n \n // 阻止事件冒泡 \n function   stopPropagation ( event ) { \n     //var e = event? event:window.event; \n     var  e  =  window . event  ||  event ; \n    e . stopPropagation ( ) ; \n } \n \n /* 使用该样式，会阻止事件的触发。鼠标只会显示为箭头样式 */ \n pointer-events :  none ; \n /* 鼠标禁用样式，然后使用js阻止事件的触发 */ \n cursor :  not-allowed ; \n \n href伪协议 \n \n javascript:  是一个伪协议，表示在触发默认动作时，执行一段JavaScript代码。 \n \n \n javascript:;  表示什么都不执行，点击时没有任何反应。 \n点击后，页面默认上滚到页的顶部， οnclick="return false" 或 event.returnValue=false;  防止上滚到页的顶部 \n ####  用2个到4个 # 或 #all ，一个无意义的标签指定，不做任何处理。 \n javascript：void(0);  表示一个死链接，执行空事件 \n \n < a   href = " javascript:void(0); "   onclick = " test ( ) " > {{ row.name }} </ a > \n \n 原生方式 \n \n 取消事件  event.preventDefault \n 阻止事件的其他监听器和冒泡  event.stopImmediatePropagation \n 阻止冒泡  event.stopPropagation \n \n < a   href = " https://www.bajins.com "   onclick = " test ( ) ; return   false ; " > {{ row.name }} </ a > \n \n < a   href = " https://www.bajins.com "   onclick = " return   test ( ) ; " > {{ row.name }} </ a > \n < script > \n function   test ( ) { \n     return   false ; \n } \n </ script > \n \n < a   href = " https://www.bajins.com "   onclick = " test ( ) ; return   false ; " > {{ row.name }} </ a > \n < script > \n function   test ( event ) { \n    event  =  window . event  ||  arguments . callee . caller . arguments [ 0 ]   ||  event ; \n    event . returnValue  =   false   :  event . preventDefault ( ) ; \n } \n </ script > \n \n VUE阻止默认行为 \n \n 事件修饰符 \n v-on api \n \n < a   href = " https://www.bajins.com "   v-on: click.prevent = " test() " > {{ row.name }} </ a > \n \n < a   href = " https://www.bajins.com "   v-on: click = " test($event) " > {{ row.name }} </ a > \n < script > \n     function   test ( event ) { \n        event . preventDefault ( ) ; \n     } \n </ script > \n Storage和Cache \n \n 技术指南-MDN \n \n \n 使用Chrome DevTools查看和编辑本地存储 \n https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Storage_API \n \n https://developer.mozilla.org/zh-CN/docs/Web/API/Storage \n \n \n https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API \n \n https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API/Using_IndexedDB \n \n \n HTML5 - 应用程序缓存(Application Cache) \n \n sessionStorage . setItem ( "k" ,   "v" ) ; \n var  value  =  sessionStorage . getItem ( "k" ) ; \nconsole . log ( value ) ; \nsessionStorage . removeItem ( "k" ) ; \nsessionStorage . clear ( ) ; \n\n // 跟上面的sessionStorage有一样的方法 \n var  value  =  localStorage . setItem ( \'键\' , "值" ) ; \n for ( var  i = 0 ,  len = localStorage . length ;  i < len ;  i ++ ) { \n     var  key  =  localStorage . key ( i ) ;     \n     var  value  =  localStorage . getItem ( key ) ;     \n    console . log ( key  +   "="   +  value ) ; \n } \n \n /**\n * 把水平滚动条位置和垂直滚动条位置保存在Cookie中\n */ \n function   setScrollToCookie ( )   { \n     var  scrollTop ,  scrollLeft ; \n     if   ( typeof  window . pageYOffset  !=   \'undefined\' )   { \n        scrollTop  =  window . pageYOffset ; \n        scrollLeft  =  window . pageXOffset ; \n     }   else   if   ( typeof  document . compatMode  !=   \'undefined\'   &&  document . compatMode  !=   \'BackCompat\' )   { \n        scrollTop  =  document . documentElement . scrollTop ; \n        scrollLeft  =  document . documentElement . scrollLeft ; \n     }   else   if   ( typeof  document . body  !=   \'undefined\' )   { \n        scrollTop  =  document . body . scrollTop ; \n        scrollLeft  =  document . body . scrollLeft ; \n     } \n     var  date  =   new   Date ( ) ; \n    date . setHours ( date . getHours ( )   +   1 ) ;   // 设置cookie的有效期 \n     // 创建cookie，保存水平滚动条位置 \n    document . cookie  =   "scrollTop="   +   escape ( scrollTop )   +   "; expires="   +  date . toGMTString ( ) ; \n     // 创建cookie，保存垂直滚动条位置 \n    document . cookie  =   "scrollLeft="   +   escape ( scrollLeft )   +   "; expires="   +  date . toGMTString ( ) ; \n } \n\n /**\n * 获取Cookie中存储的信息\n * \n * @param {Stirng} sName \n */ \n function   getCookie ( sName )   { \n     var  arr  =  document . cookie . match ( / (scrollTop|scrollLeft)=([^;]+)(;|$) / ) ; \n     if   ( arr  !=   null )   { \n         var  aCookie  =  document . cookie . split ( "; " ) ;   // 将cookie中的数据切割成数组，方便遍历 \n         for   ( var  i  =   0 ;  i  <  aCookie . length ;  i ++ )   {   // 遍历cookie中的数据 \n             var  aCrumb  =  aCookie [ i ] . split ( "=" ) ;   // 将键和值分开 \n             if   ( sName  ==  aCrumb [ 0 ] )   {   // 判断是否是指定的键 \n                 return   unescape ( aCrumb [ 1 ] ) ; \n             } \n         } \n     } \n     return   null ; \n } \n\n /**\n * 加载页面时自动执行获取cookie保存值的方法\n */ \nwindow . onload   =   function   ( )   { \n    document . documentElement . scrollLeft  =   getCookie ( "scrollLeft" ) ; \n    document . body . scrollLeft  =   getCookie ( "scrollLeft" ) ;   // 获取水平滚动条位置 \n    document . documentElement . scrollTop  =   getCookie ( "scrollTop" ) ; \n    document . body . scrollTop  =   getCookie ( "scrollTop" ) ;   // 获取垂直滚动条位置 \n } \n\nwindow . onunload  =   setScrollToCookie ( ) ; \n\nwindow . onbeforeunload  =   setScrollToCookie ( ) ; \n \n jQuery数据缓存方案 \n \n 使用隐藏控件或者js全局变量来临时存储数据，全局变量容易导致命名污染，隐藏控件导致经常读写dom浪费性能。jQuery提供了数据缓存方案 \n \n \n 同window全局变量或标签元素属性一样只针对于当前页面有效，跳转链接后将清除 \n \n \n jQuery 源码分析(十) 数据缓存模块 data详解 \n jQuery数据缓存$.data 的使用以及源码解析 \n \n \n $.data()  用于在指定的元素上存取临时数据，页面刷新数据都将被移除 \n $.attr()  绑定数据在标签的属性上，一定要以 data- 开头 \n \n // hasData用来判断HTMLElement或JS对象是否具有数据 \nconsole . log ( $ ( "#a" ) . hasData ( \'name\' ) ) ; // false \n\n // 添加数据，值存在`$.cache`中，key使用`$.expando`生成 \n $ ( "#a" ) . data ( \'name\' ,   \'11111111\' ) ; \n // 标签上`data-`开头属性也是数据 \n $ ( "#a" ) . attr ( "data-name" ,   \'2222222222\' ) ; \n\n // 读取数据，在$.cache中找，没有则去标签的`data-`开头属性中查找 \nconsole . log ( $ ( "#a" ) . data ( \'name\' ) ) ; \n\n // 删除数据，不能删除标签上`data-`开头属性的数据 \n $ ( "#a" ) . removeData ( \'name\' ) ; \n $ ( "#a" ) . removeAttr ( \'data-name\' ) ; \nconsole . log ( $ ( "#a" ) . data ( \'name\' ) ) ; //undefined \n 自动触发事件 \n \n https://developer.mozilla.org/zh-CN/docs/Web/API/Event \n \n var  event  =  document . createEvent ( \'Event\' ) ;   // 创建 \nevent . initEvent ( \'keydown\' ,   true ,   false ) ;   // 初始化 \nevent  =  Object . assign ( event ,   { \n     ctrlKey :   false , \n     metaKey :   false , \n     altKey :   false , \n     which :   13 , \n     keyCode :   13 ,   // 回车 \n     key :   \'Enter\' , \n     code :   \'Enter\' \n } ) ; \n var  inp  =  document . querySelector ( \'.input\' ) ; \ninp . value  =   new   Date ( ) . toLocaleString ( ) ; \ninp . dispatchEvent ( event ) ;   // 触发 \ninp . detachEvent ( event ) ;   // 事件删除 \n\n\n var  e  =  $ . Event ( "keydown" )   ||  jQuery . Event ( "keydown" ) ;   // 创建事件 \ne . keyCode  =   13 ;   // 回车 \n $ ( "input" ) . trigger ( e ) ;   // 触发事件 \n 合并对象 \n Object . assing ( { } ,  obj ) ; \n { ... { } ,   ... obj } \n\n // Jquery \n$ . extend ( { } ,  obj ) \n 选择器特殊符转义 \n function   escapeSelector ( src )   { \n     // javascript正则表达式中的特殊字符 \n     const  jsSpecialChars  =   [ "\\\\" ,   "^" ,   "$" ,   "*" ,   "?" ,   "." ,   "+" ,   "(" ,   ")" ,   "[" ,   "]" ,   "|" ,   "{" ,   "}" ] ; \n     for   ( const  sc  of  jsSpecialChars )   { \n        src  =  src . replace ( new   RegExp ( "\\\\"   +  sc ,   "g" ) ,   "\\\\"   +  sc ) ; \n     } \n     // jquery中的特殊字符,不是正则表达式中的特殊字符 \n     const  jquerySpecialChars  =   [ "~" ,   "`" ,   "@" ,   "#" ,   "%" ,   "&" ,   "=" ,   "\'" ,   "\\"" ,   ":" ,   ";" ,   "<" ,   ">" ,   "," ,   "/" ] ; \n     for   ( const  sc  of  jquerySpecialChars )   { \n        src  =  src . replace ( new   RegExp ( sc ,   "g" ) ,   "\\\\"   +  sc ) ; \n     } \n     return  src ; \n } \n \n ',createdTime:1761814324e3},{title:"JavaScript",frontmatter:{description:"对网页行为进行编程，Vanilla JS 就是指JavaScript（ECMAscript）",meta:[{name:"twitter:title",content:"JavaScript"},{name:"twitter:description",content:"对网页行为进行编程，Vanilla JS 就是指JavaScript（ECMAscript）"},{name:"twitter:card",content:"summary"},{name:"twitter:url",content:"https://bajins.com/Web/JavaScript.html"},{property:"og:type",content:"article"},{property:"og:title",content:"JavaScript"},{property:"og:description",content:"对网页行为进行编程，Vanilla JS 就是指JavaScript（ECMAscript）"},{property:"og:url",content:"https://bajins.com/Web/JavaScript.html"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"JavaScript"},{itemprop:"description",content:"对网页行为进行编程，Vanilla JS 就是指JavaScript（ECMAscript）"}]},regularPath:"/Web/JavaScript.html",relativePath:"Web/JavaScript.md",key:"v-6bd4b16e",path:"/Web/JavaScript.html",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"学习",slug:"学习"},{level:2,title:"微前端",slug:"微前端"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" JavaScript \n Flag 学习 微前端 \n Flag \n \n 对网页行为进行编程，Vanilla JS 就是指JavaScript（ECMAscript） \n \n \n ECMAScript支持度检测  https://github.com/ruanyf/es-checker \n 检查JS文件中的ES版本  https://github.com/dollarshaveclub/es-check \n ES6支持情况  https://github.com/compat-table/compat-table \n \n https://kangax.github.io/compat-table/es6 \n \n \n https://github.com/financial-times/polyfill-service \n https://github.com/taylorhakes/promise-polyfill \n \n \n Polyfill  是一块代码（通常是 Web 上的 JavaScript）\n，用来为旧浏览器提供它没有原生支持的较新的功能 \n \n \n 服务器实时消息获取的技术方案 \n \n https://github.com/Sh3b0/realtime-web \n \n \n JS刷新当前页面的几种方法总结 \n js keyup、keypress和keydown事件 详解 \n js中keyup-keypress-keydown以及oninput四个事件 \n keydown,keypress,keyup三者之间的区别 \n 前端三大框架与 YUI 以及 EXT.js 这类组件化框架最大的区别是什么？ \n ECMAscript和Javascript的区别 \n KeyboardEvent.keyCode已弃用，MDN已经提供了一个解决方案 \n JS 获取内网 IP 地址（兼容谷歌浏览器） \n \n \n https://github.com/wingscloud \n 部署同步  https://github.com/Browsersync/browser-sync \n \n js运行时/js引擎/JavaScript运行时/JavaScript引擎 \n \n https://en.wikipedia.org/wiki/List_of_ECMAScript_engines \n \n \n 恶意软件分析  https://github.com/HynekPetrak/malware-jail \n 物联网的超轻量级JavaScript引擎  https://github.com/jerryscript-project/jerryscript \n 嵌入式系统的微型JS引擎  https://github.com/cesanta/elk \n https://github.com/boa-dev/boa \n https://github.com/denoland/deno \n \n https://www.denojs.cn \n https://github.com/denosaurs/deno_python \n \n \n https://github.com/servo/servo \n https://github.com/bellard/quickjs \n https://github.com/saghul/txiki.js \n https://github.com/oven-sh/bun \n https://github.com/svaarala/duktape \n https://mujs.com \n https://github.com/gfwilliams/tiny-js \n https://github.com/cesanta/v7 \n https://github.com/zurb/tribute \n https://github.com/chakra-core/ChakraCore \n https://github.com/eclipsesource/J2V8 \n https://github.com/oracle/graaljs \n https://github.com/mozilla/rhino \n https://github.com/gwtproject/gwt \n https://github.com/CanadaHonk/porffor \n 学习 \n \n https://github.com/topics/es6 \n https://github.com/topics/es2016 \n https://github.com/topics/linting \n \n \n https://github.com/ruanyf/jstutorial \n \n http://javascript.ruanyifeng.com \n \n \n https://github.com/revolunet/JSbooks \n https://exploringjs.com \n \n https://2ality.com \n JavaScript 的历史和演变  https://exploringjs.com/impatient-js/ch_history.html \n \n \n https://github.com/es5/es5.github.io \n ECMAScript 6入门  https://github.com/ruanyf/es6tutorial \n \n https://es6.ruanyifeng.com \n \n \n https://github.com/ericdouglas/ES6-Learning \n https://github.com/lukehoban/es6features \n https://github.com/rse/es6-features \n Learn ES2015 \n 特性列表  https://github.com/daumann/ECMAScript-new-features-list \n https://github.com/sudheerj/ECMAScript-features \n https://github.com/30-seconds \n https://www.javascript.com \n 现代JavaScript教程  https://github.com/javascript-tutorial/zh.javascript.info \n 浏览器脚本教程  https://www.w3school.com.cn/b.asp \n 参考手册  https://www.w3school.com.cn/r.asp \n JavaScript基础知识  https://www.kancloud.cn/yangguangzhang/yangguangzhang--javascript \n https://github.com/2xiao/leetcode-js \n 文档对象模型 (DOM)  https://developer.mozilla.org/zh-CN/docs/Glossary/DOM \n https://github.com/Asabeneh/30-Days-Of-JavaScript \n https://github.com/wesbos/JavaScript30 \n https://gaohaoyang.github.io \n 答题  https://github.com/lydiahallie/javascript-questions \n https://github.com/felipefialho/frontend-challenges \n https://github.com/coffe1891/frontend-hard-mode-interview \n https://github.com/icepy/Front-End-Develop-Guide \n https://github.com/you-dont-need \n https://github.com/getify/You-Dont-Know-JS \n https://github.com/Asabeneh/JavaScript-for-Everyone \n 学习代码总结  https://github.com/csxiaoyaojianxian/JavaScriptStudy \n https://github.com/comehope/front-end-daily-challenges \n https://github.com/gothinkster/realworld \n https://github.com/tanpero/JavaScript-Art-Tour \n JS技巧  https://github.com/loverajoel/jstips \n https://www.javascriptcn.com  1212/1024 \n https://github.com/superherojs/superherojs \n 单行代码  https://github.com/1milligram/1loc \n \n \n ES6、ES7、ES8特性一锅炖(ES6、ES7、ES8学习指南) \n ES6、ES7、ES8、ES9、ES10新特性一览 \n 页面生命周期：DOMContentLoaded，load，beforeunload，unload \n \n 模块规范 \n \n \n UMD(Universal Module Definition)  https://github.com/umdjs/umd \n \n \n AMD(Asynchronous Module Definition)  https://github.com/amdjs \n \n https://github.com/requirejs \n RequireJS和AMD规范 -- JavaScript 标准参考教程（alpha） \n https://wiki.commonjs.org/wiki/Modules/AsynchronousDefinition \n \n \n \n CMJ(CommonJS)  https://github.com/cmdjs \n \n https://wiki.commonjs.org/wiki/CommonJS \n CommonJS规范 -- JavaScript 标准参考教程（alpha） \n \n \n \n ESM(ECMAScript modules)  https://nodejs.org/api/esm.html \n \n \n https://github.com/seajs \n \n \n https://github.com/TorinoJS \n \n \n https://github.com/embedthis/ejscript \n \n \n https://github.com/SynchronetBBS \n \n https://gitlab.com/SynchronetBBS \n https://sourceforge.net/projects/synchronet \n https://synchro.net/docs/jsobjs.html \n \n \n \n https://github.com/iskitz/ajile \n \n https://sourceforge.net/projects/ajile \n \n \n \n https://github.com/creately/modules-js \n \n \n https://github.com/ringo/ringojs \n \n \n Module 的语法 - ECMAScript 6入门 \n \n \n /**\n * CommonJS 主要是NodeJs使用\n * 在一个node执行一个文件时，会给这个文件内生成一个 exports和module对象，而module有一个exports属性。\n * exports = module.exports = {};\n */ \nmodule . exports . x  =  x ;   // 导出模块 \nmodule . exports   =   { } ; \n // 为了方便，Node为每个模块提供一个exports变量，指向module.exports \n // 注意，不能直接将exports变量指向一个值，因为这样等于切断了exports与module.exports的联系 \n //exports.x = x; \n var  example  =   require ( './example.js' ) ;   // 导入模块 \n\n /**\n * AMD（Asynchronous Module Defination，浏览器端js模块化） 主要是RequireJS使用\n */ \n //定义模块myModule.js \n define ( [ 'dependency' ] , function ( ) { \n    var  name  =   'Bily' ; \n    function   printName ( ) { \n        console . log ( name ) ; \n     } \n     return   { \n        printName :  printName\n     } \n } ) ; \n //加载模块 \n require ( [ 'myModule' ] , function ( my ) { \n    my . printName ( ) ; \n } ) ; \n\n\n /**\n * CMD(Common Module Definition,通用模块定义)\n */ \n // cmd1.js \n define ( function ( require , exports , module ) { \n   // ... \n  module . exports = { \n     // ... \n   } \n } ) ; \n\n // cmd2.js \n define ( function ( require , exports , module ) { \n   var  cmd2  =   require ( './cmd1' ) \n   // cmd2.xxx  依赖就近书写 \n  module . exports = { \n      // ... \n   } \n } ) ; \n\n /**\n * ECMAScript6\n * export与export default均可用于导出常量、函数、文件、模块等\n * 在一个文件或模块中，export、import可以有多个，export default仅有一个\n * 通过export方式导出，在导入时要加{ }，export default则不需要\n * export能直接导出变量表达式，export default不行。\n */ \n export  x  =  x ;   // 导出模块 \n export   default   { }   // 为模块指定默认输出 \n import   {  stat ,  exists ,  readFile  }   from   'fs' ;   // 导入模块 \n var  express  =   require ( 'express' ) ; \n \n \n Uncaught SyntaxError: Cannot use import statement outside a module \n \n \n 在报错是说无法在模块外部使用 import 语句，因为 Module 的加载实现的是 es6 语法，\n所以在浏览器加载 html 文件时，需要在 script 标签中加入 type=\"module\" 属性。 \n \n < script   type = \" module \"   src = \" /static/js/index.js \" > </ script > \n 微前端 \n \n Micro-frontends \n \n \n https://github.com/module-federation/core \n https://github.com/smapiot/piral \n https://github.com/single-spa \n https://github.com/teambit/bit \n https://github.com/systemjs \n https://github.com/opencomponents \n https://github.com/umijs/qiankun \n https://github.com/SAP/luigi \n https://github.com/frintjs/frint \n https://github.com/puzzle-js \n \n \n 基于 Webpack Module Federation，这可能是一个比较优雅的微前端解决方案 \n \n",createdTime:1761814324e3},{title:"Web",frontmatter:{description:"https://webdevelopmenthistory.com\nhttps://github.com/HTTPArchive\n浏览器功能支持情况 https://github.com/Fyrd/caniuse\n电量情况 https://github.com/deepesh-01/battery_indicator\n代码提示 https://github.com/webhintio\nWeb组件 https://github.com/webcomponents\nWeb开源项目 https://github.com/bestofjs/bestofjs-webui\nhttps://github.com/the-benchmarker/website\nhttps://github.com/jobbole/awesome-design-cn\nhttps://github.com/junruchen/junruchen.github.io/wiki\nhttps://github.com/mathjax\nhttps://github.com/DustinBrett/daedalOS\n前端知识点总结 https://github.com/zhaiyy/Web-front-end-knowledge-summary\nhttps://github.com/mqyqingfeng/Blog\nhttps://github.com/axuebin/articles\nhttps://github.com/LiangJunrong/document-library\n前端面试 https://github.com/haizlin/fe-interview\nhttps://github.com/yangshun/front-end-interview-handbook\nhttps://edu.aliyun.com/roadmap/frontend\nhttps://github.com/CavsZhouyou/Front-End-Interview-Notebook\nhttps://github.com/febobo/web-interview\n网络如何运作 https://github.com/vasanthk/how-web-works\n前端解决第三方图片防盗链的办法 - html referrer 访问图片资源403问题\nServerless——前端的3.0时代",meta:[{name:"image",content:"https://bajins.com/images/js浏览器缓存.png"},{name:"twitter:title",content:"Web"},{name:"twitter:description",content:"https://webdevelopmenthistory.com\nhttps://github.com/HTTPArchive\n浏览器功能支持情况 https://github.com/Fyrd/caniuse\n电量情况 https://github.com/deepesh-01/battery_indicator\n代码提示 https://github.com/webhintio\nWeb组件 https://github.com/webcomponents\nWeb开源项目 https://github.com/bestofjs/bestofjs-webui\nhttps://github.com/the-benchmarker/website\nhttps://github.com/jobbole/awesome-design-cn\nhttps://github.com/junruchen/junruchen.github.io/wiki\nhttps://github.com/mathjax\nhttps://github.com/DustinBrett/daedalOS\n前端知识点总结 https://github.com/zhaiyy/Web-front-end-knowledge-summary\nhttps://github.com/mqyqingfeng/Blog\nhttps://github.com/axuebin/articles\nhttps://github.com/LiangJunrong/document-library\n前端面试 https://github.com/haizlin/fe-interview\nhttps://github.com/yangshun/front-end-interview-handbook\nhttps://edu.aliyun.com/roadmap/frontend\nhttps://github.com/CavsZhouyou/Front-End-Interview-Notebook\nhttps://github.com/febobo/web-interview\n网络如何运作 https://github.com/vasanthk/how-web-works\n前端解决第三方图片防盗链的办法 - html referrer 访问图片资源403问题\nServerless——前端的3.0时代"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://bajins.com/images/js浏览器缓存.png"},{name:"twitter:url",content:"https://bajins.com/Web/"},{property:"og:type",content:"article"},{property:"og:title",content:"Web"},{property:"og:description",content:"https://webdevelopmenthistory.com\nhttps://github.com/HTTPArchive\n浏览器功能支持情况 https://github.com/Fyrd/caniuse\n电量情况 https://github.com/deepesh-01/battery_indicator\n代码提示 https://github.com/webhintio\nWeb组件 https://github.com/webcomponents\nWeb开源项目 https://github.com/bestofjs/bestofjs-webui\nhttps://github.com/the-benchmarker/website\nhttps://github.com/jobbole/awesome-design-cn\nhttps://github.com/junruchen/junruchen.github.io/wiki\nhttps://github.com/mathjax\nhttps://github.com/DustinBrett/daedalOS\n前端知识点总结 https://github.com/zhaiyy/Web-front-end-knowledge-summary\nhttps://github.com/mqyqingfeng/Blog\nhttps://github.com/axuebin/articles\nhttps://github.com/LiangJunrong/document-library\n前端面试 https://github.com/haizlin/fe-interview\nhttps://github.com/yangshun/front-end-interview-handbook\nhttps://edu.aliyun.com/roadmap/frontend\nhttps://github.com/CavsZhouyou/Front-End-Interview-Notebook\nhttps://github.com/febobo/web-interview\n网络如何运作 https://github.com/vasanthk/how-web-works\n前端解决第三方图片防盗链的办法 - html referrer 访问图片资源403问题\nServerless——前端的3.0时代"},{property:"og:image",content:"https://bajins.com/images/js浏览器缓存.png"},{property:"og:url",content:"https://bajins.com/Web/"},{property:"og:site_name",content:"bajins"},{itemprop:"name",content:"Web"},{itemprop:"description",content:"https://webdevelopmenthistory.com\nhttps://github.com/HTTPArchive\n浏览器功能支持情况 https://github.com/Fyrd/caniuse\n电量情况 https://github.com/deepesh-01/battery_indicator\n代码提示 https://github.com/webhintio\nWeb组件 https://github.com/webcomponents\nWeb开源项目 https://github.com/bestofjs/bestofjs-webui\nhttps://github.com/the-benchmarker/website\nhttps://github.com/jobbole/awesome-design-cn\nhttps://github.com/junruchen/junruchen.github.io/wiki\nhttps://github.com/mathjax\nhttps://github.com/DustinBrett/daedalOS\n前端知识点总结 https://github.com/zhaiyy/Web-front-end-knowledge-summary\nhttps://github.com/mqyqingfeng/Blog\nhttps://github.com/axuebin/articles\nhttps://github.com/LiangJunrong/document-library\n前端面试 https://github.com/haizlin/fe-interview\nhttps://github.com/yangshun/front-end-interview-handbook\nhttps://edu.aliyun.com/roadmap/frontend\nhttps://github.com/CavsZhouyou/Front-End-Interview-Notebook\nhttps://github.com/febobo/web-interview\n网络如何运作 https://github.com/vasanthk/how-web-works\n前端解决第三方图片防盗链的办法 - html referrer 访问图片资源403问题\nServerless——前端的3.0时代"},{itemprop:"image",content:"https://bajins.com/images/js浏览器缓存.png"}]},regularPath:"/Web/",relativePath:"Web/README.md",key:"v-4dfbdd24",path:"/Web/",headers:[{level:2,title:"Flag",slug:"flag"},{level:2,title:"文档博客站点",slug:"文档博客站点"},{level:2,title:"留言社区",slug:"留言社区"},{level:2,title:"CDN",slug:"cdn"},{level:2,title:"面包屑导航",slug:"面包屑导航"},{level:2,title:"xpath和css选择器",slug:"xpath和css选择器"},{level:2,title:"跨域/跨源",slug:"跨域-跨源"}],lastUpdated:"2025-10-30 08:52:04",lastUpdatedTimestamp:1761814324e3,content:" Web \n Flag 文档博客站点 留言社区 CDN 面包屑导航 xpath和css选择器 跨域/跨源 \n Flag \n \n https://www.iso.org \n https://www.itu.int \n RFC  https://www.rfc-editor.org \n IETF  https://tools.ietf.org \n \n https://github.com/httpwg \n \n \n IRTF  https://irtf.org \n https://www.iab.org \n https://github.com/w3c \n \n https://www.w3.org \n https://github.com/speced \n https://github.com/w3ctag \n \n \n WHATWG技术的标准  https://github.com/whatwg \n \n https://spec.whatwg.org \n \n \n Web 孵化器  https://github.com/WICG \n https://github.com/immersive-web \n 规范测试套件  https://github.com/web-platform-tests \n Ecma国际技术委员会  https://github.com/search?q=ECMAScript \n https://ecma-international.org \n \n https://github.com/tc39 \n https://github.com/75team/tc39 \n https://github.com/TimothyGu/es-howto \n https://github.com/sirisian/ecmascript-types \n https://github.com/es-meta/esmeta \n https://github.com/ecmascript-daily \n \n \n https://github.com/JSCIG \n https://github.com/es-shims \n \n https://github.com/paulmillr/es6-shim \n \n \n https://github.com/extensibleweb \n \n https://extensiblewebmanifesto.org \n \n \n Promises/A+规范  https://github.com/promises-aplus \n \n https://github.com/domenic/promises-unwrapping \n https://github.com/liubin/promises-book \n https://github.com/oldmanpushcart/jpromisor \n \n \n Web 开发技术-MDN  https://developer.mozilla.org/zh-CN/docs/Web \n \n https://github.com/roy-tian/learning-area \n \n \n 公共后缀列表  https://github.com/publicsuffix/list \n \n https://wiki.mozilla.org/Public_Suffix_List \n https://www.iana.org \n \n \n https://github.com/fedidcg/FedCM \n HTTP标头分析  https://github.com/rfc-st/humble \n 跨域资源共享  https://github.com/monsur/enable-cors.org \n https://github.com/gpuweb \n https://github.com/webgpu \n \n https://github.com/austinEng/webgpu-samples \n https://github.com/crowlKats/webgpu-examples \n \n \n https://github.com/screen-share \n https://github.com/WebAudio \n https://github.com/NOtherDev/whatwebcando \n https://github.com/webrtc \n \n https://webrtc.org.cn \n https://webrtc.googlesource.com \n https://github.com/godotengine/webrtc-native \n https://github.com/meetecho/janus-gateway \n https://github.com/webrtc-for-the-curious/webrtc-for-the-curious \n \n \n https://github.com/riju/WebCamera \n https://github.com/hughfenghen/WebAV \n https://github.com/webusb \n OpenGL/WebGL/Vulkan  https://github.com/KhronosGroup \n \n https://github.com/gfxfundamentals/webgl-fundamentals \n \n \n 时区数据库  https://www.iana.org/time-zones \n \n \n https://webdevelopmenthistory.com \n https://github.com/HTTPArchive \n 浏览器功能支持情况  https://github.com/Fyrd/caniuse \n 电量情况  https://github.com/deepesh-01/battery_indicator \n 代码提示  https://github.com/webhintio \n Web组件  https://github.com/webcomponents \n Web开源项目  https://github.com/bestofjs/bestofjs-webui \n https://github.com/the-benchmarker/website \n https://github.com/jobbole/awesome-design-cn \n https://github.com/junruchen/junruchen.github.io/wiki \n https://github.com/mathjax \n https://github.com/DustinBrett/daedalOS \n 前端知识点总结  https://github.com/zhaiyy/Web-front-end-knowledge-summary \n https://github.com/mqyqingfeng/Blog \n https://github.com/axuebin/articles \n https://github.com/LiangJunrong/document-library \n 前端面试  https://github.com/haizlin/fe-interview \n https://github.com/yangshun/front-end-interview-handbook \n https://edu.aliyun.com/roadmap/frontend \n https://github.com/CavsZhouyou/Front-End-Interview-Notebook \n https://github.com/febobo/web-interview \n 网络如何运作  https://github.com/vasanthk/how-web-works \n 前端解决第三方图片防盗链的办法 - html referrer 访问图片资源403问题 \n Serverless——前端的3.0时代 \n \n \n 前端精读周刊  https://github.com/ascoders/weekly \n https://github.com/huangyangquang/Latest-technology-tracking \n https://jsbin.com \n f2ex.cn 各种前端资源 \n Web 3.0 通识课 \n \n \n 网站测试  https://github.com/ycd/dstp \n web3.0  https://github.com/ChainSafe/web3.js \n https://github.com/Uniswap \n https://github.com/4everland \n 点对点网络web3.0  https://github.com/ipfs \n \n 检查可用站点  https://github.com/ipfs/public-gateway-checker \n https://github.com/IOsetting/ipfs-gateway-selector \n https://github.com/protocol \n https://github.com/multiformats \n https://github.com/libp2p/libp2p \n \n \n https://github.com/web3j \n https://github.com/ensdomains \n https://github.com/ethereum \n \n https://github.com/hydroprotocol/ethereum-jsonrpc-gateway \n \n \n Polygon  https://github.com/maticnetwork \n 热加载  https://github.com/livereload \n UI测试  https://github.com/mobile-dev-inc/Maestro \n \n \n 点击查看浏览器缓存 \n JS 浏览器缓存 \n 文档博客站点 \n \n https://github.com/topics/website \n https://github.com/topics/express \n https://github.com/topics/expressjs \n https://github.com/search?q=导航 \n https://github.com/topics/bookmark \n https://github.com/topics/site-navigation \n https://github.com/topics/nav \n \n https://github.com/WebStackPage/WebStackPage.github.io \n https://github.com/geekape/geek-navigation \n https://github.com/xjh22222228/nav \n \n \n https://github.com/topics/static-site \n https://github.com/topics/blog-engine \n https://github.com/topics/static-blog \n 不蒜子文章统计 \n \n https://www.npmjs.com/search?q=keywords:busuanzi \n \n \n 搜索  https://github.com/algolia/docsearch \n \n https://docsearch.algolia.com \n \n \n https://sourcegraph.com/search \n https://github.com/ekalinin/sitemap.js \n 网页加载进度  https://github.com/CodeByZach/pace \n 天气  https://weatherwidget.io \n 运行代码  https://github.com/rameshvarun/blog-cells \n \n \n 静态站点生成器列表  https://github.com/jamstack/jamstack.org \n \n https://jamstack.org/generators \n \n \n \n \n 静态编译VuePress  https://github.com/vuejs/vuepress \n \n https://github.com/vuepress/vuepress-next \n https://github.com/vuepress/awesome-vuepress \n https://github.com/search?q=vuepress-theme \n https://github.com/topics/vuepress-theme \n https://github.com/z3by/vuepress-tools \n https://github.com/vuejs/vitepress \n https://www.vuepress.cn \n https://github.com/vuepress-theme-hope \n \n \n 静态编译Jekyll  https://github.com/jekyll/jekyll \n \n http://jekyllcn.com \n https://www.jekyll.com.cn \n https://github.com/mattvh/jekyllthemes \n \n \n 静态编译Docsite  https://github.com/txd-team/docsite \n https://github.com/11ty/eleventy \n \n https://www.11ty.cn \n \n \n 运行时驱动  https://github.com/docsifyjs/docsify \n \n https://github.com/docsifyjs/awesome-docsify \n \n \n https://github.com/egoist/docute \n https://github.com/mx-space \n 从仓库生成文档  https://github.com/readthedocs \n https://github.com/getgridea/gridea \n https://github.com/facebook/docusaurus \n \n https://www.docusaurus.cn \n \n \n https://github.com/squidfunk/mkdocs-material \n https://github.com/jackyzha0/quartz \n 简历  https://github.com/xaoxuu/resume-docs \n https://github.com/AmruthPillai/Reactive-Resume \n https://github.com/i5heu/Faultier-CV \n https://github.com/RylanBot/resume-json-pdf \n https://github.com/BingyanStudio/LapisCV \n 百科  https://github.com/Requarks/wiki \n https://github.com/phachon/mm-wiki \n https://github.com/tangly1024/NotionNext \n https://github.com/toeverything/AFFiNE \n \n API接口文档管理 \n \n https://siguso.com \n https://easydoc.net \n https://www.uedbox.com/share \n https://github.com/star7th/showdoc \n https://github.com/mylxsw/wizard \n https://github.com/doxygen/doxygen \n https://github.com/apidoc/apidoc \n https://github.com/jsdoc \n https://asciidoc.org \n \n https://sourceforge.net/projects/asciidoc \n https://gitlab.eclipse.org/eclipse-wg/asciidoc-wg \n https://github.com/asciidoctor \n https://github.com/asciidoc-py/asciidoc-py \n https://github.com/asciidocfx/AsciidocFX \n \n \n https://github.com/thx/rap2-delos \n https://github.com/YMFE/yapi \n \n https://github.com/fjc0k/YApi-X \n \n \n https://github.com/wiztools/rest-client \n https://github.com/pedronauck/docz \n https://github.com/EhsanTang/ApiManager \n https://github.com/smart-doc-group \n \n https://gitee.com/smart-doc-team \n \n \n https://github.com/apiaryio/api-blueprint \n \n https://github.com/Aconex/drakov \n https://github.com/localmed/api-mock \n https://github.com/danielgtaylor/aglio \n \n \n https://github.com/asoul-sig/asouldocs \n Swift或Objective-C  https://github.com/realm/jazzy \n Java  https://github.com/Kapeli/javadocset \n https://github.com/MaxxtonGroup/microdocs \n 留言社区 \n \n 注册一个新的 OAuth Application \n 问卷调查  https://www.typeform.com \n https://www.drift.com \n \n 留言评论 \n \n https://github.com/topics/comments \n https://github.com/topics/comment-system \n \n \n https://github.com/MiniValine \n https://www.livere.com \n https://github.com/xCss/Valine \n \n https://github.com/DesertsP/Valine-Admin \n https://github.com/walinejs/waline \n \n \n https://github.com/djyde/cusdis \n https://github.com/schn4ck/schnack \n 小部件  https://github.com/widgetbot-io \n https://chatra.com \n https://crisp.chat \n https://disqus.com \n https://github.com/gitalk \n \n Gitalk评论插件使用教程 \n \n \n https://github.com/meteorlxy/vssue \n https://github.com/imsun/gitment \n https://github.com/EZForever/gitment-mod \n https://github.com/utterance/utterances \n https://github.com/coralproject/talk \n https://github.com/vkuznecovas/mouthful \n https://github.com/cheng-kang/wildfire \n https://github.com/Ericwyn/Ponza \n https://github.com/aonemd/jazl \n https://github.com/art-deco/akashic.page \n https://github.com/aloud-comments \n https://github.com/MHuiG/ohhho \n https://github.com/imaegoo/twikoo \n https://github.com/DongHY1/comments \n \n \n 第三方评论系统之我见 \n 垃圾过滤  https://akismet.com/development \n \n \n https://github.com/Buzut/jamments \n https://github.com/sheychen290/comtodon \n https://github.com/qwqcode/Artalk \n https://github.com/patarapolw/aloud \n https://github.com/umputun/remark42 \n https://github.com/pozitron57/open-source-comments \n \n 讨论社区 \n \n https://github.com/withspectrum \n https://github.com/discourse/discourse \n https://gitter.im \n https://github.com/ReplCustoms/ReplCustoms \n CDN \n \n https://trends.builtwith.com/cdn \n https://w3techs.com/technologies/overview/content_delivery \n \n \n Cloudflare  https://github.com/cdnjs \n \n https://cdnjs.com \n \n \n https://github.com/mjackson/unpkg \n \n https://unpkg.com \n \n \n unpkg.com/react@16.0.0/umd/react.production.min.js  使用固定的版本号 \n unpkg.com/react@^16/umd/react.production.min.js  使用语义化版本范围 \n unpkg.com/react/umd/react.production.min.js  忽略版本和标签，使用最新版本 \n unpkg.com/react  忽略了文件的路径，会302到最新文件URL \n unpkg.com/react/  在网址最后添加斜线，查看包内文件列表 \n \n \n https://github.com/jsdelivr/jsdelivr \n \n https://www.jsdelivr.com \n gcore.jsdelivr.net \n fastly.jsdelivr.net \n originfastly.jsdelivr.net \n \n \n 知乎  https://unpkg.zhimg.com \n 饿了么  https://npm.elemecdn.com \n https://github.com/staticfile \n \n https://staticfile.org \n \n \n https://cdn.baomitu.com \n https://www.skypack.dev \n https://github.com/esm-dev/esm.sh \n https://developers.google.com/speed/libraries \n \n \n https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview \n \n \n https://gcore.com/cdn \n https://aws.amazon.com/cn/cloudfront \n https://www.imperva.com \n https://hostry.com/products/dns \n \n \n https://github.com/rgrove/rawgit \n 前端JS/CSS静态资源公共库免费CDN加速汇总 \n \n fonts.gstatic.com               fonts-gstatic.proxy.ustclug.org\nfonts.gstatic.com               gstatic.loli.net\nfonts.gstatic.com               gapis.geekzu.org/g-fonts\nfonts.googleapis.com            fonts.proxy.ustclug.org\nfonts.googleapis.com            fonts.loli.net\nfonts.googleapis.com            fonts.geekzu.org\najax.googleapis.com             ajax.proxy.ustclug.org\najax.googleapis.com             ajax.loli.net\najax.googleapis.com             gapis.geekzu.org/ajax\nregistry-1.docker.io            docker.mirrors.ustc.edu.cn\npackages.elastic.co             elastic.proxy.ustclug.org\nppa.launchpad.net               launchpad.proxy.ustclug.org\narchive.cloudera.com/cdh5/      cloudera.proxy.ustclug.org/cdh5/\ndownloads.lede-project.org      lede.proxy.ustclug.org\ndownloads.openwrt.org           openwrt.proxy.ustclug.org\nregistry.npmjs.org              npmreg.proxy.ustclug.org\nregistry.yarnpkg.com\nregistry.nodejitsu.com\nskimdb.npmjs.com/registry\nregistry.enpmjs.org\nwww.npmjs.com                   npm.proxy.ustclug.org\nthemes.googleusercontent.com    google-themes.proxy.ustclug.org\nthemes.googleusercontent.com    themes.loli.net\nthemes.googleusercontent.com    gapis.geekzu.org/g-themes\nsecure.gravatar.com             gravatar.proxy.ustclug.org\nsecure.gravatar.com             gravatar.loli.net\nsecure.gravatar.com/avatar      sdn.geekzu.org/avatar\nwww.gravatar.com/avatar         fdn.geekzu.org/avatar\n[0-2].gravatar.com/avatar       fdn.geekzu.org/avatar\ncdnjs.cloudflare.com            cdnjs.loli.net\n 面包屑导航 \n \n 面包屑导航（BreadcrumbNavigation），这个概念名词来自一段童话故事“汉塞尔和格莱特”他们在森林里玩耍迷了路，\n于是用一路撒面包屑的方式找到了出去的路。所以面包屑导航的作用是告诉访问者他们目前所在网站的位置以及如何返回上一级页面 \n \n \n 面包屑导航（BreadcrumbNavigation）的作用及影响，让用户了解目前所在的位置，以及当前页面在整个网站中所在的位置；\n体现了网站的架构层级；提高了用户体验；减少返回到上一级页面的操作；不用常常占用屏幕空间；降低跳出率；\n有利于蜘蛛对网站的抓取；提供返回各个曾记得快速入口；有利于网站内链的建设。 \n \n \n 注意：不管事次导航还是面包屑导航我们都要记住一点，不要堆砌关键词来放在导航栏上面。\n关键词一定要自然分布，结合面包屑的导航让用户体验更好，页面更友好与搜索引擎也更友好。 \n \n \n 面包屑导航 \n Bootstrap 面包屑导航（Breadcrumbs） \n xpath和css选择器 \n \n CSS选择器 - 学习 Web 开发 | MDN \n CSS 选择器 - CSS（层叠样式表） | MDN \n XPath | MDN \n Introduction to using XPath in JavaScript - JavaScript | MDN \n \n \n Chrome 打开网页 F12 后下面的调试工具出来后点击 Elements 左边的那个框框里的鼠标箭头\n（或者按 Ctrl  +  Shift  +  C ），\n然后网页会变成蓝色，到网页点击自己要选择的区域，接下来就会自动跳到 Elements 对应的位置，\n在 HTML 的标签上点击鼠标右键-> Copy -> COpy selector 或者 xpath ，就能复制选择器了。 \n \n document . querySelector ( \"body\" ) ; // 返回文档中匹配指定css选择器的第一个元素 \ndocument . querySelectorAll ( \"body\" ) ; \ndocument . getElementById ( \"id\" ) ; \ndocument . getElementsByClassName ( \"name\" ) ; \ndocument . getElementsByName ( \"body\" ) ; // 返回文档中name属性为指定值的元素 \ndocument . getElementsByTagName ( \"a\" ) ; // 返回文档中指定标签的元素 \n \n Xpath基本语法 \n \n \n \n 表达式 \n 描述 \n \n \n \n \n nodename \n 选取此节点的所有子节点 \n \n \n / \n 从当前节点选取直接子节点 \n \n \n // \n 从当前节点选取子孙节点 \n \n \n . \n 选取当前节点 \n \n \n .. \n 选取当前节点的父节点 \n \n \n @ \n 选取属性 \n \n \n * \n 选取具有给定属性的所有元素 \n \n \n [@attrib] \n 选取给定属性具有给定值的所有元素 \n \n \n [@attrib='value'] \n 选取所有具有指定元素的直接子节点 \n \n \n | \n 选取两个节点，左右两个 \n \n \n book[1] \n 选取第一个book元素 \n \n \n //li[contains(@attrib,value)] \n 属于模糊定位。 \n \n \n //li[text()='xxx'] \n 选取li标签中的值为xxx的元素 \n \n \n //li[last()='xxx'] \n 选取li标签中的值为xxx的最后一个元素 \n \n \n //li/text() \n 选取li标签下的文本内容 \n \n \n \n Xpath定位和Selector定位的区别 \n \n CSS选择器和XPath的比较-XPath |  MDN \n \n \n \n \n 定位方式 \n Xpath \n Css Selector \n \n \n \n \n find_element_by_id(\"id值\") \n //*[@id=\"id值\"] \n #id值 \n \n \n find_element_by_name(\"name值\") \n //*[@name=\"name值\"] \n [name=\"name值\"] \n \n \n find_element_by_class_name(\"class name\") \n class name \n .class name \n \n \n find_element_by_tag_name(\"标签名\") \n //标签名 \n 标签名 \n \n \n find_element_by_link_text(\"链接文字\") \n //a[text()=\"链接文字\"] \n 不支持 \n \n \n find_element_by_partial_link_text(\"部分链接文字\") \n //a[contains(text(),\"部分链接文字\")] \n 不支持 \n \n \n \n \n \n \n Target \n CSS 3 \n XPath \n \n \n \n \n 所有元素 \n * \n //* \n \n \n 所有的P元素 \n p \n //p \n \n \n 所有的p元素的子元素 \n p > * \n //p/* \n \n \n 根据ID获取元素 \n /转义/#id \n //*[@id= ‘id’] \n \n \n 根据Class获取元素 \n .class \n //*[contains(@class, ‘class’)] \n \n \n 拥有某个属性的元素 \n *[title] \n //*[@title] \n \n \n 所有P元素的第一个子元素 \n p > *:first-child \n //p/*[0] \n \n \n 所有拥有子元素a的P元素 \n 无法实现 \n //p[a] \n \n \n 下一个兄弟元素 \n P + * \n //p/following-sibling:😗[0] \n 跨域/跨源 \n 浏览器的同源策略 \n \n 同源策略是一个重要的安全策略，它用于限制一个origin的文档或者它加载的脚本如何能与另一个源的资源进行交互。它能帮助阻隔恶意文档，减少可能被攻击的媒介。 \n \n \n 如果两个URL的 protocol (协议,比如http协议,https协议)、 port  (端口号)和  host (主机，域名或IP部分) 都相同的话，\n则这两个 URL 是 同源 。这个方案也被称为 协议/主机/端口元组 ，或者直接是  元组 。也就是说如果 不满足以上3个条件中的任意一个,则被视为跨域 . \n \n 解决跨域问题的几种方式 \n \n JSONP  凡是拥有 src 属性的标签都不受同源策略限制, 缺点是只支持GET请求 \n CORS  需要浏览器和后端同时支持, 后端设置以下请求头就可以开启 \n \n Access-Control-Allow-Origin  如果值为 * 表示允许任何域名的访问 \n Access-Control-Allow-Methods  表明服务器允许客户端使用的请求方法 \n Access-Control-Allow-Headers  表明服务器允许请求中携带的头部字段 \n Access-Control-Max-Age  表明响应的有效时间。在有效时间内，浏览器无须为同一请求再次发起预检请求 \n Access-Control-Expose-Headers  服务器允许浏览器访问的头信息白名单 \n Access-Control-Allow-Credentials  指定了当浏览器的credentials设置为true时是否允许浏览器读取response的内容 \nOPTIONS预检命令，预检命令通过时才发送请求\n检查请求的类型是不是预检命令\nif ($request_method = 'OPTIONS') {\n  表示允许这个域跨域调用（客户端发送请求的域名和端口）\n  $http_origin动态获取请求客户端请求的域   不用*的原因是带cookie的请求不支持*号\n    add_header 'Access-Control-Allow-Origin' $http_origin;\nOm nom nom cookies\n    add_header 'Access-Control-Allow-Credentials' 'true';\n指定允许跨域的方法，*代表所有\n    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';\nCustom headers and headers various browsers *should* be OK with but aren't\n    #add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n    add_header 'Access-Control-Allow-Headers' $http_access_control_request_headers;\n    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\nTell client that this pre-flight info is valid for 20 days\n预检命令的缓存，如果不缓存每次会发送两次请求\n    add_header 'Access-Control-Max-Age' 1728000;\n    #add_header 'Content-Type' 'text/plain charset=UTF-8';\n    #add_header 'Content-Length' 0;\n    return 204;\n}\n \n \n postMessage  可以实现跨文本档、多窗口（iframe间通信最完美的办法）、跨域消息传递 \n websocket  HTML5的一个持久化的协议，它实现了浏览器与服务器的全双工通信，也是跨域的一种解决方案 \n Nginx  反向代理（其他服务器应用也可），一般用于生产环境 \n webpack-dev-server  使用NodeJS服务器中间件 Express 代为获取数据，仅用于开发环境\n \n https://github.com/webpack/webpack-dev-server \n \n https://webpack.docschina.org/configuration/dev-server/#devserverproxy \n \n \n https://github.com/webpack/webpack-dev-middleware \n https://github.com/chimurai/http-proxy-middleware \n https://github.com/http-party/node-http-proxy \n \n \n \n \n 浏览器同源政策及其规避方法 \n https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage \n https://github.com/ChrisSong1994/FrameMessage \n \n",createdTime:1761814324e3}],themeConfig:{repo:"bajins/notes-vuepress",editLinks:!0,docsDir:"/",valineConfig:{appId:"m9S5QXsdju39LvMs8ooRRIiF-MdYXbMMI",appKey:"UfBRjySkb4bjPiFuH0Pxe3a9"},editLinkText:"在 GitHub 上编辑此页",nav:[{text:"DBS",link:"/DBS/"},{text:"Go",link:"/Go/"},{text:"IDE",link:"/IDE/"},{text:"Java",link:"/Java/"},{text:"Other",link:"/Other/"},{text:"PL",link:"/PL/"},{text:"Python",link:"/Python/"},{text:"Shell",link:"/Shell/"},{text:"System",link:"/System/"},{text:"Web",link:"/Web/"},{text:"快捷链接",items:[{text:"外部链接",items:[{text:"获取XShell",link:"https://tool.bajins.com"},{text:"OCR图片识别",link:"https://tr.bajins.com"},{text:"朋友圈不折叠",link:"https://tool.bajins.com/wnf"},{text:"GitHub反代",link:"https://g.bajins.eu.org"},{text:"GitHub反代",link:"https://g.woetu.eu.org"},{text:"WeasyPrint",link:"https://tool.bajins.com/wp/"},{text:"Showdown",link:"https://tool.bajins.com/sd/"}]},{text:"内部链接",items:[{text:"文件",link:"/files"},{text:"书签锦集",link:"/Other/Bookmarks"},{text:"Windows软件",link:"/System/Windows软件"},{text:"Markdown工具",link:"/Other/Markdown#工具"}]}]}],logo:"/images/icons/logo.png",search:!0,searchMaxSuggestions:10,sidebar:{"/DBS/":["MySQL","MySQL事件","MySQL备份恢复","MySQL存储过程","MySQL安装配置","Oracle","PostgreSQL","","mysql-udf安装","关系型SQL标准","关系型数据库"],"/Go/":["GoGUI","Go爬虫","Go笔记","Go第三方库","Go编译打包",""],"/IDE/":["Chromium","Eclipse","Git使用","Git服务","IDEA使用","IDEA插件","","Subversion","TextEditor","VisualStudioCode","软件安全"],"/Java/":["CAS-Shiro","JDK安装配置","JDK工具","JavaGUI","Java构建管理","Java注解","Java笔记","Java第三方库","ORM","","SPI","Spring","Tomcat"],"/Other/":["Bookmarks","Markdown","","专业术语","书籍和博客","免费服务"],"/PL/":["C","CPlusPlus","CSharp","","Rust","中间件","交互协议","人工智能","加密认证","容器虚拟机","技术概念","文档处理","硬件交互","编程规范","表达式和编码","跨平台开发"],"/Python/":["PythonGUI","Python爬虫","Python笔记","Python第三方库",""],"/Shell/":["PowerShell","PowerShell命令","","ShellScript","ShellWindows","Shell命令","WindowsBatch","WindowsJScript","WindowsScript","WindowsVBAScript","WindowsVBScript"],"/System/":["Android","CentOS","IOS","Linux","Linux网络防火墙","Linux配置","Nginx","","Windows","Windows软件","内网穿透","挂载网盘","文件压缩解压","邮箱服务"],"/Web/":["CSS","HTML","JavaScript","JavaScript框架","JavaScript笔记","JavaScript第三方库","NodeJS",""],"/":[]},lastUpdated:"上次更新",author:"Bajins"},locales:{"/":{lang:"zh-CN",title:"Bajins",description:"个人笔记",path:"/"}}};e(275);no.component("Badge",()=>Promise.all([e.e(0),e.e(5)]).then(e.bind(null,373))),no.component("CodeBlock",()=>Promise.all([e.e(0),e.e(6)]).then(e.bind(null,369))),no.component("CodeGroup",()=>Promise.all([e.e(0),e.e(7)]).then(e.bind(null,370)));e(276);var Ah={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:()=>({scrollTop:null}),computed:{show(){return this.scrollTop>this.threshold}},mounted(){this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",Ya()(()=>{this.scrollTop=this.getScrollTop()},100))},methods:{getScrollTop:()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,scrollToTop(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},Ch=(e(277),Object(eh.a)(Ah,function(){var t=this,n=t._self._c;return n("transition",{attrs:{name:"fade"}},[t.show?n("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:t.scrollToTop}},[n("g",{attrs:{transform:"translate(-229 -126.358)"}},[n("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),t._v(" "),n("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):t._e()])},[],!1,null,"5fd4ef0c",null).exports);class Th{constructor(t){Object.defineProperty(this,"registration",{value:t,configurable:!0,writable:!0})}update(){return this.registration.update()}skipWaiting(){const t=this.registration.waiting;return t?(console.log("[vuepress:sw] Doing worker.skipWaiting()."),new Promise((n,e)=>{const o=new MessageChannel;o.port1.onmessage=t=>{console.log("[vuepress:sw] Done worker.skipWaiting()."),t.data.error?e(t.data.error):n(t.data)},t.postMessage({type:"skip-waiting"},[o.port2])})):Promise.resolve()}}var jh=new no;var _h=Object(eh.a)({},function(){var t=this,n=t._self._c;return n("svg",{staticStyle:{"enable-background":"new 0 0 50 50"},attrs:{xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 30 30"}},[n("rect",{attrs:{x:"0",y:"13",width:"4",height:"5"}},[n("animate",{attrs:{attributeName:"height",attributeType:"XML",values:"5;21;5",begin:"0s",dur:"0.6s",repeatCount:"indefinite"}}),t._v(" "),n("animate",{attrs:{attributeName:"y",attributeType:"XML",values:"13; 5; 13",begin:"0s",dur:"0.6s",repeatCount:"indefinite"}})]),t._v(" "),n("rect",{attrs:{x:"10",y:"13",width:"4",height:"5"}},[n("animate",{attrs:{attributeName:"height",attributeType:"XML",values:"5;21;5",begin:"0.15s",dur:"0.6s",repeatCount:"indefinite"}}),t._v(" "),n("animate",{attrs:{attributeName:"y",attributeType:"XML",values:"13; 5; 13",begin:"0.15s",dur:"0.6s",repeatCount:"indefinite"}})]),t._v(" "),n("rect",{attrs:{x:"20",y:"13",width:"4",height:"5"}},[n("animate",{attrs:{attributeName:"height",attributeType:"XML",values:"5;21;5",begin:"0.3s",dur:"0.6s",repeatCount:"indefinite"}}),t._v(" "),n("animate",{attrs:{attributeName:"y",attributeType:"XML",values:"13; 5; 13",begin:"0.3s",dur:"0.6s",repeatCount:"indefinite"}})])])},[],!1,null,null,null).exports,Ph={x:0,y:0,"line-width":2,"line-length":50,"text-margin":10,"font-size":14,"font-color":"#8DA1AC","line-color":"#8DA1AC","element-color":"black",fill:"white","yes-text":"yes","no-text":"no","arrow-end":"block",scale:1},Dh={ant:Object.assign({},Ph,{symbols:{start:{class:"start-element","font-color":"white",fill:"#595959","line-width":"0px"},end:{class:"end-element","font-color":"white",fill:"#595959","line-width":"0px"},operation:{class:"operation-element","font-color":"white",fill:"#1890ff","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"white",fill:"#1890ff","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"white",fill:"#FF485E","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"white",fill:"#FF485E","line-width":"0px"},parallel:{class:"parallel-element","font-color":"white",fill:"#1890ff","line-width":"0px"}}}),vue:Object.assign({},Ph,{symbols:{start:{class:"start-element","font-color":"white",fill:"#2F495F","line-width":"0px",rx:"10px",ry:"10px"},end:{class:"end-element","font-color":"white",fill:"#2F495F","line-width":"0px"},operation:{class:"operation-element","font-color":"white",fill:"#00BC7D","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"white",fill:"#EB4D5D","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"white",fill:"#937AC4","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"white",fill:"#FFB500","line-width":"0px"},parallel:{class:"parallel-element","font-color":"white",fill:"#2F495F","line-width":"0px"}}}),pia:Object.assign({},Ph,{"line-width":1,symbols:{start:{class:"start-element",fill:"#ccc","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},end:{class:"end-element",fill:"#ccc","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},operation:{class:"operation-element","font-color":"white",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},inputoutput:{class:"inputoutput-element","font-color":"white",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},subroutine:{class:"subroutine-element","font-color":"white",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},condition:{class:"condition-element","font-color":"white",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},parallel:{class:"parallel-element","font-color":"white",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"}}})},Lh={name:"flowchart",components:{Loading:_h},props:{id:{type:String,required:!0},code:{type:String,required:!0},preset:{type:String,default:"vue"}},data:()=>({loading:!0}),mounted(){const t=Dh[this.preset];if(!t)return void console.warn(`[vuepress-plugin-flowchart] Unknown preset: ${this.preset}`);const n=this.code;this.$el.setAttribute("id",this.id);Promise.all([e.e(11).then(e.t.bind(null,365,7)),new Promise(t=>setTimeout(t,500))]).then(([e])=>{const{parse:o}=e.default;o(n).drawSVG(this.id,t),this.loading=!1})}},Mh=Lh,Oh=(e(278),Object(eh.a)(Mh,function(){var t=this,n=t._self._c;return n("div",{staticClass:"vuepress-flowchart",class:{loading:t.loading,[t.preset]:t.preset}},[t.loading?n("Loading",{staticClass:"vuepress-flowchart-loading-icon"}):t._e()],1)},[],!1,null,null,null).exports),Ih=(e(279),e(280),[{},({Vue:t})=>{t.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:t})=>{t.component("BackToTop",Ch)},async({router:t,isServer:n})=>{if(!n){const{register:n}=await e.e(128).then(e.bind(null,364));t.onReady(()=>{n("/service-worker.js",{registrationOptions:{},ready(){console.log("[vuepress:sw] Service worker is active."),jh.$emit("sw-ready")},cached(t){console.log("[vuepress:sw] Content has been cached for offline use."),jh.$emit("sw-cached",new Th(t))},updated(t){console.log("[vuepress:sw] Content updated."),jh.$emit("sw-updated",new Th(t))},offline(){console.log("[vuepress:sw] No internet connection found. App is running in offline mode."),jh.$emit("sw-offline")},error(t){console.error("[vuepress:sw] Error during service worker registration:",t),jh.$emit("sw-error",t),ga("send","exception",{exDescription:t.message,exFatal:!1})}})})}},({router:t})=>{var n,e,o,i,s,r;"undefined"!=typeof window&&(n=window,e=document,o="script",i="ga",n.GoogleAnalyticsObject=i,n[i]=n[i]||function(){(n[i].q=n[i].q||[]).push(arguments)},n[i].l=1*new Date,s=e.createElement(o),r=e.getElementsByTagName(o)[0],s.async=1,s.src="https://www.google-analytics.com/analytics.js",r.parentNode.insertBefore(s,r),ga("create","UA-137200206-1","auto"),ga("set","anonymizeIp",!0),t.afterEach(function(n){ga("set","page",t.app.$withBase(n.fullPath)),ga("send","pageview")}))},function(t){const{Vue:n}=t;n.component("FlowChart",Oh)},({Vue:t})=>{t.component("CodeCopy",oh)},({siteData:t,options:n})=>{t.themeConfig.sidebar={"/Python/":[{title:"Python",collapsable:!1,sidebarDepth:1,children:["","PythonGUI","Python爬虫","Python笔记","Python第三方库"]}],"/System/":[{title:"System",collapsable:!1,sidebarDepth:1,children:["","Android","CentOS","IOS","Linux","Linux网络防火墙","Linux配置","Nginx","Windows","Windows软件","内网穿透","挂载网盘","文件压缩解压","邮箱服务"]}],"/Other/":[{title:"Other",collapsable:!1,sidebarDepth:1,children:["","Bookmarks","Markdown","专业术语","书籍和博客","免费服务"]}],"/Shell/":[{title:"Shell",collapsable:!1,sidebarDepth:1,children:["","PowerShell","PowerShell命令","ShellScript","ShellWindows","Shell命令","WindowsBatch","WindowsJScript","WindowsScript","WindowsVBAScript","WindowsVBScript"]}],"/Java/":[{title:"Java",collapsable:!1,sidebarDepth:1,children:["","CAS-Shiro","JDK安装配置","JDK工具","JavaGUI","Java构建管理","Java注解","Java笔记","Java第三方库","ORM","SPI","Spring","Tomcat"]}],"/DBS/":[{title:"DBS",collapsable:!1,sidebarDepth:1,children:["","MySQL","MySQL事件","MySQL备份恢复","MySQL存储过程","MySQL安装配置","Oracle","PostgreSQL","mysql-udf安装","关系型SQL标准","关系型数据库"]}],"/IDE/":[{title:"IDE",collapsable:!1,sidebarDepth:1,children:["","Chromium","Eclipse","Git使用","Git服务","IDEA使用","IDEA插件","Subversion","TextEditor","VisualStudioCode","软件安全"]}],"/Web/":[{title:"Web",collapsable:!1,sidebarDepth:1,children:["","CSS","HTML","JavaScript","JavaScript框架","JavaScript笔记","JavaScript第三方库","NodeJS"]}],"/Go/":[{title:"Go",collapsable:!1,sidebarDepth:1,children:["","GoGUI","Go爬虫","Go笔记","Go第三方库","Go编译打包"]}],"/PL/":[{title:"PL",collapsable:!1,sidebarDepth:1,children:["","C","CPlusPlus","CSharp","Rust","中间件","交互协议","人工智能","加密认证","容器虚拟机","技术概念","文档处理","硬件交互","编程规范","表达式和编码","跨平台开发"]}]}},({Vue:t,options:n,router:e,siteData:o,isServer:i})=>{},()=>{var t,n,e,o,i,s;"undefined"!=typeof window&&(t=window,n=document,e="script",t[o="plausible"]=t[o]||function(){(t[o].q=t[o].q||[]).push(arguments)},i=n.createElement(e),s=n.getElementsByTagName(e)[0],i.id=o,i.src="https://plausible.io/js/plausible.js",i.async=1,s.parentNode.insertBefore(i,s))}]),Rh=["BackToTop"];class Nh{constructor(){this.store=new no({data:{state:{}}})}$get(t){return this.store.state[t]}$set(t,n){no.set(this.store.state,t,n)}$emit(...t){this.store.$emit(...t)}$on(...t){this.store.$on(...t)}}class Bh extends Nh{}Object.assign(Bh.prototype,{getPageAsyncComponent:Aa,getLayoutAsyncComponent:Ca,getAsyncComponent:Ta,getVueComponent:ja});var Fh={install(t){const n=new Bh;t.$vuepress=n,t.prototype.$vuepress=n}};function zh(t,n){const e=n.toLowerCase();return t.options.routes.some(t=>t.path.toLowerCase()===e)}var Wh={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(t){const n=this.pageKey||this.$parent.$page.key;return Pa("pageKey",n),no.component(n)||no.component(n,Aa(n)),no.component(n)?t(n):t("")}},Gh={functional:!0,props:{slotKey:String,required:!0},render:(t,{props:n,slots:e})=>t("div",{class:[`content__${n.slotKey}`]},e()[n.slotKey])},Hh={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Uh=(e(281),e(282),Object(eh.a)(Hh,function(){var t=this,n=t._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),t._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),t._v(" "),n("span",{staticClass:"sr-only"},[t._v(t._s(t.openInNewWindowTitle))])])},[],!1,null,null,null).exports),qh={functional:!0,render(t,{parent:n,children:e}){if(n._isMounted)return e;n.$once("hook:mounted",()=>{n.$forceUpdate()})}};no.config.productionTip=!1,no.use(ha),no.use(Fh),no.mixin(function(t,n,e=no){!function(t){t.locales&&Object.keys(t.locales).forEach(n=>{t.locales[n].path=n});Object.freeze(t)}(n),e.$vuepress.$set("siteData",n);const o=new(t(e.$vuepress.$get("siteData"))),i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),s={};return Object.keys(i).reduce((t,n)=>(n.startsWith("$")&&(t[n]=i[n].get),t),s),{computed:s}}(t=>class{setPage(t){this.__page=t}get $site(){return t}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:t={}}=this.$site;let n,e;for(const o in t)"/"===o?e=t[o]:0===this.$page.path.indexOf(o)&&(n=t[o]);return n||e||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:t}=this.$page.frontmatter;return"string"==typeof t&&t}get $title(){const t=this.$page,{metaTitle:n}=this.$page.frontmatter;if("string"==typeof n)return n;const e=this.$siteTitle,o=t.frontmatter.home?null:t.frontmatter.title||t.title;return e?o?o+" | "+e:e:o||"VuePress"}get $description(){const t=function(t){if(t){const n=t.filter(t=>"description"===t.name)[0];if(n)return n.content}}(this.$page.frontmatter.meta);return t||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(t,n){for(let e=0;e<t.length;e++){const o=t[e];if(o.path.toLowerCase()===n.toLowerCase())return o}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},xh)),no.component("Content",Wh),no.component("ContentSlotsDistributor",Gh),no.component("OutboundLink",Uh),no.component("ClientOnly",qh),no.component("Layout",Ca("Layout")),no.component("NotFound",Ca("NotFound")),no.prototype.$withBase=function(t){const n=this.$site.base;return"/"===t.charAt(0)?n+t.slice(1):t},window.__VUEPRESS__={version:"1.9.10",hash:"9d6c2be"},async function(t){const n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:xh.routerBase||xh.base,e=new ha({base:n,mode:"history",fallback:!1,routes:Eh,scrollBehavior:(t,n,e)=>e||(t.hash?!no.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(t.hash)}:{x:0,y:0})});!function(t){t.beforeEach((n,e,o)=>{if(zh(t,n.path))o();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){const e=n.path.replace(/\/$/,"")+".html";zh(t,e)?o(e):o()}else o();else{const e=n.path+"/",i=n.path+".html";zh(t,i)?o(i):zh(t,e)?o(e):o()}})}(e);const o={};try{await Promise.all(Ih.filter(t=>"function"==typeof t).map(n=>n({Vue:no,options:o,router:e,siteData:xh,isServer:t})))}catch(t){console.error(t)}const i=new no(Object.assign(o,{router:e,render:t=>t("div",{attrs:{id:"app"}},[t("RouterView",{ref:"layout"}),t("div",{class:"global-ui"},Rh.map(n=>t(n)))])}));return{app:i,router:e}}(!1).then(({app:t,router:n})=>{n.onReady(()=>{t.$mount("#app")})})}]);